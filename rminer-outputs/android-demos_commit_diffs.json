[
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/.gitignore",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+/build\n+secrets.properties\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/build.gradle",
            "additions": 62,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,62 @@\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath gradlePlugins.buildProperties\n+    }\n+}\n+\n+apply plugin: 'com.android.application'\n+apply plugin: 'kotlin-android'\n+apply plugin: 'kotlin-android-extensions'\n+apply plugin: 'kotlin-kapt'\n+apply plugin: 'com.novoda.build-properties'\n+\n+buildProperties {\n+    secrets {\n+        using file('secrets.properties')\n+    }\n+}\n+\n+android {\n+    compileSdkVersion 28\n+\n+    compileOptions {\n+        targetCompatibility = \"8\"\n+        sourceCompatibility = \"8\"\n+    }\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.movies.mvi\"\n+        minSdkVersion 28\n+        targetSdkVersion 28\n+        versionCode 1\n+        versionName \"1.0\"\n+        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n+\n+        buildConfigString 'API_KEY', buildProperties.secrets['api_key']\n+        buildConfigString 'BASE_URL', buildProperties.secrets['base_url']\n+        buildConfigString 'IMAGE_BASE_URL', buildProperties.secrets['image_base_url']\n+    }\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+}\n+\n+dependencies {\n+    implementation fileTree(dir: 'libs', include: ['*.jar'])\n+\n+    implementation project(':core')\n+    implementation project(':search')\n+\n+    implementation libraries.kotlin.stdLib\n+    implementation libraries.kotlin.reflect\n+    implementation libraries.support.appCompat\n+    implementation libraries.support.constraintLayout\n+\n+    testImplementation libraries.test.junit\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/proguard-rules.pro",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.\n+# You can control the set of applied configuration files using the\n+# proguardFiles setting in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/AndroidManifest.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+          package=\"com.novoda.movies.mvi\">\n+\n+    <uses-permission android:name=\"android.permission.INTERNET\"/>\n+\n+    <application\n+            android:allowBackup=\"true\"\n+            android:icon=\"@mipmap/ic_launcher\"\n+            android:label=\"@string/app_name\"\n+            android:roundIcon=\"@mipmap/ic_launcher_round\"\n+            android:supportsRtl=\"true\"\n+            android:theme=\"@style/AppTheme\"\n+            android:name=\".MoviesApplication\">\n+        <activity android:name=\".search.SearchActivity\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\"/>\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\"/>\n+            </intent-filter>\n+        </activity>\n+    </application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/java/com/novoda/movies/mvi/MainActivity.kt",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+package com.novoda.movies.mvi\n+\n+import android.os.Bundle\n+import android.support.v7.app.AppCompatActivity\n+\n+class MainActivity : AppCompatActivity() {\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_main)\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/java/com/novoda/movies/mvi/MoviesApplication.kt",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+package com.novoda.movies.mvi\n+\n+import android.app.Application\n+import com.novoda.movies.mvi.search.Dependencies\n+import com.novoda.movies.mvi.search.Endpoints\n+import com.novoda.movies.mvi.search.NetworkDependencyProvider\n+import com.novoda.movies.mvi.search.Secrets\n+\n+\n+class MoviesApplication : Application(), Dependencies {\n+    private val secrets = Secrets(BuildConfig.API_KEY)\n+\n+    override val endpoints = Endpoints(BuildConfig.BASE_URL, BuildConfig.IMAGE_BASE_URL)\n+    override val networkDependencyProvider = NetworkDependencyProvider(endpoints, secrets)\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/drawable-v24/ic_launcher_foreground.xml",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        xmlns:aapt=\"http://schemas.android.com/aapt\"\n+        android:width=\"108dp\"\n+        android:height=\"108dp\"\n+        android:viewportHeight=\"108\"\n+        android:viewportWidth=\"108\">\n+    <path\n+            android:fillType=\"evenOdd\"\n+            android:pathData=\"M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z\"\n+            android:strokeColor=\"#00000000\"\n+            android:strokeWidth=\"1\">\n+        <aapt:attr name=\"android:fillColor\">\n+            <gradient\n+                    android:endX=\"78.5885\"\n+                    android:endY=\"90.9159\"\n+                    android:startX=\"48.7653\"\n+                    android:startY=\"61.0927\"\n+                    android:type=\"linear\">\n+                <item\n+                        android:color=\"#44000000\"\n+                        android:offset=\"0.0\"/>\n+                <item\n+                        android:color=\"#00000000\"\n+                        android:offset=\"1.0\"/>\n+            </gradient>\n+        </aapt:attr>\n+    </path>\n+    <path\n+            android:fillColor=\"#FFFFFF\"\n+            android:fillType=\"nonZero\"\n+            android:pathData=\"M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z\"\n+            android:strokeColor=\"#00000000\"\n+            android:strokeWidth=\"1\"/>\n+</vector>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/drawable/ic_launcher_background.xml",
            "additions": 74,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,74 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<vector\n+        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        android:height=\"108dp\"\n+        android:width=\"108dp\"\n+        android:viewportHeight=\"108\"\n+        android:viewportWidth=\"108\">\n+    <path android:fillColor=\"#008577\"\n+          android:pathData=\"M0,0h108v108h-108z\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M9,0L9,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,0L19,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M29,0L29,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M39,0L39,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M49,0L49,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M59,0L59,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M69,0L69,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M79,0L79,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M89,0L89,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M99,0L99,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,9L108,9\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,19L108,19\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,29L108,29\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,39L108,39\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,49L108,49\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,59L108,59\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,69L108,69\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,79L108,79\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,89L108,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,99L108,99\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,29L89,29\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,39L89,39\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,49L89,49\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,59L89,59\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,69L89,69\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,79L89,79\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M29,19L29,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M39,19L39,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M49,19L49,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M59,19L59,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M69,19L69,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M79,19L79,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+</vector>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/layout/activity_main.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout\n+        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        xmlns:tools=\"http://schemas.android.com/tools\"\n+        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        tools:context=\".MainActivity\">\n+\n+    <TextView\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:text=\"Hello World!\"\n+            app:layout_constraintBottom_toBottomOf=\"parent\"\n+            app:layout_constraintLeft_toLeftOf=\"parent\"\n+            app:layout_constraintRight_toRightOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"parent\"/>\n+\n+</android.support.constraint.ConstraintLayout>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <background android:drawable=\"@drawable/ic_launcher_background\"/>\n+    <foreground android:drawable=\"@drawable/ic_launcher_foreground\"/>\n+</adaptive-icon>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <background android:drawable=\"@drawable/ic_launcher_background\"/>\n+    <foreground android:drawable=\"@drawable/ic_launcher_foreground\"/>\n+</adaptive-icon>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-hdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-hdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-mdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-mdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/values/colors.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <color name=\"colorPrimary\">#008577</color>\n+    <color name=\"colorPrimaryDark\">#00574B</color>\n+    <color name=\"colorAccent\">#D81B60</color>\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/values/strings.xml",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+<resources>\n+    <string name=\"app_name\">Movies MVI</string>\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/app/src/main/res/values/styles.xml",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+<resources>\n+\n+    <!-- Base application theme. -->\n+    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n+        <!-- Customize your theme here. -->\n+        <item name=\"colorPrimary\">@color/colorPrimary</item>\n+        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n+        <item name=\"colorAccent\">@color/colorAccent</item>\n+    </style>\n+\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/build.gradle",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+\n+buildscript {\n+\n+    apply plugin: MoviesPlugin\n+\n+    ext.kotlin_version = '1.3.21'\n+    repositories {\n+        google()\n+        jcenter()\n+\n+    }\n+    dependencies {\n+        classpath gradlePlugins.androidBuild\n+        classpath gradlePlugins.kotlin\n+        // NOTE: Do not place your application dependencies here; they belong\n+        // in the individual module build.gradle files\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        google()\n+        jcenter()\n+        \n+    }\n+}\n+\n+task clean(type: Delete) {\n+    delete rootProject.buildDir\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/buildSrc/src/main/groovy/MoviesPlugin.groovy",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+import dependencies.DependenciesPlugin\n+import org.gradle.api.Plugin\n+import org.gradle.api.Project\n+\n+class MoviesPlugin implements Plugin<Project> {\n+\n+    @Override\n+    void apply(Project project) {\n+        new DependenciesPlugin().apply(project)\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/buildSrc/src/main/groovy/dependencies/DependenciesPlugin.groovy",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package dependencies\n+\n+import org.gradle.api.Plugin\n+import org.gradle.api.Project\n+\n+class DependenciesPlugin implements Plugin<Project> {\n+\n+    @Override\n+    void apply(Project project) {\n+        project.ext.libraries = new Libraries()\n+        project.ext.gradlePlugins = new Plugins()\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/buildSrc/src/main/groovy/dependencies/Libraries.groovy",
            "additions": 68,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,68 @@\n+package dependencies\n+\n+final class Libraries {\n+\n+    final Support support = new Support()\n+    final Test test = new Test()\n+    final Kotlin kotlin = new Kotlin()\n+    final Retrofit retrofit = new Retrofit()\n+    final Glide glide = new Glide()\n+    final OkHttp okHttp = new OkHttp()\n+    final String moshi = 'com.squareup.moshi:moshi:1.8.0'\n+    final String rxJava = 'io.reactivex.rxjava2:rxjava:2.2.9'\n+    final String rxAndroid = 'io.reactivex.rxjava2:rxandroid:2.1.1'\n+\n+    static final class OkHttp {\n+        private final String version = '3.14.2'\n+\n+        final String client = \"com.squareup.okhttp3:okhttp:${version}\"\n+        final String loggingInterceptor = \"com.squareup.okhttp3:logging-interceptor:${version}\"\n+        final String mockWebServer = \"com.squareup.okhttp3:mockwebserver:${version}\"\n+    }\n+\n+\n+    static final class Glide {\n+        private final String version = '4.9.0'\n+\n+        final String lib = \"com.github.bumptech.glide:glide:${version}\"\n+        final String compiler = \"com.github.bumptech.glide:compiler:${version}\"\n+    }\n+\n+    static final class Retrofit {\n+        private final String version = '2.5.0'\n+\n+        final String lib = \"com.squareup.retrofit2:retrofit:${version}\"\n+        final String rxJavaAdapter = \"com.squareup.retrofit2:adapter-rxjava2:${version}\"\n+        final String moshiConverter = \"com.squareup.retrofit2:converter-moshi:${version}\"\n+    }\n+\n+    static final class Support {\n+\n+        private final String version = '28.0.0'\n+        final String v4 = \"com.android.support:support-v4:${version}\"\n+        final String design = \"com.android.support:design:${version}\"\n+        final String appCompat = \"com.android.support:appcompat-v7:${version}\"\n+        final String recyclerview = \"com.android.support:recyclerview-v7:${version}\"\n+        final String constraintLayout = 'com.android.support.constraint:constraint-layout:1.1.3'\n+    }\n+\n+\n+    static final class Test {\n+\n+        private final String mockitoVersion = '2.28.2'\n+\n+        final String junit = 'junit:junit:4.12'\n+        final String mockito = \"org.mockito:mockito-core: ${mockitoVersion}\"\n+        final String mockitoInline = \"org.mockito:mockito-inline:${mockitoVersion}\"\n+        final String mockitoKotlin = 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'\n+        final String assertj = 'org.assertj:assertj-core:3.11.1'\n+    }\n+\n+    static final class Kotlin {\n+        private final String version = '1.3.21'\n+\n+        final String stdLib = \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version\"\n+        final String reflect = \"org.jetbrains.kotlin:kotlin-reflect:$version\"\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/buildSrc/src/main/groovy/dependencies/Plugins.groovy",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+package dependencies\n+\n+final class Plugins {\n+\n+    final String androidBuild = 'com.android.tools.build:gradle:3.3.2'\n+    final String kotlin = 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.21'\n+    final String buildProperties = 'com.novoda:gradle-build-properties-plugin:0.4.1'\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/build.gradle",
            "additions": 47,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,47 @@\n+apply plugin: 'com.android.library'\n+apply plugin: 'kotlin-android'\n+apply plugin: 'kotlin-android-extensions'\n+apply plugin: 'kotlin-kapt'\n+\n+android {\n+    compileSdkVersion 28\n+\n+    defaultConfig {\n+        minSdkVersion 28\n+        targetSdkVersion 28\n+        versionCode 1\n+        versionName \"1.0\"\n+\n+        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n+\n+    }\n+\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+}\n+\n+dependencies {\n+    implementation fileTree(dir: 'libs', include: ['*.jar'])\n+    implementation libraries.kotlin.stdLib\n+    implementation libraries.kotlin.reflect\n+    implementation libraries.support.appCompat\n+    implementation libraries.rxJava\n+    implementation libraries.rxAndroid\n+    implementation libraries.okHttp.client\n+    implementation libraries.okHttp.loggingInterceptor\n+    implementation libraries.retrofit.lib\n+    implementation libraries.retrofit.rxJavaAdapter\n+    implementation libraries.retrofit.moshiConverter\n+    implementation libraries.glide.lib\n+    kapt libraries.glide.compiler\n+\n+    testImplementation libraries.test.junit\n+    testImplementation libraries.test.mockito\n+    testImplementation libraries.test.mockitoKotlin\n+    testImplementation libraries.test.mockitoInline\n+    testImplementation libraries.test.assertj\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/proguard-rules.pro",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.\n+# You can control the set of applied configuration files using the\n+# proguardFiles setting in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/AndroidManifest.xml",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+          package=\"com.novoda.movies.mvi.core\">\n+\n+    <application\n+            android:allowBackup=\"true\"\n+            android:icon=\"@mipmap/ic_launcher\"\n+            android:label=\"@string/app_name\"\n+            android:roundIcon=\"@mipmap/ic_launcher_round\"\n+            android:supportsRtl=\"true\"\n+            android:theme=\"@style/AppTheme\">\n+    </application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/java/com/novoda/movies/mvi/search/Dependencies.kt",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+package com.novoda.movies.mvi.search\n+\n+interface Dependencies {\n+    val endpoints: Endpoints\n+    val networkDependencyProvider: NetworkDependencyProvider\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/java/com/novoda/movies/mvi/search/Endpoints.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package com.novoda.movies.mvi.search\n+\n+data class Endpoints(val baseUrl: String, val baseImageUrl: String)\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/java/com/novoda/movies/mvi/search/NetworkDependencyProvider.kt",
            "additions": 49,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,49 @@\n+package com.novoda.movies.mvi.search\n+\n+import okhttp3.Interceptor\n+import okhttp3.OkHttpClient\n+import okhttp3.logging.HttpLoggingInterceptor\n+import retrofit2.Retrofit\n+import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory\n+import retrofit2.converter.moshi.MoshiConverterFactory\n+import java.util.concurrent.TimeUnit\n+\n+private const val DEFAULT_TIMEOUT: Int = 30\n+\n+class NetworkDependencyProvider(\n+    private val endpoints: Endpoints,\n+    private val secrets: Secrets\n+) {\n+\n+    private fun provideOkHttp(): OkHttpClient {\n+        val timeUnit = TimeUnit.SECONDS\n+        val defaultTimeout = DEFAULT_TIMEOUT.toLong()\n+        val builder = OkHttpClient.Builder()\n+            .connectTimeout(defaultTimeout, timeUnit)\n+            .readTimeout(defaultTimeout, timeUnit)\n+            .writeTimeout(defaultTimeout, timeUnit)\n+            .addInterceptor(authenticationInterceptor())\n+            .addInterceptor(HttpLoggingInterceptor().apply { level = HttpLoggingInterceptor.Level.HEADERS })\n+\n+        return builder.build()\n+    }\n+\n+    private fun authenticationInterceptor(): Interceptor {\n+        return Interceptor { chain ->\n+            val request = chain.request()\n+            val url = request.url().newBuilder().addQueryParameter(\"api_key\", secrets.apiKey).build()\n+            val newRequest = request.newBuilder().url(url).build()\n+            chain.proceed(newRequest)\n+        }\n+    }\n+\n+    fun provideRetrofit(): Retrofit {\n+        val okHttpClient = provideOkHttp()\n+        return Retrofit.Builder()\n+            .baseUrl(endpoints.baseUrl)\n+            .addConverterFactory(MoshiConverterFactory.create())\n+            .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\n+            .client(okHttpClient)\n+            .build()\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/java/com/novoda/movies/mvi/search/ProductionSchedulingStrategy.kt",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+package com.novoda.movies.mvi.search\n+\n+import io.reactivex.Scheduler\n+import io.reactivex.android.schedulers.AndroidSchedulers\n+import io.reactivex.schedulers.Schedulers\n+\n+class ProductionSchedulingStrategy : SchedulingStrategy {\n+\n+    override val work: Scheduler = Schedulers.io()\n+    override val ui: Scheduler = AndroidSchedulers.mainThread()\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/java/com/novoda/movies/mvi/search/SchedulingStrategy.kt",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+package com.novoda.movies.mvi.search\n+\n+import io.reactivex.Scheduler\n+\n+interface SchedulingStrategy {\n+    val work: Scheduler\n+    val ui: Scheduler\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/java/com/novoda/movies/mvi/search/Secrets.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package com.novoda.movies.mvi.search\n+\n+data class Secrets(val apiKey:String)\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/drawable-v24/ic_launcher_foreground.xml",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        xmlns:aapt=\"http://schemas.android.com/aapt\"\n+        android:width=\"108dp\"\n+        android:height=\"108dp\"\n+        android:viewportHeight=\"108\"\n+        android:viewportWidth=\"108\">\n+    <path\n+            android:fillType=\"evenOdd\"\n+            android:pathData=\"M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z\"\n+            android:strokeColor=\"#00000000\"\n+            android:strokeWidth=\"1\">\n+        <aapt:attr name=\"android:fillColor\">\n+            <gradient\n+                    android:endX=\"78.5885\"\n+                    android:endY=\"90.9159\"\n+                    android:startX=\"48.7653\"\n+                    android:startY=\"61.0927\"\n+                    android:type=\"linear\">\n+                <item\n+                        android:color=\"#44000000\"\n+                        android:offset=\"0.0\"/>\n+                <item\n+                        android:color=\"#00000000\"\n+                        android:offset=\"1.0\"/>\n+            </gradient>\n+        </aapt:attr>\n+    </path>\n+    <path\n+            android:fillColor=\"#FFFFFF\"\n+            android:fillType=\"nonZero\"\n+            android:pathData=\"M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z\"\n+            android:strokeColor=\"#00000000\"\n+            android:strokeWidth=\"1\"/>\n+</vector>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/drawable/ic_launcher_background.xml",
            "additions": 74,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,74 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<vector\n+        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        android:height=\"108dp\"\n+        android:width=\"108dp\"\n+        android:viewportHeight=\"108\"\n+        android:viewportWidth=\"108\">\n+    <path android:fillColor=\"#008577\"\n+          android:pathData=\"M0,0h108v108h-108z\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M9,0L9,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,0L19,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M29,0L29,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M39,0L39,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M49,0L49,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M59,0L59,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M69,0L69,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M79,0L79,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M89,0L89,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M99,0L99,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,9L108,9\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,19L108,19\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,29L108,29\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,39L108,39\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,49L108,49\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,59L108,59\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,69L108,69\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,79L108,79\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,89L108,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,99L108,99\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,29L89,29\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,39L89,39\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,49L89,49\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,59L89,59\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,69L89,69\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,79L89,79\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M29,19L29,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M39,19L39,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M49,19L49,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M59,19L59,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M69,19L69,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M79,19L79,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+</vector>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-anydpi-v26/ic_launcher.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <background android:drawable=\"@drawable/ic_launcher_background\"/>\n+    <foreground android:drawable=\"@drawable/ic_launcher_foreground\"/>\n+</adaptive-icon>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <background android:drawable=\"@drawable/ic_launcher_background\"/>\n+    <foreground android:drawable=\"@drawable/ic_launcher_foreground\"/>\n+</adaptive-icon>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-hdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-hdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-mdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-mdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/core/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/values/colors.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <color name=\"colorPrimary\">#008577</color>\n+    <color name=\"colorPrimaryDark\">#00574B</color>\n+    <color name=\"colorAccent\">#D81B60</color>\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/values/strings.xml",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+<resources>\n+    <string name=\"app_name\">Core</string>\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/main/res/values/styles.xml",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+<resources>\n+\n+    <!-- Base application theme. -->\n+    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n+        <!-- Customize your theme here. -->\n+        <item name=\"colorPrimary\">@color/colorPrimary</item>\n+        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n+        <item name=\"colorAccent\">@color/colorAccent</item>\n+    </style>\n+\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/test/java/com/novoda/movies/mvi/search/ExampleTest.kt",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+package com.novoda.movies.mvi.search\n+\n+import com.nhaarman.mockitokotlin2.mock\n+import com.nhaarman.mockitokotlin2.whenever\n+import org.assertj.core.api.Assertions.assertThat\n+import org.junit.Test\n+\n+\n+internal class ExampleTest {\n+\n+    @Test\n+    fun `should assert sth`() {\n+        val foo = mock<Foo>()\n+        whenever(foo.bar()).thenReturn(\"bar2\")\n+\n+        assertThat(foo.bar()).isEqualTo(\"bar2\")\n+    }\n+\n+    class Foo {\n+        fun bar(): String = \"bar\"\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/test/java/com/novoda/movies/mvi/search/results/RealSearchResultsModelTest.kt",
            "additions": 144,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,144 @@\n+package com.novoda.movies.mvi.search.results\n+\n+import com.nhaarman.mockitokotlin2.mock\n+import com.nhaarman.mockitokotlin2.whenever\n+import com.novoda.movies.mvi.search.SearchResults\n+import com.novoda.movies.mvi.search.SearchResultsModel.State.*\n+import com.novoda.movies.mvi.search.api.SearchBackend\n+import io.reactivex.Single\n+import org.junit.Test\n+\n+class RealSearchResultsModelTest {\n+\n+    private val queryString = \"gateau\"\n+    private val backend: SearchBackend = mock()\n+\n+\n+    @Test\n+    fun `should emit initial state without initial query when initial query empty`() {\n+        model()\n+            .state()\n+            .test()\n+            .assertValue(Initial)\n+    }\n+\n+    @Test\n+    fun `should show text input when user changes query`() {\n+        val searchResults = results()\n+        givenBackendSucceedWith(searchResults)\n+        val model = model()\n+        val state = model.state().test()\n+\n+        model.queryChanged(queryString)\n+\n+        state.assertValues(\n+            Initial,\n+            TextInput(queryString)\n+        )\n+    }\n+\n+    @Test\n+    fun `should start with loading`() {\n+        givenBackendReturn(Single.never())\n+        val model = model()\n+        val state = model.state()\n+\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        state.test()\n+            .assertValue(Loading(queryString))\n+    }\n+\n+    @Test\n+    fun `should emit result after loading`() {\n+        val searchResults = results()\n+        givenBackendSucceedWith(searchResults)\n+        val model = model()\n+        val state = model.state().test()\n+\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        state.assertValues(\n+            Initial,\n+            TextInput(queryString),\n+            Loading(queryString),\n+            Content(queryString, searchResults)\n+        )\n+    }\n+\n+    @Test\n+    fun `should emit latest state`() {\n+        val searchResults = results()\n+        givenBackendSucceedWith(searchResults)\n+        val model = model()\n+\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        model.state()\n+            .test()\n+            .assertValues(Content(queryString, searchResults))\n+    }\n+\n+    @Test\n+    fun `should emit error when search failed`() {\n+        val exception = Exception()\n+        givenBackendFailWith(exception)\n+        val model = model()\n+\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        model.state()\n+            .test()\n+            .assertValue(Error(queryString, exception))\n+    }\n+\n+    @Test\n+    fun `should recover from error`() {\n+        val exception = Exception()\n+        givenBackendFailWith(exception)\n+        val model = model()\n+        val state = model.state().test()\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        val searchResults = results()\n+        givenBackendSucceedWith(searchResults)\n+        model.executeSearch()\n+\n+        state.assertValues(\n+            Initial,\n+            TextInput(queryString),\n+            Loading(queryString),\n+            Error(queryString, exception),\n+            Loading(queryString),\n+            Content(queryString, searchResults)\n+        )\n+    }\n+\n+    private fun model(): RealSearchResultsModel {\n+        return RealSearchResultsModel(\n+            backend,\n+            SynchronousSchedulingStrategy()\n+        )\n+    }\n+\n+    private fun results(): SearchResults = SearchResults(\n+        listOf(mock(), mock())\n+    )\n+\n+    private fun givenBackendSucceedWith(searchResults: SearchResults) {\n+        givenBackendReturn(Single.just(searchResults))\n+    }\n+\n+    private fun givenBackendReturn(single: Single<SearchResults>) {\n+        whenever(backend.search(queryString)).thenReturn(single)\n+    }\n+\n+    private fun givenBackendFailWith(exception: Exception) {\n+        givenBackendReturn(Single.error(exception))\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/core/src/test/java/com/novoda/movies/mvi/search/results/SynchronousSchedulingStrategy.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.movies.mvi.search.results\n+\n+import com.novoda.movies.mvi.search.SchedulingStrategy\n+import io.reactivex.Scheduler\n+import io.reactivex.schedulers.Schedulers\n+\n+class SynchronousSchedulingStrategy : SchedulingStrategy {\n+    override val work: Scheduler = Schedulers.trampoline()\n+    override val ui: Scheduler = Schedulers.trampoline()\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Wed Jun 05 09:24:12 CEST 2019\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.10.1-all.zip\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/gradlew",
            "additions": 172,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,172 @@\n+#!/usr/bin/env sh\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn () {\n+    echo \"$*\"\n+}\n+\n+die () {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+nonstop=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+  NONSTOP* )\n+    nonstop=true\n+    ;;\n+esac\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Escape application args\n+save () {\n+    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n+    echo \" \"\n+}\n+APP_ARGS=$(save \"$@\")\n+\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\n+if [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n+  cd \"$(dirname \"$0\")\"\n+fi\n+\n+exec \"$JAVACMD\" \"$@\"\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/gradlew.bat",
            "additions": 84,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,84 @@\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:init\r\n+@rem Get command-line arguments, handling Windows variants\r\n+\r\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n+\r\n+:win9xME_args\r\n+@rem Slurp the command line arguments.\r\n+set CMD_LINE_ARGS=\r\n+set _SKIP=2\r\n+\r\n+:win9xME_args_slurp\r\n+if \"x%~1\" == \"x\" goto execute\r\n+\r\n+set CMD_LINE_ARGS=%*\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/.gitignore",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+/build\n+secrets.properties\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/build.gradle",
            "additions": 51,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,51 @@\n+apply plugin: 'com.android.library'\n+apply plugin: 'kotlin-android'\n+apply plugin: 'kotlin-android-extensions'\n+apply plugin: 'kotlin-kapt'\n+\n+android {\n+    compileSdkVersion 28\n+\n+    defaultConfig {\n+        minSdkVersion 28\n+        targetSdkVersion 28\n+        versionCode 1\n+        versionName \"1.0\"\n+\n+        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n+\n+    }\n+\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+}\n+\n+dependencies {\n+    implementation fileTree(dir: 'libs', include: ['*.jar'])\n+    implementation project(':core')\n+\n+    implementation libraries.kotlin.stdLib\n+    implementation libraries.kotlin.reflect\n+    implementation libraries.support.appCompat\n+    implementation libraries.support.constraintLayout\n+    implementation libraries.support.recyclerview\n+    implementation libraries.rxJava\n+    implementation libraries.rxAndroid\n+    implementation libraries.okHttp.client\n+    implementation libraries.okHttp.loggingInterceptor\n+    implementation libraries.retrofit.lib\n+    implementation libraries.retrofit.rxJavaAdapter\n+    implementation libraries.retrofit.moshiConverter\n+    implementation libraries.glide.lib\n+    kapt libraries.glide.compiler\n+\n+    testImplementation libraries.test.junit\n+    testImplementation libraries.test.mockito\n+    testImplementation libraries.test.mockitoKotlin\n+    testImplementation libraries.test.mockitoInline\n+    testImplementation libraries.test.assertj\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/proguard-rules.pro",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.\n+# You can control the set of applied configuration files using the\n+# proguardFiles setting in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/AndroidManifest.xml",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+          package=\"com.novoda.movies.mvi.search\">\n+\n+    <application\n+            android:allowBackup=\"true\"\n+            android:icon=\"@mipmap/ic_launcher\"\n+            android:label=\"@string/app_name\"\n+            android:roundIcon=\"@mipmap/ic_launcher_round\"\n+            android:supportsRtl=\"true\"\n+            android:theme=\"@style/AppTheme\">\n+        <activity android:name=\".SearchActivity\"\n+                  android:screenOrientation=\"portrait\"/>\n+    </application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/RealSearchResultsModel.kt",
            "additions": 76,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,76 @@\n+package com.novoda.movies.mvi.search\n+\n+import com.novoda.movies.mvi.search.SearchResultsModel.State\n+import com.novoda.movies.mvi.search.SearchResultsModel.State.*\n+import com.novoda.movies.mvi.search.api.SearchBackend\n+import io.reactivex.Observable\n+import io.reactivex.functions.BiFunction\n+import io.reactivex.subjects.BehaviorSubject\n+import io.reactivex.subjects.PublishSubject\n+import io.reactivex.subjects.Subject\n+\n+internal class RealSearchResultsModel(\n+    private val backend: SearchBackend,\n+    private val schedulingStrategy: SchedulingStrategy\n+) : SearchResultsModel {\n+    private val state: Subject<State> = BehaviorSubject.createDefault(Initial)\n+\n+    private val actions: Subject<Action> = PublishSubject.create()\n+    init {\n+        actions\n+            .withLatestFrom(state, actionToState())\n+            .switchMap { (action, state) ->\n+                handle(action, state)\n+            }.subscribe(state)\n+\n+    }\n+\n+    private fun actionToState(): BiFunction<Action, State, Pair<Action, State>> {\n+        return BiFunction { action, state ->\n+            action to state\n+        }\n+    }\n+\n+    private fun handle(action: Action, state: State): Observable<State> {\n+        return when (action) {\n+            is Action.ChangeQuery -> textInput(action.queryString)\n+            is Action.ClearQuery -> textInputWithEmptyQuery()\n+            is Action.ExecuteSearch -> processQuery(state.queryString)\n+        }\n+    }\n+\n+    private fun textInputWithEmptyQuery(): Observable<State> =\n+        Observable.just(TextInput(\"\") as State)\n+\n+    private fun textInput(queryString: String) =\n+        Observable.just(TextInput(queryString) as State)\n+\n+    private fun processQuery(query: String): Observable<State> {\n+        return backend.search(query)\n+            .toObservable()\n+            .map { results -> Content(query, results) as State }\n+            .startWith(Loading(query))\n+            .onErrorReturn { throwable -> Error(query, throwable) }\n+            .subscribeOn(schedulingStrategy.work)\n+    }\n+\n+    override fun state(): Observable<State> = state\n+        .subscribeOn(schedulingStrategy.work)\n+        .observeOn(schedulingStrategy.ui)\n+\n+    override fun executeSearch() = actions.onNext(Action.ExecuteSearch)\n+\n+    override fun queryChanged(queryString: String) =\n+        actions.onNext(Action.ChangeQuery(queryString))\n+\n+    override fun clearQuery() {\n+        actions.onNext(Action.ClearQuery)\n+    }\n+\n+    private sealed class Action {\n+        data class ChangeQuery(val queryString: String) : Action()\n+        object ExecuteSearch : Action()\n+        object ClearQuery : Action()\n+    }\n+}\n+\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/SearchActivity.kt",
            "additions": 42,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,42 @@\n+package com.novoda.movies.mvi.search\n+\n+import android.os.Bundle\n+import android.support.v7.app.AppCompatActivity\n+import com.novoda.movies.mvi.search.view.SearchInputView\n+import com.novoda.movies.mvi.search.view.SearchResultsView\n+import kotlinx.android.synthetic.main.activity_search.*\n+\n+internal class SearchActivity : AppCompatActivity() {\n+\n+    private lateinit var searchInput: SearchInputView\n+    private lateinit var resultsView: SearchResultsView\n+\n+    lateinit var presenter: SearchResultsPresenter\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        Injector().inject(this)\n+        setContentView(R.layout.activity_search)\n+        searchInput = search_input\n+        resultsView = search_results\n+    }\n+\n+    override fun onStart() {\n+        super.onStart()\n+        presenter.bind(searchInput, resultsView)\n+    }\n+\n+    override fun onStop() {\n+        super.onStop()\n+        presenter.unbind()\n+    }\n+\n+    class Injector {\n+        fun inject(searchActivity: SearchActivity) {\n+            val dependencies = searchActivity.application as Dependencies\n+            val networkDependencyProvider = dependencies.networkDependencyProvider\n+            val searchDependencyProvider = SearchDependencyProvider(networkDependencyProvider, dependencies.endpoints)\n+            searchActivity.presenter = searchDependencyProvider.provideSearchResultsPresenter()\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/SearchDependencyProvider.kt",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+package com.novoda.movies.mvi.search\n+\n+import com.novoda.movies.mvi.search.api.ApiSearchResultsConverter\n+import com.novoda.movies.mvi.search.api.SearchApi\n+import com.novoda.movies.mvi.search.api.SearchBackend\n+import com.novoda.movies.mvi.search.view.SearchResultsConverter\n+\n+internal class SearchDependencyProvider(\n+    private val networkDependencyProvider: NetworkDependencyProvider,\n+    private val endpoints: Endpoints\n+) {\n+\n+    private fun provideSearchResultsModel(): SearchResultsModel {\n+        return RealSearchResultsModel(\n+            provideSearchBackend(),\n+            ProductionSchedulingStrategy()\n+        )\n+    }\n+\n+    private fun provideSearchBackend(): SearchBackend {\n+        val searchApi = networkDependencyProvider.provideRetrofit().create(SearchApi::class.java)\n+        return SearchBackend(\n+            searchApi,\n+            ApiSearchResultsConverter(endpoints)\n+        )\n+    }\n+\n+    fun provideSearchResultsPresenter(): SearchResultsPresenter {\n+        return SearchResultsPresenter(\n+            provideSearchResultsModel(),\n+            SearchResultsConverter()\n+        )\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/SearchResults.kt",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+package com.novoda.movies.mvi.search\n+\n+import java.net.URL\n+\n+internal data class SearchResults(\n+    val items: List<SearchResultItem>,\n+    val totalResults: Int\n+)\n+\n+internal data class SearchResultItem(\n+    val id: Int,\n+    val title: String,\n+    val posterPath: URL\n+)\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/SearchResultsModel.kt",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+package com.novoda.movies.mvi.search\n+\n+import io.reactivex.Observable\n+\n+\n+internal interface SearchResultsModel {\n+\n+    fun state(): Observable<State>\n+    fun executeSearch()\n+    fun queryChanged(queryString: String)\n+    fun clearQuery()\n+\n+    sealed class State {\n+        abstract val queryString: String\n+\n+        object Initial : State() {\n+            override val queryString: String\n+                get() = \"\"\n+        }\n+\n+        data class TextInput(override val queryString: String) : State()\n+        data class Content(\n+            override val queryString: String,\n+            val searchResults: SearchResults\n+        ) : State()\n+\n+        data class Loading(override val queryString: String) : State()\n+        data class Error(override val queryString: String, val throwable: Throwable) : State()\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/SearchResultsPresenter.kt",
            "additions": 101,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,101 @@\n+package com.novoda.movies.mvi.search\n+\n+import android.util.Log\n+import com.novoda.movies.mvi.search.SearchResultsModel.State\n+import com.novoda.movies.mvi.search.view.SearchInputViewable\n+import com.novoda.movies.mvi.search.view.SearchResultsConverter\n+import com.novoda.movies.mvi.search.view.SearchResultsViewable\n+import io.reactivex.Observable\n+import io.reactivex.disposables.CompositeDisposable\n+import io.reactivex.disposables.Disposable\n+\n+internal class SearchResultsPresenter(\n+    private val model: SearchResultsModel,\n+    private val converter: SearchResultsConverter\n+) {\n+    private val disposables = CompositeDisposable()\n+\n+    fun bind(\n+        inputView: SearchInputViewable,\n+        resultsView: SearchResultsViewable\n+    ) {\n+        inputView.onQuerySubmitted = ::executeSearch\n+        inputView.onQueryCleared = ::clearQuery\n+        inputView.onQueryChanged = ::changeQuery\n+\n+        model.state()\n+            .subscribeToState(\n+                onTextInput = {\n+                    resultsView.showTextInput()\n+                },\n+                onContent = {\n+                    displayResults(it, resultsView)\n+                },\n+                onInitial = {\n+                    showInitial(inputView, resultsView)\n+                },\n+                onEachState = {\n+                    renderInput(it.queryString, inputView)\n+                },\n+                onError = {\n+                    Log.e(\"Movies\", \"Error\", it)\n+                },\n+                onLoading = {\n+                    Log.i(\"Movies\", \"Loading Movies\")\n+                }\n+            ).disposedBy(disposables)\n+    }\n+\n+    private fun clearQuery() = model.clearQuery()\n+\n+    private fun executeSearch() = model.executeSearch()\n+\n+    private fun changeQuery(queryString: String) = model.queryChanged(queryString)\n+\n+    private fun showInitial(inputView: SearchInputViewable, resultsView: SearchResultsViewable) {\n+        resultsView.showTextInput()\n+        inputView.showKeyboard()\n+    }\n+\n+    private fun displayResults(state: State.Content, resultsView: SearchResultsViewable) {\n+        val viewResults = converter.convert(state.searchResults)\n+        if (viewResults.totalItemCount > 0) {\n+            resultsView.showResults(viewResults)\n+        } else {\n+            resultsView.showNoResults(state.queryString)\n+        }\n+    }\n+\n+    private fun renderInput(queryString: String, inputView: SearchInputViewable) {\n+        inputView.currentQuery = queryString\n+    }\n+\n+    fun unbind() {\n+        disposables.clear()\n+    }\n+}\n+\n+@Suppress(\"LongParameterList\")\n+private fun Observable<State>.subscribeToState(\n+    onTextInput: () -> Unit,\n+    onContent: (State.Content) -> Unit,\n+    onLoading: () -> Unit,\n+    onError: (throwable: Throwable) -> Unit,\n+    onInitial: () -> Unit,\n+    onEachState: (State) -> Unit\n+): Disposable {\n+    return subscribe { state ->\n+        when (state) {\n+            is State.TextInput -> onTextInput()\n+            is State.Content -> onContent(state)\n+            is State.Loading -> onLoading()\n+            is State.Error -> onError(state.throwable)\n+            is State.Initial -> onInitial()\n+        }\n+        onEachState(state)\n+    }\n+}\n+\n+fun Disposable.disposedBy(compositeDisposable: CompositeDisposable): Disposable =\n+    apply { compositeDisposable.add(this) }\n+\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/api/ApiSearchResults.kt",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package com.novoda.movies.mvi.search.api\n+\n+\n+internal data class ApiSearchResults(\n+    val results: List<ApiSearchResultItem>,\n+    val total_results: Int\n+)\n+\n+internal data class ApiSearchResultItem(\n+    val id: Int,\n+    val title: String,\n+    val poster_path: String\n+)\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/api/ApiSearchResultsConverter.kt",
            "additions": 33,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,33 @@\n+package com.novoda.movies.mvi.search.api\n+\n+import com.novoda.movies.mvi.search.Endpoints\n+import com.novoda.movies.mvi.search.SearchResultItem\n+import com.novoda.movies.mvi.search.SearchResults\n+import java.net.URL\n+\n+internal class ApiSearchResultsConverter(\n+    private val endpoints: Endpoints\n+) {\n+\n+    fun convert(apiSearchResults: ApiSearchResults): SearchResults {\n+        return apiSearchResults.toSearchResults()\n+    }\n+\n+\n+    private fun ApiSearchResults.toSearchResults(): SearchResults {\n+        return SearchResults(\n+            items = results.map {\n+                it.toSearchResultItem()\n+            },\n+            totalResults = total_results\n+        )\n+    }\n+\n+    private fun ApiSearchResultItem.toSearchResultItem(): SearchResultItem {\n+        return SearchResultItem(\n+            id,\n+            title,\n+            URL(\"${endpoints.baseImageUrl}$poster_path\")\n+        )\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/api/SearchApi.kt",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+package com.novoda.movies.mvi.search.api\n+\n+import io.reactivex.Single\n+import retrofit2.http.GET\n+import retrofit2.http.Query\n+\n+\n+internal interface SearchApi {\n+\n+    @GET(\"search/movie\")\n+    fun search(\n+        @Query(\"query\") query: String\n+    ): Single<ApiSearchResults>\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/api/SearchBackend.kt",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+package com.novoda.movies.mvi.search.api\n+\n+import com.novoda.movies.mvi.search.SearchResults\n+import io.reactivex.Single\n+\n+internal class SearchBackend(\n+    private val searchApi: SearchApi,\n+    private val searchConverter: ApiSearchResultsConverter\n+) {\n+\n+    fun search(query: String): Single<SearchResults> {\n+        return searchApi\n+            .search(query)\n+            .map(searchConverter::convert)\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/SearchInputView.kt",
            "additions": 113,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,113 @@\n+package com.novoda.movies.mvi.search.view\n+\n+import android.content.Context\n+import android.support.constraint.ConstraintLayout\n+import android.text.Editable\n+import android.text.TextWatcher\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import android.view.KeyEvent.ACTION_DOWN\n+import android.view.KeyEvent.KEYCODE_ENTER\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.inputmethod.EditorInfo\n+import android.view.inputmethod.InputMethodManager\n+import android.widget.EditText\n+import android.widget.TextView\n+import com.novoda.movies.mvi.search.R\n+import kotlinx.android.synthetic.main.search_bar.view.*\n+\n+internal class SearchInputView @JvmOverloads constructor(\n+    context: Context,\n+    attrs: AttributeSet? = null,\n+    defStyleAttr: Int = 0\n+) : ConstraintLayout(context, attrs, defStyleAttr), SearchInputViewable {\n+\n+    private lateinit var searchInput: EditText\n+    private lateinit var clearTextButton: View\n+\n+    override var currentQuery: String\n+        get() = searchInput.text.toString()\n+        set(text) {\n+            searchInput.fillWith(text)\n+            searchInput.setSelection(text.length)\n+        }\n+\n+    override var onQuerySubmitted: () -> Unit = {}\n+    override var onQueryChanged: (query: String) -> Unit = {}\n+    override var onQueryCleared: () -> Unit = {}\n+\n+    override fun showKeyboard() {\n+        searchInput.showKeyboard()\n+    }\n+\n+    override fun onFinishInflate() {\n+        super.onFinishInflate()\n+        LayoutInflater.from(context).inflate(R.layout.search_bar, this, true)\n+\n+        searchInput = search_input_text\n+        clearTextButton = clear_button\n+\n+        setupSearchInput()\n+        clearTextButton.setOnClickListener { clearText() }\n+    }\n+\n+\n+    private fun setupSearchInput() {\n+        searchInput.isSaveEnabled = false\n+        searchInput.setOnEditorActionListener { inputView, actionId, keyEvent ->\n+            if (actionId == EditorInfo.IME_ACTION_SEARCH || enterKeyPressed(keyEvent)) {\n+                onQuerySubmitted()\n+                inputView.hideKeyboard()\n+                inputView.clearFocus()\n+                return@setOnEditorActionListener true\n+            }\n+            return@setOnEditorActionListener false\n+        }\n+\n+        searchInput.addTextChangedListener(textChangedListener)\n+    }\n+\n+    private fun clearText() {\n+        searchInput.text.clear()\n+    }\n+\n+    private fun enterKeyPressed(keyEvent: KeyEvent?): Boolean {\n+        return keyEvent != null &&\n+                keyEvent.keyCode == KEYCODE_ENTER &&\n+                keyEvent.action == ACTION_DOWN\n+    }\n+\n+    private val textChangedListener = object :\n+        AfterTextChangedWatcher {\n+        override fun afterTextChanged(text: Editable) {\n+            onQueryChanged(text.toString())\n+\n+            val showClear = text.isNotEmpty()\n+            clearTextButton.visibility = if (showClear) View.VISIBLE else View.GONE\n+        }\n+    }\n+\n+    private fun TextView.fillWith(text: String) {\n+        removeTextChangedListener(textChangedListener)\n+        setText(text)\n+        addTextChangedListener(textChangedListener)\n+    }\n+\n+    private interface AfterTextChangedWatcher : TextWatcher {\n+        override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\n+        override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\n+    }\n+}\n+\n+fun TextView.hideKeyboard() {\n+    clearFocus()\n+    val inputManager = context.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager\n+    inputManager.hideSoftInputFromWindow(windowToken, 0)\n+}\n+\n+fun TextView.showKeyboard() {\n+    requestFocus()\n+    val inputManager = context.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager\n+    inputManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0)\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/SearchInputViewable.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.movies.mvi.search.view\n+\n+internal interface SearchInputViewable {\n+    var currentQuery: String\n+    var onQuerySubmitted: () -> Unit\n+    var onQueryChanged: (query: String) -> Unit\n+\n+    fun showKeyboard()\n+    var onQueryCleared: () -> Unit\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/SearchResultCountViewHolder.kt",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+package com.novoda.movies.mvi.search.view\n+\n+import android.content.Context\n+import android.support.annotation.PluralsRes\n+import android.support.v7.widget.RecyclerView\n+import android.view.LayoutInflater\n+import android.view.ViewGroup\n+import android.widget.TextView\n+import com.novoda.movies.mvi.search.R\n+\n+internal class SearchResultCountViewHolder(\n+    private val label: TextView\n+) : RecyclerView.ViewHolder(label) {\n+\n+    fun bind(resultCount: Int) {\n+        label.text = label.context.getQuantityString(R.plurals.search_result_count, resultCount)\n+    }\n+\n+    companion object {\n+        fun create(parent: ViewGroup): SearchResultCountViewHolder {\n+            val view = LayoutInflater.from(parent.context)\n+                    .inflate(R.layout.search_result_count, parent, false)\n+            return SearchResultCountViewHolder(view as TextView)\n+        }\n+    }\n+}\n+\n+fun Context.getQuantityString(@PluralsRes pluralsId: Int, count: Int): CharSequence {\n+    return resources.getQuantityString(pluralsId, count, count)\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/SearchResultItemViewHolder.kt",
            "additions": 89,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,89 @@\n+package com.novoda.movies.mvi.search.view\n+\n+import android.annotation.SuppressLint\n+import android.graphics.drawable.Drawable\n+import android.support.v7.widget.RecyclerView\n+import android.util.Log\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ImageView\n+import com.bumptech.glide.Glide\n+import com.bumptech.glide.load.DataSource\n+import com.bumptech.glide.load.engine.GlideException\n+import com.bumptech.glide.load.model.GlideUrl\n+import com.bumptech.glide.request.RequestListener\n+import com.bumptech.glide.request.target.Target\n+import com.novoda.movies.mvi.search.R\n+import kotlinx.android.synthetic.main.item_search_result.view.*\n+import java.net.URL\n+\n+internal class SearchResultItemViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n+\n+    private val image = view.result_item_image\n+    private val name = view.result_item_name\n+\n+    @SuppressLint(\"SetTextI18n\")\n+    fun bind(item: ViewSearchItem) {\n+        image.clipToOutline = true\n+        image.loadImage(\n+                item.thumbnailUrl,\n+                {\n+                    //no-op\n+                },\n+                {\n+                    Log.e(TAG, \"Could not download image with url ${item.thumbnailUrl}\")\n+                }\n+        )\n+        name.text = item.name\n+    }\n+\n+    companion object {\n+        var TAG: String = SearchResultItemViewHolder::class.java.simpleName\n+\n+        fun create(parent: ViewGroup): SearchResultItemViewHolder {\n+            val view = LayoutInflater.from(parent.context)\n+                    .inflate(R.layout.item_search_result, parent, false)\n+            return SearchResultItemViewHolder(view)\n+        }\n+    }\n+}\n+\n+fun ImageView.loadImage(url: URL, onSuccess: () -> Unit = {}, onError: (Throwable) -> Unit) {\n+    val simpleGlideListener = SimpleGlideListener(\n+        onSuccess\n+    ) { throwable ->\n+        onError(throwable ?: Error(url.toString()))\n+    }\n+    Glide.with(this)\n+        .load(GlideUrl(url))\n+        .listener(simpleGlideListener)\n+        .into(this)\n+}\n+\n+class SimpleGlideListener(\n+    private val onSuccess: () -> Unit,\n+    private val onFailure: (Throwable?) -> Unit\n+) : RequestListener<Drawable> {\n+\n+    override fun onLoadFailed(\n+        exception: GlideException?,\n+        model: Any?,\n+        target: Target<Drawable>?,\n+        isFirstResource: Boolean\n+    ): Boolean {\n+        onFailure(exception)\n+        return false\n+    }\n+\n+    override fun onResourceReady(\n+        resource: Drawable?,\n+        model: Any?,\n+        target: Target<Drawable>?,\n+        dataSource: DataSource?,\n+        isFirstResource: Boolean\n+    ): Boolean {\n+        onSuccess()\n+        return false\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/SearchResultsAdapter.kt",
            "additions": 53,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,53 @@\n+package com.novoda.movies.mvi.search.view\n+\n+import android.support.v7.widget.RecyclerView\n+import android.view.ViewGroup\n+\n+internal class SearchResultsAdapter : RecyclerView.Adapter<RecyclerView.ViewHolder>() {\n+\n+    private enum class SearchResultType(val id: Int) {\n+        RESULT_COUNT(0),\n+        ITEM(1)\n+    }\n+\n+    private val movies = mutableListOf<ViewSearchItem>()\n+    private val headerCount = 1\n+\n+    private var totalItemCount = 0\n+\n+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\n+        return when (viewType) {\n+            SearchResultType.RESULT_COUNT.id -> SearchResultCountViewHolder.create(\n+                parent\n+            )\n+            else -> SearchResultItemViewHolder.create(parent)\n+        }\n+    }\n+\n+    override fun getItemViewType(position: Int): Int {\n+        return when (position) {\n+            0 -> SearchResultType.RESULT_COUNT\n+            else -> SearchResultType.ITEM\n+        }.id\n+    }\n+\n+    override fun getItemCount() = movies.size + headerCount\n+\n+    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\n+        when (holder) {\n+            is SearchResultItemViewHolder -> {\n+                val movie = movies[position - headerCount]\n+                holder.bind(movie)\n+            }\n+\n+            is SearchResultCountViewHolder -> holder.bind(totalItemCount)\n+        }\n+    }\n+\n+    fun bind(results: ViewSearchResults) {\n+        this.movies.clear()\n+        this.movies.addAll(results.items)\n+        this.totalItemCount = results.totalItemCount\n+        notifyDataSetChanged()\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/SearchResultsConverter.kt",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+package com.novoda.movies.mvi.search.view\n+\n+import com.novoda.movies.mvi.search.SearchResultItem\n+import com.novoda.movies.mvi.search.SearchResults\n+\n+internal open class SearchResultsConverter {\n+\n+    fun convert(searchResults: SearchResults): ViewSearchResults =\n+        ViewSearchResults(\n+            searchResults.totalResults,\n+            convertItems(searchResults.items)\n+        )\n+\n+    open fun convertItems(list: List<SearchResultItem>): List<ViewSearchItem> {\n+        return list.map {\n+            it.toViewSearchItem()\n+        }\n+    }\n+}\n+\n+private fun SearchResultItem.toViewSearchItem(): ViewSearchItem =\n+    ViewSearchItem(id.toString(), title, posterPath)\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/SearchResultsView.kt",
            "additions": 91,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,91 @@\n+package com.novoda.movies.mvi.search.view\n+\n+import android.content.Context\n+import android.support.constraint.ConstraintLayout\n+import android.support.v7.widget.LinearLayoutManager\n+import android.support.v7.widget.RecyclerView\n+import android.util.AttributeSet\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import com.novoda.movies.mvi.search.R\n+import kotlinx.android.synthetic.main.search_results_view.view.*\n+\n+internal class SearchResultsView @JvmOverloads constructor(\n+    context: Context,\n+    attrs: AttributeSet? = null,\n+    defStyleAttr: Int = 0\n+) : ConstraintLayout(context, attrs, defStyleAttr), SearchResultsViewable {\n+\n+    private lateinit var resultList: RecyclerView\n+    private lateinit var noResultsView: View\n+\n+    private val adapter = SearchResultsAdapter()\n+\n+    override fun onFinishInflate() {\n+        super.onFinishInflate()\n+        LayoutInflater.from(context)\n+                .inflate(R.layout.search_results_view, this, true)\n+\n+        resultList = search_results_list\n+        noResultsView = search_results_no_results\n+\n+        setupView()\n+    }\n+\n+    private fun setupView() {\n+        resultList.adapter = adapter\n+        resultList.layoutManager = LinearLayoutManager(context)\n+    }\n+\n+    override fun showResults(results: ViewSearchResults) {\n+        adapter.bind(results)\n+        showAllExcept(noResultsView)\n+    }\n+\n+    override fun showTextInput() {\n+        hideAll()\n+    }\n+\n+    override fun showNoResults(attemptedQuery: String) {\n+        val text = context.getString(R.string.search_no_results_description, attemptedQuery)\n+        noResultsView.no_results_description.text = text\n+        hideAllExcept(noResultsView)\n+    }\n+}\n+\n+inline fun ViewGroup.forEachIndexed(action: (index: Int, view: View) -> Unit) {\n+    for (index in 0 until childCount) {\n+        action(index, getChildAt(index))\n+    }\n+}\n+\n+fun ViewGroup.hideAll() {\n+    children().forEach(View::hide)\n+}\n+\n+fun ViewGroup.hideAllExcept(vararg views: View) {\n+    children().forEach(View::hide)\n+    views.forEach(View::show)\n+}\n+\n+fun ViewGroup.showAllExcept(vararg views: View) {\n+    children().forEach(View::show)\n+    views.forEach(View::hide)\n+}\n+\n+private fun ViewGroup.children() = object : Iterable<View> {\n+    override fun iterator() = object : Iterator<View> {\n+        var index = 0\n+        override fun hasNext() = index < childCount\n+        override fun next() = getChildAt(index++)\n+    }\n+}\n+\n+fun View.show() {\n+    visibility = View.VISIBLE\n+}\n+\n+fun View.hide() {\n+    visibility = View.GONE\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/SearchResultsViewable.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.movies.mvi.search.view\n+\n+internal interface SearchResultsViewable {\n+    fun showResults(results: ViewSearchResults)\n+    fun showTextInput()\n+    fun showNoResults(attemptedQuery: String)\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/java/com/novoda/movies/mvi/search/view/ViewSearchResults.kt",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+package com.novoda.movies.mvi.search.view\n+\n+import java.net.URL\n+\n+internal data class ViewSearchResults(\n+    val totalItemCount: Int,\n+    val items: List<ViewSearchItem>\n+)\n+\n+internal data class ViewSearchItem(\n+    val id: String,\n+    val name: String,\n+    val thumbnailUrl: URL\n+)\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/drawable-v24/ic_launcher_foreground.xml",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        xmlns:aapt=\"http://schemas.android.com/aapt\"\n+        android:width=\"108dp\"\n+        android:height=\"108dp\"\n+        android:viewportHeight=\"108\"\n+        android:viewportWidth=\"108\">\n+    <path\n+            android:fillType=\"evenOdd\"\n+            android:pathData=\"M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z\"\n+            android:strokeColor=\"#00000000\"\n+            android:strokeWidth=\"1\">\n+        <aapt:attr name=\"android:fillColor\">\n+            <gradient\n+                    android:endX=\"78.5885\"\n+                    android:endY=\"90.9159\"\n+                    android:startX=\"48.7653\"\n+                    android:startY=\"61.0927\"\n+                    android:type=\"linear\">\n+                <item\n+                        android:color=\"#44000000\"\n+                        android:offset=\"0.0\"/>\n+                <item\n+                        android:color=\"#00000000\"\n+                        android:offset=\"1.0\"/>\n+            </gradient>\n+        </aapt:attr>\n+    </path>\n+    <path\n+            android:fillColor=\"#FFFFFF\"\n+            android:fillType=\"nonZero\"\n+            android:pathData=\"M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z\"\n+            android:strokeColor=\"#00000000\"\n+            android:strokeWidth=\"1\"/>\n+</vector>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/drawable/ic_launcher_background.xml",
            "additions": 74,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,74 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<vector\n+        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        android:height=\"108dp\"\n+        android:width=\"108dp\"\n+        android:viewportHeight=\"108\"\n+        android:viewportWidth=\"108\">\n+    <path android:fillColor=\"#008577\"\n+          android:pathData=\"M0,0h108v108h-108z\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M9,0L9,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,0L19,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M29,0L29,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M39,0L39,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M49,0L49,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M59,0L59,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M69,0L69,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M79,0L79,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M89,0L89,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M99,0L99,108\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,9L108,9\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,19L108,19\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,29L108,29\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,39L108,39\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,49L108,49\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,59L108,59\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,69L108,69\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,79L108,79\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,89L108,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M0,99L108,99\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,29L89,29\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,39L89,39\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,49L89,49\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,59L89,59\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,69L89,69\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M19,79L89,79\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M29,19L29,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M39,19L39,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M49,19L49,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M59,19L59,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M69,19L69,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+    <path android:fillColor=\"#00000000\" android:pathData=\"M79,19L79,89\"\n+          android:strokeColor=\"#33FFFFFF\" android:strokeWidth=\"0.8\"/>\n+</vector>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/layout/activity_search.xml",
            "additions": 39,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout\n+        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+    <android.support.v7.widget.Toolbar\n+            android:id=\"@+id/toolbar\"\n+            android:layout_width=\"0dp\"\n+            android:layout_height=\"?android:attr/actionBarSize\"\n+            app:contentInsetEnd=\"8dp\"\n+            app:contentInsetStart=\"8dp\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"parent\">\n+\n+        <com.novoda.movies.mvi.search.view.SearchInputView\n+                android:id=\"@+id/search_input\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"44dp\"\n+                android:focusable=\"true\"\n+                android:focusableInTouchMode=\"true\"/>\n+\n+    </android.support.v7.widget.Toolbar>\n+\n+    <com.novoda.movies.mvi.search.view.SearchResultsView\n+            android:id=\"@+id/search_results\"\n+            android:layout_width=\"0dp\"\n+            android:layout_height=\"0dp\"\n+            app:layout_constraintBottom_toBottomOf=\"parent\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toBottomOf=\"@id/toolbar\"/>\n+\n+</android.support.constraint.ConstraintLayout>\n+\n+\n+\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/layout/item_search_result.xml",
            "additions": 35,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:background=\"?attr/selectableItemBackground\"\n+    tools:ignore=\"Overdraw\">\n+\n+    <ImageView\n+        android:id=\"@+id/result_item_image\"\n+        android:layout_width=\"96dp\"\n+        android:layout_height=\"96dp\"\n+        android:scaleType=\"centerCrop\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"/>\n+\n+    <TextView\n+        android:id=\"@+id/result_item_name\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:ellipsize=\"end\"\n+        android:lineSpacingExtra=\"0dp\"\n+        android:maxLines=\"2\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toEndOf=\"@id/result_item_image\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        app:layout_constraintVertical_chainStyle=\"spread_inside\"\n+        tools:text=\"Ironman\"\n+        />\n+\n+</android.support.constraint.ConstraintLayout>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/layout/search_bar.xml",
            "additions": 37,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<merge\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    tools:parentTag=\"android.support.constraint.ConstraintLayout\"\n+    >\n+\n+    <EditText\n+        android:id=\"@+id/search_input_text\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:background=\"@android:color/transparent\"\n+        android:gravity=\"center_vertical\"\n+        android:hint=\"Search for a movie\"\n+        android:imeOptions=\"actionSearch\"\n+        android:inputType=\"text\"\n+        android:maxLines=\"1\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toStartOf=\"@id/clear_button\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        />\n+\n+    <ImageView\n+        android:id=\"@+id/clear_button\"\n+        android:layout_width=\"24dp\"\n+        android:layout_height=\"24dp\"\n+        android:src=\"@android:drawable/ic_menu_close_clear_cancel\"\n+        android:visibility=\"gone\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        tools:visibility=\"visible\"\n+        />\n+\n+</merge>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/layout/search_result_count.xml",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<TextView\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:id=\"@+id/search_result_count\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    tools:text=\"Found 51 Movies\"\n+    />\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/layout/search_results_view.xml",
            "additions": 55,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<merge\n+        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+        xmlns:tools=\"http://schemas.android.com/tools\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        tools:parentTag=\"android.support.constraint.ConstraintLayout\">\n+\n+    <android.support.v7.widget.RecyclerView\n+            android:id=\"@+id/search_results_list\"\n+            android:layout_width=\"0dp\"\n+            android:layout_height=\"0dp\"\n+            app:layout_constraintBottom_toBottomOf=\"parent\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"parent\"\n+            android:clipToPadding=\"false\"\n+    />\n+\n+    <android.support.constraint.Guideline\n+            android:id=\"@+id/empty_states_guideline\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"horizontal\"\n+            app:layout_constraintGuide_percent=\"0.11\"/>\n+\n+    <LinearLayout\n+            android:id=\"@+id/search_results_no_results\"\n+            android:layout_width=\"0dp\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"vertical\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"@id/empty_states_guideline\">\n+\n+        <TextView\n+                android:id=\"@+id/no_results_title\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_gravity=\"center\"\n+                android:gravity=\"center\"\n+                android:text=\"No Results\"/>\n+\n+        <TextView\n+                android:id=\"@+id/no_results_description\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_gravity=\"center\"\n+                android:gravity=\"center\"\n+                tools:text=\"No Results found for &quot;Ironman&quot;\"/>\n+\n+    </LinearLayout>\n+\n+</merge>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-anydpi-v26/ic_launcher.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <background android:drawable=\"@drawable/ic_launcher_background\"/>\n+    <foreground android:drawable=\"@drawable/ic_launcher_foreground\"/>\n+</adaptive-icon>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <background android:drawable=\"@drawable/ic_launcher_background\"/>\n+    <foreground android:drawable=\"@drawable/ic_launcher_foreground\"/>\n+</adaptive-icon>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-hdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-hdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-mdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-mdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ModelViewIntentSample/search/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/values/colors.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <color name=\"colorPrimary\">#008577</color>\n+    <color name=\"colorPrimaryDark\">#00574B</color>\n+    <color name=\"colorAccent\">#D81B60</color>\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/values/plurals.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <plurals name=\"search_result_count\">\n+        <item quantity=\"one\">1 Movie found</item>\n+        <item quantity=\"other\">%d Movies found</item>\n+    </plurals>\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/values/strings.xml",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,4 @@\n+<resources>\n+    <string name=\"app_name\">Search</string>\n+    <string name=\"search_no_results_description\">No Results found for \\\"%s\\\"</string>\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/main/res/values/styles.xml",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+<resources>\n+\n+    <!-- Base application theme. -->\n+    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n+        <!-- Customize your theme here. -->\n+        <item name=\"colorPrimary\">@color/colorPrimary</item>\n+        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n+        <item name=\"colorAccent\">@color/colorAccent</item>\n+    </style>\n+\n+</resources>\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/test/java/com/novoda/movies/mvi/search/ExampleTest.kt",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+package com.novoda.movies.mvi.search\n+\n+import com.nhaarman.mockitokotlin2.mock\n+import com.nhaarman.mockitokotlin2.whenever\n+import org.assertj.core.api.Assertions.assertThat\n+import org.junit.Test\n+\n+\n+internal class ExampleTest {\n+\n+    @Test\n+    fun `should assert sth`() {\n+        val foo = mock<Foo>()\n+        whenever(foo.bar()).thenReturn(\"bar2\")\n+\n+        assertThat(foo.bar()).isEqualTo(\"bar2\")\n+    }\n+\n+    class Foo {\n+        fun bar(): String = \"bar\"\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/test/java/com/novoda/movies/mvi/search/results/RealSearchResultsModelTest.kt",
            "additions": 146,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,146 @@\n+package com.novoda.movies.mvi.search.results\n+\n+import com.nhaarman.mockitokotlin2.mock\n+import com.nhaarman.mockitokotlin2.whenever\n+import com.novoda.movies.mvi.search.RealSearchResultsModel\n+import com.novoda.movies.mvi.search.SearchResults\n+import com.novoda.movies.mvi.search.SearchResultsModel.State.*\n+import com.novoda.movies.mvi.search.api.SearchBackend\n+import io.reactivex.Single\n+import org.junit.Test\n+\n+class RealSearchResultsModelTest {\n+\n+    private val queryString = \"gateau\"\n+    private val backend: SearchBackend = mock()\n+\n+\n+    @Test\n+    fun `should emit initial state without initial query when initial query empty`() {\n+        model()\n+            .state()\n+            .test()\n+            .assertValue(Initial)\n+    }\n+\n+    @Test\n+    fun `should show text input when user changes query`() {\n+        val searchResults = results()\n+        givenBackendSucceedWith(searchResults)\n+        val model = model()\n+        val state = model.state().test()\n+\n+        model.queryChanged(queryString)\n+\n+        state.assertValues(\n+            Initial,\n+            TextInput(queryString)\n+        )\n+    }\n+\n+    @Test\n+    fun `should start with loading`() {\n+        givenBackendReturn(Single.never())\n+        val model = model()\n+        val state = model.state()\n+\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        state.test()\n+            .assertValue(Loading(queryString))\n+    }\n+\n+    @Test\n+    fun `should emit result after loading`() {\n+        val searchResults = results()\n+        givenBackendSucceedWith(searchResults)\n+        val model = model()\n+        val state = model.state().test()\n+\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        state.assertValues(\n+            Initial,\n+            TextInput(queryString),\n+            Loading(queryString),\n+            Content(queryString, searchResults)\n+        )\n+    }\n+\n+    @Test\n+    fun `should emit latest state`() {\n+        val searchResults = results()\n+        givenBackendSucceedWith(searchResults)\n+        val model = model()\n+\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        model.state()\n+            .test()\n+            .assertValues(Content(queryString, searchResults))\n+    }\n+\n+    @Test\n+    fun `should emit error when search failed`() {\n+        val exception = Exception()\n+        givenBackendFailWith(exception)\n+        val model = model()\n+\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        model.state()\n+            .test()\n+            .assertValue(Error(queryString, exception))\n+    }\n+\n+    @Test\n+    fun `should recover from error`() {\n+        val exception = Exception()\n+        givenBackendFailWith(exception)\n+        val model = model()\n+        val state = model.state().test()\n+        model.queryChanged(queryString)\n+        model.executeSearch()\n+\n+        val searchResults = results()\n+        givenBackendSucceedWith(searchResults)\n+        model.executeSearch()\n+\n+        state.assertValues(\n+            Initial,\n+            TextInput(queryString),\n+            Loading(queryString),\n+            Error(queryString, exception),\n+            Loading(queryString),\n+            Content(queryString, searchResults)\n+        )\n+    }\n+\n+    private fun model(): RealSearchResultsModel {\n+        return RealSearchResultsModel(\n+            backend,\n+            SynchronousSchedulingStrategy()\n+        )\n+    }\n+\n+    private fun results(): SearchResults = SearchResults(\n+        listOf(mock(), mock()),\n+        totalResults = 10\n+    )\n+\n+    private fun givenBackendSucceedWith(searchResults: SearchResults) {\n+        givenBackendReturn(Single.just(searchResults))\n+    }\n+\n+    private fun givenBackendReturn(single: Single<SearchResults>) {\n+        whenever(backend.search(queryString)).thenReturn(single)\n+    }\n+\n+    private fun givenBackendFailWith(exception: Exception) {\n+        givenBackendReturn(Single.error(exception))\n+    }\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/search/src/test/java/com/novoda/movies/mvi/search/results/SynchronousSchedulingStrategy.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.movies.mvi.search.results\n+\n+import com.novoda.movies.mvi.search.SchedulingStrategy\n+import io.reactivex.Scheduler\n+import io.reactivex.schedulers.Schedulers\n+\n+class SynchronousSchedulingStrategy : SchedulingStrategy {\n+    override val work: Scheduler = Schedulers.trampoline()\n+    override val ui: Scheduler = Schedulers.trampoline()\n+}\n"
    },
    {
        "commit hash": "a26b807b01792df527ab652fa48ff0399d6a8d98",
        "previous commit hash": "c03f72bc1944a9b8a502cec9f41f355483922d43",
        "diff stats": {
            "file_path": "ModelViewIntentSample/settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+include ':app', ':search', ':core'\n"
    },
    {
        "commit hash": "cbc77b785613f6bf9ac81325c74907973010f3c1",
        "previous commit hash": "c1733cdb6410f5d18d6df758de6c10f8939b2c1c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/Constants.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -11,6 +11,6 @@ object Constants {\n \n     object Identifier {\n         const val category = \"categories\"\n-        const val product = \"articles\"\n+        const val articles = \"articles\"\n     }\n }\n"
    },
    {
        "commit hash": "cbc77b785613f6bf9ac81325c74907973010f3c1",
        "previous commit hash": "c1733cdb6410f5d18d6df758de6c10f8939b2c1c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/ProductDTO.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -17,7 +17,7 @@ class ProductDTO {\n     private fun requestProductJson(id: Int): JSONArray {\n         val articleUrl = \"${Constants.Urls.itemsPrefix}$id/${Constants.Urls.itemsSuffix}\"\n         return get(articleUrl)\n-                .jsonObject.getJSONArray(Constants.Identifier.product)\n+                .jsonObject.getJSONArray(Constants.Identifier.articles)\n     }\n \n     private fun mapJsonOnModel(articleResponse: JSONArray): ArrayList<Product> {\n"
    },
    {
        "commit hash": "cbc77b785613f6bf9ac81325c74907973010f3c1",
        "previous commit hash": "c1733cdb6410f5d18d6df758de6c10f8939b2c1c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/database/InMemoryDatabase.kt",
            "additions": 4,
            "deletions": 4
        },
        "diff content": "@@ -52,25 +52,25 @@ class InMemoryDatabase {\n     private fun checkDatabaseIntegrity() {\n         if (categories().distinctBy { it.id }.size != categories().size) {\n             var errorMessage = \"Error: \"\n-            findDuplicateCategories().forEach { id, number ->\n+            findDuplicateCategoryId().forEach { id, number ->\n                 errorMessage += \"Category $id has been found $number times\\n\"\n             }\n             throw RuntimeException(errorMessage)\n         }\n         if (articles.flatMap { it.value }.size != articles.flatMap { it.value }.distinctBy { it.id }.size) {\n             var errorMessage = \"Error: \"\n-            findDublicateArticles().forEach { id, number ->\n+            findDuplicateArticleId().forEach { id, number ->\n                 errorMessage += \"Article $id has been found $number times\\n\"\n             }\n             throw RuntimeException(errorMessage)\n         }\n     }\n \n-    private fun findDuplicateCategories(): Map<Int, Int> {\n+    private fun findDuplicateCategoryId(): Map<Int, Int> {\n         return categories.groupingBy { it.id }.eachCount().filter { it.value > 1 }\n     }\n \n-    private fun findDublicateArticles(): Map<Int, Int> {\n+    private fun findDuplicateArticleId(): Map<Int, Int> {\n         return articles.flatMap { it.value }.groupingBy { it.id }.eachCount().filter { it.value > 1 }\n     }\n }\n"
    },
    {
        "commit hash": "c1733cdb6410f5d18d6df758de6c10f8939b2c1c",
        "previous commit hash": "97bfbf209a73e40e9a6d04dafdfc3b635f7583f1",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/ktlint",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/AndroidTestAutomationStarter/ktlint and /dev/null differ\n"
    },
    {
        "commit hash": "97bfbf209a73e40e9a6d04dafdfc3b635f7583f1",
        "previous commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -12,7 +12,7 @@ Before launching the app you'll need to start the server.\n execute `start_server.sh`\n \n \n-You can check if the server is running by going to http://localhost:4567/ where you should see **Sinatra doesn\u2019t know this ditty.**\n+You can check if the server is running by going to http://localhost:4567/ where you should see **Server is running**\n \n Now all you need to do is run the app from Android Studio!\n \n"
    },
    {
        "commit hash": "97bfbf209a73e40e9a6d04dafdfc3b635f7583f1",
        "previous commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/Main.kt",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -2,6 +2,7 @@ package com.novoda.kotlinapi\n \n import com.novoda.kotlinapi.controller.ArticleController\n import com.novoda.kotlinapi.controller.CategoryController\n+import com.novoda.kotlinapi.controller.HealthController\n import io.javalin.Javalin\n import io.javalin.apibuilder.ApiBuilder.get\n import io.javalin.apibuilder.ApiBuilder.path\n@@ -14,6 +15,9 @@ fun main(args: Array<String>) {\n     }.start(4567)\n \n     app.routes {\n+        path(\"/\") {\n+            get(HealthController::apiRunning)\n+        }\n         path(\"categories\") {\n             get(CategoryController::getAllCateories)\n             path(\":category-id\") {\n"
    },
    {
        "commit hash": "97bfbf209a73e40e9a6d04dafdfc3b635f7583f1",
        "previous commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/controller/HealthController.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.kotlinapi.controller\n+\n+import io.javalin.Context\n+\n+\n+object HealthController {\n+    fun apiRunning(context: Context) {\n+        context.result(\"Server is running\")\n+    }\n+}\n"
    },
    {
        "commit hash": "97bfbf209a73e40e9a6d04dafdfc3b635f7583f1",
        "previous commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/ktlint",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/ktlint differ\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ProductDetailsResponse.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,4 +2,4 @@ package com.novoda.androidstoreexample.services\n \n import com.novoda.androidstoreexample.models.Product\n \n-data class ProductDetailsResponse(val article: Product)\n\\ No newline at end of file\n+data class ProductDetailsResponse(val article: Product)\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ProductResponse.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -18,4 +18,4 @@ data class ProductResponse(val articles: Array<Product>) {\n     override fun hashCode(): Int {\n         return Arrays.hashCode(articles)\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ShopService.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,4 @@ interface ShopService {\n \n     @GET(\"articles/{articleId}\")\n     fun getItemForId(@Path(\"articleId\") itemId: Int): Call<ProductDetailsResponse>\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -36,4 +36,4 @@ task fatJar(type: Jar) {\n         }\n     }\n     with jar\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/docker/build.gradle",
            "additions": 0,
            "deletions": 37
        },
        "diff content": "@@ -1,37 +0,0 @@\n-plugins {\n-    id 'org.jetbrains.kotlin.jvm' version '1.2.21'\n-}\n-apply plugin: 'java-library'\n-\n-dependencies {\n-    implementation fileTree(dir: 'libs', include: ['*.jar'])\n-    implementation \"com.sparkjava:spark-core:2.8.0\"\n-    compile \"org.jetbrains.kotlin:kotlin-stdlib-jdk8\"\n-}\n-\n-repositories {\n-    mavenCentral()\n-}\n-compileKotlin {\n-    kotlinOptions {\n-        jvmTarget = \"1.8\"\n-    }\n-}\n-compileTestKotlin {\n-    kotlinOptions {\n-        jvmTarget = \"1.8\"\n-    }\n-}\n-\n-task fatJar(type: Jar) {\n-    manifest {\n-        attributes 'Main-Class': 'de.svenkroell.kotlinapi.MainKt'\n-    }\n-    baseName = project.name\n-    from {\n-        configurations.runtimeClasspath.collect {\n-            it.isDirectory() ? it : zipTree(it)\n-        }\n-    }\n-    with jar\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/Main.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -29,4 +29,4 @@ fun main(args: Array<String>) {\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/controller/ArticleController.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,4 @@ object ArticleController {\n     fun getArticleDetails(context: Context) {\n         context.json(hashMapOf(\"article\" to articleDao.findArticleById(context.pathParam(\"article-id\").toInt())))\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/controller/CategoryController.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,4 @@ object CategoryController {\n     fun getCategoryById(context: Context) {\n         context.json(hashMapOf(\"category\" to categoryDao.findCategoryById(context.pathParam(\"category-id\").toInt())))\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/data/ArticleDao.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,4 @@ class ArticleDao {\n     fun findArticleById(id: Int): Article? {\n         return inMemoryDatabase.articles().values.flatten().find { it.id == id }\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/data/CategoryDao.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,4 @@ class CategoryDao {\n     fun findCategoryById(id: Int): Category? {\n         return database.categories().find { it.id == id }\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8353aa9f310652703294d8494a867da06a0588cd",
        "previous commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/settings.gradle",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -1,3 +1 @@\n include ':app', ':kotlinapi'\n-\n-\n"
    },
    {
        "commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "previous commit hash": "75d89e7243d9a69496d9256e52231c5de1821f1a",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/Main.kt",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -7,7 +7,6 @@ import io.javalin.apibuilder.ApiBuilder.get\n import io.javalin.apibuilder.ApiBuilder.path\n import java.lang.RuntimeException\n \n-\n fun main(args: Array<String>) {\n     val app = Javalin.create().apply {\n         exception(RuntimeException::class.java) { e, _ -> e.printStackTrace() }\n@@ -30,5 +29,4 @@ fun main(args: Array<String>) {\n             }\n         }\n     }\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "previous commit hash": "75d89e7243d9a69496d9256e52231c5de1821f1a",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/database/InMemoryDatabase.kt",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -29,6 +29,7 @@ class InMemoryDatabase {\n             3 to arrayListOf(\n                     Article(id = 12, title = \"Hat Green\", price = \"$18\", image = \"hat1\", productDescription = descriptionOne)\n             ))\n+\n     private val categories = arrayListOf(\n             Category(id = 0, title = \"SHIRTS\", image = \"shirtimage\"),\n             Category(id = 1, title = \"HOODIES\", image = \"hoodieimage\"),\n@@ -65,7 +66,6 @@ class InMemoryDatabase {\n         }\n     }\n \n-\n     private fun findDuplicateCategories(): Map<Int, Int> {\n         return categories.groupingBy { it.id }.eachCount().filter { it.value > 1 }\n     }\n@@ -73,5 +73,4 @@ class InMemoryDatabase {\n     private fun findDublicateArticles(): Map<Int, Int> {\n         return articles.flatMap { it.value }.groupingBy { it.id }.eachCount().filter { it.value > 1 }\n     }\n-\n }\n"
    },
    {
        "commit hash": "40235c88f3aca945f2559ffaf086356fd89d6905",
        "previous commit hash": "75d89e7243d9a69496d9256e52231c5de1821f1a",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/model/Article.kt",
            "additions": 7,
            "deletions": 5
        },
        "diff content": "@@ -2,8 +2,10 @@ package com.novoda.kotlinapi.model\n \n import com.fasterxml.jackson.annotation.JsonProperty\n \n-data class Article(val id: Int,\n-                   val title: String,\n-                   val price: String,\n-                   val image: String,\n-                   @get:JsonProperty(\"product_description\") val productDescription: String)\n+data class Article(\n+    val id: Int,\n+    val title: String,\n+    val price: String,\n+    val image: String,\n+    @get:JsonProperty(\"product_description\") val productDescription: String\n+)\n"
    },
    {
        "commit hash": "75d89e7243d9a69496d9256e52231c5de1821f1a",
        "previous commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/Main.kt",
            "additions": 21,
            "deletions": 19
        },
        "diff content": "@@ -1,32 +1,34 @@\n package com.novoda.kotlinapi\n \n-import com.novoda.kotlinapi.data.ArticleDao\n-import com.novoda.kotlinapi.data.CategoryDao\n+import com.novoda.kotlinapi.controller.ArticleController\n+import com.novoda.kotlinapi.controller.CategoryController\n import io.javalin.Javalin\n+import io.javalin.apibuilder.ApiBuilder.get\n+import io.javalin.apibuilder.ApiBuilder.path\n+import java.lang.RuntimeException\n \n \n fun main(args: Array<String>) {\n-    val categoryDao = CategoryDao()\n-    val articleDao = ArticleDao()\n     val app = Javalin.create().apply {\n-        exception(Exception::class.java) { e, ctx -> e.printStackTrace() }\n+        exception(RuntimeException::class.java) { e, _ -> e.printStackTrace() }\n         error(404) { ctx -> ctx.json(\"not found\") }\n     }.start(4567)\n \n-    app.get(\"/categories\") { context ->\n-        context.json(hashMapOf(\"categories\" to categoryDao.listCategories()))\n-    }\n-\n-    app.get(\"/categories/:category-id\") { context ->\n-        context.json(hashMapOf(\"category\" to categoryDao.findCategoryById(context.pathParam(\"category-id\").toInt())))\n-    }\n-\n-    app.get(\"/categories/:category-id/articles\") {\n-        it.json(hashMapOf(\"articles\" to articleDao.listArticlesPerCategory(it.pathParam(\"category-id\").toInt())))\n-    }\n-\n-    app.get(\"/articles/:article-id\") {\n-        it.json(hashMapOf(\"article\" to articleDao.findArticleById(it.pathParam(\"article-id\").toInt())))\n+    app.routes {\n+        path(\"categories\") {\n+            get(CategoryController::getAllCateories)\n+            path(\":category-id\") {\n+                get(CategoryController::getCategoryById)\n+                path(\"articles\") {\n+                    get(ArticleController::getArticlesByCategory)\n+                }\n+            }\n+        }\n+        path(\"articles\") {\n+            path(\":article-id\") {\n+                get(ArticleController::getArticleDetails)\n+            }\n+        }\n     }\n \n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "75d89e7243d9a69496d9256e52231c5de1821f1a",
        "previous commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/controller/ArticleController.kt",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+package com.novoda.kotlinapi.controller\n+\n+import com.novoda.kotlinapi.data.ArticleDao\n+import io.javalin.Context\n+\n+object ArticleController {\n+    private val articleDao = ArticleDao()\n+\n+    fun getArticlesByCategory(context: Context) {\n+        context.json(hashMapOf(\"articles\" to articleDao.listArticlesPerCategory(context.pathParam(\"category-id\").toInt())))\n+    }\n+\n+    fun getArticleDetails(context: Context) {\n+        context.json(hashMapOf(\"article\" to articleDao.findArticleById(context.pathParam(\"article-id\").toInt())))\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "75d89e7243d9a69496d9256e52231c5de1821f1a",
        "previous commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/controller/CategoryController.kt",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+package com.novoda.kotlinapi.controller\n+\n+import com.novoda.kotlinapi.data.CategoryDao\n+import io.javalin.Context\n+\n+object CategoryController {\n+    private val categoryDao = CategoryDao()\n+\n+    fun getAllCateories(context: Context) {\n+        context.json(hashMapOf(\"categories\" to categoryDao.listCategories()))\n+    }\n+\n+    fun getCategoryById(context: Context) {\n+        context.json(hashMapOf(\"category\" to categoryDao.findCategoryById(context.pathParam(\"category-id\").toInt())))\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "75d89e7243d9a69496d9256e52231c5de1821f1a",
        "previous commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/database/InMemoryDatabase.kt",
            "additions": 63,
            "deletions": 15
        },
        "diff content": "@@ -4,26 +4,74 @@ import com.novoda.kotlinapi.model.Article\n import com.novoda.kotlinapi.model.Category\n \n class InMemoryDatabase {\n+    private val descriptionOne = \"Bacon ipsum dolor amet in meatball shank prosciutto, anim pork loin nisi bresaola. Buffalo beef salami shank pancetta tail sunt prosciutto, excepteur drumstick ground round anim nulla sint jerky.\"\n+    private val descriptionTwo = \"Velit cupidatat deserunt pork chop cillum, sirloin elit chicken brisket officia excepteur chuck.\"\n+    private val descriptionThree = \"Jerky laboris veniam, laborum pancetta labore sint buffalo dolor quis strip steak sirloin ground round.\"\n+    private val descriptionFour = \"Chuck consectetur chicken drumstick short ribs in tenderloin frankfurter eiusmod lorem. Dolore magna excepteur venison. Tempor enim rump ut fugiat minim esse.\"\n+    private val articles = hashMapOf(\n+            0 to arrayListOf(\n+                    Article(id = 4, title = \"Hat Green\", price = \"$18\", image = \"shirt1\", productDescription = descriptionOne),\n+                    Article(id = 5, title = \"Hat Green\", price = \"$18\", image = \"shirt2\", productDescription = descriptionOne),\n+                    Article(id = 6, title = \"Hat Green\", price = \"$18\", image = \"shirt3\", productDescription = descriptionOne),\n+                    Article(id = 7, title = \"Hat Green\", price = \"$18\", image = \"shirt4\", productDescription = descriptionOne)\n+            ),\n+            1 to arrayListOf(\n+                    Article(id = 8, title = \"Hat Green\", price = \"$18\", image = \"hoodie1\", productDescription = descriptionOne),\n+                    Article(id = 9, title = \"Hat Green\", price = \"$18\", image = \"hoodie2\", productDescription = descriptionOne),\n+                    Article(id = 10, title = \"Hat Green\", price = \"$18\", image = \"hoodie3\", productDescription = descriptionOne),\n+                    Article(id = 11, title = \"Hat Green\", price = \"$18\", image = \"hoodie4\", productDescription = descriptionOne)\n+            ),\n+            2 to arrayListOf(\n+                    Article(id = 0, title = \"Hat Green\", price = \"$18\", image = \"hat1\", productDescription = descriptionOne),\n+                    Article(id = 1, title = \"Hat Back\", price = \"$12\", image = \"hat2\", productDescription = descriptionTwo),\n+                    Article(id = 2, title = \"Hat White\", price = \"$11\", image = \"hat3\", productDescription = descriptionThree),\n+                    Article(id = 3, title = \"Hat Blue\", price = \"$29\", image = \"hat4\", productDescription = descriptionFour)),\n+            3 to arrayListOf(\n+                    Article(id = 12, title = \"Hat Green\", price = \"$18\", image = \"hat1\", productDescription = descriptionOne)\n+            ))\n+    private val categories = arrayListOf(\n+            Category(id = 0, title = \"SHIRTS\", image = \"shirtimage\"),\n+            Category(id = 1, title = \"HOODIES\", image = \"hoodieimage\"),\n+            Category(id = 2, title = \"HATS\", image = \"hatimage\"),\n+            Category(id = 3, title = \"DIGITAL GOODS\", image = \"digitalgoodsimage\")\n+    )\n+\n+    init {\n+        checkDatabaseIntegrity()\n+    }\n+\n     fun categories(): ArrayList<Category> {\n-        return arrayListOf(\n-                Category(id = 0, title = \"SHIRTS\", image = \"shirtimage\"),\n-                Category(id = 1, title = \"HOODIES\", image = \"hoodieimage\"),\n-                Category(id = 2, title = \"HATS\", image = \"hatimage\"),\n-                Category(id = 3, title = \"DIGITAL GOODS\", image = \"digitalgoodsimage\")\n-        )\n+        return categories\n     }\n \n     fun articles(): HashMap<Int, ArrayList<Article>> {\n-        return hashMapOf(2 to arrayListOf(\n-                Article(id=0, title = \"Hat Green\", price = \"$18\", image = \"hat1\", productDescription = descriptionOne),\n-                Article(id=1, title = \"Hat Back\", price = \"$12\", image = \"hat2\", productDescription = descriptionTwo),\n-                Article(id=2, title = \"Hat White\", price = \"$11\", image = \"hat3\", productDescription = descriptionThree),\n-                Article(id=3, title = \"Hat Blue\", price = \"$29\", image = \"hat4\", productDescription = descriptionFour)))\n+        return articles\n     }\n \n-    private val descriptionOne = \"Bacon ipsum dolor amet in meatball shank prosciutto, anim pork loin nisi bresaola. Buffalo beef salami shank pancetta tail sunt prosciutto, excepteur drumstick ground round anim nulla sint jerky.\"\n-    private val descriptionTwo = \"Velit cupidatat deserunt pork chop cillum, sirloin elit chicken brisket officia excepteur chuck.\"\n-    private val descriptionThree = \"Jerky laboris veniam, laborum pancetta labore sint buffalo dolor quis strip steak sirloin ground round.\"\n-    private val descriptionFour = \"Chuck consectetur chicken drumstick short ribs in tenderloin frankfurter eiusmod lorem. Dolore magna excepteur venison. Tempor enim rump ut fugiat minim esse.\"\n+    private fun checkDatabaseIntegrity() {\n+        if (categories().distinctBy { it.id }.size != categories().size) {\n+            var errorMessage = \"Error: \"\n+            findDuplicateCategories().forEach { id, number ->\n+                errorMessage += \"Category $id has been found $number times\\n\"\n+            }\n+            throw RuntimeException(errorMessage)\n+        }\n+        if (articles.flatMap { it.value }.size != articles.flatMap { it.value }.distinctBy { it.id }.size) {\n+            var errorMessage = \"Error: \"\n+            findDublicateArticles().forEach { id, number ->\n+                errorMessage += \"Article $id has been found $number times\\n\"\n+            }\n+            throw RuntimeException(errorMessage)\n+        }\n+    }\n+\n+\n+    private fun findDuplicateCategories(): Map<Int, Int> {\n+        return categories.groupingBy { it.id }.eachCount().filter { it.value > 1 }\n+    }\n+\n+    private fun findDublicateArticles(): Map<Int, Int> {\n+        return articles.flatMap { it.value }.groupingBy { it.id }.eachCount().filter { it.value > 1 }\n+    }\n \n }\n"
    },
    {
        "commit hash": "75d89e7243d9a69496d9256e52231c5de1821f1a",
        "previous commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/start_server.sh",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -1,7 +1,6 @@\n #!/bin/bash\n \n-cd kotlinapi\n \n-./gradlew fatJar\n+./gradlew clean fatJar\n \n-java -jar ./build/libs/kotlinapi.jar\n+java -jar ./kotlinapi/build/libs/kotlinapi.jar\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/README.md",
            "additions": 1,
            "deletions": 6
        },
        "diff content": "@@ -9,12 +9,7 @@ The aim is to provide a hands-on introduction to those new to test engineering a\n \n Before launching the app you'll need to start the server.\n \n-Navigate to the `simplesinatraapi` directory in this project.\n-Make sure you have Ruby installed by running `ruby -v` from the terminal. If it's not installed run `brew install ruby`\n-\n-Next, run `bundle install`\n-\n-Finally, run `ruby server.rb`\n+execute `start_server.sh`\n \n \n You can check if the server is running by going to http://localhost:4567/ where you should see **Sinatra doesn\u2019t know this ditty.**\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -27,7 +27,7 @@ compileTestKotlin {\n \n task fatJar(type: Jar) {\n     manifest {\n-        attributes 'Main-Class': 'de.svenkroell.kotlinapi.MainKt'\n+        attributes 'Main-Class': 'com.novoda.kotlinapi.MainKt'\n     }\n     baseName = project.name\n     from {\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/Main.kt",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -1,7 +1,7 @@\n-package de.svenkroell.kotlinapi\n+package com.novoda.kotlinapi\n \n-import de.svenkroell.kotlinapi.data.ArticleDao\n-import de.svenkroell.kotlinapi.data.CategoryDao\n+import com.novoda.kotlinapi.data.ArticleDao\n+import com.novoda.kotlinapi.data.CategoryDao\n import io.javalin.Javalin\n \n \n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/data/ArticleDao.kt",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -1,7 +1,7 @@\n-package de.svenkroell.kotlinapi.data\n+package com.novoda.kotlinapi.data\n \n-import de.svenkroell.kotlinapi.database.InMemoryDatabase\n-import de.svenkroell.kotlinapi.model.Article\n+import com.novoda.kotlinapi.database.InMemoryDatabase\n+import com.novoda.kotlinapi.model.Article\n import java.util.ArrayList\n \n class ArticleDao {\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/data/CategoryDao.kt",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -1,7 +1,7 @@\n-package de.svenkroell.kotlinapi.data\n+package com.novoda.kotlinapi.data\n \n-import de.svenkroell.kotlinapi.database.InMemoryDatabase\n-import de.svenkroell.kotlinapi.model.Category\n+import com.novoda.kotlinapi.database.InMemoryDatabase\n+import com.novoda.kotlinapi.model.Category\n \n class CategoryDao {\n     private val database = InMemoryDatabase()\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/database/InMemoryDatabase.kt",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -1,7 +1,7 @@\n-package de.svenkroell.kotlinapi.database\n+package com.novoda.kotlinapi.database\n \n-import de.svenkroell.kotlinapi.model.Article\n-import de.svenkroell.kotlinapi.model.Category\n+import com.novoda.kotlinapi.model.Article\n+import com.novoda.kotlinapi.model.Category\n \n class InMemoryDatabase {\n     fun categories(): ArrayList<Category> {\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/model/Article.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.kotlinapi.model\n+\n+import com.fasterxml.jackson.annotation.JsonProperty\n+\n+data class Article(val id: Int,\n+                   val title: String,\n+                   val price: String,\n+                   val image: String,\n+                   @get:JsonProperty(\"product_description\") val productDescription: String)\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/com/novoda/kotlinapi/model/Category.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n-package de.svenkroell.kotlinapi.model\n+package com.novoda.kotlinapi.model\n \n data class Category(val id: Int, val title: String, val image: String)\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/model/Article.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,3 +0,0 @@\n-package de.svenkroell.kotlinapi.model\n-\n-data class Article(val id: Int, val title: String, val price: String, val image: String, val productDescription: String)\n"
    },
    {
        "commit hash": "2bb5d79aa4313846cc9d75c553e9b2fffc94b78c",
        "previous commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/start_server.sh",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+#!/bin/bash\n+\n+cd kotlinapi\n+\n+./gradlew fatJar\n+\n+java -jar ./build/libs/kotlinapi.jar\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/Constants.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -11,6 +11,6 @@ object Constants {\n \n     object Identifier {\n         const val category = \"categories\"\n-        const val product = \"products\"\n+        const val product = \"articles\"\n     }\n }\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/ProductDetailPresenterImpl.kt",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -26,8 +26,8 @@ class ProductDetailPresenterImpl @Inject constructor(private val productDetailVi\n             }\n \n             override fun onSuccess(response: ProductDetailsResponse) {\n-                productDetailView.populateProduct(response.item)\n-                product = response.item\n+                productDetailView.populateProduct(response.article)\n+                product = response.article\n                 productDetailView.hideProgress()\n             }\n         }, productId)\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/ProductListPresenterImpl.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -30,7 +30,7 @@ class ProductListPresenterImpl : ProductListPresenter {\n             }\n \n             override fun onSuccess(productResponse: ProductResponse) {\n-                val productList = productResponse.products.toList()\n+                val productList = productResponse.articles.toList()\n                 productListView.showProductList(productList)\n                 productListView.hideProgress()\n             }\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ProductDetailsResponse.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,4 +2,4 @@ package com.novoda.androidstoreexample.services\n \n import com.novoda.androidstoreexample.models.Product\n \n-data class ProductDetailsResponse(val item: Product)\n\\ No newline at end of file\n+data class ProductDetailsResponse(val article: Product)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ProductResponse.kt",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -3,19 +3,19 @@ package com.novoda.androidstoreexample.services\n import com.novoda.androidstoreexample.models.Product\n import java.util.*\n \n-data class ProductResponse(val products: Array<Product>) {\n+data class ProductResponse(val articles: Array<Product>) {\n     override fun equals(other: Any?): Boolean {\n         if (this === other) return true\n         if (javaClass != other?.javaClass) return false\n \n         other as ProductResponse\n \n-        if (!Arrays.equals(products, other.products)) return false\n+        if (!Arrays.equals(articles, other.articles)) return false\n \n         return true\n     }\n \n     override fun hashCode(): Int {\n-        return Arrays.hashCode(products)\n+        return Arrays.hashCode(articles)\n     }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ShopService.kt",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -9,9 +9,9 @@ interface ShopService {\n     @GET(\"categories\")\n     fun getCategories(): Call<CategoryResponse>\n \n-    @GET(\"category/{categoryId}/items\")\n+    @GET(\"categories/{categoryId}/articles\")\n     fun getProductsFromCategory(@Path(\"categoryId\") categoryName: Int): Call<ProductResponse>\n \n-    @GET(\"items/{itemId}\")\n-    fun getItemForId(@Path(\"itemId\") itemId: Int): Call<ProductDetailsResponse>\n+    @GET(\"articles/{articleId}\")\n+    fun getItemForId(@Path(\"articleId\") itemId: Int): Call<ProductDetailsResponse>\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/Main.kt",
            "additions": 13,
            "deletions": 1
        },
        "diff content": "@@ -1,15 +1,18 @@\n package de.svenkroell.kotlinapi\n \n+import de.svenkroell.kotlinapi.data.ArticleDao\n import de.svenkroell.kotlinapi.data.CategoryDao\n import io.javalin.Javalin\n \n \n fun main(args: Array<String>) {\n     val categoryDao = CategoryDao()\n+    val articleDao = ArticleDao()\n     val app = Javalin.create().apply {\n         exception(Exception::class.java) { e, ctx -> e.printStackTrace() }\n         error(404) { ctx -> ctx.json(\"not found\") }\n-    }.start(7000)\n+    }.start(4567)\n+\n     app.get(\"/categories\") { context ->\n         context.json(hashMapOf(\"categories\" to categoryDao.listCategories()))\n     }\n@@ -17,4 +20,13 @@ fun main(args: Array<String>) {\n     app.get(\"/categories/:category-id\") { context ->\n         context.json(hashMapOf(\"category\" to categoryDao.findCategoryById(context.pathParam(\"category-id\").toInt())))\n     }\n+\n+    app.get(\"/categories/:category-id/articles\") {\n+        it.json(hashMapOf(\"articles\" to articleDao.listArticlesPerCategory(it.pathParam(\"category-id\").toInt())))\n+    }\n+\n+    app.get(\"/articles/:article-id\") {\n+        it.json(hashMapOf(\"article\" to articleDao.findArticleById(it.pathParam(\"article-id\").toInt())))\n+    }\n+\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/data/ArticleDao.kt",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+package de.svenkroell.kotlinapi.data\n+\n+import de.svenkroell.kotlinapi.database.InMemoryDatabase\n+import de.svenkroell.kotlinapi.model.Article\n+import java.util.ArrayList\n+\n+class ArticleDao {\n+    private val inMemoryDatabase = InMemoryDatabase()\n+\n+    fun listArticlesPerCategory(id: Int): ArrayList<Article>? {\n+        return inMemoryDatabase.articles()[id]\n+    }\n+\n+    fun findArticleById(id: Int): Article? {\n+        return inMemoryDatabase.articles().values.flatten().find { it.id == id }\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/database/InMemoryDatabase.kt",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -1,5 +1,6 @@\n package de.svenkroell.kotlinapi.database\n \n+import de.svenkroell.kotlinapi.model.Article\n import de.svenkroell.kotlinapi.model.Category\n \n class InMemoryDatabase {\n@@ -11,4 +12,18 @@ class InMemoryDatabase {\n                 Category(id = 3, title = \"DIGITAL GOODS\", image = \"digitalgoodsimage\")\n         )\n     }\n+\n+    fun articles(): HashMap<Int, ArrayList<Article>> {\n+        return hashMapOf(2 to arrayListOf(\n+                Article(id=0, title = \"Hat Green\", price = \"$18\", image = \"hat1\", productDescription = descriptionOne),\n+                Article(id=1, title = \"Hat Back\", price = \"$12\", image = \"hat2\", productDescription = descriptionTwo),\n+                Article(id=2, title = \"Hat White\", price = \"$11\", image = \"hat3\", productDescription = descriptionThree),\n+                Article(id=3, title = \"Hat Blue\", price = \"$29\", image = \"hat4\", productDescription = descriptionFour)))\n+    }\n+\n+    private val descriptionOne = \"Bacon ipsum dolor amet in meatball shank prosciutto, anim pork loin nisi bresaola. Buffalo beef salami shank pancetta tail sunt prosciutto, excepteur drumstick ground round anim nulla sint jerky.\"\n+    private val descriptionTwo = \"Velit cupidatat deserunt pork chop cillum, sirloin elit chicken brisket officia excepteur chuck.\"\n+    private val descriptionThree = \"Jerky laboris veniam, laborum pancetta labore sint buffalo dolor quis strip steak sirloin ground round.\"\n+    private val descriptionFour = \"Chuck consectetur chicken drumstick short ribs in tenderloin frankfurter eiusmod lorem. Dolore magna excepteur venison. Tempor enim rump ut fugiat minim esse.\"\n+\n }\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/model/Article.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package de.svenkroell.kotlinapi.model\n+\n+data class Article(val id: Int, val title: String, val price: String, val image: String, val productDescription: String)\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/Gemfile",
            "additions": 0,
            "deletions": 6
        },
        "diff content": "@@ -1,6 +0,0 @@\n-\n-source 'https://rubygems.org' do\n-  gem 'sinatra', '2.0.0'\n-  gem 'faker', '1.8.7'\n-  gem 'rufus-scheduler', '3.4.2'\n-end\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/basket.rb",
            "additions": 0,
            "deletions": 35
        },
        "diff content": "@@ -1,35 +0,0 @@\n-class Basket\n-\n-  def initialize\n-    @items_in_basket = {}\n-  end\n-\n-  def reset_basket\n-    @items_in_basket = {}\n-  end\n-\n-  def add_to_basket(item)\n-    item_id = item.id\n-    if @items_in_basket.key?(item_id)\n-      @items_in_basket[item_id] += 1\n-    else\n-      @items_in_basket.merge!({item_id => 1})\n-    end\n-  end\n-\n-  def remove_from_basket(item)\n-    item_id = item.id\n-    if @items_in_basket.key?(item_id)\n-      if @items_in_basket[item_id] > 1\n-        @items_in_basket[item_id] -= 1\n-      else\n-        @items_in_basket.delete(item_id)\n-      end\n-    end\n-  end\n-\n-  def show_content\n-    @items_in_basket\n-  end\n-\n-end\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/category.rb",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,23 +0,0 @@\n-require 'json'\n-\n-class Category\n-  attr_reader :id, :title, :image\n-\n-  def initialize(id, title, image)\n-    @id = id\n-    @title = title\n-    @image = image\n-  end\n-\n-  def as_json(options={})\n-    {\n-        id: @id,\n-        title: @title,\n-        image: @image\n-    }\n-  end\n-\n-  def to_json(*options)\n-    as_json(*options).to_json(*options)\n-  end\n-end\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/category_repository.rb",
            "additions": 0,
            "deletions": 15
        },
        "diff content": "@@ -1,15 +0,0 @@\n-require_relative 'category'\n-\n-class CategoryRepository\n-  attr_reader :categories\n-\n-  def initialize\n-    @categories = [\n-        Category.new(1,'SHIRTS', 'shirtimage'),\n-        Category.new(2,'HOODIES', 'hoodieimage'),\n-        Category.new(3, 'HATS', 'hatimage'),\n-        Category.new(4,'DIGITAL GOODS', 'digitalgoodsimage'),\n-        Category.new(5, 'something', 'shirtimage')\n-    ]\n-  end\n-end\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/config.ru",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -1,2 +0,0 @@\n-require './server'\n-run Sinatra::Application\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/item.rb",
            "additions": 0,
            "deletions": 26
        },
        "diff content": "@@ -1,26 +0,0 @@\n-class Item\n-  attr_accessor :id, :title, :price, :image, :product_description\n-\n-  def initialize(id, title, price, image, product_description)\n-    @id = id\n-    @title = title\n-    @price = price\n-    @image = image\n-    @product_description = product_description\n-  end\n-\n-  def as_json(options={})\n-    {\n-        id: @id,\n-        title: @title,\n-        image: @image,\n-        price: @price,\n-        product_description: @product_description\n-    }\n-  end\n-\n-  def to_json(*options)\n-    as_json(*options).to_json(*options)\n-  end\n-end\n-\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/item_repository.rb",
            "additions": 0,
            "deletions": 35
        },
        "diff content": "@@ -1,35 +0,0 @@\n-require_relative 'item'\n-require 'faker'\n-\n-class ItemRepository\n-\n-  def initialize\n-    @items = { '3': [\n-        Item.new(1, 'Hat Green', '$18', 'hat1', get_random_description(4)),\n-        Item.new(2, 'Hat Black', '$12', 'hat2', get_random_description(2)),\n-        Item.new(3, 'Hat White', '$11', 'hat3', get_random_description(3)),\n-        Item.new(4, 'Hat Blue', '$29', 'hat4', get_random_description(1)),\n-    ],\n-              '2': [],\n-              '1': [],\n-              '4': []}\n-  end\n-\n-  def items_from_category(category)\n-    @items[category]\n-  end\n-\n-  def get_random_description(number_of_sentences)\n-    Faker::Hipster.sentences(number_of_sentences).join(' ')\n-  end\n-\n-  def get_item_for_id(item_id)\n-    @items.each do |category, items_in_category|\n-      p \"category id = #{category}\"\n-      items = items_in_category.find_all {|item|\n-        item.id == item_id.to_i}\n-      return items[0]\n-    end\n-  end\n-end\n-\n"
    },
    {
        "commit hash": "9f03b31f122256a7ca612c48bedf5e3dbec1196c",
        "previous commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/server.rb",
            "additions": 0,
            "deletions": 50
        },
        "diff content": "@@ -1,50 +0,0 @@\n-require 'sinatra' \n-require 'json'\n-require 'rubygems'\n-require 'rufus-scheduler'\n-require_relative 'category_repository'\n-require_relative 'item_repository'\n-require_relative 'basket'\n-\n-@@categories = CategoryRepository.new.categories\n-@@item_repository = ItemRepository.new\n-@@basket = Basket.new\n-\n-before do\n-  content_type :json\n-end\n-\n-\n-get '/category/:number' do\n-  {category: @@categories[params['number'].to_i]}\n-end\n-\n-get '/categories' do\n-  {categories: @@categories}\n-end\n-\n-get '/category/:id/items' do\n-  category = params['id'].to_sym\n-  {products: @@item_repository.items_from_category(category)}\n-end\n-\n-get '/items/:id/add' do\n-  @@basket.add_to_basket(@@item_repository.get_item_for_id(params['id']))\n-end\n-\n-get '/items/:id/remove' do\n-  @@basket.remove_from_basket(@@item_repository.get_item_for_id(params['id']))\n-end\n-\n-get '/basket' do\n-  {basket: @@basket.show_content}\n-end\n-\n-get '/items/:id' do\n-  {item: @@item_repository.get_item_for_id(params['id'])}\n-end\n-\n-\n-after do\n-  response.body = JSON.dump(response.body)\n-end\n"
    },
    {
        "commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "previous commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/build.gradle",
            "additions": 4,
            "deletions": 2
        },
        "diff content": "@@ -4,9 +4,11 @@ plugins {\n apply plugin: 'java-library'\n \n dependencies {\n+    implementation \"com.fasterxml.jackson.core:jackson-databind:2.9.7\"\n     implementation fileTree(dir: 'libs', include: ['*.jar'])\n-    implementation \"com.sparkjava:spark-core:2.8.0\"\n-    compile \"org.jetbrains.kotlin:kotlin-stdlib-jdk8\"\n+    implementation \"io.javalin:javalin:2.4.0\"\n+    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk8\"\n+    implementation \"org.slf4j:slf4j-simple:1.7.25\"\n }\n \n repositories {\n"
    },
    {
        "commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "previous commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/docker/build.gradle",
            "additions": 37,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,37 @@\n+plugins {\n+    id 'org.jetbrains.kotlin.jvm' version '1.2.21'\n+}\n+apply plugin: 'java-library'\n+\n+dependencies {\n+    implementation fileTree(dir: 'libs', include: ['*.jar'])\n+    implementation \"com.sparkjava:spark-core:2.8.0\"\n+    compile \"org.jetbrains.kotlin:kotlin-stdlib-jdk8\"\n+}\n+\n+repositories {\n+    mavenCentral()\n+}\n+compileKotlin {\n+    kotlinOptions {\n+        jvmTarget = \"1.8\"\n+    }\n+}\n+compileTestKotlin {\n+    kotlinOptions {\n+        jvmTarget = \"1.8\"\n+    }\n+}\n+\n+task fatJar(type: Jar) {\n+    manifest {\n+        attributes 'Main-Class': 'de.svenkroell.kotlinapi.MainKt'\n+    }\n+    baseName = project.name\n+    from {\n+        configurations.runtimeClasspath.collect {\n+            it.isDirectory() ? it : zipTree(it)\n+        }\n+    }\n+    with jar\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "previous commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/Main.kt",
            "additions": 15,
            "deletions": 2
        },
        "diff content": "@@ -1,7 +1,20 @@\n package de.svenkroell.kotlinapi\n \n-import spark.Spark.*\n+import de.svenkroell.kotlinapi.data.CategoryDao\n+import io.javalin.Javalin\n+\n \n fun main(args: Array<String>) {\n-    get(\"/\") {request, response -> \"Hello World\" }\n+    val categoryDao = CategoryDao()\n+    val app = Javalin.create().apply {\n+        exception(Exception::class.java) { e, ctx -> e.printStackTrace() }\n+        error(404) { ctx -> ctx.json(\"not found\") }\n+    }.start(7000)\n+    app.get(\"/categories\") { context ->\n+        context.json(hashMapOf(\"categories\" to categoryDao.listCategories()))\n+    }\n+\n+    app.get(\"/categories/:category-id\") { context ->\n+        context.json(hashMapOf(\"category\" to categoryDao.findCategoryById(context.pathParam(\"category-id\").toInt())))\n+    }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "previous commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/data/CategoryDao.kt",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+package de.svenkroell.kotlinapi.data\n+\n+import de.svenkroell.kotlinapi.database.InMemoryDatabase\n+import de.svenkroell.kotlinapi.model.Category\n+\n+class CategoryDao {\n+    private val database = InMemoryDatabase()\n+\n+    fun listCategories(): ArrayList<Category> {\n+        return database.categories()\n+    }\n+\n+    fun findCategoryById(id: Int): Category? {\n+        return database.categories().find { it.id == id }\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "previous commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/database/InMemoryDatabase.kt",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+package de.svenkroell.kotlinapi.database\n+\n+import de.svenkroell.kotlinapi.model.Category\n+\n+class InMemoryDatabase {\n+    fun categories(): ArrayList<Category> {\n+        return arrayListOf(\n+                Category(id = 0, title = \"SHIRTS\", image = \"shirtimage\"),\n+                Category(id = 1, title = \"HOODIES\", image = \"hoodieimage\"),\n+                Category(id = 2, title = \"HATS\", image = \"hatimage\"),\n+                Category(id = 3, title = \"DIGITAL GOODS\", image = \"digitalgoodsimage\")\n+        )\n+    }\n+}\n"
    },
    {
        "commit hash": "f0a249317e2a56cbacda435bd8103788d05f0ace",
        "previous commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/model/Category.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package de.svenkroell.kotlinapi.model\n+\n+data class Category(val id: Int, val title: String, val image: String)\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -32,7 +32,7 @@ android {\n \n dependencies {\n     implementation fileTree(include: ['*.jar'], dir: 'libs')\n-    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version\"\n+    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\n     implementation 'com.android.support:appcompat-v7:26.1.0'\n     implementation 'com.android.support.constraint:constraint-layout:1.0.2'\n     implementation 'com.android.support:recyclerview-v7:26.1.0'\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/build.gradle",
            "additions": 37,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,37 @@\n+plugins {\n+    id 'org.jetbrains.kotlin.jvm'\n+}\n+apply plugin: 'java-library'\n+\n+dependencies {\n+    implementation fileTree(dir: 'libs', include: ['*.jar'])\n+    implementation \"com.sparkjava:spark-core:2.8.0\"\n+    compile \"org.jetbrains.kotlin:kotlin-stdlib-jdk8\"\n+}\n+\n+repositories {\n+    mavenCentral()\n+}\n+compileKotlin {\n+    kotlinOptions {\n+        jvmTarget = \"1.8\"\n+    }\n+}\n+compileTestKotlin {\n+    kotlinOptions {\n+        jvmTarget = \"1.8\"\n+    }\n+}\n+\n+task fatJar(type: Jar) {\n+    manifest {\n+        attributes 'Main-Class': 'de.svenkroell.kotlinapi.MainKt'\n+    }\n+    baseName = project.name\n+    from {\n+        configurations.runtimeClasspath.collect {\n+            it.isDirectory() ? it : zipTree(it)\n+        }\n+    }\n+    with jar\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/kotlinapi/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/gradle/wrapper/gradle-wrapper.properties",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.4-bin.zip\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/gradlew",
            "additions": 172,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,172 @@\n+#!/usr/bin/env sh\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn () {\n+    echo \"$*\"\n+}\n+\n+die () {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+nonstop=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+  NONSTOP* )\n+    nonstop=true\n+    ;;\n+esac\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Escape application args\n+save () {\n+    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n+    echo \" \"\n+}\n+APP_ARGS=$(save \"$@\")\n+\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\n+if [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n+  cd \"$(dirname \"$0\")\"\n+fi\n+\n+exec \"$JAVACMD\" \"$@\"\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/gradlew.bat",
            "additions": 84,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,84 @@\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:init\r\n+@rem Get command-line arguments, handling Windows variants\r\n+\r\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n+\r\n+:win9xME_args\r\n+@rem Slurp the command line arguments.\r\n+set CMD_LINE_ARGS=\r\n+set _SKIP=2\r\n+\r\n+:win9xME_args_slurp\r\n+if \"x%~1\" == \"x\" goto execute\r\n+\r\n+set CMD_LINE_ARGS=%*\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/kotlinapi/src/main/java/de/svenkroell/kotlinapi/Main.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package de.svenkroell.kotlinapi\n+\n+import spark.Spark.*\n+\n+fun main(args: Array<String>) {\n+    get(\"/\") {request, response -> \"Hello World\" }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "e71d8727307e1577831d6548ae6274b501ac6e31",
        "previous commit hash": "e74bf782a9d1e10f44568ed4e39ada3d0d60f67d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/settings.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -1 +1,3 @@\n-include ':app'\n+include ':app', ':kotlinapi'\n+\n+\n"
    },
    {
        "commit hash": "275bea68f7bf725e0e617cc978e3e69e2a88a42c",
        "previous commit hash": "ec6d69e655a337c72f707f7ec6a5eff741cd9ff2",
        "diff stats": {
            "file_path": "Sandbox/app/build.gradle",
            "additions": 6,
            "deletions": 6
        },
        "diff content": "@@ -1,13 +1,13 @@\n apply plugin: 'com.android.application'\n \n android {\n-    compileSdkVersion 23\n-    buildToolsVersion \"23.0.3\"\n+    compileSdkVersion 26\n+    buildToolsVersion '28.0.3'\n \n     defaultConfig {\n         applicationId \"novoda.com.sandbox\"\n         minSdkVersion 16\n-        targetSdkVersion 23\n+        targetSdkVersion 26\n         versionCode 1\n         versionName \"1.0\"\n     }\n@@ -20,7 +20,7 @@ android {\n }\n \n dependencies {\n-    compile fileTree(dir: 'libs', include: ['*.jar'])\n-    testCompile 'junit:junit:4.12'\n-    compile 'com.android.support:appcompat-v7:23.3.0'\n+    implementation fileTree(dir: 'libs', include: ['*.jar'])\n+    testImplementation 'junit:junit:4.12'\n+    api 'com.android.support:appcompat-v7:26.1.0'\n }\n"
    },
    {
        "commit hash": "275bea68f7bf725e0e617cc978e3e69e2a88a42c",
        "previous commit hash": "ec6d69e655a337c72f707f7ec6a5eff741cd9ff2",
        "diff stats": {
            "file_path": "Sandbox/build.gradle",
            "additions": 4,
            "deletions": 1
        },
        "diff content": "@@ -2,10 +2,12 @@\n \n buildscript {\n     repositories {\n+        google()\n         jcenter()\n+        mavenCentral()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:2.2.1'\n+        classpath 'com.android.tools.build:gradle:3.2.1'\n \n         // NOTE: Do not place your application dependencies here; they belong\n         // in the individual module build.gradle files\n@@ -14,6 +16,7 @@ buildscript {\n \n allprojects {\n     repositories {\n+        google()\n         jcenter()\n     }\n }\n"
    },
    {
        "commit hash": "275bea68f7bf725e0e617cc978e3e69e2a88a42c",
        "previous commit hash": "ec6d69e655a337c72f707f7ec6a5eff741cd9ff2",
        "diff stats": {
            "file_path": "Sandbox/gradle/wrapper/gradle-wrapper.properties",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,6 +1,6 @@\n-#Mon Dec 28 10:00:20 PST 2015\n+#Thu Dec 13 14:56:28 GMT 2018\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.6-all.zip\n"
    },
    {
        "commit hash": "597b0e9f403c27f57144524a251a3eb91670c1de",
        "previous commit hash": "d280dead46d0a3096821c7fe6c0741ad5320d0f8",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/Constants.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,4 @@ object Constants {\n         const val category = \"categories\"\n         const val product = \"products\"\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "597b0e9f403c27f57144524a251a3eb91670c1de",
        "previous commit hash": "d280dead46d0a3096821c7fe6c0741ad5320d0f8",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithRepositories.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -59,4 +59,4 @@ class EspressoTestExampleWithRepositories {\n             checkThatCorrectProductIsDisplayed()\n         }\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "d280dead46d0a3096821c7fe6c0741ad5320d0f8",
        "previous commit hash": "c42a8172d7e8908e273300d0fcb6b01fe661719a",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/CategoryDTO.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -23,5 +23,5 @@ class CategoryDTO {\n     }\n \n     private fun requestCategories() =\n-            get(Constants.Urls.category).jsonObject.getJSONArray(Constants.identifier.category)\n+            get(Constants.Urls.category).jsonObject.getJSONArray(Constants.Identifier.category)\n }\n"
    },
    {
        "commit hash": "d280dead46d0a3096821c7fe6c0741ad5320d0f8",
        "previous commit hash": "c42a8172d7e8908e273300d0fcb6b01fe661719a",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/Constants.kt",
            "additions": 4,
            "deletions": 1
        },
        "diff content": "@@ -5,9 +5,12 @@ import com.novoda.androidstoreexample.BuildConfig\n object Constants {\n     object Urls {\n         const val category = \"${BuildConfig.API_URL}/categories\"\n+        const val itemsPrefix = \"${BuildConfig.API_URL}/category/\"\n+        const val itemsSuffix = \"items\"\n     }\n \n-    object identifier {\n+    object Identifier {\n         const val category = \"categories\"\n+        const val product = \"products\"\n     }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "d280dead46d0a3096821c7fe6c0741ad5320d0f8",
        "previous commit hash": "c42a8172d7e8908e273300d0fcb6b01fe661719a",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/ProductDTO.kt",
            "additions": 2,
            "deletions": 4
        },
        "diff content": "@@ -1,13 +1,11 @@\n package com.novoda.androidstoreexample.data.dto\n \n import com.novoda.androidstoreexample.models.Product\n-import com.novoda.testautomationstarter.test.BuildConfig\n import com.squareup.moshi.Moshi\n import khttp.get\n import org.json.JSONArray\n \n class ProductDTO {\n-    private val productsIdentifier = \"products\"\n     private val moshi = Moshi.Builder().build()\n     private val jsonAdapter = moshi.adapter(Product::class.java)\n \n@@ -17,9 +15,9 @@ class ProductDTO {\n     }\n \n     private fun requestProductJson(id: Int): JSONArray {\n-        val articleUrl = \"${BuildConfig.API_URL}/category/$id/items\"\n+        val articleUrl = \"${Constants.Urls.itemsPrefix}$id/${Constants.Urls.itemsSuffix}\"\n         return get(articleUrl)\n-                .jsonObject.getJSONArray(productsIdentifier)\n+                .jsonObject.getJSONArray(Constants.Identifier.product)\n     }\n \n     private fun mapJsonOnModel(articleResponse: JSONArray): ArrayList<Product> {\n"
    },
    {
        "commit hash": "c42a8172d7e8908e273300d0fcb6b01fe661719a",
        "previous commit hash": "a5dec5c1ac3d2b0f726c9d9908391544344bfc52",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/CategoryDTO.kt",
            "additions": 1,
            "deletions": 4
        },
        "diff content": "@@ -1,14 +1,11 @@\n package com.novoda.androidstoreexample.data.dto\n \n-import com.novoda.androidstoreexample.BuildConfig\n import com.novoda.androidstoreexample.models.Category\n import com.squareup.moshi.Moshi\n import khttp.get\n import org.json.JSONArray\n \n class CategoryDTO {\n-    private val categoryIdentifier = \"categories\"\n-    private val categoriesUrl = \"${BuildConfig.API_URL}/categories\"\n     private val moshi = Moshi.Builder().build()\n     private val jsonAdapter = moshi.adapter(Category::class.java)\n \n@@ -26,5 +23,5 @@ class CategoryDTO {\n     }\n \n     private fun requestCategories() =\n-            get(categoriesUrl).jsonObject.getJSONArray(categoryIdentifier)\n+            get(Constants.Urls.category).jsonObject.getJSONArray(Constants.identifier.category)\n }\n"
    },
    {
        "commit hash": "c42a8172d7e8908e273300d0fcb6b01fe661719a",
        "previous commit hash": "a5dec5c1ac3d2b0f726c9d9908391544344bfc52",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/Constants.kt",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package com.novoda.androidstoreexample.data.dto\n+\n+import com.novoda.androidstoreexample.BuildConfig\n+\n+object Constants {\n+    object Urls {\n+        const val category = \"${BuildConfig.API_URL}/categories\"\n+    }\n+\n+    object identifier {\n+        const val category = \"categories\"\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a5dec5c1ac3d2b0f726c9d9908391544344bfc52",
        "previous commit hash": "581030a761012c6688694554530768ca70df8317",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithRepositories.kt",
            "additions": 11,
            "deletions": 5
        },
        "diff content": "@@ -4,23 +4,29 @@ import android.support.test.rule.ActivityTestRule\n import com.novoda.androidstoreexample.activities.MainActivity\n import com.novoda.androidstoreexample.data.repositories.ArticleRepository\n import com.novoda.androidstoreexample.userflows.productUserFlow\n-import org.junit.Before\n+import org.junit.BeforeClass\n import org.junit.Rule\n import org.junit.Test\n \n class EspressoTestExampleWithRepositories {\n \n     private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n-    lateinit var articleRepository: ArticleRepository\n+\n \n     @get:Rule\n     var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n \n-    @Before\n-    fun setUp() {\n-        articleRepository = ArticleRepository()\n+    companion object {\n+        lateinit var articleRepository: ArticleRepository\n+\n+        @JvmStatic\n+        @BeforeClass\n+        fun setUp() {\n+            articleRepository = ArticleRepository()\n+        }\n     }\n \n+\n     @Test\n     fun testNavigationWithFirstItemFromRepository() {\n         val hat = articleRepository.getHat()\n"
    },
    {
        "commit hash": "581030a761012c6688694554530768ca70df8317",
        "previous commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -46,7 +46,7 @@ dependencies {\n     testImplementation 'io.rest-assured:json-schema-validator:3.0.6'\n     androidTestImplementation 'com.android.support.test:runner:1.0.1'\n     androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'\n-    androidTestImplementation 'com.google.code.gson:gson:2.8.5'\n+    androidTestImplementation 'com.squareup.moshi:moshi:1.4.0'\n     androidTestImplementation 'com.squareup.okhttp:mockwebserver:1.3.0'\n     androidTestImplementation 'khttp:khttp:0.1.0'\n     androidTestImplementation 'org.mockito:mockito-core:2.8.9'\n"
    },
    {
        "commit hash": "581030a761012c6688694554530768ca70df8317",
        "previous commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/CategoryDTO.kt",
            "additions": 5,
            "deletions": 4
        },
        "diff content": "@@ -1,15 +1,16 @@\n package com.novoda.androidstoreexample.data.dto\n \n-import com.google.gson.Gson\n import com.novoda.androidstoreexample.BuildConfig\n-import com.novoda.androidstoreexample.data.models.Category\n+import com.novoda.androidstoreexample.models.Category\n+import com.squareup.moshi.Moshi\n import khttp.get\n import org.json.JSONArray\n \n class CategoryDTO {\n     private val categoryIdentifier = \"categories\"\n     private val categoriesUrl = \"${BuildConfig.API_URL}/categories\"\n-    private val gson = Gson()\n+    private val moshi = Moshi.Builder().build()\n+    private val jsonAdapter = moshi.adapter(Category::class.java)\n \n     fun getAllCategories(): ArrayList<Category> {\n         val categoryResponse = requestCategories()\n@@ -19,7 +20,7 @@ class CategoryDTO {\n     private fun mapJsonOnModel(categoryResponse: JSONArray): ArrayList<Category> {\n         val categories = arrayListOf<Category>()\n         for (i in 0 until categoryResponse.length()) {\n-            categories.add(gson.fromJson(categoryResponse.getString(i), Category::class.java))\n+            categories.add(jsonAdapter.fromJson(categoryResponse.getString(i)))\n         }\n         return categories\n     }\n"
    },
    {
        "commit hash": "581030a761012c6688694554530768ca70df8317",
        "previous commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/ProductDTO.kt",
            "additions": 5,
            "deletions": 4
        },
        "diff content": "@@ -1,14 +1,15 @@\n package com.novoda.androidstoreexample.data.dto\n \n-import com.google.gson.Gson\n-import com.novoda.androidstoreexample.data.models.Product\n+import com.novoda.androidstoreexample.models.Product\n import com.novoda.testautomationstarter.test.BuildConfig\n+import com.squareup.moshi.Moshi\n import khttp.get\n import org.json.JSONArray\n \n class ProductDTO {\n-    private val gson = Gson()\n     private val productsIdentifier = \"products\"\n+    private val moshi = Moshi.Builder().build()\n+    private val jsonAdapter = moshi.adapter(Product::class.java)\n \n     fun getArticlesForCategory(id: Int): ArrayList<Product> {\n         val articleJson = requestProductJson(id)\n@@ -24,7 +25,7 @@ class ProductDTO {\n     private fun mapJsonOnModel(articleResponse: JSONArray): ArrayList<Product> {\n         val articles = arrayListOf<Product>()\n         for (i in 0 until articleResponse.length()) {\n-            articles.add(gson.fromJson(articleResponse.getString(i), Product::class.java))\n+            articles.add(jsonAdapter.fromJson(articleResponse.getString(i)))\n         }\n         return articles\n     }\n"
    },
    {
        "commit hash": "581030a761012c6688694554530768ca70df8317",
        "previous commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Category.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,3 +0,0 @@\n-package com.novoda.androidstoreexample.data.models\n-\n-data class Category(val id: Int, val title: String, val image: String)\n"
    },
    {
        "commit hash": "581030a761012c6688694554530768ca70df8317",
        "previous commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Product.kt",
            "additions": 0,
            "deletions": 9
        },
        "diff content": "@@ -1,9 +0,0 @@\n-package com.novoda.androidstoreexample.data.models\n-\n-import com.google.gson.annotations.SerializedName\n-\n-data class Product(val id: Int,\n-                   val title: String,\n-                   val price: String,\n-                   val image: String,\n-                   @SerializedName(\"product_description\")val productDescription: String)\n"
    },
    {
        "commit hash": "581030a761012c6688694554530768ca70df8317",
        "previous commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/repositories/ArticleRepository.kt",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,9 +1,9 @@\n package com.novoda.androidstoreexample.data.repositories\n \n-import com.novoda.androidstoreexample.data.dto.ProductDTO\n import com.novoda.androidstoreexample.data.dto.CategoryDTO\n-import com.novoda.androidstoreexample.data.models.Product\n+import com.novoda.androidstoreexample.data.dto.ProductDTO\n import com.novoda.androidstoreexample.data.models.Article\n+import com.novoda.androidstoreexample.models.Product\n \n class ArticleRepository {\n     private val categories = CategoryDTO().getAllCategories()\n"
    },
    {
        "commit hash": "61957e4fbd15cd6c5e741c9768fb7b68a2917d6f",
        "previous commit hash": "f55c3368e91a1df9aee5f2eacef164b44aa06677",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithMockServer.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -19,7 +19,7 @@ class EspressoTestExampleWithMockServer {\n     private val activityTestRule = ActivityTestRule(MainActivity::class.java,\n             false,\n             false)\n-    var mockServerTestRule: MockServerTestRule = MockServerTestRule()\n+    private val mockServerTestRule: MockServerTestRule = MockServerTestRule()\n \n     @get:Rule\n     var chain: TestRule = RuleChain.outerRule(activityTestRule)\n"
    },
    {
        "commit hash": "f55c3368e91a1df9aee5f2eacef164b44aa06677",
        "previous commit hash": "b44420ea6076cbd5d84867e20b88645e3be391f0",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/rules/MockServerTestRule.kt",
            "additions": 19,
            "deletions": 17
        },
        "diff content": "@@ -1,33 +1,35 @@\n package com.novoda.androidstoreexample.rules\n \n-import android.app.Activity\n import android.support.test.InstrumentationRegistry\n-import android.support.test.rule.ActivityTestRule\n import com.novoda.androidstoreexample.EspressoHostModule\n import com.novoda.androidstoreexample.dagger.App\n import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n import com.squareup.okhttp.mockwebserver.MockResponse\n import com.squareup.okhttp.mockwebserver.MockWebServer\n+import org.junit.rules.TestRule\n+import org.junit.runner.Description\n+import org.junit.runners.model.Statement\n import java.io.InputStream\n \n-class MockServerTestRule<T : Activity>(\n-        activityClass: Class<T>?,\n-        initialTouchMode: Boolean,\n-        launchActivity: Boolean) : ActivityTestRule<T>(activityClass, initialTouchMode, launchActivity) {\n \n-    private val mockWebServer = MockWebServer()\n-    private val port = 9091\n+class MockServerTestRule(private val port: Int = 9091) : TestRule {\n \n-    override fun beforeActivityLaunched() {\n-        super.beforeActivityLaunched()\n-        val appComponent = DaggerAppComponent.builder().hostModule(EspressoHostModule(port)).build()\n-        App.component = appComponent\n-        mockWebServer.play(port)\n-    }\n+    private val mockWebServer = MockWebServer()\n \n-    override fun afterActivityFinished() {\n-        mockWebServer.shutdown()\n-        super.afterActivityFinished()\n+    override fun apply(base: Statement, description: Description?): Statement {\n+        return object : Statement() {\n+            @Throws(Throwable::class)\n+            override fun evaluate() {\n+                val appComponent = DaggerAppComponent.builder().hostModule(EspressoHostModule(port)).build()\n+                App.component = appComponent\n+                mockWebServer.play(port)\n+                try {\n+                    base.evaluate()\n+                } finally {\n+                    shutdownServer()\n+                }\n+            }\n+        }\n     }\n \n     internal fun enqueueJson(resourceName: String) {\n"
    },
    {
        "commit hash": "f55c3368e91a1df9aee5f2eacef164b44aa06677",
        "previous commit hash": "b44420ea6076cbd5d84867e20b88645e3be391f0",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithMockServer.kt",
            "additions": 9,
            "deletions": 11
        },
        "diff content": "@@ -5,33 +5,31 @@ import android.support.test.espresso.Espresso.onView\n import android.support.test.espresso.assertion.ViewAssertions.matches\n import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n import android.support.test.espresso.matcher.ViewMatchers.withText\n+import android.support.test.rule.ActivityTestRule\n import com.novoda.androidstoreexample.activities.MainActivity\n import com.novoda.androidstoreexample.rules.MockServerTestRule\n-import org.junit.After\n import org.junit.Rule\n import org.junit.Test\n+import org.junit.rules.RuleChain\n+import org.junit.rules.TestRule\n+\n \n class EspressoTestExampleWithMockServer {\n \n-    private val activityTestRule = MockServerTestRule(MainActivity::class.java,\n+    private val activityTestRule = ActivityTestRule(MainActivity::class.java,\n             false,\n             false)\n-\n+    var mockServerTestRule: MockServerTestRule = MockServerTestRule()\n \n     @get:Rule\n-    var activityRule: MockServerTestRule<MainActivity> = activityTestRule\n+    var chain: TestRule = RuleChain.outerRule(activityTestRule)\n+            .around(mockServerTestRule)\n \n     @Test\n     fun categoryListCanBeAdapted() {\n-        activityRule.enqueueJson(\"categories/categories.json\")\n+        mockServerTestRule.enqueueJson(\"categories/categories.json\")\n         activityTestRule.launchActivity(Intent())\n \n         onView(withText(\"Thingies to wear\")).check(matches(isDisplayed()))\n     }\n-\n-    @After\n-    fun tearDown() {\n-        activityRule.shutdownServer()\n-    }\n-\n }\n"
    },
    {
        "commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "previous commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/CategoryDTO.kt",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -2,7 +2,7 @@ package com.novoda.androidstoreexample.data.dto\n \n import com.google.gson.Gson\n import com.novoda.androidstoreexample.BuildConfig\n-import com.novoda.androidstoreexample.data.models.Categories\n+import com.novoda.androidstoreexample.data.models.Category\n import khttp.get\n import org.json.JSONArray\n \n@@ -11,15 +11,15 @@ class CategoryDTO {\n     private val categoriesUrl = \"${BuildConfig.API_URL}/categories\"\n     private val gson = Gson()\n \n-    fun getAllCategories(): ArrayList<Categories> {\n+    fun getAllCategories(): ArrayList<Category> {\n         val categoryResponse = requestCategories()\n         return mapJsonOnModel(categoryResponse)\n     }\n \n-    private fun mapJsonOnModel(categoryResponse: JSONArray): ArrayList<Categories> {\n-        val categories = arrayListOf<Categories>()\n+    private fun mapJsonOnModel(categoryResponse: JSONArray): ArrayList<Category> {\n+        val categories = arrayListOf<Category>()\n         for (i in 0 until categoryResponse.length()) {\n-            categories.add(gson.fromJson(categoryResponse.getString(i), Categories::class.java))\n+            categories.add(gson.fromJson(categoryResponse.getString(i), Category::class.java))\n         }\n         return categories\n     }\n"
    },
    {
        "commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "previous commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/ProductDTO.kt",
            "additions": 6,
            "deletions": 6
        },
        "diff content": "@@ -1,16 +1,16 @@\n package com.novoda.androidstoreexample.data.dto\n \n import com.google.gson.Gson\n-import com.novoda.androidstoreexample.data.models.Article\n+import com.novoda.androidstoreexample.data.models.Product\n import com.novoda.testautomationstarter.test.BuildConfig\n import khttp.get\n import org.json.JSONArray\n \n-class ArticleDTO {\n+class ProductDTO {\n     private val gson = Gson()\n     private val productsIdentifier = \"products\"\n \n-    fun getArticlesForCategory(id: Int): ArrayList<Article> {\n+    fun getArticlesForCategory(id: Int): ArrayList<Product> {\n         val articleJson = requestProductJson(id)\n         return mapJsonOnModel(articleJson)\n     }\n@@ -21,10 +21,10 @@ class ArticleDTO {\n                 .jsonObject.getJSONArray(productsIdentifier)\n     }\n \n-    private fun mapJsonOnModel(articleResponse: JSONArray): ArrayList<Article> {\n-        val articles = arrayListOf<Article>()\n+    private fun mapJsonOnModel(articleResponse: JSONArray): ArrayList<Product> {\n+        val articles = arrayListOf<Product>()\n         for (i in 0 until articleResponse.length()) {\n-            articles.add(gson.fromJson(articleResponse.getString(i), Article::class.java))\n+            articles.add(gson.fromJson(articleResponse.getString(i), Product::class.java))\n         }\n         return articles\n     }\n"
    },
    {
        "commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "previous commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Article.kt",
            "additions": 1,
            "deletions": 7
        },
        "diff content": "@@ -1,9 +1,3 @@\n package com.novoda.androidstoreexample.data.models\n \n-import com.google.gson.annotations.SerializedName\n-\n-data class Article(val id: Int,\n-                   val title: String,\n-                   val price: String,\n-                   val image: String,\n-                   @SerializedName(\"product_description\")val productDescription: String)\n+data class Article(val title: String, val category: String, val description: String = \"\", val price: String = \"\")\n"
    },
    {
        "commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "previous commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Categories.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,3 +0,0 @@\n-package com.novoda.androidstoreexample.data.models\n-\n-data class Categories(val id: Int, val title: String, val image: String)\n"
    },
    {
        "commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "previous commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Category.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package com.novoda.androidstoreexample.data.models\n+\n+data class Category(val id: Int, val title: String, val image: String)\n"
    },
    {
        "commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "previous commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Item.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,3 +0,0 @@\n-package com.novoda.androidstoreexample.data.models\n-\n-data class Item(val title: String, val category: String, val description: String = \"\", val price: String = \"\")\n"
    },
    {
        "commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "previous commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Product.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.androidstoreexample.data.models\n+\n+import com.google.gson.annotations.SerializedName\n+\n+data class Product(val id: Int,\n+                   val title: String,\n+                   val price: String,\n+                   val image: String,\n+                   @SerializedName(\"product_description\")val productDescription: String)\n"
    },
    {
        "commit hash": "203ddbaa94bf90070205c09f5764c8099e6835e1",
        "previous commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/repositories/ArticleRepository.kt",
            "additions": 8,
            "deletions": 8
        },
        "diff content": "@@ -1,32 +1,32 @@\n package com.novoda.androidstoreexample.data.repositories\n \n-import com.novoda.androidstoreexample.data.dto.ArticleDTO\n+import com.novoda.androidstoreexample.data.dto.ProductDTO\n import com.novoda.androidstoreexample.data.dto.CategoryDTO\n+import com.novoda.androidstoreexample.data.models.Product\n import com.novoda.androidstoreexample.data.models.Article\n-import com.novoda.androidstoreexample.data.models.Item\n \n class ArticleRepository {\n     private val categories = CategoryDTO().getAllCategories()\n-    private val articleDto = ArticleDTO()\n+    private val articleDto = ProductDTO()\n     private val hatsCategoryName = \"HATS\"\n \n-    val standardArticle = Item(title = \"Hat white\", category = \"HATS\")\n+    val standardArticle = Article(title = \"Hat white\", category = \"HATS\")\n \n-    fun getHat(id: Int = 0): Item {\n+    fun getHat(id: Int = 0): Article {\n         val categoryId = getCategoryIdForCategory(hatsCategoryName)\n         val product = articleDto.getArticlesForCategory(categoryId)[id]\n         return buildItem(product, hatsCategoryName)\n     }\n \n-    fun getRandomHat(): Item {\n+    fun getRandomHat(): Article {\n         val categoryId = getCategoryIdForCategory(hatsCategoryName)\n         val articles = articleDto.getArticlesForCategory(categoryId)\n         val product = articles.shuffled().take(articles.size)[0]\n         return buildItem(product, hatsCategoryName)\n     }\n \n-    private fun buildItem(article: Article, categoryName: String): Item {\n-        return Item(title = article.title, price = article.price, category = categoryName, description = article.productDescription)\n+    private fun buildItem(article: Product, categoryName: String): Article {\n+        return Article(title = article.title, price = article.price, category = categoryName, description = article.productDescription)\n     }\n \n     private fun getCategoryIdForCategory(categoryName: String): Int {\n"
    },
    {
        "commit hash": "4e41040171e82627bbce9abee3bb2c8544d42a6e",
        "previous commit hash": "8ee9e5de42c28704ba8c9cc5b3c86b30ed587f88",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/ArticleDTO.kt",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -11,11 +11,11 @@ class ArticleDTO {\n     private val productsIdentifier = \"products\"\n \n     fun getArticlesForCategory(id: Int): ArrayList<Article> {\n-        val articleJson = requestProdutJson(id)\n+        val articleJson = requestProductJson(id)\n         return mapJsonOnModel(articleJson)\n     }\n \n-    private fun requestProdutJson(id: Int): JSONArray {\n+    private fun requestProductJson(id: Int): JSONArray {\n         val articleUrl = \"${BuildConfig.API_URL}/category/$id/items\"\n         return get(articleUrl)\n                 .jsonObject.getJSONArray(productsIdentifier)\n"
    },
    {
        "commit hash": "8ee9e5de42c28704ba8c9cc5b3c86b30ed587f88",
        "previous commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/ArticleDTO.kt",
            "additions": 14,
            "deletions": 3
        },
        "diff content": "@@ -4,17 +4,28 @@ import com.google.gson.Gson\n import com.novoda.androidstoreexample.data.models.Article\n import com.novoda.testautomationstarter.test.BuildConfig\n import khttp.get\n+import org.json.JSONArray\n \n class ArticleDTO {\n     private val gson = Gson()\n+    private val productsIdentifier = \"products\"\n \n     fun getArticlesForCategory(id: Int): ArrayList<Article> {\n+        val articleJson = requestProdutJson(id)\n+        return mapJsonOnModel(articleJson)\n+    }\n+\n+    private fun requestProdutJson(id: Int): JSONArray {\n+        val articleUrl = \"${BuildConfig.API_URL}/category/$id/items\"\n+        return get(articleUrl)\n+                .jsonObject.getJSONArray(productsIdentifier)\n+    }\n+\n+    private fun mapJsonOnModel(articleResponse: JSONArray): ArrayList<Article> {\n         val articles = arrayListOf<Article>()\n-        val articleResponse = get(\"${BuildConfig.API_URL}/category/$id/items\")\n-                .jsonObject.getJSONArray(\"products\")\n         for (i in 0 until articleResponse.length()) {\n             articles.add(gson.fromJson(articleResponse.getString(i), Article::class.java))\n         }\n         return articles\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "8ee9e5de42c28704ba8c9cc5b3c86b30ed587f88",
        "previous commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/CategoryDTO.kt",
            "additions": 12,
            "deletions": 3
        },
        "diff content": "@@ -4,17 +4,26 @@ import com.google.gson.Gson\n import com.novoda.androidstoreexample.BuildConfig\n import com.novoda.androidstoreexample.data.models.Categories\n import khttp.get\n+import org.json.JSONArray\n \n class CategoryDTO {\n-\n+    private val categoryIdentifier = \"categories\"\n+    private val categoriesUrl = \"${BuildConfig.API_URL}/categories\"\n     private val gson = Gson()\n \n     fun getAllCategories(): ArrayList<Categories> {\n+        val categoryResponse = requestCategories()\n+        return mapJsonOnModel(categoryResponse)\n+    }\n+\n+    private fun mapJsonOnModel(categoryResponse: JSONArray): ArrayList<Categories> {\n         val categories = arrayListOf<Categories>()\n-        val categoryResponse = get(\"${BuildConfig.API_URL}/categories\").jsonObject.getJSONArray(\"categories\")\n         for (i in 0 until categoryResponse.length()) {\n             categories.add(gson.fromJson(categoryResponse.getString(i), Categories::class.java))\n         }\n         return categories\n     }\n-}\n\\ No newline at end of file\n+\n+    private fun requestCategories() =\n+            get(categoriesUrl).jsonObject.getJSONArray(categoryIdentifier)\n+}\n"
    },
    {
        "commit hash": "8ee9e5de42c28704ba8c9cc5b3c86b30ed587f88",
        "previous commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Article.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -6,4 +6,4 @@ data class Article(val id: Int,\n                    val title: String,\n                    val price: String,\n                    val image: String,\n-                   @SerializedName(\"product_description\")val productDescription: String)\n\\ No newline at end of file\n+                   @SerializedName(\"product_description\")val productDescription: String)\n"
    },
    {
        "commit hash": "8ee9e5de42c28704ba8c9cc5b3c86b30ed587f88",
        "previous commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Categories.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n package com.novoda.androidstoreexample.data.models\n \n-data class Categories(val id: Int, val title: String, val image: String)\n\\ No newline at end of file\n+data class Categories(val id: Int, val title: String, val image: String)\n"
    },
    {
        "commit hash": "8ee9e5de42c28704ba8c9cc5b3c86b30ed587f88",
        "previous commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Item.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n package com.novoda.androidstoreexample.data.models\n \n-data class Item(val title: String, val category: String, val description: String = \"\", val price: String = \"\")\n\\ No newline at end of file\n+data class Item(val title: String, val category: String, val description: String = \"\", val price: String = \"\")\n"
    },
    {
        "commit hash": "8ee9e5de42c28704ba8c9cc5b3c86b30ed587f88",
        "previous commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/repositories/ArticleRepository.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -32,4 +32,4 @@ class ArticleRepository {\n     private fun getCategoryIdForCategory(categoryName: String): Int {\n         return categories.filter { it.title == categoryName }[0].id\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "previous commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/build.gradle",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -46,7 +46,9 @@ dependencies {\n     testImplementation 'io.rest-assured:json-schema-validator:3.0.6'\n     androidTestImplementation 'com.android.support.test:runner:1.0.1'\n     androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'\n+    androidTestImplementation 'com.google.code.gson:gson:2.8.5'\n     androidTestImplementation 'com.squareup.okhttp:mockwebserver:1.3.0'\n+    androidTestImplementation 'khttp:khttp:0.1.0'\n     androidTestImplementation 'org.mockito:mockito-core:2.8.9'\n     androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.1') {\n         exclude module: 'support-annotations'\n"
    },
    {
        "commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "previous commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/ArticleDTO.kt",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+package com.novoda.androidstoreexample.data.dto\n+\n+import com.google.gson.Gson\n+import com.novoda.androidstoreexample.data.models.Article\n+import com.novoda.testautomationstarter.test.BuildConfig\n+import khttp.get\n+\n+class ArticleDTO {\n+    private val gson = Gson()\n+\n+    fun getArticlesForCategory(id: Int): ArrayList<Article> {\n+        val articles = arrayListOf<Article>()\n+        val articleResponse = get(\"${BuildConfig.API_URL}/category/$id/items\")\n+                .jsonObject.getJSONArray(\"products\")\n+        for (i in 0 until articleResponse.length()) {\n+            articles.add(gson.fromJson(articleResponse.getString(i), Article::class.java))\n+        }\n+        return articles\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "previous commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/dto/CategoryDTO.kt",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+package com.novoda.androidstoreexample.data.dto\n+\n+import com.google.gson.Gson\n+import com.novoda.androidstoreexample.BuildConfig\n+import com.novoda.androidstoreexample.data.models.Categories\n+import khttp.get\n+\n+class CategoryDTO {\n+\n+    private val gson = Gson()\n+\n+    fun getAllCategories(): ArrayList<Categories> {\n+        val categories = arrayListOf<Categories>()\n+        val categoryResponse = get(\"${BuildConfig.API_URL}/categories\").jsonObject.getJSONArray(\"categories\")\n+        for (i in 0 until categoryResponse.length()) {\n+            categories.add(gson.fromJson(categoryResponse.getString(i), Categories::class.java))\n+        }\n+        return categories\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "previous commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Article.kt",
            "additions": 7,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,9 @@\n package com.novoda.androidstoreexample.data.models\n \n-data class Article(val title: String, val category: String)\n\\ No newline at end of file\n+import com.google.gson.annotations.SerializedName\n+\n+data class Article(val id: Int,\n+                   val title: String,\n+                   val price: String,\n+                   val image: String,\n+                   @SerializedName(\"product_description\")val productDescription: String)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "previous commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Categories.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package com.novoda.androidstoreexample.data.models\n+\n+data class Categories(val id: Int, val title: String, val image: String)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "previous commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Item.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package com.novoda.androidstoreexample.data.models\n+\n+data class Item(val title: String, val category: String, val description: String = \"\", val price: String = \"\")\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "previous commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/repositories/ArticleRepository.kt",
            "additions": 27,
            "deletions": 1
        },
        "diff content": "@@ -1,9 +1,35 @@\n package com.novoda.androidstoreexample.data.repositories\n \n+import com.novoda.androidstoreexample.data.dto.ArticleDTO\n+import com.novoda.androidstoreexample.data.dto.CategoryDTO\n import com.novoda.androidstoreexample.data.models.Article\n+import com.novoda.androidstoreexample.data.models.Item\n \n class ArticleRepository {\n-    val standardArticle = Article(title = \"Hat white\", category = \"HATS\")\n+    private val categories = CategoryDTO().getAllCategories()\n+    private val articleDto = ArticleDTO()\n+    private val hatsCategoryName = \"HATS\"\n \n+    val standardArticle = Item(title = \"Hat white\", category = \"HATS\")\n \n+    fun getHat(id: Int = 0): Item {\n+        val categoryId = getCategoryIdForCategory(hatsCategoryName)\n+        val product = articleDto.getArticlesForCategory(categoryId)[id]\n+        return buildItem(product, hatsCategoryName)\n+    }\n+\n+    fun getRandomHat(): Item {\n+        val categoryId = getCategoryIdForCategory(hatsCategoryName)\n+        val articles = articleDto.getArticlesForCategory(categoryId)\n+        val product = articles.shuffled().take(articles.size)[0]\n+        return buildItem(product, hatsCategoryName)\n+    }\n+\n+    private fun buildItem(article: Article, categoryName: String): Item {\n+        return Item(title = article.title, price = article.price, category = categoryName, description = article.productDescription)\n+    }\n+\n+    private fun getCategoryIdForCategory(categoryName: String): Int {\n+        return categories.filter { it.title == categoryName }[0].id\n+    }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "4de460c37134dafb8af812bd22bf78ccfcbb8510",
        "previous commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithRepositories.kt",
            "additions": 56,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,56 @@\n+package com.novoda.androidstoreexample.tests\n+\n+import android.support.test.rule.ActivityTestRule\n+import com.novoda.androidstoreexample.activities.MainActivity\n+import com.novoda.androidstoreexample.data.repositories.ArticleRepository\n+import com.novoda.androidstoreexample.userflows.productUserFlow\n+import org.junit.Before\n+import org.junit.Rule\n+import org.junit.Test\n+\n+class EspressoTestExampleWithRepositories {\n+\n+    private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n+    lateinit var articleRepository: ArticleRepository\n+\n+    @get:Rule\n+    var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n+\n+    @Before\n+    fun setUp() {\n+        articleRepository = ArticleRepository()\n+    }\n+\n+    @Test\n+    fun testNavigationWithFirstItemFromRepository() {\n+        val hat = articleRepository.getHat()\n+\n+        productUserFlow {\n+            navigateToCategory(hat.category)\n+            openItemFromProductlist(hat.title)\n+            checkThatCorrectProductIsDisplayed()\n+        }\n+    }\n+\n+    @Test\n+    fun testNavigationWithRandomItemFromRepository() {\n+        val hat = articleRepository.getRandomHat()\n+\n+        productUserFlow {\n+            navigateToCategory(hat.category)\n+            openItemFromProductlist(hat.title)\n+            checkThatCorrectProductIsDisplayed()\n+        }\n+    }\n+\n+    @Test\n+    fun testNavigationWithItemFromFixture() {\n+        val hat = articleRepository.standardArticle\n+\n+        productUserFlow {\n+            navigateToCategory(hat.category)\n+            openItemFromProductlist(hat.title)\n+            checkThatCorrectProductIsDisplayed()\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b44420ea6076cbd5d84867e20b88645e3be391f0",
        "previous commit hash": "08bcc26974e0d627678c46a4e6f81d5fa8d47a68",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/rules/MockServerTestRule.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -47,4 +47,4 @@ class MockServerTestRule<T : Activity>(\n         return MockResponse().setBody(convertStreamToString(resources.open(resourceName)))\n     }\n \n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "previous commit hash": "a17dbf2b364f77508dbdbbed9489a0c7a8b8a3ee",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/models/Article.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package com.novoda.androidstoreexample.data.models\n+\n+data class Article(val title: String, val category: String)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "5521fd300d1e2a261fc743de9a56cd0e883cdd83",
        "previous commit hash": "a17dbf2b364f77508dbdbbed9489a0c7a8b8a3ee",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/data/repositories/ArticleRepository.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.androidstoreexample.data.repositories\n+\n+import com.novoda.androidstoreexample.data.models.Article\n+\n+class ArticleRepository {\n+    val standardArticle = Article(title = \"Hat white\", category = \"HATS\")\n+\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "08bcc26974e0d627678c46a4e6f81d5fa8d47a68",
        "previous commit hash": "37ba7b23a04bd320dea26bda0ff0fec76abc1196",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/rules/MockServerTestRule.kt",
            "additions": 5,
            "deletions": 1
        },
        "diff content": "@@ -15,7 +15,7 @@ class MockServerTestRule<T : Activity>(\n         initialTouchMode: Boolean,\n         launchActivity: Boolean) : ActivityTestRule<T>(activityClass, initialTouchMode, launchActivity) {\n \n-    internal val mockWebServer = MockWebServer()\n+    private val mockWebServer = MockWebServer()\n     private val port = 9091\n \n     override fun beforeActivityLaunched() {\n@@ -34,6 +34,10 @@ class MockServerTestRule<T : Activity>(\n         mockWebServer.enqueue(createResponseFor(resourceName))\n     }\n \n+    internal fun shutdownServer() {\n+        mockWebServer.shutdown()\n+    }\n+\n     private fun convertStreamToString(input: InputStream): String {\n         return input.bufferedReader().use { it.readText() }\n     }\n"
    },
    {
        "commit hash": "08bcc26974e0d627678c46a4e6f81d5fa8d47a68",
        "previous commit hash": "37ba7b23a04bd320dea26bda0ff0fec76abc1196",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithMockServer.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -31,7 +31,7 @@ class EspressoTestExampleWithMockServer {\n \n     @After\n     fun tearDown() {\n-        activityRule.mockWebServer.shutdown()\n+        activityRule.shutdownServer()\n     }\n \n }\n"
    },
    {
        "commit hash": "37ba7b23a04bd320dea26bda0ff0fec76abc1196",
        "previous commit hash": "bc9b5264405b6b5bd0016d7cd0a5a2681d314a1e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/rules/MockServerTestRule.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -30,7 +30,7 @@ class MockServerTestRule<T : Activity>(\n         super.afterActivityFinished()\n     }\n \n-    internal fun encueJson(resourceName: String) {\n+    internal fun enqueueJson(resourceName: String) {\n         mockWebServer.enqueue(createResponseFor(resourceName))\n     }\n \n"
    },
    {
        "commit hash": "37ba7b23a04bd320dea26bda0ff0fec76abc1196",
        "previous commit hash": "bc9b5264405b6b5bd0016d7cd0a5a2681d314a1e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithMockServer.kt",
            "additions": 8,
            "deletions": 31
        },
        "diff content": "@@ -1,44 +1,29 @@\n package com.novoda.androidstoreexample.tests\n \n import android.content.Intent\n-import android.support.test.InstrumentationRegistry\n import android.support.test.espresso.Espresso.onView\n import android.support.test.espresso.assertion.ViewAssertions.matches\n import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n import android.support.test.espresso.matcher.ViewMatchers.withText\n-import android.support.test.rule.ActivityTestRule\n-import com.novoda.androidstoreexample.EspressoHostModule\n import com.novoda.androidstoreexample.activities.MainActivity\n-import com.novoda.androidstoreexample.dagger.App\n-import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n-import com.squareup.okhttp.mockwebserver.MockResponse\n-import com.squareup.okhttp.mockwebserver.MockWebServer\n+import com.novoda.androidstoreexample.rules.MockServerTestRule\n import org.junit.After\n-import org.junit.Before\n import org.junit.Rule\n import org.junit.Test\n-import java.io.InputStream\n \n class EspressoTestExampleWithMockServer {\n \n-    private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java, false, false)\n-    private val mockWebServer = MockWebServer()\n-    private val port = 9091\n+    private val activityTestRule = MockServerTestRule(MainActivity::class.java,\n+            false,\n+            false)\n+\n \n     @get:Rule\n-    var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n-\n-    @Before\n-    @Throws(Exception::class)\n-    fun setUp() {\n-        val appComponent = DaggerAppComponent.builder().hostModule(EspressoHostModule(port)).build()\n-        App.Companion.component = appComponent\n-        mockWebServer.play(port)\n-    }\n+    var activityRule: MockServerTestRule<MainActivity> = activityTestRule\n \n     @Test\n     fun categoryListCanBeAdapted() {\n-        mockWebServer.enqueue(createResponseFor(\"categories/categories.json\"))\n+        activityRule.enqueueJson(\"categories/categories.json\")\n         activityTestRule.launchActivity(Intent())\n \n         onView(withText(\"Thingies to wear\")).check(matches(isDisplayed()))\n@@ -46,15 +31,7 @@ class EspressoTestExampleWithMockServer {\n \n     @After\n     fun tearDown() {\n-        mockWebServer.shutdown()\n+        activityRule.mockWebServer.shutdown()\n     }\n \n-    private fun createResponseFor(resourceName: String): MockResponse {\n-        val resources = InstrumentationRegistry.getContext().resources.assets\n-        return MockResponse().setBody(convertStreamToString(resources.open(resourceName)))\n-    }\n-\n-    private fun convertStreamToString(input: InputStream): String {\n-        return input.bufferedReader().use { it.readText() }\n-    }\n }\n"
    },
    {
        "commit hash": "bc9b5264405b6b5bd0016d7cd0a5a2681d314a1e",
        "previous commit hash": "c2e3a49495b811d4b6b223564ac0dd6e4b834290",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/rules/MockServerTestRule.kt",
            "additions": 19,
            "deletions": 2
        },
        "diff content": "@@ -1,16 +1,19 @@\n package com.novoda.androidstoreexample.rules\n \n import android.app.Activity\n+import android.support.test.InstrumentationRegistry\n import android.support.test.rule.ActivityTestRule\n import com.novoda.androidstoreexample.EspressoHostModule\n import com.novoda.androidstoreexample.dagger.App\n import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n+import com.squareup.okhttp.mockwebserver.MockResponse\n import com.squareup.okhttp.mockwebserver.MockWebServer\n+import java.io.InputStream\n \n-class MockServerTestRule<T: Activity>(\n+class MockServerTestRule<T : Activity>(\n         activityClass: Class<T>?,\n         initialTouchMode: Boolean,\n-        launchActivity: Boolean): ActivityTestRule<T>(activityClass, initialTouchMode, launchActivity) {\n+        launchActivity: Boolean) : ActivityTestRule<T>(activityClass, initialTouchMode, launchActivity) {\n \n     internal val mockWebServer = MockWebServer()\n     private val port = 9091\n@@ -26,4 +29,18 @@ class MockServerTestRule<T: Activity>(\n         mockWebServer.shutdown()\n         super.afterActivityFinished()\n     }\n+\n+    internal fun encueJson(resourceName: String) {\n+        mockWebServer.enqueue(createResponseFor(resourceName))\n+    }\n+\n+    private fun convertStreamToString(input: InputStream): String {\n+        return input.bufferedReader().use { it.readText() }\n+    }\n+\n+    private fun createResponseFor(resourceName: String): MockResponse {\n+        val resources = InstrumentationRegistry.getContext().resources.assets\n+        return MockResponse().setBody(convertStreamToString(resources.open(resourceName)))\n+    }\n+\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c2e3a49495b811d4b6b223564ac0dd6e4b834290",
        "previous commit hash": "a17dbf2b364f77508dbdbbed9489a0c7a8b8a3ee",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/rules/MockServerTestRule.kt",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+package com.novoda.androidstoreexample.rules\n+\n+import android.app.Activity\n+import android.support.test.rule.ActivityTestRule\n+import com.novoda.androidstoreexample.EspressoHostModule\n+import com.novoda.androidstoreexample.dagger.App\n+import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n+import com.squareup.okhttp.mockwebserver.MockWebServer\n+\n+class MockServerTestRule<T: Activity>(\n+        activityClass: Class<T>?,\n+        initialTouchMode: Boolean,\n+        launchActivity: Boolean): ActivityTestRule<T>(activityClass, initialTouchMode, launchActivity) {\n+\n+    internal val mockWebServer = MockWebServer()\n+    private val port = 9091\n+\n+    override fun beforeActivityLaunched() {\n+        super.beforeActivityLaunched()\n+        val appComponent = DaggerAppComponent.builder().hostModule(EspressoHostModule(port)).build()\n+        App.component = appComponent\n+        mockWebServer.play(port)\n+    }\n+\n+    override fun afterActivityFinished() {\n+        mockWebServer.shutdown()\n+        super.afterActivityFinished()\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "282dc09eb008efa120c743879c6ac036b6a31bdf",
        "previous commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoJavaTestExampleWithoutFramework.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -19,13 +19,13 @@ import static android.support.test.espresso.contrib.RecyclerViewActions.scrollTo\n import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;\n import static android.support.test.espresso.matcher.ViewMatchers.withId;\n \n-public class EspressoJavaTestExample {\n+public class EspressoJavaTestExampleWithoutFramework {\n \n     @Rule\n     public ActivityTestRule<MainActivity> activityTestRule = new ActivityTestRule<MainActivity>(MainActivity.class);\n \n     @Test\n-    public void firstNavigationTest() {\n+    public void firstNavigationTestWithoutFramework() {\n         Matcher<RecyclerView.ViewHolder> categoryMatcher = ViewMatchers.withCategoryTitle(\"HATS\");\n \n         onView(android.support.test.espresso.matcher.ViewMatchers.withId(R.id.categoryListView)).perform(scrollToHolder(categoryMatcher), actionOnHolderItem(categoryMatcher, click()));\n"
    },
    {
        "commit hash": "282dc09eb008efa120c743879c6ac036b6a31bdf",
        "previous commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithMockServer.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -19,7 +19,7 @@ import org.junit.Rule\n import org.junit.Test\n import java.io.InputStream\n \n-class MockServerTestExample {\n+class EspressoTestExampleWithMockServer {\n \n     private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java, false, false)\n     private val mockWebServer = MockWebServer()\n"
    },
    {
        "commit hash": "282dc09eb008efa120c743879c6ac036b6a31bdf",
        "previous commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithPageObjects.kt",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -6,7 +6,7 @@ import com.novoda.androidstoreexample.pageobjects.*\n import org.junit.Rule\n import org.junit.Test\n \n-class EspressoTestExample {\n+class EspressoTestExampleWithPageObjects {\n \n     private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n \n@@ -14,7 +14,7 @@ class EspressoTestExample {\n     var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n \n     @Test\n-    fun firstNavigationTest() {\n+    fun firstNavigationTestWithPageObjects() {\n \n         mainPage {\n             navigateToProductList(\"HATS\")\n"
    },
    {
        "commit hash": "282dc09eb008efa120c743879c6ac036b6a31bdf",
        "previous commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExampleWithUserFlows.kt",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -9,14 +9,14 @@ import com.novoda.androidstoreexample.userflows.productUserFlow\n import org.junit.Rule\n import org.junit.Test\n \n-class EspressoUserFlowTests {\n+class EspressoTestExampleWithUserFlows {\n     private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n \n     @get:Rule\n     var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n \n     @Test\n-    fun navigateToProductDetailsTest() {\n+    fun firstNavigationTestWithUserFlows() {\n         val category = \"HATS\"\n         val product = \"hat white\"\n \n"
    },
    {
        "commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "previous commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/userflows/ProductUserFlow.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -24,4 +24,4 @@ class ItemUserFlow {\n             assertProductDetailsDisplayed()\n         }\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "previous commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "diff stats": {
            "file_path": "GsonJsonWebservice/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/GsonJsonWebservice/gradle/wrapper/gradle-wrapper.jar and /dev/null differ\n"
    },
    {
        "commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "previous commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "diff stats": {
            "file_path": "GsonJsonWebservice/gradle/wrapper/gradle-wrapper.properties",
            "additions": 0,
            "deletions": 6
        },
        "diff content": "@@ -1,6 +0,0 @@\n-#Tue Jan 23 17:14:20 CET 2018\n-distributionBase=GRADLE_USER_HOME\n-distributionPath=wrapper/dists\n-zipStoreBase=GRADLE_USER_HOME\n-zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip\n"
    },
    {
        "commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "previous commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "diff stats": {
            "file_path": "GsonJsonWebservice/gradlew",
            "additions": 0,
            "deletions": 160
        },
        "diff content": "@@ -1,160 +0,0 @@\n-#!/usr/bin/env bash\n-\n-##############################################################################\n-##\n-##  Gradle start up script for UN*X\n-##\n-##############################################################################\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS=\"\"\n-\n-APP_NAME=\"Gradle\"\n-APP_BASE_NAME=`basename \"$0\"`\n-\n-# Use the maximum available, or set MAX_FD != -1 to use that value.\n-MAX_FD=\"maximum\"\n-\n-warn ( ) {\n-    echo \"$*\"\n-}\n-\n-die ( ) {\n-    echo\n-    echo \"$*\"\n-    echo\n-    exit 1\n-}\n-\n-# OS specific support (must be 'true' or 'false').\n-cygwin=false\n-msys=false\n-darwin=false\n-case \"`uname`\" in\n-  CYGWIN* )\n-    cygwin=true\n-    ;;\n-  Darwin* )\n-    darwin=true\n-    ;;\n-  MINGW* )\n-    msys=true\n-    ;;\n-esac\n-\n-# Attempt to set APP_HOME\n-# Resolve links: $0 may be a link\n-PRG=\"$0\"\n-# Need this for relative symlinks.\n-while [ -h \"$PRG\" ] ; do\n-    ls=`ls -ld \"$PRG\"`\n-    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n-    if expr \"$link\" : '/.*' > /dev/null; then\n-        PRG=\"$link\"\n-    else\n-        PRG=`dirname \"$PRG\"`\"/$link\"\n-    fi\n-done\n-SAVED=\"`pwd`\"\n-cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n-APP_HOME=\"`pwd -P`\"\n-cd \"$SAVED\" >/dev/null\n-\n-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n-\n-# Determine the Java command to use to start the JVM.\n-if [ -n \"$JAVA_HOME\" ] ; then\n-    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n-        # IBM's JDK on AIX uses strange locations for the executables\n-        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n-    else\n-        JAVACMD=\"$JAVA_HOME/bin/java\"\n-    fi\n-    if [ ! -x \"$JAVACMD\" ] ; then\n-        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n-\n-Please set the JAVA_HOME variable in your environment to match the\n-location of your Java installation.\"\n-    fi\n-else\n-    JAVACMD=\"java\"\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n-\n-Please set the JAVA_HOME variable in your environment to match the\n-location of your Java installation.\"\n-fi\n-\n-# Increase the maximum file descriptors if we can.\n-if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n-    MAX_FD_LIMIT=`ulimit -H -n`\n-    if [ $? -eq 0 ] ; then\n-        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n-            MAX_FD=\"$MAX_FD_LIMIT\"\n-        fi\n-        ulimit -n $MAX_FD\n-        if [ $? -ne 0 ] ; then\n-            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n-        fi\n-    else\n-        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n-    fi\n-fi\n-\n-# For Darwin, add options to specify how the application appears in the dock\n-if $darwin; then\n-    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n-fi\n-\n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin ; then\n-    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n-    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n-    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n-\n-    # We build the pattern for arguments to be converted via cygpath\n-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n-    SEP=\"\"\n-    for dir in $ROOTDIRSRAW ; do\n-        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n-        SEP=\"|\"\n-    done\n-    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n-    # Add a user-defined pattern to the cygpath arguments\n-    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n-        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n-    fi\n-    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n-    i=0\n-    for arg in \"$@\" ; do\n-        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n-        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n-\n-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n-            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n-        else\n-            eval `echo args$i`=\"\\\"$arg\\\"\"\n-        fi\n-        i=$((i+1))\n-    done\n-    case $i in\n-        (0) set -- ;;\n-        (1) set -- \"$args0\" ;;\n-        (2) set -- \"$args0\" \"$args1\" ;;\n-        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n-        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n-        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n-        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n-        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n-        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n-        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n-    esac\n-fi\n-\n-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n-function splitJvmOpts() {\n-    JVM_OPTS=(\"$@\")\n-}\n-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n-JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n-\n-exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "469b7c2e82801a9d686e693d7e69c040175818b3",
        "previous commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "diff stats": {
            "file_path": "GsonJsonWebservice/gradlew.bat",
            "additions": 0,
            "deletions": 90
        },
        "diff content": "@@ -1,90 +0,0 @@\n-@if \"%DEBUG%\" == \"\" @echo off\r\n-@rem ##########################################################################\r\n-@rem\r\n-@rem  Gradle startup script for Windows\r\n-@rem\r\n-@rem ##########################################################################\r\n-\r\n-@rem Set local scope for the variables with windows NT shell\r\n-if \"%OS%\"==\"Windows_NT\" setlocal\r\n-\r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\r\n-\r\n-set DIRNAME=%~dp0\r\n-if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n-set APP_BASE_NAME=%~n0\r\n-set APP_HOME=%DIRNAME%\r\n-\r\n-@rem Find java.exe\r\n-if defined JAVA_HOME goto findJavaFromJavaHome\r\n-\r\n-set JAVA_EXE=java.exe\r\n-%JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:findJavaFromJavaHome\r\n-set JAVA_HOME=%JAVA_HOME:\"=%\r\n-set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n-\r\n-if exist \"%JAVA_EXE%\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:init\r\n-@rem Get command-line arguments, handling Windowz variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-goto execute\r\n-\r\n-:4NT_args\r\n-@rem Get arguments from the 4NT Shell from JP Software\r\n-set CMD_LINE_ARGS=%$\r\n-\r\n-:execute\r\n-@rem Setup the command line\r\n-\r\n-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n-\r\n-@rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n-\r\n-:end\r\n-@rem End local scope for the variables with windows NT shell\r\n-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n-\r\n-:fail\r\n-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n-rem the _cmd.exe /c_ return code!\r\n-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n-exit /b 1\r\n-\r\n-:mainEnd\r\n-if \"%OS%\"==\"Windows_NT\" endlocal\r\n-\r\n-:omega\r\n"
    },
    {
        "commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "previous commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/MainActivityPageObject.kt",
            "additions": 4,
            "deletions": 4
        },
        "diff content": "@@ -14,15 +14,15 @@ fun mainPage(func: MainActivityPageObject.() -> Unit) = MainActivityPageObject()\n class MainActivityPageObject {\n \n     private val TITLE = onView(withId(R.id.titleTextView))\n+    private val CATEGORY_LIST = onView(withId(R.id.categoryListView))\n \n     fun verifyTitle() = apply {\n         TITLE.check(matches(isDisplayed()))\n     }\n \n-    fun navigateToProductList() = apply {\n-        val categoryMatcher = ViewMatchers.withCategoryTitle(\"HATS\")\n+    fun navigateToProductList(category: String) = apply {\n+        val categoryMatcher = ViewMatchers.withCategoryTitle(category)\n \n-        onView(withId(R.id.categoryListView))\n-                .perform(actionOnHolderItem(categoryMatcher, click()))\n+        CATEGORY_LIST.perform(actionOnHolderItem(categoryMatcher, click()))\n     }\n }\n"
    },
    {
        "commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "previous commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/ProductDetailsPageObject.kt",
            "additions": 6,
            "deletions": 2
        },
        "diff content": "@@ -6,9 +6,13 @@ import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n import android.support.test.espresso.matcher.ViewMatchers.withId\n import com.novoda.androidstoreexample.R\n \n+fun productDetailsPage(func: ProductDetailsPageObject.() -> Unit) = ProductDetailsPageObject().apply(func)\n+\n class ProductDetailsPageObject {\n \n-    fun assertProductDetailsDisplayed() {\n-        onView(withId(R.id.productDetailDescription)).check(matches(isDisplayed()))\n+    private val PRODUCT_DESCRIPTION = onView(withId(R.id.productDetailDescription))\n+\n+    fun assertProductDetailsDisplayed() = apply {\n+        PRODUCT_DESCRIPTION.check(matches(isDisplayed()))\n     }\n }\n"
    },
    {
        "commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "previous commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/ProductListPageObject.kt",
            "additions": 9,
            "deletions": 3
        },
        "diff content": "@@ -7,11 +7,17 @@ import android.support.test.espresso.matcher.ViewMatchers.withId\n import com.novoda.androidstoreexample.R\n import com.novoda.androidstoreexample.ViewMatchers\n \n+fun productList(func: ProductListPageObject.() -> Unit) {\n+    ProductListPageObject().apply(func)\n+}\n+\n class ProductListPageObject {\n \n-    fun navigateToProductDetails() {\n-        val productMatcher = ViewMatchers.withProductTitle(\"hat white\")\n+    private val PRODUCT_LIST = onView(withId(R.id.productListView))\n+\n+    fun navigateToProductDetails(product: String) = apply {\n+        val productMatcher = ViewMatchers.withProductTitle(product)\n \n-        onView(withId(R.id.productListView)).perform(RecyclerViewActions.actionOnHolderItem(productMatcher, ViewActions.click()))\n+        PRODUCT_LIST.perform(RecyclerViewActions.actionOnHolderItem(productMatcher, ViewActions.click()))\n     }\n }\n"
    },
    {
        "commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "previous commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExample.kt",
            "additions": 8,
            "deletions": 11
        },
        "diff content": "@@ -2,18 +2,12 @@ package com.novoda.androidstoreexample.tests\n \n import android.support.test.rule.ActivityTestRule\n import com.novoda.androidstoreexample.activities.MainActivity\n-import com.novoda.androidstoreexample.pageobjects.MainActivityPageObject\n-import com.novoda.androidstoreexample.pageobjects.ProductDetailsPageObject\n-import com.novoda.androidstoreexample.pageobjects.ProductListPageObject\n-import com.novoda.androidstoreexample.pageobjects.mainPage\n+import com.novoda.androidstoreexample.pageobjects.*\n import org.junit.Rule\n import org.junit.Test\n \n class EspressoTestExample {\n \n-    private val productListPageObject = ProductListPageObject()\n-    private val productDetailsPageObject = ProductDetailsPageObject()\n-\n     private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n \n     @get:Rule\n@@ -23,12 +17,15 @@ class EspressoTestExample {\n     fun firstNavigationTest() {\n \n         mainPage {\n-            navigateToProductList()\n+            navigateToProductList(\"HATS\")\n         }\n \n+        productList {\n+            navigateToProductDetails(\"hat white\")\n+        }\n \n-        productListPageObject.navigateToProductDetails()\n-\n-        productDetailsPageObject.assertProductDetailsDisplayed()\n+        productDetailsPage {\n+            assertProductDetailsDisplayed()\n+        }\n     }\n }\n"
    },
    {
        "commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "previous commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoUserFlowTests.kt",
            "additions": 9,
            "deletions": 11
        },
        "diff content": "@@ -5,15 +5,11 @@ import com.novoda.androidstoreexample.activities.MainActivity\n import com.novoda.androidstoreexample.pageobjects.MainActivityPageObject\n import com.novoda.androidstoreexample.pageobjects.ProductDetailsPageObject\n import com.novoda.androidstoreexample.pageobjects.ProductListPageObject\n+import com.novoda.androidstoreexample.userflows.productUserFlow\n import org.junit.Rule\n import org.junit.Test\n \n class EspressoUserFlowTests {\n-\n-    private val mainActivityPageObject = MainActivityPageObject()\n-    private val productListPageObject = ProductListPageObject()\n-    private val productDetailsPageObject = ProductDetailsPageObject()\n-\n     private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n \n     @get:Rule\n@@ -21,11 +17,13 @@ class EspressoUserFlowTests {\n \n     @Test\n     fun navigateToProductDetailsTest() {\n-\n-        mainActivityPageObject.navigateToProductList()\n-\n-        productListPageObject.navigateToProductDetails()\n-\n-        productDetailsPageObject.assertProductDetailsDisplayed()\n+        val category = \"HATS\"\n+        val product = \"hat white\"\n+\n+        productUserFlow {\n+            navigateToCategory(category)\n+            openItemFromProductlist(product)\n+            checkThatCorrectProductIsDisplayed()\n+        }\n     }\n }\n"
    },
    {
        "commit hash": "32608ddc2e1b20767d4097abadf3c93d4d1d9a2b",
        "previous commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/userflows/ProductUserFlow.kt",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+package com.novoda.androidstoreexample.userflows\n+\n+import com.novoda.androidstoreexample.pageobjects.mainPage\n+import com.novoda.androidstoreexample.pageobjects.productDetailsPage\n+import com.novoda.androidstoreexample.pageobjects.productList\n+\n+fun productUserFlow(func: ItemUserFlow.() -> Unit) { ItemUserFlow().apply(func) }\n+\n+class ItemUserFlow {\n+    fun navigateToCategory(category: String) = apply {\n+        mainPage {\n+            navigateToProductList(category)\n+        }\n+    }\n+\n+    fun openItemFromProductlist(product: String) = apply {\n+        productList {\n+            navigateToProductDetails(product)\n+        }\n+    }\n+\n+    fun checkThatCorrectProductIsDisplayed() = apply {\n+        productDetailsPage {\n+            assertProductDetailsDisplayed()\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "previous commit hash": "7b4e17c6e12ef7e79bc81b43d55965c9d958752d",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExample.kt",
            "additions": 5,
            "deletions": 2
        },
        "diff content": "@@ -5,12 +5,12 @@ import com.novoda.androidstoreexample.activities.MainActivity\n import com.novoda.androidstoreexample.pageobjects.MainActivityPageObject\n import com.novoda.androidstoreexample.pageobjects.ProductDetailsPageObject\n import com.novoda.androidstoreexample.pageobjects.ProductListPageObject\n+import com.novoda.androidstoreexample.pageobjects.mainPage\n import org.junit.Rule\n import org.junit.Test\n \n class EspressoTestExample {\n \n-    private val mainActivityPageObject = MainActivityPageObject()\n     private val productListPageObject = ProductListPageObject()\n     private val productDetailsPageObject = ProductDetailsPageObject()\n \n@@ -22,7 +22,10 @@ class EspressoTestExample {\n     @Test\n     fun firstNavigationTest() {\n \n-        mainActivityPageObject.navigateToProductList()\n+        mainPage {\n+            navigateToProductList()\n+        }\n+\n \n         productListPageObject.navigateToProductDetails()\n \n"
    },
    {
        "commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "previous commit hash": "7b4e17c6e12ef7e79bc81b43d55965c9d958752d",
        "diff stats": {
            "file_path": "GsonJsonWebservice/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/GsonJsonWebservice/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "previous commit hash": "7b4e17c6e12ef7e79bc81b43d55965c9d958752d",
        "diff stats": {
            "file_path": "GsonJsonWebservice/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Tue Jan 23 17:14:20 CET 2018\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip\n"
    },
    {
        "commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "previous commit hash": "7b4e17c6e12ef7e79bc81b43d55965c9d958752d",
        "diff stats": {
            "file_path": "GsonJsonWebservice/gradlew",
            "additions": 160,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "ae54d5018421231eb01a612956bb6293f84e54cb",
        "previous commit hash": "7b4e17c6e12ef7e79bc81b43d55965c9d958752d",
        "diff stats": {
            "file_path": "GsonJsonWebservice/gradlew.bat",
            "additions": 90,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,90 @@\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:init\r\n+@rem Get command-line arguments, handling Windowz variants\r\n+\r\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n+if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n+\r\n+:win9xME_args\r\n+@rem Slurp the command line arguments.\r\n+set CMD_LINE_ARGS=\r\n+set _SKIP=2\r\n+\r\n+:win9xME_args_slurp\r\n+if \"x%~1\" == \"x\" goto execute\r\n+\r\n+set CMD_LINE_ARGS=%*\r\n+goto execute\r\n+\r\n+:4NT_args\r\n+@rem Get arguments from the 4NT Shell from JP Software\r\n+set CMD_LINE_ARGS=%$\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\n"
    },
    {
        "commit hash": "c8504f0d9254d555d471674e1027885d38062286",
        "previous commit hash": "262b2d3d934f3d79520d7bea7973db7605c4ca17",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExample.kt",
            "additions": 0,
            "deletions": 31
        },
        "diff content": "@@ -1,31 +0,0 @@\n-package com.novoda.androidstoreexample.tests\n-\n-import android.support.test.rule.ActivityTestRule\n-import com.novoda.androidstoreexample.activities.MainActivity\n-import com.novoda.androidstoreexample.pageobjects.MainActivityPageObject\n-import com.novoda.androidstoreexample.pageobjects.ProductDetailsPageObject\n-import com.novoda.androidstoreexample.pageobjects.ProductListPageObject\n-import org.junit.Rule\n-import org.junit.Test\n-\n-class EspressoTestExample {\n-\n-    private val mainActivityPageObject = MainActivityPageObject()\n-    private val productListPageObject = ProductListPageObject()\n-    private val productDetailsPageObject = ProductDetailsPageObject()\n-\n-    private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n-\n-    @get:Rule\n-    var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n-\n-    @Test\n-    fun firstNavigationTest() {\n-\n-        mainActivityPageObject.navigateToProductList()\n-\n-        productListPageObject.navigateToProductDetails()\n-\n-        productDetailsPageObject.assertProductDetailsDisplayed()\n-    }\n-}\n"
    },
    {
        "commit hash": "262b2d3d934f3d79520d7bea7973db7605c4ca17",
        "previous commit hash": "dafbef3b88d58ad54122b07e1f597939a2f19b72",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/HeaderPageObject.kt",
            "additions": 0,
            "deletions": 16
        },
        "diff content": "@@ -1,16 +0,0 @@\n-package com.novoda.androidstoreexample.pageobjects\n-\n-import android.support.test.espresso.Espresso.onView\n-import android.support.test.espresso.ViewInteraction\n-import android.support.test.espresso.assertion.ViewAssertions.matches\n-import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n-import android.support.test.espresso.matcher.ViewMatchers.withId\n-import com.novoda.androidstoreexample.R\n-\n-class HeaderPageObject {\n-    private val HEADER: ViewInteraction = onView(withId(R.id.action_bar_container))\n-\n-    fun verifyHeader() {\n-        HEADER.check(matches(isDisplayed()))\n-    }\n-}\n"
    },
    {
        "commit hash": "7b4e17c6e12ef7e79bc81b43d55965c9d958752d",
        "previous commit hash": "e5c06872d8141a051d0c81243a05b71e4a44f8c5",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/MainActivityPageObject.kt",
            "additions": 4,
            "deletions": 2
        },
        "diff content": "@@ -9,15 +9,17 @@ import android.support.test.espresso.matcher.ViewMatchers.withId\n import com.novoda.androidstoreexample.R\n import com.novoda.androidstoreexample.ViewMatchers\n \n+fun mainPage(func: MainActivityPageObject.() -> Unit) = MainActivityPageObject().apply(func)\n+\n class MainActivityPageObject {\n \n     private val TITLE = onView(withId(R.id.titleTextView))\n \n-    fun verifyTitle() {\n+    fun verifyTitle() = apply {\n         TITLE.check(matches(isDisplayed()))\n     }\n \n-    fun navigateToProductList() {\n+    fun navigateToProductList() = apply {\n         val categoryMatcher = ViewMatchers.withCategoryTitle(\"HATS\")\n \n         onView(withId(R.id.categoryListView))\n"
    },
    {
        "commit hash": "dafbef3b88d58ad54122b07e1f597939a2f19b72",
        "previous commit hash": "e5c06872d8141a051d0c81243a05b71e4a44f8c5",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/HeaderTests.kt",
            "additions": 0,
            "deletions": 16
        },
        "diff content": "@@ -1,16 +0,0 @@\n-package com.novoda.androidstoreexample.tests\n-\n-import android.support.test.rule.ActivityTestRule\n-import com.novoda.androidstoreexample.activities.ProductListActivity\n-import com.novoda.androidstoreexample.pageobjects.HeaderPageObject\n-import org.junit.Test\n-\n-class HeaderTests {\n-    private val activityTestRule = ActivityTestRule<ProductListActivity>(ProductListActivity::class.java)\n-\n-    @Test\n-    fun actionBarIsDisplayed() {\n-        val headerPageObject = HeaderPageObject()\n-        headerPageObject.verifyHeader()\n-    }\n-}\n"
    },
    {
        "commit hash": "dafbef3b88d58ad54122b07e1f597939a2f19b72",
        "previous commit hash": "e5c06872d8141a051d0c81243a05b71e4a44f8c5",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/JavaHeaderTests.java",
            "additions": 0,
            "deletions": 21
        },
        "diff content": "@@ -1,21 +0,0 @@\n-package com.novoda.androidstoreexample.tests;\n-\n-import android.support.test.rule.ActivityTestRule;\n-\n-import com.novoda.androidstoreexample.activities.MainActivity;\n-import com.novoda.androidstoreexample.pageobjects.HeaderPageObject;\n-\n-import org.junit.Rule;\n-import org.junit.Test;\n-\n-public class JavaHeaderTests {\n-    @Rule\n-    public ActivityTestRule<MainActivity> activityTestRule = new ActivityTestRule(MainActivity.class);\n-\n-    @Test\n-    public void actionBarIsDisplayed() {\n-        HeaderPageObject headerPageObject = new HeaderPageObject();\n-        headerPageObject.verifyHeader();\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "b226bb60cd06397dd50333deadf41d2eae10eba5",
        "previous commit hash": "7bd478090bf922df85f8c302ccfb026441c6c913",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/item_repository.rb",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -6,7 +6,7 @@ class ItemRepository\n   def initialize\n     @items = { '3': [\n         Item.new(1, 'Hat Green', '$18', 'hat1', get_random_description(4)),\n-        Item.new(2, 'Hat Black', '$12', 'hat2', get_random_description(2),\n+        Item.new(2, 'Hat Black', '$12', 'hat2', get_random_description(2)),\n         Item.new(3, 'Hat White', '$11', 'hat3', get_random_description(3)),\n         Item.new(4, 'Hat Blue', '$29', 'hat4', get_random_description(1)),\n     ],\n"
    },
    {
        "commit hash": "7bd478090bf922df85f8c302ccfb026441c6c913",
        "previous commit hash": "b1a48a80c41b6efd02caa0c7a8343620bfcf49c9",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/ProductListInteractorImpl.kt",
            "additions": 13,
            "deletions": 12
        },
        "diff content": "@@ -15,20 +15,21 @@ class ProductListInteractorImpl @Inject constructor(val retrofit: Retrofit, priv\n     private var call: Call<ProductResponse>? = null\n \n     override fun loadProductList(produListListener: ProductListListener, category: Int) {\n-        call = apiService.getProductsFromCategory(category)\n-        call?.enqueue(object : Callback<ProductResponse> {\n-            override fun onFailure(call: Call<ProductResponse>?, t: Throwable?) {\n-                produListListener.onFailure(\"Error while fetching\")\n-            }\n+        call = apiService.getProductsFromCategory(category).apply {\n+            enqueue(object : Callback<ProductResponse> {\n+                override fun onFailure(call: Call<ProductResponse>, t: Throwable) {\n+                    produListListener.onFailure(\"Error while fetching\")\n+                }\n \n-            override fun onResponse(call: Call<ProductResponse>?, response: Response<ProductResponse>?) {\n-                if (response?.isSuccessful!!) {\n-                    produListListener.onSuccess(response.body()!!)\n-                } else {\n-                    produListListener.onFailure(\"Error while fetching data\")\n+                override fun onResponse(call: Call<ProductResponse>, response: Response<ProductResponse>) {\n+                    if (response.isSuccessful) {\n+                        produListListener.onSuccess(response.body()!!)\n+                    } else {\n+                        produListListener.onFailure(\"Error while fetching data\")\n+                    }\n                 }\n-            }\n-        })\n+            })\n+        }\n     }\n \n     override fun cancel() {\n"
    },
    {
        "commit hash": "b1a48a80c41b6efd02caa0c7a8343620bfcf49c9",
        "previous commit hash": "fc234eadfe7059fc98e5f9f5f7bfbc282116f628",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/item_repository.rb",
            "additions": 6,
            "deletions": 6
        },
        "diff content": "@@ -19,15 +19,15 @@ class ItemRepository\n     @items[category]\n   end\n \n-  def get_random_description(number_of_sentences=2)\n+  def get_random_description(number_of_sentences)\n     Faker::Hipster.sentences(number_of_sentences).join(' ')\n   end\n \n-  def get_item_for_id(id)\n-    @items.each do |k, v|\n-      p \"id = #{k}\"\n-      items = v.find_all {|item|\n-        item.id == id.to_i}\n+  def get_item_for_id(item_id)\n+    @items.each do |category, items_in_category|\n+      p \"category id = #{category}\"\n+      items = items_in_category.find_all {|item|\n+        item.id == item_id.to_i}\n       return items[0]\n     end\n   end\n"
    },
    {
        "commit hash": "fc234eadfe7059fc98e5f9f5f7bfbc282116f628",
        "previous commit hash": "52a6235a6039d55585ba89843bfc5ca54a7f1d5f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/productDetails/ProductDetailsModule.kt",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,7 +1,7 @@\n package com.novoda.androidstoreexample.dagger.productDetails\n \n import com.novoda.androidstoreexample.mvp.interactor.ProductDetailsInteractor\n-import com.novoda.androidstoreexample.mvp.interactor.impl.ProductDetailsInterActorImpl\n+import com.novoda.androidstoreexample.mvp.interactor.impl.ProductDetailsInteractorImpl\n import com.novoda.androidstoreexample.mvp.presenter.ProductDetailPresenter\n import com.novoda.androidstoreexample.mvp.presenter.impl.ProductDetailPresenterImpl\n import com.novoda.androidstoreexample.mvp.view.ProductDetailView\n@@ -20,7 +20,7 @@ class ProductDetailsModule(val productDetailView: ProductDetailView) {\n     }\n \n     @Provides\n-    fun providesInteractor(productDetailsInteractor: ProductDetailsInterActorImpl): ProductDetailsInteractor {\n+    fun providesInteractor(productDetailsInteractor: ProductDetailsInteractorImpl): ProductDetailsInteractor {\n         return productDetailsInteractor\n     }\n }\n"
    },
    {
        "commit hash": "52a6235a6039d55585ba89843bfc5ca54a7f1d5f",
        "previous commit hash": "1d14e369a8bdc3d39fcb6c9a196ceb40ad201e1b",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/RetrofitModule.kt",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,8 +1,8 @@\n package com.novoda.androidstoreexample.dagger.module\n \n+import com.novoda.androidstoreexample.services.ShopService\n import dagger.Module\n import dagger.Provides\n-import com.novoda.androidstoreexample.services.ShopService\n import okhttp3.OkHttpClient\n import retrofit2.Converter\n import retrofit2.Retrofit\n@@ -31,4 +31,4 @@ class RetrofitModule {\n     fun providesMoshi(): Converter.Factory {\n         return MoshiConverterFactory.create()\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "1d14e369a8bdc3d39fcb6c9a196ceb40ad201e1b",
        "previous commit hash": "5e2f7d48b63caab3efbaa37113ee48461b0f2afe",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/categoryList/CategoryListModule.kt",
            "additions": 4,
            "deletions": 9
        },
        "diff content": "@@ -1,20 +1,15 @@\n package com.novoda.androidstoreexample.dagger.categoryList\n \n-import dagger.Module\n-import dagger.Provides\n import com.novoda.androidstoreexample.mvp.interactor.CategoryListInteractor\n import com.novoda.androidstoreexample.mvp.interactor.impl.CategoryListInteractorImpl\n import com.novoda.androidstoreexample.mvp.presenter.CategoryListPresenter\n import com.novoda.androidstoreexample.mvp.presenter.impl.CategoryListPresenterImpl\n import com.novoda.androidstoreexample.mvp.view.CategoryListView\n+import dagger.Module\n+import dagger.Provides\n \n @Module\n-class CategoryListModule {\n-    val categoryListView: CategoryListView\n-\n-    constructor(categoryListView: CategoryListView) {\n-        this.categoryListView = categoryListView\n-    }\n+class CategoryListModule(val categoryListView: CategoryListView) {\n \n     @Provides\n     fun providesView(): CategoryListView = categoryListView\n@@ -28,4 +23,4 @@ class CategoryListModule {\n     fun providesInteractor(categoryListInteractor: CategoryListInteractorImpl): CategoryListInteractor {\n         return categoryListInteractor\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "5e2f7d48b63caab3efbaa37113ee48461b0f2afe",
        "previous commit hash": "5d603ce260b60eb811f2377d972a194e5a74784c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/CategoryListInteractorImpl.kt",
            "additions": 13,
            "deletions": 12
        },
        "diff content": "@@ -15,20 +15,21 @@ class CategoryListInteractorImpl @Inject constructor(val retrofit: Retrofit, pri\n     private var call: Call<CategoryResponse>? = null\n \n     override fun loadCategoryList(categoryListListener: CategoryListListener) {\n-        call = apiService.getCategories()\n-        call?.enqueue(object : Callback<CategoryResponse> {\n-            override fun onResponse(call: Call<CategoryResponse>?, response: Response<CategoryResponse>?) {\n-                if (response?.isSuccessful!!) {\n-                    categoryListListener.onSuccess(response.body()!!)\n-                } else {\n-                    categoryListListener.onFailure(\"Error while fetching data\")\n+        call = apiService.getCategories().apply {\n+            enqueue(object : Callback<CategoryResponse> {\n+                override fun onResponse(call: Call<CategoryResponse>, response: Response<CategoryResponse>) {\n+                    if (response.isSuccessful) {\n+                        categoryListListener.onSuccess(response.body()!!)\n+                    } else {\n+                        categoryListListener.onFailure(\"Error while fetching data\")\n+                    }\n                 }\n-            }\n \n-            override fun onFailure(call: Call<CategoryResponse>?, t: Throwable?) {\n-                categoryListListener.onFailure(\"Error while fetching data\")\n-            }\n-        })\n+                override fun onFailure(call: Call<CategoryResponse>, t: Throwable) {\n+                    categoryListListener.onFailure(\"Error while fetching data\")\n+                }\n+            })\n+        }\n     }\n \n     override fun cancel() {\n"
    },
    {
        "commit hash": "5e2f7d48b63caab3efbaa37113ee48461b0f2afe",
        "previous commit hash": "5d603ce260b60eb811f2377d972a194e5a74784c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/ProductDetailsInterActorImpl.kt",
            "additions": 0,
            "deletions": 45
        },
        "diff content": "@@ -1,45 +0,0 @@\n-package com.novoda.androidstoreexample.mvp.interactor.impl\n-\n-import com.novoda.androidstoreexample.mvp.interactor.ProductDetailsInteractor\n-import com.novoda.androidstoreexample.mvp.listener.ProductDetailsListener\n-import com.novoda.androidstoreexample.services.ProductDetailsResponse\n-import com.novoda.androidstoreexample.services.ShopService\n-import retrofit2.Call\n-import retrofit2.Callback\n-import retrofit2.Response\n-import retrofit2.Retrofit\n-import javax.inject.Inject\n-\n-class ProductDetailsInterActorImpl : ProductDetailsInteractor {\n-    private val retrofit: Retrofit\n-    private val shopService: ShopService\n-\n-    private lateinit var call: Call<ProductDetailsResponse>\n-\n-    @Inject\n-    constructor(retrofit: Retrofit, shopService: ShopService) {\n-        this.retrofit = retrofit\n-        this.shopService = shopService\n-    }\n-\n-    override fun cancel() {\n-        call.cancel()\n-    }\n-\n-    override fun loadProductDetails(productDetailsListener: ProductDetailsListener, itemId: Int) {\n-        call = shopService.getItemForId(itemId)\n-        call.enqueue(object : Callback<ProductDetailsResponse> {\n-            override fun onFailure(call: Call<ProductDetailsResponse>?, t: Throwable?) {\n-                productDetailsListener.onFailure(\"Error\")\n-            }\n-\n-            override fun onResponse(call: Call<ProductDetailsResponse>?, response: Response<ProductDetailsResponse>?) {\n-                if (response != null && response.isSuccessful) {\n-                    productDetailsListener.onSuccess(response.body()!!)\n-                } else {\n-                    productDetailsListener.onFailure(\"Error\")\n-                }\n-            }\n-        })\n-    }\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "5e2f7d48b63caab3efbaa37113ee48461b0f2afe",
        "previous commit hash": "5d603ce260b60eb811f2377d972a194e5a74784c",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/ProductDetailsInteractorImpl.kt",
            "additions": 37,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,37 @@\n+package com.novoda.androidstoreexample.mvp.interactor.impl\n+\n+import com.novoda.androidstoreexample.mvp.interactor.ProductDetailsInteractor\n+import com.novoda.androidstoreexample.mvp.listener.ProductDetailsListener\n+import com.novoda.androidstoreexample.services.ProductDetailsResponse\n+import com.novoda.androidstoreexample.services.ShopService\n+import retrofit2.Call\n+import retrofit2.Callback\n+import retrofit2.Response\n+import javax.inject.Inject\n+\n+class ProductDetailsInteractorImpl @Inject constructor(private val shopService: ShopService) : ProductDetailsInteractor {\n+\n+    private var call: Call<ProductDetailsResponse>? = null\n+\n+    override fun loadProductDetails(productDetailsListener: ProductDetailsListener, itemId: Int) {\n+        call = shopService.getItemForId(itemId).apply {\n+            enqueue(object : Callback<ProductDetailsResponse> {\n+                override fun onFailure(call: Call<ProductDetailsResponse>, t: Throwable) {\n+                    productDetailsListener.onFailure(\"Error\")\n+                }\n+\n+                override fun onResponse(call: Call<ProductDetailsResponse>, response: Response<ProductDetailsResponse>) {\n+                    if (response.isSuccessful) {\n+                        productDetailsListener.onSuccess(response.body()!!)\n+                    } else {\n+                        productDetailsListener.onFailure(\"Error\")\n+                    }\n+                }\n+            })\n+        }\n+    }\n+\n+    override fun cancel() {\n+        call?.cancel()\n+    }\n+}\n"
    },
    {
        "commit hash": "5d603ce260b60eb811f2377d972a194e5a74784c",
        "previous commit hash": "4228a7863069f9a1c5c71f670cb392d3913acc28",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/models/Category.kt",
            "additions": 1,
            "deletions": 5
        },
        "diff content": "@@ -1,7 +1,3 @@\n package com.novoda.androidstoreexample.models\n \n-data class Category(val id: Int, val title: String, val image: String) {\n-    override fun toString(): String {\n-        return title\n-    }\n-}\n+data class Category(val id: Int, val title: String, val image: String)\n"
    },
    {
        "commit hash": "4228a7863069f9a1c5c71f670cb392d3913acc28",
        "previous commit hash": "700d476a4e7d94865f92e8b20a98a9af1ae6a1fc",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/MainActivity.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -54,7 +54,7 @@ class MainActivity : BaseActivity(), CategoryListView {\n     }\n \n     override fun onItemClicked(type: Int) {\n-        intent = Intent(this, ProductListActivity::class.java).apply { putExtra(CATEGORY_ID_EXTRA, type) }\n+        val intent = Intent(this, ProductListActivity::class.java).apply { putExtra(CATEGORY_ID_EXTRA, type) }\n         startActivity(intent)\n     }\n \n"
    },
    {
        "commit hash": "700d476a4e7d94865f92e8b20a98a9af1ae6a1fc",
        "previous commit hash": "217b15b9dcc9a6c2a8d4d4bf54bfc3d162450ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/ClientModule.kt",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -4,6 +4,7 @@ import dagger.Module\n import dagger.Provides\n import okhttp3.OkHttpClient\n import java.util.concurrent.TimeUnit\n+import javax.inject.Named\n import javax.inject.Singleton\n \n @Module\n@@ -11,7 +12,7 @@ class ClientModule {\n \n     @Provides\n     @Singleton\n-    fun provideClient(networkTimeout: Long): OkHttpClient {\n+    fun provideClient(@Named(\"NETWORK_TIMEOUT\") networkTimeout: Long): OkHttpClient {\n \n         return OkHttpClient.Builder()\n                 .readTimeout(networkTimeout, TimeUnit.SECONDS)\n"
    },
    {
        "commit hash": "700d476a4e7d94865f92e8b20a98a9af1ae6a1fc",
        "previous commit hash": "217b15b9dcc9a6c2a8d4d4bf54bfc3d162450ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/HostModule.kt",
            "additions": 7,
            "deletions": 6
        },
        "diff content": "@@ -1,21 +1,22 @@\n package com.novoda.androidstoreexample.dagger.module\n \n+import com.novoda.androidstoreexample.BuildConfig\n import dagger.Module\n import dagger.Provides\n-import com.novoda.androidstoreexample.BuildConfig\n-import javax.inject.Singleton\n+import javax.inject.Named\n \n @Module\n open class HostModule {\n-    val NETWORK_TIMEOUT_SECONDS = 60L\n+    companion object {\n+        const val NETWORK_TIMEOUT_SECONDS = 60L\n+    }\n \n     @Provides\n-    @Singleton\n+    @Named(\"NETWORK_TIMEOUT\")\n     fun provideNetworkTimeout(): Long = NETWORK_TIMEOUT_SECONDS\n \n     @Provides\n-    @Singleton\n     open fun provideBaseUrl(): String {\n         return BuildConfig.API_URL\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "217b15b9dcc9a6c2a8d4d4bf54bfc3d162450ec4",
        "previous commit hash": "f33e9d822557778392632be16d91d8c743bd175e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/App.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -7,15 +7,12 @@ import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n class App : Application() {\n \n     companion object {\n-        @JvmStatic\n-        lateinit var instance: App\n         @JvmStatic\n         lateinit var component: AppComponent\n     }\n \n     override fun onCreate() {\n         super.onCreate()\n-        instance = this\n         component = DaggerAppComponent.create()\n     }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "217b15b9dcc9a6c2a8d4d4bf54bfc3d162450ec4",
        "previous commit hash": "f33e9d822557778392632be16d91d8c743bd175e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/component/AppComponent.kt",
            "additions": 6,
            "deletions": 3
        },
        "diff content": "@@ -2,18 +2,21 @@ package com.novoda.androidstoreexample.dagger.component\n \n import com.novoda.androidstoreexample.dagger.basket.BasketComponent\n import com.novoda.androidstoreexample.dagger.basket.BasketModule\n-import dagger.Component\n import com.novoda.androidstoreexample.dagger.categoryList.CategoryListComponent\n import com.novoda.androidstoreexample.dagger.categoryList.CategoryListModule\n import com.novoda.androidstoreexample.dagger.categoryList.ProductListComponent\n import com.novoda.androidstoreexample.dagger.categoryList.ProductListModule\n-import com.novoda.androidstoreexample.dagger.module.*\n+import com.novoda.androidstoreexample.dagger.module.BasketServiceModule\n+import com.novoda.androidstoreexample.dagger.module.ClientModule\n+import com.novoda.androidstoreexample.dagger.module.HostModule\n+import com.novoda.androidstoreexample.dagger.module.RetrofitModule\n import com.novoda.androidstoreexample.dagger.productDetails.ProductDetailsComponent\n import com.novoda.androidstoreexample.dagger.productDetails.ProductDetailsModule\n+import dagger.Component\n import javax.inject.Singleton\n \n @Singleton\n-@Component(modules = arrayOf(AppModule::class, HostModule::class, RetrofitModule::class, ClientModule::class, BasketServiceModule::class))\n+@Component(modules = [(HostModule::class), (RetrofitModule::class), (ClientModule::class), (BasketServiceModule::class)])\n interface AppComponent {\n     fun injectCategory(categoryListModule: CategoryListModule): CategoryListComponent\n     fun injectProducts(productListModule: ProductListModule): ProductListComponent\n"
    },
    {
        "commit hash": "217b15b9dcc9a6c2a8d4d4bf54bfc3d162450ec4",
        "previous commit hash": "f33e9d822557778392632be16d91d8c743bd175e",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/AppModule.kt",
            "additions": 0,
            "deletions": 20
        },
        "diff content": "@@ -1,20 +0,0 @@\n-package com.novoda.androidstoreexample.dagger.module\n-\n-import android.content.Context\n-import android.content.res.Resources\n-import dagger.Module\n-import dagger.Provides\n-import com.novoda.androidstoreexample.dagger.App\n-import javax.inject.Singleton\n-\n-@Module\n-class AppModule {\n-\n-    @Provides\n-    @Singleton\n-    fun provideContext(): Context = App.instance\n-\n-    @Provides\n-    @Singleton\n-    fun providingResources(context: Context): Resources = context.resources\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f33e9d822557778392632be16d91d8c743bd175e",
        "previous commit hash": "309a3a7ddb54a40e535f2b8fe88b89ad9d8674ce",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/MockServerTestExample.kt",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -9,7 +9,7 @@ import android.support.test.espresso.matcher.ViewMatchers.withText\n import android.support.test.rule.ActivityTestRule\n import com.novoda.androidstoreexample.EspressoHostModule\n import com.novoda.androidstoreexample.activities.MainActivity\n-import com.novoda.androidstoreexample.dagger.App.Companion.component\n+import com.novoda.androidstoreexample.dagger.App\n import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n import com.squareup.okhttp.mockwebserver.MockResponse\n import com.squareup.okhttp.mockwebserver.MockWebServer\n@@ -32,7 +32,7 @@ class MockServerTestExample {\n     @Throws(Exception::class)\n     fun setUp() {\n         val appComponent = DaggerAppComponent.builder().hostModule(EspressoHostModule(port)).build()\n-        component = appComponent\n+        App.Companion.component = appComponent\n         mockWebServer.play(port)\n     }\n \n"
    },
    {
        "commit hash": "309a3a7ddb54a40e535f2b8fe88b89ad9d8674ce",
        "previous commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/basket.rb",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -10,7 +10,6 @@ class Basket\n \n   def add_to_basket(item)\n     item_id = item.id\n-    p item_id\n     if @items_in_basket.key?(item_id)\n       @items_in_basket[item_id] += 1\n     else\n"
    },
    {
        "commit hash": "309a3a7ddb54a40e535f2b8fe88b89ad9d8674ce",
        "previous commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/item_repository.rb",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -6,7 +6,7 @@ class ItemRepository\n   def initialize\n     @items = { '3': [\n         Item.new(1, 'Hat Green', '$18', 'hat1', get_random_description(4)),\n-        Item.new(2, 'Hat Black', '$12', 'hat2', get_random_description),\n+        Item.new(2, 'Hat Black', '$12', 'hat2', get_random_description(2),\n         Item.new(3, 'Hat White', '$11', 'hat3', get_random_description(3)),\n         Item.new(4, 'Hat Blue', '$29', 'hat4', get_random_description(1)),\n     ],\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/MainActivityPageObject.kt",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -20,6 +20,7 @@ class MainActivityPageObject {\n     fun navigateToProductList() {\n         val categoryMatcher = ViewMatchers.withCategoryTitle(\"HATS\")\n \n-        onView(withId(R.id.categoryListView)).perform(actionOnHolderItem(categoryMatcher, click()))\n+        onView(withId(R.id.categoryListView))\n+                .perform(actionOnHolderItem(categoryMatcher, click()))\n     }\n }\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/BaseActivity.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -20,4 +20,4 @@ abstract class BaseActivity : AppCompatActivity(), BaseView {\n \n     override fun showMessage(message: String) {\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/BasketActivity.kt",
            "additions": 2,
            "deletions": 4
        },
        "diff content": "@@ -14,8 +14,6 @@ import javax.inject.Inject\n \n class BasketActivity : BaseActivity(), BasketView {\n \n-    lateinit var basketAdapter: BasketAdapter\n-\n     @Inject\n     lateinit var presenter: BasketPresenter\n \n@@ -32,9 +30,9 @@ class BasketActivity : BaseActivity(), BasketView {\n     }\n \n     override fun showBasketItems(orders: List<Order>) {\n-        basketList.layoutManager = LinearLayoutManager(this)\n-        basketAdapter = BasketAdapter(this, orders) {\n+        val basketAdapter = BasketAdapter(this, orders) {\n         }\n+        basketList.layoutManager = LinearLayoutManager(this)\n         basketList.adapter = basketAdapter\n     }\n \n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/MainActivity.kt",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -54,9 +54,8 @@ class MainActivity : BaseActivity(), CategoryListView {\n     }\n \n     override fun onItemClicked(type: Int) {\n-        val productIntent = Intent(this, ProductListActivity::class.java)\n-        productIntent.putExtra(CATEGORY_ID_EXTRA, type)\n-        startActivity(productIntent)\n+        intent = Intent(this, ProductListActivity::class.java).apply { putExtra(CATEGORY_ID_EXTRA, type) }\n+        startActivity(intent)\n     }\n \n     override fun onBasketClicked(view: View) {\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/ProductDetailsActivity.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -21,8 +21,6 @@ class ProductDetailsActivity : BaseActivity(), ProductDetailView {\n     @Inject\n     lateinit var presenter: ProductDetailPresenter\n \n-    lateinit var product: Product\n-\n     override fun onCreate(savedInstanceState: Bundle?) {\n         super.onCreate(savedInstanceState)\n         val itemId = intent.getIntExtra(PRODUCT_ID_EXTRA, -0)\n@@ -35,7 +33,6 @@ class ProductDetailsActivity : BaseActivity(), ProductDetailView {\n         productDetailTitle.text = product.title\n         productDetailDescription.text = product.productDescription\n         productDetailPrice.text = product.price\n-        this.product = product\n     }\n \n     override fun getActivityLayout(): Int {\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/ProductListActivity.kt",
            "additions": 1,
            "deletions": 3
        },
        "diff content": "@@ -20,8 +20,6 @@ import javax.inject.Inject\n \n class ProductListActivity : BaseActivity(), ProductListView {\n \n-    private lateinit var productListAdapter: ProductListAdapter\n-\n     @Inject\n     lateinit var presenter: ProductListPresenter\n \n@@ -33,7 +31,7 @@ class ProductListActivity : BaseActivity(), ProductListView {\n \n     override fun showProductList(products: List<Product>) {\n         productListView.layoutManager = GridLayoutManager(this, 2)\n-        productListAdapter = ProductListAdapter(this, products) { product ->\n+        val productListAdapter = ProductListAdapter(this, products) { product ->\n             presenter.onProductClicked(product)\n         }\n         productListView.adapter = productListAdapter\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/BasketAdapter.kt",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -26,14 +26,14 @@ class BasketAdapter(\n         return orders.size\n     }\n \n-    override fun onBindViewHolder(holder: Holder?, position: Int) {\n+    override fun onBindViewHolder(holder: Holder, position: Int) {\n         holder?.bindProducts(orders[position], context)\n     }\n \n-    inner class Holder(itemView: View?, private val itemClicked: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n-        private val productImage = itemView?.findViewById<ImageView>(R.id.basketProductImage)\n-        private val productTitle = itemView?.findViewById<TextView>(R.id.basketProductTitle)\n-        private val numberOfProducts = itemView?.findViewById<TextView>(R.id.NumberOfItemsTextField)\n+    inner class Holder(itemView: View, private val itemClicked: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n+        private val productImage = itemView.findViewById<ImageView>(R.id.basketProductImage)\n+        private val productTitle = itemView.findViewById<TextView>(R.id.basketProductTitle)\n+        private val numberOfProducts = itemView.findViewById<TextView>(R.id.NumberOfItemsTextField)\n \n         fun bindProducts(order: Order, context: Context) {\n             val resourceId: Int = ImageHelper().getResourceIdForImage(context, order.product.image)\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/CategoryAdapter.kt",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -26,13 +26,13 @@ class CategoryAdapter(\n         return categories.count()\n     }\n \n-    override fun onBindViewHolder(holder: Holder?, position: Int) {\n-        holder?.bindCategory(categories[position], context)\n+    override fun onBindViewHolder(holder: Holder, position: Int) {\n+        holder.bindCategory(categories[position], context)\n     }\n \n-    inner class Holder(itemView: View?, private val itemClick: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n-        private val categoryImage = itemView?.findViewById<ImageView>(R.id.categoryImage)\n-        val categoryName = itemView?.findViewById<TextView>(R.id.categoryName)\n+    inner class Holder(itemView: View, private val itemClick: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n+        private val categoryImage = itemView.findViewById<ImageView>(R.id.categoryImage)\n+        val categoryName = itemView.findViewById<TextView>(R.id.categoryName)\n \n         fun bindCategory(category: Category, context: Context) {\n             val resourceId = ImageHelper().getResourceIdForImage(context, category.image)\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/ProductListAdapter.kt",
            "additions": 7,
            "deletions": 7
        },
        "diff content": "@@ -26,15 +26,15 @@ class ProductListAdapter(\n         return products.size\n     }\n \n-    override fun onBindViewHolder(holder: Holder?, position: Int) {\n-        holder?.bindProduct(products[position], context)\n+    override fun onBindViewHolder(holder: Holder, position: Int) {\n+        holder.bindProduct(products[position], context)\n     }\n \n-    inner class Holder(itemView: View?, private val itemClick: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n+    inner class Holder(itemView: View, private val itemClick: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n \n-        private val productImage = itemView?.findViewById<ImageView>(R.id.productImage)\n-        val productName = itemView?.findViewById<TextView>(R.id.productTitle)\n-        private val productPrice = itemView?.findViewById<TextView>(R.id.productPrice)\n+        private val productImage = itemView.findViewById<ImageView>(R.id.productImage)\n+        val productName = itemView.findViewById<TextView>(R.id.productTitle)\n+        private val productPrice = itemView.findViewById<TextView>(R.id.productPrice)\n \n         fun bindProduct(product: Product, context: Context) {\n             val resourceId: Int = ImageHelper().getResourceIdForImage(context, product.image)\n@@ -44,4 +44,4 @@ class ProductListAdapter(\n             itemView.setOnClickListener { itemClick(product.id) }\n         }\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/ClientModule.kt",
            "additions": 5,
            "deletions": 7
        },
        "diff content": "@@ -13,11 +13,9 @@ class ClientModule {\n     @Singleton\n     fun provideClient(networkTimeout: Long): OkHttpClient {\n \n-        val okHttpClientBuilder: OkHttpClient.Builder = OkHttpClient.Builder()\n-\n-        okHttpClientBuilder.readTimeout(networkTimeout, TimeUnit.SECONDS)\n-        okHttpClientBuilder.connectTimeout(networkTimeout, TimeUnit.SECONDS)\n-\n-        return okHttpClientBuilder.build()\n+        return OkHttpClient.Builder()\n+                .readTimeout(networkTimeout, TimeUnit.SECONDS)\n+                .connectTimeout(networkTimeout, TimeUnit.SECONDS)\n+                .build()\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/productDetails/ProductDetailsModule.kt",
            "additions": 2,
            "deletions": 7
        },
        "diff content": "@@ -9,12 +9,7 @@ import dagger.Module\n import dagger.Provides\n \n @Module\n-class ProductDetailsModule {\n-    val productDetailView: ProductDetailView\n-\n-    constructor(productDetailView: ProductDetailView) {\n-        this.productDetailView = productDetailView\n-    }\n+class ProductDetailsModule(val productDetailView: ProductDetailView) {\n \n     @Provides\n     fun providesView(): ProductDetailView = productDetailView\n@@ -28,4 +23,4 @@ class ProductDetailsModule {\n     fun providesInteractor(productDetailsInteractor: ProductDetailsInterActorImpl): ProductDetailsInteractor {\n         return productDetailsInteractor\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/CategoryListInteractorImpl.kt",
            "additions": 7,
            "deletions": 15
        },
        "diff content": "@@ -1,8 +1,8 @@\n package com.novoda.androidstoreexample.mvp.interactor.impl\n \n-import com.novoda.androidstoreexample.services.CategoryResponse\n import com.novoda.androidstoreexample.mvp.interactor.CategoryListInteractor\n import com.novoda.androidstoreexample.mvp.listener.CategoryListListener\n+import com.novoda.androidstoreexample.services.CategoryResponse\n import com.novoda.androidstoreexample.services.ShopService\n import retrofit2.Call\n import retrofit2.Callback\n@@ -10,23 +10,15 @@ import retrofit2.Response\n import retrofit2.Retrofit\n import javax.inject.Inject\n \n-class CategoryListInteractorImpl : CategoryListInteractor {\n-    val retrofit: Retrofit\n-    val apiService: ShopService\n+class CategoryListInteractorImpl @Inject constructor(val retrofit: Retrofit, private val apiService: ShopService) : CategoryListInteractor {\n \n-    lateinit var call: Call<CategoryResponse>\n-\n-    @Inject\n-    constructor(retrofit: Retrofit, apiService: ShopService) {\n-        this.retrofit = retrofit\n-        this.apiService = apiService\n-    }\n+    private var call: Call<CategoryResponse>? = null\n \n     override fun loadCategoryList(categoryListListener: CategoryListListener) {\n         call = apiService.getCategories()\n-        call.enqueue(object : Callback<CategoryResponse> {\n+        call?.enqueue(object : Callback<CategoryResponse> {\n             override fun onResponse(call: Call<CategoryResponse>?, response: Response<CategoryResponse>?) {\n-                if (response != null && response.isSuccessful) {\n+                if (response?.isSuccessful!!) {\n                     categoryListListener.onSuccess(response.body()!!)\n                 } else {\n                     categoryListListener.onFailure(\"Error while fetching data\")\n@@ -40,6 +32,6 @@ class CategoryListInteractorImpl : CategoryListInteractor {\n     }\n \n     override fun cancel() {\n-        call.cancel()\n+        call?.cancel()\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/ProductListInteractorImpl.kt",
            "additions": 11,
            "deletions": 18
        },
        "diff content": "@@ -1,8 +1,8 @@\n package com.novoda.androidstoreexample.mvp.interactor.impl\n \n-import com.novoda.androidstoreexample.services.ProductResponse\n import com.novoda.androidstoreexample.mvp.interactor.ProductListInteractor\n import com.novoda.androidstoreexample.mvp.listener.ProductListListener\n+import com.novoda.androidstoreexample.services.ProductResponse\n import com.novoda.androidstoreexample.services.ShopService\n import retrofit2.Call\n import retrofit2.Callback\n@@ -10,31 +10,19 @@ import retrofit2.Response\n import retrofit2.Retrofit\n import javax.inject.Inject\n \n-class ProductListInteractorImpl : ProductListInteractor {\n-    val retrofit: Retrofit\n-    val apiService: ShopService\n-\n-    lateinit var call: Call<ProductResponse>\n+class ProductListInteractorImpl @Inject constructor(val retrofit: Retrofit, private val apiService: ShopService) : ProductListInteractor {\n \n-    @Inject\n-    constructor(retrofit: Retrofit, apiService: ShopService) {\n-        this.retrofit = retrofit\n-        this.apiService = apiService\n-    }\n-\n-    override fun cancel() {\n-        call.cancel()\n-    }\n+    private var call: Call<ProductResponse>? = null\n \n     override fun loadProductList(produListListener: ProductListListener, category: Int) {\n         call = apiService.getProductsFromCategory(category)\n-        call.enqueue(object : Callback<ProductResponse> {\n+        call?.enqueue(object : Callback<ProductResponse> {\n             override fun onFailure(call: Call<ProductResponse>?, t: Throwable?) {\n                 produListListener.onFailure(\"Error while fetching\")\n             }\n \n             override fun onResponse(call: Call<ProductResponse>?, response: Response<ProductResponse>?) {\n-                if (response != null && response.isSuccessful) {\n+                if (response?.isSuccessful!!) {\n                     produListListener.onSuccess(response.body()!!)\n                 } else {\n                     produListListener.onFailure(\"Error while fetching data\")\n@@ -42,4 +30,9 @@ class ProductListInteractorImpl : ProductListInteractor {\n             }\n         })\n     }\n-}\n\\ No newline at end of file\n+\n+    override fun cancel() {\n+        call?.cancel()\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/ProductDetailPresenterImpl.kt",
            "additions": 2,
            "deletions": 12
        },
        "diff content": "@@ -9,20 +9,10 @@ import com.novoda.androidstoreexample.services.BasketService\n import com.novoda.androidstoreexample.services.ProductDetailsResponse\n import javax.inject.Inject\n \n-class ProductDetailPresenterImpl : ProductDetailPresenter {\n-    private val productDetailView: ProductDetailView\n-    private val productDetailsInteractor: ProductDetailsInteractor\n-    private val basketService: BasketService\n+class ProductDetailPresenterImpl @Inject constructor(private val productDetailView: ProductDetailView, private val productDetailsInteractor: ProductDetailsInteractor, private val basketService: BasketService) : ProductDetailPresenter {\n \n     private lateinit var product: Product\n \n-    @Inject\n-    constructor(productDetailView: ProductDetailView, productDetailsInteractor: ProductDetailsInteractor, basketService: BasketService) {\n-        this.productDetailView = productDetailView\n-        this.productDetailsInteractor = productDetailsInteractor\n-        this.basketService = basketService\n-    }\n-\n     override fun cancel() {\n         productDetailsInteractor.cancel()\n     }\n@@ -46,4 +36,4 @@ class ProductDetailPresenterImpl : ProductDetailPresenter {\n     override fun addToBasket() {\n         basketService.addToBasket(product)\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "7ad5d75b2c4f8e7b02d690946ad0a774acdda3a3",
        "previous commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/CategoryResponse.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -18,4 +18,4 @@ data class CategoryResponse(val categories: Array<Category>) {\n     override fun hashCode(): Int {\n         return Arrays.hashCode(categories)\n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "previous commit hash": "a6abf1ee48e824facb8707fb13b97c9459a01a35",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoJavaTestExample.java",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,7 +1,6 @@\n package com.novoda.androidstoreexample.tests;\n \n import android.support.test.rule.ActivityTestRule;\n-import android.support.test.runner.AndroidJUnit4;\n import android.support.v7.widget.RecyclerView;\n \n import com.novoda.androidstoreexample.R;\n@@ -11,7 +10,6 @@ import com.novoda.androidstoreexample.activities.MainActivity;\n import org.hamcrest.Matcher;\n import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.runner.RunWith;\n \n import static android.support.test.espresso.Espresso.onView;\n import static android.support.test.espresso.action.ViewActions.click;\n@@ -21,7 +19,6 @@ import static android.support.test.espresso.contrib.RecyclerViewActions.scrollTo\n import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;\n import static android.support.test.espresso.matcher.ViewMatchers.withId;\n \n-@RunWith(AndroidJUnit4.class)\n public class EspressoJavaTestExample {\n \n     @Rule\n"
    },
    {
        "commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "previous commit hash": "a6abf1ee48e824facb8707fb13b97c9459a01a35",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExample.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,16 +1,13 @@\n package com.novoda.androidstoreexample.tests\n \n import android.support.test.rule.ActivityTestRule\n-import android.support.test.runner.AndroidJUnit4\n import com.novoda.androidstoreexample.activities.MainActivity\n import com.novoda.androidstoreexample.pageobjects.MainActivityPageObject\n import com.novoda.androidstoreexample.pageobjects.ProductDetailsPageObject\n import com.novoda.androidstoreexample.pageobjects.ProductListPageObject\n import org.junit.Rule\n import org.junit.Test\n-import org.junit.runner.RunWith\n \n-@RunWith(AndroidJUnit4::class)\n class EspressoTestExample {\n \n     private val mainActivityPageObject = MainActivityPageObject()\n"
    },
    {
        "commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "previous commit hash": "a6abf1ee48e824facb8707fb13b97c9459a01a35",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoUserFlowTests.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,16 +1,13 @@\n package com.novoda.androidstoreexample.tests\n \n import android.support.test.rule.ActivityTestRule\n-import android.support.test.runner.AndroidJUnit4\n import com.novoda.androidstoreexample.activities.MainActivity\n import com.novoda.androidstoreexample.pageobjects.MainActivityPageObject\n import com.novoda.androidstoreexample.pageobjects.ProductDetailsPageObject\n import com.novoda.androidstoreexample.pageobjects.ProductListPageObject\n import org.junit.Rule\n import org.junit.Test\n-import org.junit.runner.RunWith\n \n-@RunWith(AndroidJUnit4::class)\n class EspressoUserFlowTests {\n \n     private val mainActivityPageObject = MainActivityPageObject()\n"
    },
    {
        "commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "previous commit hash": "a6abf1ee48e824facb8707fb13b97c9459a01a35",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/HeaderTests.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,13 +1,10 @@\n package com.novoda.androidstoreexample.tests\n \n import android.support.test.rule.ActivityTestRule\n-import android.support.test.runner.AndroidJUnit4\n import com.novoda.androidstoreexample.activities.ProductListActivity\n import com.novoda.androidstoreexample.pageobjects.HeaderPageObject\n import org.junit.Test\n-import org.junit.runner.RunWith\n \n-@RunWith(AndroidJUnit4::class)\n class HeaderTests {\n     private val activityTestRule = ActivityTestRule<ProductListActivity>(ProductListActivity::class.java)\n \n"
    },
    {
        "commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "previous commit hash": "a6abf1ee48e824facb8707fb13b97c9459a01a35",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/JavaHeaderTests.java",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -1,16 +1,13 @@\n package com.novoda.androidstoreexample.tests;\n \n import android.support.test.rule.ActivityTestRule;\n-import android.support.test.runner.AndroidJUnit4;\n \n import com.novoda.androidstoreexample.activities.MainActivity;\n import com.novoda.androidstoreexample.pageobjects.HeaderPageObject;\n \n import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.runner.RunWith;\n \n-@RunWith(AndroidJUnit4.class)\n public class JavaHeaderTests {\n     @Rule\n     public ActivityTestRule<MainActivity> activityTestRule = new ActivityTestRule(MainActivity.class);\n"
    },
    {
        "commit hash": "68361611dd3c880a0554d039d3c7630f25262ec4",
        "previous commit hash": "a6abf1ee48e824facb8707fb13b97c9459a01a35",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/MockServerTestExample.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -7,7 +7,6 @@ import android.support.test.espresso.assertion.ViewAssertions.matches\n import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n import android.support.test.espresso.matcher.ViewMatchers.withText\n import android.support.test.rule.ActivityTestRule\n-import android.support.test.runner.AndroidJUnit4\n import com.novoda.androidstoreexample.EspressoHostModule\n import com.novoda.androidstoreexample.activities.MainActivity\n import com.novoda.androidstoreexample.dagger.App.Companion.component\n@@ -18,10 +17,8 @@ import org.junit.After\n import org.junit.Before\n import org.junit.Rule\n import org.junit.Test\n-import org.junit.runner.RunWith\n import java.io.InputStream\n \n-@RunWith(AndroidJUnit4::class)\n class MockServerTestExample {\n \n     private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java, false, false)\n"
    },
    {
        "commit hash": "a6abf1ee48e824facb8707fb13b97c9459a01a35",
        "previous commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/ViewMatchers.kt",
            "additions": 4,
            "deletions": 10
        },
        "diff content": "@@ -13,14 +13,11 @@ object ViewMatchers {\n     fun withCategoryTitle(title: String): Matcher<RecyclerView.ViewHolder> {\n         return object : BoundedMatcher<RecyclerView.ViewHolder, CategoryAdapter.Holder>(CategoryAdapter.Holder::class.java) {\n             override fun matchesSafely(item: CategoryAdapter.Holder): Boolean {\n-                if (item.categoryName != null) {\n-                    return item.categoryName!!.text.toString().equals(title, true)\n-                }\n-                return false\n+                return item.categoryName?.let { it.text.toString().equals(title, true) } ?: false\n             }\n \n             override fun describeTo(description: Description) {\n-                description.appendText(\"view holder with title: \" + title)\n+                description.appendText(\"view holder with title: $title\")\n             }\n         }\n     }\n@@ -29,14 +26,11 @@ object ViewMatchers {\n     fun withProductTitle(title: String): Matcher<RecyclerView.ViewHolder> {\n         return object : BoundedMatcher<RecyclerView.ViewHolder, ProductListAdapter.Holder>(ProductListAdapter.Holder::class.java) {\n             override fun describeTo(description: Description) {\n-                description.appendText(\"view holder with title: \" + title)\n+                description.appendText(\"view holder with title: $title\")\n             }\n \n             override fun matchesSafely(item: ProductListAdapter.Holder?): Boolean {\n-                if (item?.productName != null) {\n-                    return item.productName!!.text.toString().equals(title, true)\n-                }\n-                return false\n+                return item?.productName?.let { it.text.toString().equals(title, true) } ?: false\n             }\n         }\n     }\n"
    },
    {
        "commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "previous commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/Gemfile",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+\n+source 'https://rubygems.org' do\n+  gem 'sinatra', '2.0.0'\n+  gem 'faker', '1.8.7'\n+  gem 'rufus-scheduler', '3.4.2'\n+end\n"
    },
    {
        "commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "previous commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/basket.rb",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+class Basket\n+\n+  def initialize\n+    @items_in_basket = {}\n+  end\n+\n+  def reset_basket\n+    @items_in_basket = {}\n+  end\n+\n+  def add_to_basket(item)\n+    item_id = item.id\n+    p item_id\n+    if @items_in_basket.key?(item_id)\n+      @items_in_basket[item_id] += 1\n+    else\n+      @items_in_basket.merge!({item_id => 1})\n+    end\n+  end\n+\n+  def remove_from_basket(item)\n+    item_id = item.id\n+    if @items_in_basket.key?(item_id)\n+      if @items_in_basket[item_id] > 1\n+        @items_in_basket[item_id] -= 1\n+      else\n+        @items_in_basket.delete(item_id)\n+      end\n+    end\n+  end\n+\n+  def show_content\n+    @items_in_basket\n+  end\n+\n+end\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "previous commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/category.rb",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+require 'json'\n+\n+class Category\n+  attr_reader :id, :title, :image\n+\n+  def initialize(id, title, image)\n+    @id = id\n+    @title = title\n+    @image = image\n+  end\n+\n+  def as_json(options={})\n+    {\n+        id: @id,\n+        title: @title,\n+        image: @image\n+    }\n+  end\n+\n+  def to_json(*options)\n+    as_json(*options).to_json(*options)\n+  end\n+end\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "previous commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/category_repository.rb",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+require_relative 'category'\n+\n+class CategoryRepository\n+  attr_reader :categories\n+\n+  def initialize\n+    @categories = [\n+        Category.new(1,'SHIRTS', 'shirtimage'),\n+        Category.new(2,'HOODIES', 'hoodieimage'),\n+        Category.new(3, 'HATS', 'hatimage'),\n+        Category.new(4,'DIGITAL GOODS', 'digitalgoodsimage'),\n+        Category.new(5, 'something', 'shirtimage')\n+    ]\n+  end\n+end\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "previous commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/config.ru",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+require './server'\n+run Sinatra::Application\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "previous commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/item.rb",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+class Item\n+  attr_accessor :id, :title, :price, :image, :product_description\n+\n+  def initialize(id, title, price, image, product_description)\n+    @id = id\n+    @title = title\n+    @price = price\n+    @image = image\n+    @product_description = product_description\n+  end\n+\n+  def as_json(options={})\n+    {\n+        id: @id,\n+        title: @title,\n+        image: @image,\n+        price: @price,\n+        product_description: @product_description\n+    }\n+  end\n+\n+  def to_json(*options)\n+    as_json(*options).to_json(*options)\n+  end\n+end\n+\n"
    },
    {
        "commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "previous commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/item_repository.rb",
            "additions": 35,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,35 @@\n+require_relative 'item'\n+require 'faker'\n+\n+class ItemRepository\n+\n+  def initialize\n+    @items = { '3': [\n+        Item.new(1, 'Hat Green', '$18', 'hat1', get_random_description(4)),\n+        Item.new(2, 'Hat Black', '$12', 'hat2', get_random_description),\n+        Item.new(3, 'Hat White', '$11', 'hat3', get_random_description(3)),\n+        Item.new(4, 'Hat Blue', '$29', 'hat4', get_random_description(1)),\n+    ],\n+              '2': [],\n+              '1': [],\n+              '4': []}\n+  end\n+\n+  def items_from_category(category)\n+    @items[category]\n+  end\n+\n+  def get_random_description(number_of_sentences=2)\n+    Faker::Hipster.sentences(number_of_sentences).join(' ')\n+  end\n+\n+  def get_item_for_id(id)\n+    @items.each do |k, v|\n+      p \"id = #{k}\"\n+      items = v.find_all {|item|\n+        item.id == id.to_i}\n+      return items[0]\n+    end\n+  end\n+end\n+\n"
    },
    {
        "commit hash": "00d4fdbace80497dc64b4facf2cf55e646b8e3b6",
        "previous commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi/server.rb",
            "additions": 50,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,50 @@\n+require 'sinatra' \n+require 'json'\n+require 'rubygems'\n+require 'rufus-scheduler'\n+require_relative 'category_repository'\n+require_relative 'item_repository'\n+require_relative 'basket'\n+\n+@@categories = CategoryRepository.new.categories\n+@@item_repository = ItemRepository.new\n+@@basket = Basket.new\n+\n+before do\n+  content_type :json\n+end\n+\n+\n+get '/category/:number' do\n+  {category: @@categories[params['number'].to_i]}\n+end\n+\n+get '/categories' do\n+  {categories: @@categories}\n+end\n+\n+get '/category/:id/items' do\n+  category = params['id'].to_sym\n+  {products: @@item_repository.items_from_category(category)}\n+end\n+\n+get '/items/:id/add' do\n+  @@basket.add_to_basket(@@item_repository.get_item_for_id(params['id']))\n+end\n+\n+get '/items/:id/remove' do\n+  @@basket.remove_from_basket(@@item_repository.get_item_for_id(params['id']))\n+end\n+\n+get '/basket' do\n+  {basket: @@basket.show_content}\n+end\n+\n+get '/items/:id' do\n+  {item: @@item_repository.get_item_for_id(params['id'])}\n+end\n+\n+\n+after do\n+  response.body = JSON.dump(response.body)\n+end\n"
    },
    {
        "commit hash": "30711f70331bc055b000210b49a5ec97809d7c4f",
        "previous commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-Subproject commit 9515235ac23b33c5e79344a2c04e5afa1dd90c81\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/EspressoHostModule.kt",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -2,9 +2,8 @@ package com.novoda.androidstoreexample\n \n import com.novoda.androidstoreexample.dagger.module.HostModule\n \n-\n-class EspressoHostModule(val port: Int): HostModule(){\n-    override fun provideBaseUrl():String {\n+class EspressoHostModule(val port: Int) : HostModule() {\n+    override fun provideBaseUrl(): String {\n         return \"http://127.0.0.1:$port\"\n     }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/ViewMatchers.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -40,5 +40,4 @@ object ViewMatchers {\n             }\n         }\n     }\n-\n }\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/HeaderPageObject.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -7,13 +7,10 @@ import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n import android.support.test.espresso.matcher.ViewMatchers.withId\n import com.novoda.androidstoreexample.R\n \n-\n class HeaderPageObject {\n     private val HEADER: ViewInteraction = onView(withId(R.id.action_bar_container))\n \n     fun verifyHeader() {\n         HEADER.check(matches(isDisplayed()))\n     }\n-\n }\n-\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/MainActivityPageObject.kt",
            "additions": 1,
            "deletions": 3
        },
        "diff content": "@@ -20,8 +20,6 @@ class MainActivityPageObject {\n     fun navigateToProductList() {\n         val categoryMatcher = ViewMatchers.withCategoryTitle(\"HATS\")\n \n-        onView(withId(R.id.categoryListView)).perform( actionOnHolderItem(categoryMatcher, click()))\n+        onView(withId(R.id.categoryListView)).perform(actionOnHolderItem(categoryMatcher, click()))\n     }\n-\n }\n-\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/ProductListPageObject.kt",
            "additions": 1,
            "deletions": 3
        },
        "diff content": "@@ -7,13 +7,11 @@ import android.support.test.espresso.matcher.ViewMatchers.withId\n import com.novoda.androidstoreexample.R\n import com.novoda.androidstoreexample.ViewMatchers\n \n-\n class ProductListPageObject {\n \n     fun navigateToProductDetails() {\n         val productMatcher = ViewMatchers.withProductTitle(\"hat white\")\n \n-        onView(withId(R.id.productListView)).perform( RecyclerViewActions.actionOnHolderItem(productMatcher, ViewActions.click()))\n+        onView(withId(R.id.productListView)).perform(RecyclerViewActions.actionOnHolderItem(productMatcher, ViewActions.click()))\n     }\n-\n }\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExample.kt",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -22,7 +22,6 @@ class EspressoTestExample {\n     @get:Rule\n     var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n \n-\n     @Test\n     fun firstNavigationTest() {\n \n@@ -31,6 +30,5 @@ class EspressoTestExample {\n         productListPageObject.navigateToProductDetails()\n \n         productDetailsPageObject.assertProductDetailsDisplayed()\n-\n     }\n }\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoUserFlowTests.kt",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -22,7 +22,6 @@ class EspressoUserFlowTests {\n     @get:Rule\n     var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n \n-\n     @Test\n     fun navigateToProductDetailsTest() {\n \n@@ -31,6 +30,5 @@ class EspressoUserFlowTests {\n         productListPageObject.navigateToProductDetails()\n \n         productDetailsPageObject.assertProductDetailsDisplayed()\n-\n     }\n }\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/HeaderTests.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -16,5 +16,4 @@ class HeaderTests {\n         val headerPageObject = HeaderPageObject()\n         headerPageObject.verifyHeader()\n     }\n-\n }\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/MockServerTestExample.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -31,7 +31,6 @@ class MockServerTestExample {\n     @get:Rule\n     var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n \n-\n     @Before\n     @Throws(Exception::class)\n     fun setUp() {\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/BaseActivity.kt",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -6,7 +6,6 @@ import com.novoda.androidstoreexample.dagger.App\n import com.novoda.androidstoreexample.dagger.component.AppComponent\n import com.novoda.androidstoreexample.mvp.view.BaseView\n \n-\n abstract class BaseActivity : AppCompatActivity(), BaseView {\n \n     abstract fun getActivityLayout(): Int\n@@ -20,6 +19,5 @@ abstract class BaseActivity : AppCompatActivity(), BaseView {\n     }\n \n     override fun showMessage(message: String) {\n-\n     }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/BasketActivity.kt",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -26,17 +26,14 @@ class BasketActivity : BaseActivity(), BasketView {\n     }\n \n     override fun showProgress() {\n-\n     }\n \n     override fun hideProgress() {\n-\n     }\n \n     override fun showBasketItems(orders: List<Order>) {\n         basketList.layoutManager = LinearLayoutManager(this)\n         basketAdapter = BasketAdapter(this, orders) {\n-\n         }\n         basketList.adapter = basketAdapter\n     }\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/MainActivity.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1,7 +1,6 @@\n package com.novoda.androidstoreexample.activities\n \n import android.content.Intent\n-import android.opengl.Visibility\n import android.os.Bundle\n import android.support.v7.widget.LinearLayoutManager\n import android.view.View\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/ProductListActivity.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -33,7 +33,7 @@ class ProductListActivity : BaseActivity(), ProductListView {\n \n     override fun showProductList(products: List<Product>) {\n         productListView.layoutManager = GridLayoutManager(this, 2)\n-        productListAdapter = ProductListAdapter(this, products) {product ->\n+        productListAdapter = ProductListAdapter(this, products) { product ->\n             presenter.onProductClicked(product)\n         }\n         productListView.adapter = productListAdapter\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/BasketAdapter.kt",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -11,9 +11,11 @@ import com.novoda.androidstoreexample.R\n import com.novoda.androidstoreexample.models.Order\n import com.novoda.androidstoreexample.utilities.ImageHelper\n \n-class BasketAdapter(private val context: Context,\n-                    private val orders: List<Order>,\n-                    private val itemClicked: (Int) -> Unit) : RecyclerView.Adapter<BasketAdapter.Holder>() {\n+class BasketAdapter(\n+    private val context: Context,\n+    private val orders: List<Order>,\n+    private val itemClicked: (Int) -> Unit\n+) : RecyclerView.Adapter<BasketAdapter.Holder>() {\n \n     override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): Holder {\n         val view = LayoutInflater.from(context).inflate(R.layout.basket_item, parent, false)\n@@ -40,6 +42,4 @@ class BasketAdapter(private val context: Context,\n             numberOfProducts?.text = order.numberOfItems.toString()\n         }\n     }\n-\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/CategoryAdapter.kt",
            "additions": 5,
            "deletions": 4
        },
        "diff content": "@@ -11,9 +11,11 @@ import com.novoda.androidstoreexample.R\n import com.novoda.androidstoreexample.models.Category\n import com.novoda.androidstoreexample.utilities.ImageHelper\n \n-class CategoryAdapter(private val context: Context,\n-                      private val categories: List<Category>,\n-                      private val itemClicked: (Int) -> Unit) : RecyclerView.Adapter<CategoryAdapter.Holder>() {\n+class CategoryAdapter(\n+    private val context: Context,\n+    private val categories: List<Category>,\n+    private val itemClicked: (Int) -> Unit\n+) : RecyclerView.Adapter<CategoryAdapter.Holder>() {\n     override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): Holder {\n         val view = LayoutInflater.from(context)\n                 .inflate(R.layout.category_item, parent, false)\n@@ -28,7 +30,6 @@ class CategoryAdapter(private val context: Context,\n         holder?.bindCategory(categories[position], context)\n     }\n \n-\n     inner class Holder(itemView: View?, private val itemClick: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n         private val categoryImage = itemView?.findViewById<ImageView>(R.id.categoryImage)\n         val categoryName = itemView?.findViewById<TextView>(R.id.categoryName)\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/ProductListAdapter.kt",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -11,10 +11,11 @@ import com.novoda.androidstoreexample.R\n import com.novoda.androidstoreexample.models.Product\n import com.novoda.androidstoreexample.utilities.ImageHelper\n \n-class ProductListAdapter(private val context: Context,\n-                         private val products: List<Product>,\n-                         private val unitClicked: (Int) -> Unit) : RecyclerView.Adapter<ProductListAdapter.Holder>(){\n-\n+class ProductListAdapter(\n+    private val context: Context,\n+    private val products: List<Product>,\n+    private val unitClicked: (Int) -> Unit\n+) : RecyclerView.Adapter<ProductListAdapter.Holder>() {\n \n     override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): Holder {\n         val view = LayoutInflater.from(context).inflate(R.layout.product_list_item, parent, false)\n@@ -29,7 +30,6 @@ class ProductListAdapter(private val context: Context,\n         holder?.bindProduct(products[position], context)\n     }\n \n-\n     inner class Holder(itemView: View?, private val itemClick: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n \n         private val productImage = itemView?.findViewById<ImageView>(R.id.productImage)\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/App.kt",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -4,7 +4,6 @@ import android.app.Application\n import com.novoda.androidstoreexample.dagger.component.AppComponent\n import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n \n-\n class App : Application() {\n \n     companion object {\n@@ -14,7 +13,6 @@ class App : Application() {\n         lateinit var component: AppComponent\n     }\n \n-\n     override fun onCreate() {\n         super.onCreate()\n         instance = this\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/basket/BasketComponent.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -7,4 +7,3 @@ import dagger.Subcomponent\n interface BasketComponent {\n     fun inject(basketActivity: BasketActivity)\n }\n-\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/basket/BasketModule.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,6 @@ import dagger.Provides\n @Module\n class BasketModule(private val basketView: BasketView) {\n \n-\n     @Provides\n     fun providesView(): BasketView = basketView\n \n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/AppModule.kt",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -8,7 +8,7 @@ import com.novoda.androidstoreexample.dagger.App\n import javax.inject.Singleton\n \n @Module\n-class AppModule  {\n+class AppModule {\n \n     @Provides\n     @Singleton\n@@ -17,5 +17,4 @@ class AppModule  {\n     @Provides\n     @Singleton\n     fun providingResources(context: Context): Resources = context.resources\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/BasketServiceModule.kt",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -10,8 +10,7 @@ class BasketServiceModule {\n \n     @Provides\n     @Singleton\n-    fun providesBasket(): BasketService{\n+    fun providesBasket(): BasketService {\n         return BasketService()\n     }\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/ClientModule.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -20,5 +20,4 @@ class ClientModule {\n \n         return okHttpClientBuilder.build()\n     }\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/productList/ProductListModule.kt",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -2,15 +2,10 @@ package com.novoda.androidstoreexample.dagger.categoryList\n \n import dagger.Module\n import dagger.Provides\n-import com.novoda.androidstoreexample.mvp.interactor.CategoryListInteractor\n import com.novoda.androidstoreexample.mvp.interactor.ProductListInteractor\n-import com.novoda.androidstoreexample.mvp.interactor.impl.CategoryListInteractorImpl\n import com.novoda.androidstoreexample.mvp.interactor.impl.ProductListInteractorImpl\n-import com.novoda.androidstoreexample.mvp.presenter.CategoryListPresenter\n import com.novoda.androidstoreexample.mvp.presenter.ProductListPresenter\n-import com.novoda.androidstoreexample.mvp.presenter.impl.CategoryListPresenterImpl\n import com.novoda.androidstoreexample.mvp.presenter.impl.ProductListPresenterImpl\n-import com.novoda.androidstoreexample.mvp.view.CategoryListView\n import com.novoda.androidstoreexample.mvp.view.ProductListView\n \n @Module\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/models/Product.kt",
            "additions": 7,
            "deletions": 5
        },
        "diff content": "@@ -1,8 +1,10 @@\n package com.novoda.androidstoreexample.models\n import com.squareup.moshi.Json\n \n-data class Product(val id: Int,\n-                   val title: String,\n-                   val price: String,\n-                   val image: String,\n-                   @Json(name = \"product_description\") val productDescription: String)\n\\ No newline at end of file\n+data class Product(\n+    val id: Int,\n+    val title: String,\n+    val price: String,\n+    val image: String,\n+    @Json(name = \"product_description\") val productDescription: String\n+)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/CategoryListInteractor.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,6 +2,6 @@ package com.novoda.androidstoreexample.mvp.interactor\n \n import com.novoda.androidstoreexample.mvp.listener.CategoryListListener\n \n-interface CategoryListInteractor: BaseInteractor {\n+interface CategoryListInteractor : BaseInteractor {\n     fun loadCategoryList(categoryListListener: CategoryListListener)\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/ProductDetailsInteractor.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,6 +2,6 @@ package com.novoda.androidstoreexample.mvp.interactor\n \n import com.novoda.androidstoreexample.mvp.listener.ProductDetailsListener\n \n-interface ProductDetailsInteractor: BaseInteractor {\n+interface ProductDetailsInteractor : BaseInteractor {\n     fun loadProductDetails(productDetailsListener: ProductDetailsListener, itemId: Int)\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/ProductListInteractor.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -5,5 +5,4 @@ import com.novoda.androidstoreexample.mvp.listener.ProductListListener\n interface ProductListInteractor : BaseInteractor {\n \n     fun loadProductList(produListListener: ProductListListener, category: Int)\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/CategoryListInteractorImpl.kt",
            "additions": 2,
            "deletions": 5
        },
        "diff content": "@@ -1,6 +1,5 @@\n package com.novoda.androidstoreexample.mvp.interactor.impl\n \n-import android.content.Context\n import com.novoda.androidstoreexample.services.CategoryResponse\n import com.novoda.androidstoreexample.mvp.interactor.CategoryListInteractor\n import com.novoda.androidstoreexample.mvp.listener.CategoryListListener\n@@ -11,7 +10,7 @@ import retrofit2.Response\n import retrofit2.Retrofit\n import javax.inject.Inject\n \n-class CategoryListInteractorImpl: CategoryListInteractor {\n+class CategoryListInteractorImpl : CategoryListInteractor {\n     val retrofit: Retrofit\n     val apiService: ShopService\n \n@@ -23,10 +22,9 @@ class CategoryListInteractorImpl: CategoryListInteractor {\n         this.apiService = apiService\n     }\n \n-\n     override fun loadCategoryList(categoryListListener: CategoryListListener) {\n         call = apiService.getCategories()\n-        call.enqueue(object : Callback<CategoryResponse>{\n+        call.enqueue(object : Callback<CategoryResponse> {\n             override fun onResponse(call: Call<CategoryResponse>?, response: Response<CategoryResponse>?) {\n                 if (response != null && response.isSuccessful) {\n                     categoryListListener.onSuccess(response.body()!!)\n@@ -39,7 +37,6 @@ class CategoryListInteractorImpl: CategoryListInteractor {\n                 categoryListListener.onFailure(\"Error while fetching data\")\n             }\n         })\n-\n     }\n \n     override fun cancel() {\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/ProductDetailsInterActorImpl.kt",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -10,7 +10,7 @@ import retrofit2.Response\n import retrofit2.Retrofit\n import javax.inject.Inject\n \n-class ProductDetailsInterActorImpl: ProductDetailsInteractor {\n+class ProductDetailsInterActorImpl : ProductDetailsInteractor {\n     private val retrofit: Retrofit\n     private val shopService: ShopService\n \n@@ -40,7 +40,6 @@ class ProductDetailsInterActorImpl: ProductDetailsInteractor {\n                     productDetailsListener.onFailure(\"Error\")\n                 }\n             }\n-\n         })\n     }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/ProductListInteractorImpl.kt",
            "additions": 2,
            "deletions": 4
        },
        "diff content": "@@ -1,6 +1,5 @@\n package com.novoda.androidstoreexample.mvp.interactor.impl\n \n-import android.content.Context\n import com.novoda.androidstoreexample.services.ProductResponse\n import com.novoda.androidstoreexample.mvp.interactor.ProductListInteractor\n import com.novoda.androidstoreexample.mvp.listener.ProductListListener\n@@ -11,7 +10,7 @@ import retrofit2.Response\n import retrofit2.Retrofit\n import javax.inject.Inject\n \n-class ProductListInteractorImpl: ProductListInteractor {\n+class ProductListInteractorImpl : ProductListInteractor {\n     val retrofit: Retrofit\n     val apiService: ShopService\n \n@@ -29,7 +28,7 @@ class ProductListInteractorImpl: ProductListInteractor {\n \n     override fun loadProductList(produListListener: ProductListListener, category: Int) {\n         call = apiService.getProductsFromCategory(category)\n-        call.enqueue(object: Callback<ProductResponse> {\n+        call.enqueue(object : Callback<ProductResponse> {\n             override fun onFailure(call: Call<ProductResponse>?, t: Throwable?) {\n                 produListListener.onFailure(\"Error while fetching\")\n             }\n@@ -41,7 +40,6 @@ class ProductListInteractorImpl: ProductListInteractor {\n                     produListListener.onFailure(\"Error while fetching data\")\n                 }\n             }\n-\n         })\n     }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/listener/CategoryListListener.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ package com.novoda.androidstoreexample.mvp.listener\n \n import com.novoda.androidstoreexample.services.CategoryResponse\n \n-interface CategoryListListener: BaseListener {\n+interface CategoryListListener : BaseListener {\n \n     fun onSuccess(categoryResponse: CategoryResponse)\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/listener/ProductDetailsListener.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,6 +2,6 @@ package com.novoda.androidstoreexample.mvp.listener\n \n import com.novoda.androidstoreexample.services.ProductDetailsResponse\n \n-interface ProductDetailsListener: BaseListener {\n+interface ProductDetailsListener : BaseListener {\n     fun onSuccess(response: ProductDetailsResponse)\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/listener/ProductListListener.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -5,5 +5,4 @@ import com.novoda.androidstoreexample.services.ProductResponse\n interface ProductListListener : BaseListener {\n \n     fun onSuccess(productResponse: ProductResponse)\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/BasePresenter.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -3,5 +3,4 @@ package com.novoda.androidstoreexample.mvp.presenter\n interface BasePresenter {\n \n     fun cancel()\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/CategoryListPresenter.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -5,5 +5,4 @@ interface CategoryListPresenter : BasePresenter {\n     fun loadCategoryList()\n \n     fun onCategoryItemClicked(type: Int)\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/ProductListPresenter.kt",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -1,9 +1,8 @@\n package com.novoda.androidstoreexample.mvp.presenter\n \n-interface ProductListPresenter: BasePresenter {\n+interface ProductListPresenter : BasePresenter {\n \n     fun loadProductList(category: Int)\n \n     fun onProductClicked(productId: Int)\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/BasketPresenterImpl.kt",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -5,7 +5,7 @@ import com.novoda.androidstoreexample.mvp.view.BasketView\n import com.novoda.androidstoreexample.services.BasketService\n import javax.inject.Inject\n \n-class BasketPresenterImpl: BasketPresenter {\n+class BasketPresenterImpl : BasketPresenter {\n     val basketView: BasketView\n     val basketService: BasketService\n \n@@ -15,7 +15,6 @@ class BasketPresenterImpl: BasketPresenter {\n         this.basketService = basketService\n     }\n \n-\n     override fun loadBasket() {\n         basketView.showProgress()\n         basketView.showBasketItems(basketService.getBasket())\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/CategoryListPresenterImpl.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -28,7 +28,7 @@ class CategoryListPresenterImpl : CategoryListPresenter {\n \n     override fun loadCategoryList() {\n         categoryListView.showProgress()\n-        categoryListInteractor.loadCategoryList(object: CategoryListListener {\n+        categoryListInteractor.loadCategoryList(object : CategoryListListener {\n             override fun onFailure(message: String) {\n                 categoryListView.hideProgress()\n                 categoryListView.showMessage(message)\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/ProductDetailPresenterImpl.kt",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -9,7 +9,7 @@ import com.novoda.androidstoreexample.services.BasketService\n import com.novoda.androidstoreexample.services.ProductDetailsResponse\n import javax.inject.Inject\n \n-class ProductDetailPresenterImpl: ProductDetailPresenter {\n+class ProductDetailPresenterImpl : ProductDetailPresenter {\n     private val productDetailView: ProductDetailView\n     private val productDetailsInteractor: ProductDetailsInteractor\n     private val basketService: BasketService\n@@ -23,14 +23,13 @@ class ProductDetailPresenterImpl: ProductDetailPresenter {\n         this.basketService = basketService\n     }\n \n-\n     override fun cancel() {\n         productDetailsInteractor.cancel()\n     }\n \n     override fun loadProductDetails(productId: Int) {\n         productDetailView.showProgress()\n-        productDetailsInteractor.loadProductDetails(object : ProductDetailsListener{\n+        productDetailsInteractor.loadProductDetails(object : ProductDetailsListener {\n             override fun onFailure(message: String) {\n                 productDetailView.hideProgress()\n                 productDetailView.showMessage(message)\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/ProductListPresenterImpl.kt",
            "additions": 4,
            "deletions": 6
        },
        "diff content": "@@ -1,13 +1,13 @@\n package com.novoda.androidstoreexample.mvp.presenter.impl\n \n-import com.novoda.androidstoreexample.services.ProductResponse\n import com.novoda.androidstoreexample.mvp.interactor.ProductListInteractor\n import com.novoda.androidstoreexample.mvp.listener.ProductListListener\n import com.novoda.androidstoreexample.mvp.presenter.ProductListPresenter\n import com.novoda.androidstoreexample.mvp.view.ProductListView\n+import com.novoda.androidstoreexample.services.ProductResponse\n import javax.inject.Inject\n \n-class ProductListPresenterImpl: ProductListPresenter {\n+class ProductListPresenterImpl : ProductListPresenter {\n     private val productListInteractor: ProductListInteractor\n     private val productListView: ProductListView\n \n@@ -17,14 +17,13 @@ class ProductListPresenterImpl: ProductListPresenter {\n         this.productListView = productListView\n     }\n \n-\n     override fun cancel() {\n         productListInteractor.cancel()\n     }\n \n     override fun loadProductList(category: Int) {\n-       productListView.showProgress()\n-        productListInteractor.loadProductList(object: ProductListListener{\n+        productListView.showProgress()\n+        productListInteractor.loadProductList(object : ProductListListener {\n             override fun onFailure(message: String) {\n                 productListView.hideProgress()\n                 productListView.showMessage(message)\n@@ -35,7 +34,6 @@ class ProductListPresenterImpl: ProductListPresenter {\n                 productListView.showProductList(productList)\n                 productListView.hideProgress()\n             }\n-\n         }, category)\n     }\n \n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/BasketView.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,6 +2,6 @@ package com.novoda.androidstoreexample.mvp.view\n \n import com.novoda.androidstoreexample.models.Order\n \n-interface BasketView: BaseView {\n+interface BasketView : BaseView {\n     fun showBasketItems(orders: List<Order>)\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/CategoryListView.kt",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -3,8 +3,7 @@ package com.novoda.androidstoreexample.mvp.view\n import android.view.View\n import com.novoda.androidstoreexample.models.Category\n \n-\n-interface CategoryListView : BaseView{\n+interface CategoryListView : BaseView {\n \n     fun showCategoryList(categories: List<Category>)\n \n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/ProductDetailView.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ package com.novoda.androidstoreexample.mvp.view\n import android.view.View\n import com.novoda.androidstoreexample.models.Product\n \n-interface ProductDetailView: BaseView {\n+interface ProductDetailView : BaseView {\n     fun populateProduct(product: Product)\n \n     fun onBasketClicked(view: View)\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/ProductListView.kt",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ package com.novoda.androidstoreexample.mvp.view\n import android.view.View\n import com.novoda.androidstoreexample.models.Product\n \n-interface ProductListView: BaseView {\n+interface ProductListView : BaseView {\n \n     fun showProductList(products: List<Product>)\n \n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/BasketService.kt",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -14,7 +14,7 @@ class BasketService {\n         }\n     }\n \n-    fun getBasket():List<Order>{\n+    fun getBasket(): List<Order> {\n         val orders = mutableListOf<Order>()\n         basket.forEach {\n             val order = Order(it.key, it.value)\n@@ -22,5 +22,4 @@ class BasketService {\n         }\n         return orders\n     }\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ShopService.kt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,5 +14,4 @@ interface ShopService {\n \n     @GET(\"items/{itemId}\")\n     fun getItemForId(@Path(\"itemId\") itemId: Int): Call<ProductDetailsResponse>\n-\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dcd75d510ea7112ca5d72d6efe027fe8d8b50900",
        "previous commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/test/java/com/novoda/androidstoreexample/JsonSchemaTest.kt",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -8,7 +8,6 @@ import org.junit.Before\n import org.junit.Test\n import java.io.File\n \n-\n class JsonSchemaTest {\n     @Before\n     fun setUp() {\n@@ -29,5 +28,4 @@ class JsonSchemaTest {\n \n         assertThat(json, matchesJsonSchemaInClasspath(\"schemas/category-schema.json\"))\n     }\n-\n }\n"
    },
    {
        "commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "previous commit hash": "9bd38a8e610d7398ffbd0686be3b53ccb3be4eeb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/build.gradle",
            "additions": 1,
            "deletions": 3
        },
        "diff content": "@@ -19,7 +19,7 @@ android {\n         versionCode 1\n         versionName \"1.0\"\n         buildConfigField STRING, API_URL, '\"http://10.0.2.2:4567\"'\n-        testInstrumentationRunner \"com.novoda.androidstoreexample.TestRunner\"\n+        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n     }\n     buildTypes {\n         release {\n@@ -54,6 +54,4 @@ dependencies {\n         exclude module: 'design'\n         exclude module: 'recyclerview-v7'\n     }\n-    androidTestImplementation 'io.cucumber:cucumber-java8:2.3.1'\n-    androidTestImplementation 'io.cucumber:cucumber-junit:2.3.1'\n }\n"
    },
    {
        "commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "previous commit hash": "9bd38a8e610d7398ffbd0686be3b53ccb3be4eeb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/TestRunner.kt",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-package com.novoda.androidstoreexample\n-\n-import cucumber.api.CucumberOptions\n-import cucumber.api.junit.Cucumber\n-import org.junit.runner.RunWith\n-\n-@RunWith(Cucumber::class)\n-@CucumberOptions(\n-        features = [\"/src/androidTest/assets/features\"],\n-        tags = [\"not @ignored\"])\n-\n-class RunCucumberTest\n-\n"
    },
    {
        "commit hash": "014061ef41c5581ae6e1eced1825125605535817",
        "previous commit hash": "9bd38a8e610d7398ffbd0686be3b53ccb3be4eeb",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/stepdefs/ProductStepDefs.kt",
            "additions": 0,
            "deletions": 30
        },
        "diff content": "@@ -1,30 +0,0 @@\n-package com.novoda.androidstoreexample.stepdefs\n-\n-import cucumber.api.DataTable\n-import cucumber.api.java8.En\n-import java.lang.Thread.sleep\n-\n-class StepDefs: En {\n-\n-    init {\n-        Given(\"^The user has launched the app$\") {\n-            println(\"banana\")\n-            fun launch(){\n-                sleep(1000)\n-\n-            }\n-            // Write code here that turns the phrase above into concrete actions\n-//            throw PendingException()\n-        }\n-\n-        Then(\"^The user can see the following Product Categories:$\") { arg1: DataTable ->\n-            // Write code here that turns the phrase above into concrete actions\n-            // For automatic transformation, change DataTable to one of\n-            // List<YourType>, List<List<E>>, List<Map<K,V>> or Map<K,V>.\n-            // E,K,V must be a scalar (String, Integer, Date, enum etc)\n-            assert(true)\n-//            throw PendingException()\n-        }\n-\n-    }\n-}\n"
    },
    {
        "commit hash": "9bd38a8e610d7398ffbd0686be3b53ccb3be4eeb",
        "previous commit hash": "4841f0ff7c0a668372f48a59a5559662b2d33eb3",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -14,7 +14,7 @@ android {\n     compileSdkVersion 26\n     defaultConfig {\n         applicationId \"com.novoda.testautomationstarter\"\n-        minSdkVersion 24\n+        minSdkVersion 26\n         targetSdkVersion 26\n         versionCode 1\n         versionName \"1.0\"\n"
    },
    {
        "commit hash": "4841f0ff7c0a668372f48a59a5559662b2d33eb3",
        "previous commit hash": "aebd2b2d621d7f2b2d74aa3a07f09d2177b18cfc",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/README.md",
            "additions": 8,
            "deletions": 2
        },
        "diff content": "@@ -7,9 +7,15 @@ The aim is to provide a hands-on introduction to those new to test engineering a\n \n ## Getting started\n \n-Before launching the app you'll need to start the server. Make sure you have Ruby installed by running `ruby -v` from the terminal. If it's not installed run `brew install ruby`\n+Before launching the app you'll need to start the server.\n+\n+Navigate to the `simplesinatraapi` directory in this project.\n+Make sure you have Ruby installed by running `ruby -v` from the terminal. If it's not installed run `brew install ruby`\n+\n+Next, run `bundle install`\n+\n+Finally, run `ruby server.rb`\n \n-Navigate to the `simplesinatraapi` directory in this project and run `ruby server.rb`\n \n You can check if the server is running by going to http://localhost:4567/ where you should see **Sinatra doesn\u2019t know this ditty.**\n \n"
    },
    {
        "commit hash": "aebd2b2d621d7f2b2d74aa3a07f09d2177b18cfc",
        "previous commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/README.md",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -1,12 +1,11 @@\n ## Overview\n \n-A sample retail store app that showcases current testing methodologies for Android apps. It comes with a simple Heroku server that can be run locally.\n+A sample retail store app that showcases current testing methodologies for Android. It comes with a simple Heroku server that can be run locally.\n \n The aim is to provide a hands-on introduction to those new to test engineering and a challenge for those who want to further improve the current implementation.\n \n \n ## Getting started\n-TODO: device vs emulator\n \n Before launching the app you'll need to start the server. Make sure you have Ruby installed by running `ruby -v` from the terminal. If it's not installed run `brew install ruby`\n \n@@ -14,7 +13,7 @@ Navigate to the `simplesinatraapi` directory in this project and run `ruby serve\n \n You can check if the server is running by going to http://localhost:4567/ where you should see **Sinatra doesn\u2019t know this ditty.**\n \n-Now all you need to do is start the app from Android Studio!\n+Now all you need to do is run the app from Android Studio!\n \n ## Tests\n \n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/.gitignore",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+*.iml\n+.gradle\n+/local.properties\n+/.idea/workspace.xml\n+/.idea/libraries\n+.DS_Store\n+/build\n+/captures\n+.externalNativeBuild\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/README.md",
            "additions": 32,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,32 @@\n+## Overview\n+\n+A sample retail store app that showcases current testing methodologies for Android apps. It comes with a simple Heroku server that can be run locally.\n+\n+The aim is to provide a hands-on introduction to those new to test engineering and a challenge for those who want to further improve the current implementation.\n+\n+\n+## Getting started\n+TODO: device vs emulator\n+\n+Before launching the app you'll need to start the server. Make sure you have Ruby installed by running `ruby -v` from the terminal. If it's not installed run `brew install ruby`\n+\n+Navigate to the `simplesinatraapi` directory in this project and run `ruby server.rb`\n+\n+You can check if the server is running by going to http://localhost:4567/ where you should see **Sinatra doesn\u2019t know this ditty.**\n+\n+Now all you need to do is start the app from Android Studio!\n+\n+## Tests\n+\n+We have tests to validate both the UI and the JSON Schema. The first are in `src/androidTest/java/com/novoda/androidstoreexample` and the latter in `src/test/java/com/novoda/androidstoreexample`\n+\n+To find out more about our approach to UI tests, see  https://docs.google.com/document/d/1S6f3tVwB0se1Xe3qc1Cv4I5ZVch-7lKJiuVgW_ktLkY/edit (to be replaced with wiki pages)\n+\n+## Current limitations\n+\n+* The content from the server can only be viewed on an emulator.\n+\n+* Right now we only have data for the \"Hats\" section.\n+\n+* The shopping basket is still work in progress.\n+\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/build.gradle",
            "additions": 59,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,59 @@\n+apply plugin: 'com.android.application'\n+apply plugin: 'kotlin-android'\n+apply plugin: 'kotlin-android-extensions'\n+apply plugin: 'kotlin-kapt'\n+\n+def API_URL = 'API_URL'\n+def STRING = 'String'\n+\n+kapt {\n+    generateStubs = true\n+}\n+\n+android {\n+    compileSdkVersion 26\n+    defaultConfig {\n+        applicationId \"com.novoda.testautomationstarter\"\n+        minSdkVersion 24\n+        targetSdkVersion 26\n+        versionCode 1\n+        versionName \"1.0\"\n+        buildConfigField STRING, API_URL, '\"http://10.0.2.2:4567\"'\n+        testInstrumentationRunner \"com.novoda.androidstoreexample.TestRunner\"\n+    }\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+\n+}\n+\n+dependencies {\n+    implementation fileTree(include: ['*.jar'], dir: 'libs')\n+    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version\"\n+    implementation 'com.android.support:appcompat-v7:26.1.0'\n+    implementation 'com.android.support.constraint:constraint-layout:1.0.2'\n+    implementation 'com.android.support:recyclerview-v7:26.1.0'\n+    kapt 'com.google.dagger:dagger-compiler:2.11'\n+    implementation 'com.google.dagger:dagger:2.11'\n+    implementation 'com.squareup.retrofit2:retrofit:2.3.0'\n+    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'\n+    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'\n+    testImplementation 'junit:junit:4.12'\n+    testImplementation 'io.rest-assured:rest-assured:3.0.6'\n+    testImplementation 'io.rest-assured:json-schema-validator:3.0.6'\n+    androidTestImplementation 'com.android.support.test:runner:1.0.1'\n+    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'\n+    androidTestImplementation 'com.squareup.okhttp:mockwebserver:1.3.0'\n+    androidTestImplementation 'org.mockito:mockito-core:2.8.9'\n+    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.1') {\n+        exclude module: 'support-annotations'\n+        exclude module: 'support-v4'\n+        exclude module: 'design'\n+        exclude module: 'recyclerview-v7'\n+    }\n+    androidTestImplementation 'io.cucumber:cucumber-java8:2.3.1'\n+    androidTestImplementation 'io.cucumber:cucumber-junit:2.3.1'\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/proguard-rules.pro",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.\n+# You can control the set of applied configuration files using the\n+# proguardFiles setting in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/assets/categories/categories.json",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+{\n+  \"categories\": [\n+    {\n+      \"title\": \"SHIRTS\",\n+      \"image\": \"shirtimage\"\n+    },\n+    {\n+      \"title\": \"Thingies to wear\",\n+      \"image\": \"hoodieimage\"\n+    },\n+    {\n+      \"title\": \"HATS\",\n+      \"image\": \"hatimage\"\n+    }\n+  ]\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/assets/features/first.feature",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+Feature: Product Category list\n+\n+  Scenario: User can see the Product Category list\n+    Given The user has launched the app\n+    Then The user can see the following Product Categories:\n+      | Shirts        |\n+      | Hoodies       |\n+      | Hats          |\n+      | Digital Goods |\n+\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/EspressoHostModule.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.androidstoreexample\n+\n+import com.novoda.androidstoreexample.dagger.module.HostModule\n+\n+\n+class EspressoHostModule(val port: Int): HostModule(){\n+    override fun provideBaseUrl():String {\n+        return \"http://127.0.0.1:$port\"\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/TestRunner.kt",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package com.novoda.androidstoreexample\n+\n+import cucumber.api.CucumberOptions\n+import cucumber.api.junit.Cucumber\n+import org.junit.runner.RunWith\n+\n+@RunWith(Cucumber::class)\n+@CucumberOptions(\n+        features = [\"/src/androidTest/assets/features\"],\n+        tags = [\"not @ignored\"])\n+\n+class RunCucumberTest\n+\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/ViewMatchers.kt",
            "additions": 44,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,44 @@\n+package com.novoda.androidstoreexample\n+\n+import android.support.test.espresso.matcher.BoundedMatcher\n+import android.support.v7.widget.RecyclerView\n+import com.novoda.androidstoreexample.adapters.CategoryAdapter\n+import com.novoda.androidstoreexample.adapters.ProductListAdapter\n+import org.hamcrest.Description\n+import org.hamcrest.Matcher\n+\n+object ViewMatchers {\n+\n+    @JvmStatic\n+    fun withCategoryTitle(title: String): Matcher<RecyclerView.ViewHolder> {\n+        return object : BoundedMatcher<RecyclerView.ViewHolder, CategoryAdapter.Holder>(CategoryAdapter.Holder::class.java) {\n+            override fun matchesSafely(item: CategoryAdapter.Holder): Boolean {\n+                if (item.categoryName != null) {\n+                    return item.categoryName!!.text.toString().equals(title, true)\n+                }\n+                return false\n+            }\n+\n+            override fun describeTo(description: Description) {\n+                description.appendText(\"view holder with title: \" + title)\n+            }\n+        }\n+    }\n+\n+    @JvmStatic\n+    fun withProductTitle(title: String): Matcher<RecyclerView.ViewHolder> {\n+        return object : BoundedMatcher<RecyclerView.ViewHolder, ProductListAdapter.Holder>(ProductListAdapter.Holder::class.java) {\n+            override fun describeTo(description: Description) {\n+                description.appendText(\"view holder with title: \" + title)\n+            }\n+\n+            override fun matchesSafely(item: ProductListAdapter.Holder?): Boolean {\n+                if (item?.productName != null) {\n+                    return item.productName!!.text.toString().equals(title, true)\n+                }\n+                return false\n+            }\n+        }\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/HeaderPageObject.kt",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.androidstoreexample.pageobjects\n+\n+import android.support.test.espresso.Espresso.onView\n+import android.support.test.espresso.ViewInteraction\n+import android.support.test.espresso.assertion.ViewAssertions.matches\n+import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n+import android.support.test.espresso.matcher.ViewMatchers.withId\n+import com.novoda.androidstoreexample.R\n+\n+\n+class HeaderPageObject {\n+    private val HEADER: ViewInteraction = onView(withId(R.id.action_bar_container))\n+\n+    fun verifyHeader() {\n+        HEADER.check(matches(isDisplayed()))\n+    }\n+\n+}\n+\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/MainActivityPageObject.kt",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+package com.novoda.androidstoreexample.pageobjects\n+\n+import android.support.test.espresso.Espresso.onView\n+import android.support.test.espresso.action.ViewActions.click\n+import android.support.test.espresso.assertion.ViewAssertions.matches\n+import android.support.test.espresso.contrib.RecyclerViewActions.actionOnHolderItem\n+import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n+import android.support.test.espresso.matcher.ViewMatchers.withId\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.ViewMatchers\n+\n+class MainActivityPageObject {\n+\n+    private val TITLE = onView(withId(R.id.titleTextView))\n+\n+    fun verifyTitle() {\n+        TITLE.check(matches(isDisplayed()))\n+    }\n+\n+    fun navigateToProductList() {\n+        val categoryMatcher = ViewMatchers.withCategoryTitle(\"HATS\")\n+\n+        onView(withId(R.id.categoryListView)).perform( actionOnHolderItem(categoryMatcher, click()))\n+    }\n+\n+}\n+\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/ProductDetailsPageObject.kt",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+package com.novoda.androidstoreexample.pageobjects\n+\n+import android.support.test.espresso.Espresso.onView\n+import android.support.test.espresso.assertion.ViewAssertions.matches\n+import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n+import android.support.test.espresso.matcher.ViewMatchers.withId\n+import com.novoda.androidstoreexample.R\n+\n+class ProductDetailsPageObject {\n+\n+    fun assertProductDetailsDisplayed() {\n+        onView(withId(R.id.productDetailDescription)).check(matches(isDisplayed()))\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/pageobjects/ProductListPageObject.kt",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.androidstoreexample.pageobjects\n+\n+import android.support.test.espresso.Espresso.onView\n+import android.support.test.espresso.action.ViewActions\n+import android.support.test.espresso.contrib.RecyclerViewActions\n+import android.support.test.espresso.matcher.ViewMatchers.withId\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.ViewMatchers\n+\n+\n+class ProductListPageObject {\n+\n+    fun navigateToProductDetails() {\n+        val productMatcher = ViewMatchers.withProductTitle(\"hat white\")\n+\n+        onView(withId(R.id.productListView)).perform( RecyclerViewActions.actionOnHolderItem(productMatcher, ViewActions.click()))\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/stepdefs/ProductStepDefs.kt",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+package com.novoda.androidstoreexample.stepdefs\n+\n+import cucumber.api.DataTable\n+import cucumber.api.java8.En\n+import java.lang.Thread.sleep\n+\n+class StepDefs: En {\n+\n+    init {\n+        Given(\"^The user has launched the app$\") {\n+            println(\"banana\")\n+            fun launch(){\n+                sleep(1000)\n+\n+            }\n+            // Write code here that turns the phrase above into concrete actions\n+//            throw PendingException()\n+        }\n+\n+        Then(\"^The user can see the following Product Categories:$\") { arg1: DataTable ->\n+            // Write code here that turns the phrase above into concrete actions\n+            // For automatic transformation, change DataTable to one of\n+            // List<YourType>, List<List<E>>, List<Map<K,V>> or Map<K,V>.\n+            // E,K,V must be a scalar (String, Integer, Date, enum etc)\n+            assert(true)\n+//            throw PendingException()\n+        }\n+\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoJavaTestExample.java",
            "additions": 44,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,44 @@\n+package com.novoda.androidstoreexample.tests;\n+\n+import android.support.test.rule.ActivityTestRule;\n+import android.support.test.runner.AndroidJUnit4;\n+import android.support.v7.widget.RecyclerView;\n+\n+import com.novoda.androidstoreexample.R;\n+import com.novoda.androidstoreexample.ViewMatchers;\n+import com.novoda.androidstoreexample.activities.MainActivity;\n+\n+import org.hamcrest.Matcher;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static android.support.test.espresso.Espresso.onView;\n+import static android.support.test.espresso.action.ViewActions.click;\n+import static android.support.test.espresso.assertion.ViewAssertions.matches;\n+import static android.support.test.espresso.contrib.RecyclerViewActions.actionOnHolderItem;\n+import static android.support.test.espresso.contrib.RecyclerViewActions.scrollToHolder;\n+import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static android.support.test.espresso.matcher.ViewMatchers.withId;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class EspressoJavaTestExample {\n+\n+    @Rule\n+    public ActivityTestRule<MainActivity> activityTestRule = new ActivityTestRule<MainActivity>(MainActivity.class);\n+\n+    @Test\n+    public void firstNavigationTest() {\n+        Matcher<RecyclerView.ViewHolder> categoryMatcher = ViewMatchers.withCategoryTitle(\"HATS\");\n+\n+        onView(android.support.test.espresso.matcher.ViewMatchers.withId(R.id.categoryListView)).perform(scrollToHolder(categoryMatcher), actionOnHolderItem(categoryMatcher, click()));\n+\n+        Matcher<RecyclerView.ViewHolder> productMatcher = ViewMatchers.withProductTitle(\"hat white\");\n+\n+        onView(withId(R.id.productListView)).perform(scrollToHolder(productMatcher), actionOnHolderItem(productMatcher, click()));\n+\n+        onView(withId(R.id.productDetailDescription)).check(matches(isDisplayed()));\n+\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoTestExample.kt",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+package com.novoda.androidstoreexample.tests\n+\n+import android.support.test.rule.ActivityTestRule\n+import android.support.test.runner.AndroidJUnit4\n+import com.novoda.androidstoreexample.activities.MainActivity\n+import com.novoda.androidstoreexample.pageobjects.MainActivityPageObject\n+import com.novoda.androidstoreexample.pageobjects.ProductDetailsPageObject\n+import com.novoda.androidstoreexample.pageobjects.ProductListPageObject\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+class EspressoTestExample {\n+\n+    private val mainActivityPageObject = MainActivityPageObject()\n+    private val productListPageObject = ProductListPageObject()\n+    private val productDetailsPageObject = ProductDetailsPageObject()\n+\n+    private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n+\n+    @get:Rule\n+    var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n+\n+\n+    @Test\n+    fun firstNavigationTest() {\n+\n+        mainActivityPageObject.navigateToProductList()\n+\n+        productListPageObject.navigateToProductDetails()\n+\n+        productDetailsPageObject.assertProductDetailsDisplayed()\n+\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/EspressoUserFlowTests.kt",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+package com.novoda.androidstoreexample.tests\n+\n+import android.support.test.rule.ActivityTestRule\n+import android.support.test.runner.AndroidJUnit4\n+import com.novoda.androidstoreexample.activities.MainActivity\n+import com.novoda.androidstoreexample.pageobjects.MainActivityPageObject\n+import com.novoda.androidstoreexample.pageobjects.ProductDetailsPageObject\n+import com.novoda.androidstoreexample.pageobjects.ProductListPageObject\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+class EspressoUserFlowTests {\n+\n+    private val mainActivityPageObject = MainActivityPageObject()\n+    private val productListPageObject = ProductListPageObject()\n+    private val productDetailsPageObject = ProductDetailsPageObject()\n+\n+    private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java)\n+\n+    @get:Rule\n+    var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n+\n+\n+    @Test\n+    fun navigateToProductDetailsTest() {\n+\n+        mainActivityPageObject.navigateToProductList()\n+\n+        productListPageObject.navigateToProductDetails()\n+\n+        productDetailsPageObject.assertProductDetailsDisplayed()\n+\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/HeaderTests.kt",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+package com.novoda.androidstoreexample.tests\n+\n+import android.support.test.rule.ActivityTestRule\n+import android.support.test.runner.AndroidJUnit4\n+import com.novoda.androidstoreexample.activities.ProductListActivity\n+import com.novoda.androidstoreexample.pageobjects.HeaderPageObject\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+class HeaderTests {\n+    private val activityTestRule = ActivityTestRule<ProductListActivity>(ProductListActivity::class.java)\n+\n+    @Test\n+    fun actionBarIsDisplayed() {\n+        val headerPageObject = HeaderPageObject()\n+        headerPageObject.verifyHeader()\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/JavaHeaderTests.java",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+package com.novoda.androidstoreexample.tests;\n+\n+import android.support.test.rule.ActivityTestRule;\n+import android.support.test.runner.AndroidJUnit4;\n+\n+import com.novoda.androidstoreexample.activities.MainActivity;\n+import com.novoda.androidstoreexample.pageobjects.HeaderPageObject;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class JavaHeaderTests {\n+    @Rule\n+    public ActivityTestRule<MainActivity> activityTestRule = new ActivityTestRule(MainActivity.class);\n+\n+    @Test\n+    public void actionBarIsDisplayed() {\n+        HeaderPageObject headerPageObject = new HeaderPageObject();\n+        headerPageObject.verifyHeader();\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/androidTest/java/com/novoda/androidstoreexample/tests/MockServerTestExample.kt",
            "additions": 64,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,64 @@\n+package com.novoda.androidstoreexample.tests\n+\n+import android.content.Intent\n+import android.support.test.InstrumentationRegistry\n+import android.support.test.espresso.Espresso.onView\n+import android.support.test.espresso.assertion.ViewAssertions.matches\n+import android.support.test.espresso.matcher.ViewMatchers.isDisplayed\n+import android.support.test.espresso.matcher.ViewMatchers.withText\n+import android.support.test.rule.ActivityTestRule\n+import android.support.test.runner.AndroidJUnit4\n+import com.novoda.androidstoreexample.EspressoHostModule\n+import com.novoda.androidstoreexample.activities.MainActivity\n+import com.novoda.androidstoreexample.dagger.App.Companion.component\n+import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n+import com.squareup.okhttp.mockwebserver.MockResponse\n+import com.squareup.okhttp.mockwebserver.MockWebServer\n+import org.junit.After\n+import org.junit.Before\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import java.io.InputStream\n+\n+@RunWith(AndroidJUnit4::class)\n+class MockServerTestExample {\n+\n+    private val activityTestRule = ActivityTestRule<MainActivity>(MainActivity::class.java, false, false)\n+    private val mockWebServer = MockWebServer()\n+    private val port = 9091\n+\n+    @get:Rule\n+    var activityRule: ActivityTestRule<MainActivity> = activityTestRule\n+\n+\n+    @Before\n+    @Throws(Exception::class)\n+    fun setUp() {\n+        val appComponent = DaggerAppComponent.builder().hostModule(EspressoHostModule(port)).build()\n+        component = appComponent\n+        mockWebServer.play(port)\n+    }\n+\n+    @Test\n+    fun categoryListCanBeAdapted() {\n+        mockWebServer.enqueue(createResponseFor(\"categories/categories.json\"))\n+        activityTestRule.launchActivity(Intent())\n+\n+        onView(withText(\"Thingies to wear\")).check(matches(isDisplayed()))\n+    }\n+\n+    @After\n+    fun tearDown() {\n+        mockWebServer.shutdown()\n+    }\n+\n+    private fun createResponseFor(resourceName: String): MockResponse {\n+        val resources = InstrumentationRegistry.getContext().resources.assets\n+        return MockResponse().setBody(convertStreamToString(resources.open(resourceName)))\n+    }\n+\n+    private fun convertStreamToString(input: InputStream): String {\n+        return input.bufferedReader().use { it.readText() }\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/AndroidManifest.xml",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.novoda.androidstoreexample\">\n+\n+    <uses-permission android:name=\"android.permission.INTERNET\" />\n+\n+    <application\n+        android:name=\".dagger.App\"\n+        android:allowBackup=\"true\"\n+        android:icon=\"@mipmap/ic_launcher\"\n+        android:label=\"@string/app_name\"\n+        android:roundIcon=\"@mipmap/ic_launcher_round\"\n+        android:supportsRtl=\"true\"\n+        android:theme=\"@style/AppTheme\">\n+        <activity android:name=\".activities.MainActivity\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+        <activity android:name=\".activities.ProductListActivity\" />\n+        <activity android:name=\".activities.ProductDetailsActivity\" />\n+        <activity android:name=\".activities.BasketActivity\"></activity>\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/BaseActivity.kt",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+package com.novoda.androidstoreexample.activities\n+\n+import android.os.Bundle\n+import android.support.v7.app.AppCompatActivity\n+import com.novoda.androidstoreexample.dagger.App\n+import com.novoda.androidstoreexample.dagger.component.AppComponent\n+import com.novoda.androidstoreexample.mvp.view.BaseView\n+\n+\n+abstract class BaseActivity : AppCompatActivity(), BaseView {\n+\n+    abstract fun getActivityLayout(): Int\n+\n+    abstract fun injectDependencies(appComponent: AppComponent)\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(getActivityLayout())\n+        injectDependencies(App.component)\n+    }\n+\n+    override fun showMessage(message: String) {\n+\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/BasketActivity.kt",
            "additions": 51,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,51 @@\n+package com.novoda.androidstoreexample.activities\n+\n+import android.os.Bundle\n+import android.support.v7.widget.LinearLayoutManager\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.adapters.BasketAdapter\n+import com.novoda.androidstoreexample.dagger.basket.BasketModule\n+import com.novoda.androidstoreexample.dagger.component.AppComponent\n+import com.novoda.androidstoreexample.models.Order\n+import com.novoda.androidstoreexample.mvp.presenter.BasketPresenter\n+import com.novoda.androidstoreexample.mvp.view.BasketView\n+import kotlinx.android.synthetic.main.activity_basket.*\n+import javax.inject.Inject\n+\n+class BasketActivity : BaseActivity(), BasketView {\n+\n+    lateinit var basketAdapter: BasketAdapter\n+\n+    @Inject\n+    lateinit var presenter: BasketPresenter\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_basket)\n+        presenter.loadBasket()\n+    }\n+\n+    override fun showProgress() {\n+\n+    }\n+\n+    override fun hideProgress() {\n+\n+    }\n+\n+    override fun showBasketItems(orders: List<Order>) {\n+        basketList.layoutManager = LinearLayoutManager(this)\n+        basketAdapter = BasketAdapter(this, orders) {\n+\n+        }\n+        basketList.adapter = basketAdapter\n+    }\n+\n+    override fun getActivityLayout(): Int {\n+        return R.layout.activity_basket\n+    }\n+\n+    override fun injectDependencies(appComponent: AppComponent) {\n+        appComponent.injectBasket(BasketModule(this)).inject(this)\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/MainActivity.kt",
            "additions": 67,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,67 @@\n+package com.novoda.androidstoreexample.activities\n+\n+import android.content.Intent\n+import android.opengl.Visibility\n+import android.os.Bundle\n+import android.support.v7.widget.LinearLayoutManager\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.adapters.CategoryAdapter\n+import com.novoda.androidstoreexample.dagger.categoryList.CategoryListModule\n+import com.novoda.androidstoreexample.dagger.component.AppComponent\n+import com.novoda.androidstoreexample.models.Category\n+import com.novoda.androidstoreexample.mvp.presenter.CategoryListPresenter\n+import com.novoda.androidstoreexample.mvp.view.CategoryListView\n+import com.novoda.androidstoreexample.utilities.CATEGORY_ID_EXTRA\n+import kotlinx.android.synthetic.main.activity_main.*\n+import javax.inject.Inject\n+\n+class MainActivity : BaseActivity(), CategoryListView {\n+\n+    private lateinit var categoryAdapter: CategoryAdapter\n+\n+    @Inject\n+    lateinit var presenter: CategoryListPresenter\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        presenter.loadCategoryList()\n+    }\n+\n+    override fun showCategoryList(categories: List<Category>) {\n+        categoryListView.layoutManager = LinearLayoutManager(this)\n+        categoryAdapter = CategoryAdapter(this, categories) { category ->\n+            presenter.onCategoryItemClicked(category)\n+        }\n+        categoryListView.adapter = categoryAdapter\n+    }\n+\n+    override fun showProgress() {\n+        mainActivityProgressBar.visibility = VISIBLE\n+    }\n+\n+    override fun hideProgress() {\n+        mainActivityProgressBar.visibility = GONE\n+    }\n+\n+    override fun getActivityLayout(): Int {\n+        return R.layout.activity_main\n+    }\n+\n+    override fun injectDependencies(appComponent: AppComponent) {\n+        appComponent.injectCategory(CategoryListModule(this)).inject(this)\n+    }\n+\n+    override fun onItemClicked(type: Int) {\n+        val productIntent = Intent(this, ProductListActivity::class.java)\n+        productIntent.putExtra(CATEGORY_ID_EXTRA, type)\n+        startActivity(productIntent)\n+    }\n+\n+    override fun onBasketClicked(view: View) {\n+        val basketIntent = Intent(this, BasketActivity::class.java)\n+        startActivity(basketIntent)\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/ProductDetailsActivity.kt",
            "additions": 65,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,65 @@\n+package com.novoda.androidstoreexample.activities\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.dagger.component.AppComponent\n+import com.novoda.androidstoreexample.dagger.productDetails.ProductDetailsModule\n+import com.novoda.androidstoreexample.models.Product\n+import com.novoda.androidstoreexample.mvp.presenter.ProductDetailPresenter\n+import com.novoda.androidstoreexample.mvp.view.ProductDetailView\n+import com.novoda.androidstoreexample.utilities.ImageHelper\n+import com.novoda.androidstoreexample.utilities.PRODUCT_ID_EXTRA\n+import kotlinx.android.synthetic.main.activity_product_details.*\n+import javax.inject.Inject\n+\n+class ProductDetailsActivity : BaseActivity(), ProductDetailView {\n+\n+    @Inject\n+    lateinit var presenter: ProductDetailPresenter\n+\n+    lateinit var product: Product\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        val itemId = intent.getIntExtra(PRODUCT_ID_EXTRA, -0)\n+        presenter.loadProductDetails(itemId)\n+    }\n+\n+    override fun populateProduct(product: Product) {\n+        val resourceId = ImageHelper().getResourceIdForImage(this, product.image)\n+        productDetailImage.setImageResource(resourceId)\n+        productDetailTitle.text = product.title\n+        productDetailDescription.text = product.productDescription\n+        productDetailPrice.text = product.price\n+        this.product = product\n+    }\n+\n+    override fun getActivityLayout(): Int {\n+        return R.layout.activity_product_details\n+    }\n+\n+    override fun injectDependencies(appComponent: AppComponent) {\n+        appComponent.injectProductDetails(ProductDetailsModule(this)).inject(this)\n+    }\n+\n+    override fun showProgress() {\n+        productDetailsProgressBar.visibility = VISIBLE\n+    }\n+\n+    override fun hideProgress() {\n+        productDetailsProgressBar.visibility = GONE\n+    }\n+\n+    fun addToBasket(view: View) {\n+        presenter.addToBasket()\n+    }\n+\n+    override fun onBasketClicked(view: View) {\n+        val basketIntent = Intent(this, BasketActivity::class.java)\n+        startActivity(basketIntent)\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/activities/ProductListActivity.kt",
            "additions": 68,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,68 @@\n+package com.novoda.androidstoreexample.activities\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.support.v7.widget.GridLayoutManager\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.adapters.ProductListAdapter\n+import com.novoda.androidstoreexample.dagger.categoryList.ProductListModule\n+import com.novoda.androidstoreexample.dagger.component.AppComponent\n+import com.novoda.androidstoreexample.models.Product\n+import com.novoda.androidstoreexample.mvp.presenter.ProductListPresenter\n+import com.novoda.androidstoreexample.mvp.view.ProductListView\n+import com.novoda.androidstoreexample.utilities.CATEGORY_ID_EXTRA\n+import com.novoda.androidstoreexample.utilities.PRODUCT_ID_EXTRA\n+import kotlinx.android.synthetic.main.activity_product_list.*\n+import javax.inject.Inject\n+\n+class ProductListActivity : BaseActivity(), ProductListView {\n+\n+    private lateinit var productListAdapter: ProductListAdapter\n+\n+    @Inject\n+    lateinit var presenter: ProductListPresenter\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        val category = intent.getIntExtra(CATEGORY_ID_EXTRA, -1)\n+        presenter.loadProductList(category)\n+    }\n+\n+    override fun showProductList(products: List<Product>) {\n+        productListView.layoutManager = GridLayoutManager(this, 2)\n+        productListAdapter = ProductListAdapter(this, products) {product ->\n+            presenter.onProductClicked(product)\n+        }\n+        productListView.adapter = productListAdapter\n+    }\n+\n+    override fun getActivityLayout(): Int {\n+        return R.layout.activity_product_list\n+    }\n+\n+    override fun injectDependencies(appComponent: AppComponent) {\n+        appComponent.injectProducts(ProductListModule(this)).inject(this)\n+    }\n+\n+    override fun onProductClicked(productId: Int) {\n+        val intent = Intent(this, ProductDetailsActivity::class.java)\n+        intent.putExtra(PRODUCT_ID_EXTRA, productId)\n+        startActivity(intent)\n+    }\n+\n+    override fun showProgress() {\n+        productListProgressView.visibility = VISIBLE\n+    }\n+\n+    override fun hideProgress() {\n+        productListProgressView.visibility = GONE\n+    }\n+\n+    override fun onBasketClicked(view: View) {\n+        val basketIntent = Intent(this, BasketActivity::class.java)\n+        startActivity(basketIntent)\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/BasketAdapter.kt",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+package com.novoda.androidstoreexample.adapters\n+\n+import android.content.Context\n+import android.support.v7.widget.RecyclerView\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ImageView\n+import android.widget.TextView\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.models.Order\n+import com.novoda.androidstoreexample.utilities.ImageHelper\n+\n+class BasketAdapter(private val context: Context,\n+                    private val orders: List<Order>,\n+                    private val itemClicked: (Int) -> Unit) : RecyclerView.Adapter<BasketAdapter.Holder>() {\n+\n+    override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): Holder {\n+        val view = LayoutInflater.from(context).inflate(R.layout.basket_item, parent, false)\n+        return Holder(view, itemClicked)\n+    }\n+\n+    override fun getItemCount(): Int {\n+        return orders.size\n+    }\n+\n+    override fun onBindViewHolder(holder: Holder?, position: Int) {\n+        holder?.bindProducts(orders[position], context)\n+    }\n+\n+    inner class Holder(itemView: View?, private val itemClicked: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n+        private val productImage = itemView?.findViewById<ImageView>(R.id.basketProductImage)\n+        private val productTitle = itemView?.findViewById<TextView>(R.id.basketProductTitle)\n+        private val numberOfProducts = itemView?.findViewById<TextView>(R.id.NumberOfItemsTextField)\n+\n+        fun bindProducts(order: Order, context: Context) {\n+            val resourceId: Int = ImageHelper().getResourceIdForImage(context, order.product.image)\n+            productImage?.setImageResource(resourceId)\n+            productTitle?.text = order.product.title\n+            numberOfProducts?.text = order.numberOfItems.toString()\n+        }\n+    }\n+\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/CategoryAdapter.kt",
            "additions": 43,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,43 @@\n+package com.novoda.androidstoreexample.adapters\n+\n+import android.content.Context\n+import android.support.v7.widget.RecyclerView\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ImageView\n+import android.widget.TextView\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.models.Category\n+import com.novoda.androidstoreexample.utilities.ImageHelper\n+\n+class CategoryAdapter(private val context: Context,\n+                      private val categories: List<Category>,\n+                      private val itemClicked: (Int) -> Unit) : RecyclerView.Adapter<CategoryAdapter.Holder>() {\n+    override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): Holder {\n+        val view = LayoutInflater.from(context)\n+                .inflate(R.layout.category_item, parent, false)\n+        return Holder(view, itemClicked)\n+    }\n+\n+    override fun getItemCount(): Int {\n+        return categories.count()\n+    }\n+\n+    override fun onBindViewHolder(holder: Holder?, position: Int) {\n+        holder?.bindCategory(categories[position], context)\n+    }\n+\n+\n+    inner class Holder(itemView: View?, private val itemClick: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n+        private val categoryImage = itemView?.findViewById<ImageView>(R.id.categoryImage)\n+        val categoryName = itemView?.findViewById<TextView>(R.id.categoryName)\n+\n+        fun bindCategory(category: Category, context: Context) {\n+            val resourceId = ImageHelper().getResourceIdForImage(context, category.image)\n+            categoryImage?.setImageResource(resourceId)\n+            categoryName?.text = category.title\n+            itemView.setOnClickListener { itemClick(category.id) }\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/adapters/ProductListAdapter.kt",
            "additions": 47,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,47 @@\n+package com.novoda.androidstoreexample.adapters\n+\n+import android.content.Context\n+import android.support.v7.widget.RecyclerView\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ImageView\n+import android.widget.TextView\n+import com.novoda.androidstoreexample.R\n+import com.novoda.androidstoreexample.models.Product\n+import com.novoda.androidstoreexample.utilities.ImageHelper\n+\n+class ProductListAdapter(private val context: Context,\n+                         private val products: List<Product>,\n+                         private val unitClicked: (Int) -> Unit) : RecyclerView.Adapter<ProductListAdapter.Holder>(){\n+\n+\n+    override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): Holder {\n+        val view = LayoutInflater.from(context).inflate(R.layout.product_list_item, parent, false)\n+        return Holder(view, unitClicked)\n+    }\n+\n+    override fun getItemCount(): Int {\n+        return products.size\n+    }\n+\n+    override fun onBindViewHolder(holder: Holder?, position: Int) {\n+        holder?.bindProduct(products[position], context)\n+    }\n+\n+\n+    inner class Holder(itemView: View?, private val itemClick: (Int) -> Unit) : RecyclerView.ViewHolder(itemView) {\n+\n+        private val productImage = itemView?.findViewById<ImageView>(R.id.productImage)\n+        val productName = itemView?.findViewById<TextView>(R.id.productTitle)\n+        private val productPrice = itemView?.findViewById<TextView>(R.id.productPrice)\n+\n+        fun bindProduct(product: Product, context: Context) {\n+            val resourceId: Int = ImageHelper().getResourceIdForImage(context, product.image)\n+            productImage?.setImageResource(resourceId)\n+            productName?.text = product.title\n+            productPrice?.text = product.price\n+            itemView.setOnClickListener { itemClick(product.id) }\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/App.kt",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+package com.novoda.androidstoreexample.dagger\n+\n+import android.app.Application\n+import com.novoda.androidstoreexample.dagger.component.AppComponent\n+import com.novoda.androidstoreexample.dagger.component.DaggerAppComponent\n+\n+\n+class App : Application() {\n+\n+    companion object {\n+        @JvmStatic\n+        lateinit var instance: App\n+        @JvmStatic\n+        lateinit var component: AppComponent\n+    }\n+\n+\n+    override fun onCreate() {\n+        super.onCreate()\n+        instance = this\n+        component = DaggerAppComponent.create()\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/basket/BasketComponent.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.androidstoreexample.dagger.basket\n+\n+import com.novoda.androidstoreexample.activities.BasketActivity\n+import dagger.Subcomponent\n+\n+@Subcomponent(modules = arrayOf(BasketModule::class))\n+interface BasketComponent {\n+    fun inject(basketActivity: BasketActivity)\n+}\n+\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/basket/BasketModule.kt",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+package com.novoda.androidstoreexample.dagger.basket\n+\n+import com.novoda.androidstoreexample.mvp.presenter.BasketPresenter\n+import com.novoda.androidstoreexample.mvp.presenter.impl.BasketPresenterImpl\n+import com.novoda.androidstoreexample.mvp.view.BasketView\n+import dagger.Module\n+import dagger.Provides\n+\n+@Module\n+class BasketModule(private val basketView: BasketView) {\n+\n+\n+    @Provides\n+    fun providesView(): BasketView = basketView\n+\n+    @Provides\n+    fun providePresenter(basketPresenter: BasketPresenterImpl): BasketPresenter {\n+        return basketPresenter\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/categoryList/CategoryListComponent.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.androidstoreexample.dagger.categoryList\n+\n+import dagger.Subcomponent\n+import com.novoda.androidstoreexample.activities.MainActivity\n+\n+@Subcomponent(modules = arrayOf(CategoryListModule::class))\n+interface CategoryListComponent {\n+\n+    fun inject(mainActivity: MainActivity)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/categoryList/CategoryListModule.kt",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+package com.novoda.androidstoreexample.dagger.categoryList\n+\n+import dagger.Module\n+import dagger.Provides\n+import com.novoda.androidstoreexample.mvp.interactor.CategoryListInteractor\n+import com.novoda.androidstoreexample.mvp.interactor.impl.CategoryListInteractorImpl\n+import com.novoda.androidstoreexample.mvp.presenter.CategoryListPresenter\n+import com.novoda.androidstoreexample.mvp.presenter.impl.CategoryListPresenterImpl\n+import com.novoda.androidstoreexample.mvp.view.CategoryListView\n+\n+@Module\n+class CategoryListModule {\n+    val categoryListView: CategoryListView\n+\n+    constructor(categoryListView: CategoryListView) {\n+        this.categoryListView = categoryListView\n+    }\n+\n+    @Provides\n+    fun providesView(): CategoryListView = categoryListView\n+\n+    @Provides\n+    fun providePresenter(categoryListPresenter: CategoryListPresenterImpl): CategoryListPresenter {\n+        return categoryListPresenter\n+    }\n+\n+    @Provides\n+    fun providesInteractor(categoryListInteractor: CategoryListInteractorImpl): CategoryListInteractor {\n+        return categoryListInteractor\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/component/AppComponent.kt",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+package com.novoda.androidstoreexample.dagger.component\n+\n+import com.novoda.androidstoreexample.dagger.basket.BasketComponent\n+import com.novoda.androidstoreexample.dagger.basket.BasketModule\n+import dagger.Component\n+import com.novoda.androidstoreexample.dagger.categoryList.CategoryListComponent\n+import com.novoda.androidstoreexample.dagger.categoryList.CategoryListModule\n+import com.novoda.androidstoreexample.dagger.categoryList.ProductListComponent\n+import com.novoda.androidstoreexample.dagger.categoryList.ProductListModule\n+import com.novoda.androidstoreexample.dagger.module.*\n+import com.novoda.androidstoreexample.dagger.productDetails.ProductDetailsComponent\n+import com.novoda.androidstoreexample.dagger.productDetails.ProductDetailsModule\n+import javax.inject.Singleton\n+\n+@Singleton\n+@Component(modules = arrayOf(AppModule::class, HostModule::class, RetrofitModule::class, ClientModule::class, BasketServiceModule::class))\n+interface AppComponent {\n+    fun injectCategory(categoryListModule: CategoryListModule): CategoryListComponent\n+    fun injectProducts(productListModule: ProductListModule): ProductListComponent\n+    fun injectProductDetails(productDetailsModule: ProductDetailsModule): ProductDetailsComponent\n+    fun injectBasket(basketModule: BasketModule): BasketComponent\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/AppModule.kt",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+package com.novoda.androidstoreexample.dagger.module\n+\n+import android.content.Context\n+import android.content.res.Resources\n+import dagger.Module\n+import dagger.Provides\n+import com.novoda.androidstoreexample.dagger.App\n+import javax.inject.Singleton\n+\n+@Module\n+class AppModule  {\n+\n+    @Provides\n+    @Singleton\n+    fun provideContext(): Context = App.instance\n+\n+    @Provides\n+    @Singleton\n+    fun providingResources(context: Context): Resources = context.resources\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/BasketServiceModule.kt",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+package com.novoda.androidstoreexample.dagger.module\n+\n+import com.novoda.androidstoreexample.services.BasketService\n+import dagger.Module\n+import dagger.Provides\n+import javax.inject.Singleton\n+\n+@Module\n+class BasketServiceModule {\n+\n+    @Provides\n+    @Singleton\n+    fun providesBasket(): BasketService{\n+        return BasketService()\n+    }\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/ClientModule.kt",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+package com.novoda.androidstoreexample.dagger.module\n+\n+import dagger.Module\n+import dagger.Provides\n+import okhttp3.OkHttpClient\n+import java.util.concurrent.TimeUnit\n+import javax.inject.Singleton\n+\n+@Module\n+class ClientModule {\n+\n+    @Provides\n+    @Singleton\n+    fun provideClient(networkTimeout: Long): OkHttpClient {\n+\n+        val okHttpClientBuilder: OkHttpClient.Builder = OkHttpClient.Builder()\n+\n+        okHttpClientBuilder.readTimeout(networkTimeout, TimeUnit.SECONDS)\n+        okHttpClientBuilder.connectTimeout(networkTimeout, TimeUnit.SECONDS)\n+\n+        return okHttpClientBuilder.build()\n+    }\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/HostModule.kt",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+package com.novoda.androidstoreexample.dagger.module\n+\n+import dagger.Module\n+import dagger.Provides\n+import com.novoda.androidstoreexample.BuildConfig\n+import javax.inject.Singleton\n+\n+@Module\n+open class HostModule {\n+    val NETWORK_TIMEOUT_SECONDS = 60L\n+\n+    @Provides\n+    @Singleton\n+    fun provideNetworkTimeout(): Long = NETWORK_TIMEOUT_SECONDS\n+\n+    @Provides\n+    @Singleton\n+    open fun provideBaseUrl(): String {\n+        return BuildConfig.API_URL\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/module/RetrofitModule.kt",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+package com.novoda.androidstoreexample.dagger.module\n+\n+import dagger.Module\n+import dagger.Provides\n+import com.novoda.androidstoreexample.services.ShopService\n+import okhttp3.OkHttpClient\n+import retrofit2.Converter\n+import retrofit2.Retrofit\n+import retrofit2.converter.moshi.MoshiConverterFactory\n+import javax.inject.Singleton\n+\n+@Module\n+class RetrofitModule {\n+    @Provides\n+    @Singleton\n+    fun provideRetrofit(httpClient: OkHttpClient, baseUrl: String, converter: Converter.Factory): Retrofit {\n+        return Retrofit.Builder()\n+                .baseUrl(baseUrl)\n+                .addConverterFactory(converter)\n+                .client(httpClient).build()\n+    }\n+\n+    @Provides\n+    @Singleton\n+    fun provideShopService(retrofit: Retrofit): ShopService {\n+        return retrofit.create(ShopService::class.java)\n+    }\n+\n+    @Provides\n+    @Singleton\n+    fun providesMoshi(): Converter.Factory {\n+        return MoshiConverterFactory.create()\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/productDetails/ProductDetailsComponent.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.androidstoreexample.dagger.productDetails\n+\n+import com.novoda.androidstoreexample.activities.ProductDetailsActivity\n+import dagger.Subcomponent\n+\n+@Subcomponent(modules = arrayOf(ProductDetailsModule::class))\n+interface ProductDetailsComponent {\n+    fun inject(productDetailsActivity: ProductDetailsActivity)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/productDetails/ProductDetailsModule.kt",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+package com.novoda.androidstoreexample.dagger.productDetails\n+\n+import com.novoda.androidstoreexample.mvp.interactor.ProductDetailsInteractor\n+import com.novoda.androidstoreexample.mvp.interactor.impl.ProductDetailsInterActorImpl\n+import com.novoda.androidstoreexample.mvp.presenter.ProductDetailPresenter\n+import com.novoda.androidstoreexample.mvp.presenter.impl.ProductDetailPresenterImpl\n+import com.novoda.androidstoreexample.mvp.view.ProductDetailView\n+import dagger.Module\n+import dagger.Provides\n+\n+@Module\n+class ProductDetailsModule {\n+    val productDetailView: ProductDetailView\n+\n+    constructor(productDetailView: ProductDetailView) {\n+        this.productDetailView = productDetailView\n+    }\n+\n+    @Provides\n+    fun providesView(): ProductDetailView = productDetailView\n+\n+    @Provides\n+    fun providePresenter(productDetailsPresenter: ProductDetailPresenterImpl): ProductDetailPresenter {\n+        return productDetailsPresenter\n+    }\n+\n+    @Provides\n+    fun providesInteractor(productDetailsInteractor: ProductDetailsInterActorImpl): ProductDetailsInteractor {\n+        return productDetailsInteractor\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/productList/ProductListComponent.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.androidstoreexample.dagger.categoryList\n+\n+import com.novoda.androidstoreexample.activities.ProductListActivity\n+import dagger.Subcomponent\n+\n+@Subcomponent(modules = arrayOf(ProductListModule::class))\n+interface ProductListComponent {\n+\n+    fun inject(productListActivity: ProductListActivity)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/dagger/productList/ProductListModule.kt",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+package com.novoda.androidstoreexample.dagger.categoryList\n+\n+import dagger.Module\n+import dagger.Provides\n+import com.novoda.androidstoreexample.mvp.interactor.CategoryListInteractor\n+import com.novoda.androidstoreexample.mvp.interactor.ProductListInteractor\n+import com.novoda.androidstoreexample.mvp.interactor.impl.CategoryListInteractorImpl\n+import com.novoda.androidstoreexample.mvp.interactor.impl.ProductListInteractorImpl\n+import com.novoda.androidstoreexample.mvp.presenter.CategoryListPresenter\n+import com.novoda.androidstoreexample.mvp.presenter.ProductListPresenter\n+import com.novoda.androidstoreexample.mvp.presenter.impl.CategoryListPresenterImpl\n+import com.novoda.androidstoreexample.mvp.presenter.impl.ProductListPresenterImpl\n+import com.novoda.androidstoreexample.mvp.view.CategoryListView\n+import com.novoda.androidstoreexample.mvp.view.ProductListView\n+\n+@Module\n+class ProductListModule {\n+    val productListView: ProductListView\n+\n+    constructor(productListView: ProductListView) {\n+        this.productListView = productListView\n+    }\n+\n+    @Provides\n+    fun providesView(): ProductListView = productListView\n+\n+    @Provides\n+    fun providePresenter(productListPresenter: ProductListPresenterImpl): ProductListPresenter {\n+        return productListPresenter\n+    }\n+\n+    @Provides\n+    fun providesInteractor(productListInteractor: ProductListInteractorImpl): ProductListInteractor {\n+        return productListInteractor\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/models/Category.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.androidstoreexample.models\n+\n+data class Category(val id: Int, val title: String, val image: String) {\n+    override fun toString(): String {\n+        return title\n+    }\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/models/Order.kt",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+package com.novoda.androidstoreexample.models\n+\n+data class Order(val product: Product, val numberOfItems: Int)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/models/Product.kt",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+package com.novoda.androidstoreexample.models\n+import com.squareup.moshi.Json\n+\n+data class Product(val id: Int,\n+                   val title: String,\n+                   val price: String,\n+                   val image: String,\n+                   @Json(name = \"product_description\") val productDescription: String)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/BaseInteractor.kt",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+package com.novoda.androidstoreexample.mvp.interactor\n+\n+interface BaseInteractor {\n+    fun cancel()\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/CategoryListInteractor.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.androidstoreexample.mvp.interactor\n+\n+import com.novoda.androidstoreexample.mvp.listener.CategoryListListener\n+\n+interface CategoryListInteractor: BaseInteractor {\n+    fun loadCategoryList(categoryListListener: CategoryListListener)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/ProductDetailsInteractor.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.androidstoreexample.mvp.interactor\n+\n+import com.novoda.androidstoreexample.mvp.listener.ProductDetailsListener\n+\n+interface ProductDetailsInteractor: BaseInteractor {\n+    fun loadProductDetails(productDetailsListener: ProductDetailsListener, itemId: Int)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/ProductListInteractor.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.androidstoreexample.mvp.interactor\n+\n+import com.novoda.androidstoreexample.mvp.listener.ProductListListener\n+\n+interface ProductListInteractor : BaseInteractor {\n+\n+    fun loadProductList(produListListener: ProductListListener, category: Int)\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/CategoryListInteractorImpl.kt",
            "additions": 48,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,48 @@\n+package com.novoda.androidstoreexample.mvp.interactor.impl\n+\n+import android.content.Context\n+import com.novoda.androidstoreexample.services.CategoryResponse\n+import com.novoda.androidstoreexample.mvp.interactor.CategoryListInteractor\n+import com.novoda.androidstoreexample.mvp.listener.CategoryListListener\n+import com.novoda.androidstoreexample.services.ShopService\n+import retrofit2.Call\n+import retrofit2.Callback\n+import retrofit2.Response\n+import retrofit2.Retrofit\n+import javax.inject.Inject\n+\n+class CategoryListInteractorImpl: CategoryListInteractor {\n+    val retrofit: Retrofit\n+    val apiService: ShopService\n+\n+    lateinit var call: Call<CategoryResponse>\n+\n+    @Inject\n+    constructor(retrofit: Retrofit, apiService: ShopService) {\n+        this.retrofit = retrofit\n+        this.apiService = apiService\n+    }\n+\n+\n+    override fun loadCategoryList(categoryListListener: CategoryListListener) {\n+        call = apiService.getCategories()\n+        call.enqueue(object : Callback<CategoryResponse>{\n+            override fun onResponse(call: Call<CategoryResponse>?, response: Response<CategoryResponse>?) {\n+                if (response != null && response.isSuccessful) {\n+                    categoryListListener.onSuccess(response.body()!!)\n+                } else {\n+                    categoryListListener.onFailure(\"Error while fetching data\")\n+                }\n+            }\n+\n+            override fun onFailure(call: Call<CategoryResponse>?, t: Throwable?) {\n+                categoryListListener.onFailure(\"Error while fetching data\")\n+            }\n+        })\n+\n+    }\n+\n+    override fun cancel() {\n+        call.cancel()\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/ProductDetailsInterActorImpl.kt",
            "additions": 46,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,46 @@\n+package com.novoda.androidstoreexample.mvp.interactor.impl\n+\n+import com.novoda.androidstoreexample.mvp.interactor.ProductDetailsInteractor\n+import com.novoda.androidstoreexample.mvp.listener.ProductDetailsListener\n+import com.novoda.androidstoreexample.services.ProductDetailsResponse\n+import com.novoda.androidstoreexample.services.ShopService\n+import retrofit2.Call\n+import retrofit2.Callback\n+import retrofit2.Response\n+import retrofit2.Retrofit\n+import javax.inject.Inject\n+\n+class ProductDetailsInterActorImpl: ProductDetailsInteractor {\n+    private val retrofit: Retrofit\n+    private val shopService: ShopService\n+\n+    private lateinit var call: Call<ProductDetailsResponse>\n+\n+    @Inject\n+    constructor(retrofit: Retrofit, shopService: ShopService) {\n+        this.retrofit = retrofit\n+        this.shopService = shopService\n+    }\n+\n+    override fun cancel() {\n+        call.cancel()\n+    }\n+\n+    override fun loadProductDetails(productDetailsListener: ProductDetailsListener, itemId: Int) {\n+        call = shopService.getItemForId(itemId)\n+        call.enqueue(object : Callback<ProductDetailsResponse> {\n+            override fun onFailure(call: Call<ProductDetailsResponse>?, t: Throwable?) {\n+                productDetailsListener.onFailure(\"Error\")\n+            }\n+\n+            override fun onResponse(call: Call<ProductDetailsResponse>?, response: Response<ProductDetailsResponse>?) {\n+                if (response != null && response.isSuccessful) {\n+                    productDetailsListener.onSuccess(response.body()!!)\n+                } else {\n+                    productDetailsListener.onFailure(\"Error\")\n+                }\n+            }\n+\n+        })\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/interactor/impl/ProductListInteractorImpl.kt",
            "additions": 47,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,47 @@\n+package com.novoda.androidstoreexample.mvp.interactor.impl\n+\n+import android.content.Context\n+import com.novoda.androidstoreexample.services.ProductResponse\n+import com.novoda.androidstoreexample.mvp.interactor.ProductListInteractor\n+import com.novoda.androidstoreexample.mvp.listener.ProductListListener\n+import com.novoda.androidstoreexample.services.ShopService\n+import retrofit2.Call\n+import retrofit2.Callback\n+import retrofit2.Response\n+import retrofit2.Retrofit\n+import javax.inject.Inject\n+\n+class ProductListInteractorImpl: ProductListInteractor {\n+    val retrofit: Retrofit\n+    val apiService: ShopService\n+\n+    lateinit var call: Call<ProductResponse>\n+\n+    @Inject\n+    constructor(retrofit: Retrofit, apiService: ShopService) {\n+        this.retrofit = retrofit\n+        this.apiService = apiService\n+    }\n+\n+    override fun cancel() {\n+        call.cancel()\n+    }\n+\n+    override fun loadProductList(produListListener: ProductListListener, category: Int) {\n+        call = apiService.getProductsFromCategory(category)\n+        call.enqueue(object: Callback<ProductResponse> {\n+            override fun onFailure(call: Call<ProductResponse>?, t: Throwable?) {\n+                produListListener.onFailure(\"Error while fetching\")\n+            }\n+\n+            override fun onResponse(call: Call<ProductResponse>?, response: Response<ProductResponse>?) {\n+                if (response != null && response.isSuccessful) {\n+                    produListListener.onSuccess(response.body()!!)\n+                } else {\n+                    produListListener.onFailure(\"Error while fetching data\")\n+                }\n+            }\n+\n+        })\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/listener/BaseListener.kt",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+package com.novoda.androidstoreexample.mvp.listener\n+\n+interface BaseListener {\n+\n+    fun onFailure(message: String)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/listener/CategoryListListener.kt",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+package com.novoda.androidstoreexample.mvp.listener\n+\n+import com.novoda.androidstoreexample.services.CategoryResponse\n+\n+interface CategoryListListener: BaseListener {\n+\n+    fun onSuccess(categoryResponse: CategoryResponse)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/listener/ProductDetailsListener.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.androidstoreexample.mvp.listener\n+\n+import com.novoda.androidstoreexample.services.ProductDetailsResponse\n+\n+interface ProductDetailsListener: BaseListener {\n+    fun onSuccess(response: ProductDetailsResponse)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/listener/ProductListListener.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.androidstoreexample.mvp.listener\n+\n+import com.novoda.androidstoreexample.services.ProductResponse\n+\n+interface ProductListListener : BaseListener {\n+\n+    fun onSuccess(productResponse: ProductResponse)\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/BasePresenter.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.androidstoreexample.mvp.presenter\n+\n+interface BasePresenter {\n+\n+    fun cancel()\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/BasketPresenter.kt",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+package com.novoda.androidstoreexample.mvp.presenter\n+\n+interface BasketPresenter {\n+\n+    fun loadBasket()\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/CategoryListPresenter.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.androidstoreexample.mvp.presenter\n+\n+interface CategoryListPresenter : BasePresenter {\n+\n+    fun loadCategoryList()\n+\n+    fun onCategoryItemClicked(type: Int)\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/ProductDetailPresenter.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.androidstoreexample.mvp.presenter\n+\n+interface ProductDetailPresenter : BasePresenter {\n+    fun loadProductDetails(productId: Int)\n+\n+    fun addToBasket()\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/ProductListPresenter.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.androidstoreexample.mvp.presenter\n+\n+interface ProductListPresenter: BasePresenter {\n+\n+    fun loadProductList(category: Int)\n+\n+    fun onProductClicked(productId: Int)\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/BasketPresenterImpl.kt",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+package com.novoda.androidstoreexample.mvp.presenter.impl\n+\n+import com.novoda.androidstoreexample.mvp.presenter.BasketPresenter\n+import com.novoda.androidstoreexample.mvp.view.BasketView\n+import com.novoda.androidstoreexample.services.BasketService\n+import javax.inject.Inject\n+\n+class BasketPresenterImpl: BasketPresenter {\n+    val basketView: BasketView\n+    val basketService: BasketService\n+\n+    @Inject\n+    constructor(basketView: BasketView, basketService: BasketService) {\n+        this.basketView = basketView\n+        this.basketService = basketService\n+    }\n+\n+\n+    override fun loadBasket() {\n+        basketView.showProgress()\n+        basketView.showBasketItems(basketService.getBasket())\n+        basketView.hideProgress()\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/CategoryListPresenterImpl.kt",
            "additions": 44,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,44 @@\n+package com.novoda.androidstoreexample.mvp.presenter.impl\n+\n+import com.novoda.androidstoreexample.models.Category\n+import com.novoda.androidstoreexample.services.CategoryResponse\n+import com.novoda.androidstoreexample.mvp.interactor.CategoryListInteractor\n+import com.novoda.androidstoreexample.mvp.listener.CategoryListListener\n+import com.novoda.androidstoreexample.mvp.presenter.CategoryListPresenter\n+import com.novoda.androidstoreexample.mvp.view.CategoryListView\n+import javax.inject.Inject\n+\n+class CategoryListPresenterImpl : CategoryListPresenter {\n+    private val categoryListView: CategoryListView\n+    private val categoryListInteractor: CategoryListInteractor\n+\n+    @Inject\n+    constructor(categoryListView: CategoryListView, categoryListInteractor: CategoryListInteractor) {\n+        this.categoryListView = categoryListView\n+        this.categoryListInteractor = categoryListInteractor\n+    }\n+\n+    override fun cancel() {\n+        categoryListInteractor.cancel()\n+    }\n+\n+    override fun onCategoryItemClicked(type: Int) {\n+        categoryListView.onItemClicked(type)\n+    }\n+\n+    override fun loadCategoryList() {\n+        categoryListView.showProgress()\n+        categoryListInteractor.loadCategoryList(object: CategoryListListener {\n+            override fun onFailure(message: String) {\n+                categoryListView.hideProgress()\n+                categoryListView.showMessage(message)\n+            }\n+\n+            override fun onSuccess(categoryResponse: CategoryResponse) {\n+                val categoryList: List<Category> = categoryResponse.categories.toList()\n+                categoryListView.showCategoryList(categoryList)\n+                categoryListView.hideProgress()\n+            }\n+        })\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/ProductDetailPresenterImpl.kt",
            "additions": 50,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,50 @@\n+package com.novoda.androidstoreexample.mvp.presenter.impl\n+\n+import com.novoda.androidstoreexample.models.Product\n+import com.novoda.androidstoreexample.mvp.interactor.ProductDetailsInteractor\n+import com.novoda.androidstoreexample.mvp.listener.ProductDetailsListener\n+import com.novoda.androidstoreexample.mvp.presenter.ProductDetailPresenter\n+import com.novoda.androidstoreexample.mvp.view.ProductDetailView\n+import com.novoda.androidstoreexample.services.BasketService\n+import com.novoda.androidstoreexample.services.ProductDetailsResponse\n+import javax.inject.Inject\n+\n+class ProductDetailPresenterImpl: ProductDetailPresenter {\n+    private val productDetailView: ProductDetailView\n+    private val productDetailsInteractor: ProductDetailsInteractor\n+    private val basketService: BasketService\n+\n+    private lateinit var product: Product\n+\n+    @Inject\n+    constructor(productDetailView: ProductDetailView, productDetailsInteractor: ProductDetailsInteractor, basketService: BasketService) {\n+        this.productDetailView = productDetailView\n+        this.productDetailsInteractor = productDetailsInteractor\n+        this.basketService = basketService\n+    }\n+\n+\n+    override fun cancel() {\n+        productDetailsInteractor.cancel()\n+    }\n+\n+    override fun loadProductDetails(productId: Int) {\n+        productDetailView.showProgress()\n+        productDetailsInteractor.loadProductDetails(object : ProductDetailsListener{\n+            override fun onFailure(message: String) {\n+                productDetailView.hideProgress()\n+                productDetailView.showMessage(message)\n+            }\n+\n+            override fun onSuccess(response: ProductDetailsResponse) {\n+                productDetailView.populateProduct(response.item)\n+                product = response.item\n+                productDetailView.hideProgress()\n+            }\n+        }, productId)\n+    }\n+\n+    override fun addToBasket() {\n+        basketService.addToBasket(product)\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/presenter/impl/ProductListPresenterImpl.kt",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+package com.novoda.androidstoreexample.mvp.presenter.impl\n+\n+import com.novoda.androidstoreexample.services.ProductResponse\n+import com.novoda.androidstoreexample.mvp.interactor.ProductListInteractor\n+import com.novoda.androidstoreexample.mvp.listener.ProductListListener\n+import com.novoda.androidstoreexample.mvp.presenter.ProductListPresenter\n+import com.novoda.androidstoreexample.mvp.view.ProductListView\n+import javax.inject.Inject\n+\n+class ProductListPresenterImpl: ProductListPresenter {\n+    private val productListInteractor: ProductListInteractor\n+    private val productListView: ProductListView\n+\n+    @Inject\n+    constructor(productListInteractor: ProductListInteractor, productListView: ProductListView) {\n+        this.productListInteractor = productListInteractor\n+        this.productListView = productListView\n+    }\n+\n+\n+    override fun cancel() {\n+        productListInteractor.cancel()\n+    }\n+\n+    override fun loadProductList(category: Int) {\n+       productListView.showProgress()\n+        productListInteractor.loadProductList(object: ProductListListener{\n+            override fun onFailure(message: String) {\n+                productListView.hideProgress()\n+                productListView.showMessage(message)\n+            }\n+\n+            override fun onSuccess(productResponse: ProductResponse) {\n+                val productList = productResponse.products.toList()\n+                productListView.showProductList(productList)\n+                productListView.hideProgress()\n+            }\n+\n+        }, category)\n+    }\n+\n+    override fun onProductClicked(productId: Int) {\n+        productListView.onProductClicked(productId)\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/BaseView.kt",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.androidstoreexample.mvp.view\n+\n+interface BaseView {\n+    fun showProgress()\n+\n+    fun hideProgress()\n+\n+    fun showMessage(message: String)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/BasketView.kt",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.androidstoreexample.mvp.view\n+\n+import com.novoda.androidstoreexample.models.Order\n+\n+interface BasketView: BaseView {\n+    fun showBasketItems(orders: List<Order>)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/CategoryListView.kt",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+package com.novoda.androidstoreexample.mvp.view\n+\n+import android.view.View\n+import com.novoda.androidstoreexample.models.Category\n+\n+\n+interface CategoryListView : BaseView{\n+\n+    fun showCategoryList(categories: List<Category>)\n+\n+    fun onItemClicked(type: Int)\n+\n+    fun onBasketClicked(view: View)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/ProductDetailView.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.androidstoreexample.mvp.view\n+\n+import android.view.View\n+import com.novoda.androidstoreexample.models.Product\n+\n+interface ProductDetailView: BaseView {\n+    fun populateProduct(product: Product)\n+\n+    fun onBasketClicked(view: View)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/mvp/view/ProductListView.kt",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package com.novoda.androidstoreexample.mvp.view\n+\n+import android.view.View\n+import com.novoda.androidstoreexample.models.Product\n+\n+interface ProductListView: BaseView {\n+\n+    fun showProductList(products: List<Product>)\n+\n+    fun onProductClicked(productId: Int)\n+\n+    fun onBasketClicked(view: View)\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/BasketService.kt",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+package com.novoda.androidstoreexample.services\n+\n+import com.novoda.androidstoreexample.models.Order\n+import com.novoda.androidstoreexample.models.Product\n+\n+class BasketService {\n+    val basket = mutableMapOf<Product, Int>()\n+\n+    fun addToBasket(product: Product) {\n+        if (basket.containsKey(product)) {\n+            basket[product] = basket[product]!! + 1\n+        } else {\n+            basket[product] = 1\n+        }\n+    }\n+\n+    fun getBasket():List<Order>{\n+        val orders = mutableListOf<Order>()\n+        basket.forEach {\n+            val order = Order(it.key, it.value)\n+            orders.add(order)\n+        }\n+        return orders\n+    }\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/CategoryResponse.kt",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+package com.novoda.androidstoreexample.services\n+\n+import com.novoda.androidstoreexample.models.Category\n+import java.util.*\n+\n+data class CategoryResponse(val categories: Array<Category>) {\n+    override fun equals(other: Any?): Boolean {\n+        if (this === other) return true\n+        if (javaClass != other?.javaClass) return false\n+\n+        other as CategoryResponse\n+\n+        if (!Arrays.equals(categories, other.categories)) return false\n+\n+        return true\n+    }\n+\n+    override fun hashCode(): Int {\n+        return Arrays.hashCode(categories)\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ProductDetailsResponse.kt",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+package com.novoda.androidstoreexample.services\n+\n+import com.novoda.androidstoreexample.models.Product\n+\n+data class ProductDetailsResponse(val item: Product)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ProductResponse.kt",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+package com.novoda.androidstoreexample.services\n+\n+import com.novoda.androidstoreexample.models.Product\n+import java.util.*\n+\n+data class ProductResponse(val products: Array<Product>) {\n+    override fun equals(other: Any?): Boolean {\n+        if (this === other) return true\n+        if (javaClass != other?.javaClass) return false\n+\n+        other as ProductResponse\n+\n+        if (!Arrays.equals(products, other.products)) return false\n+\n+        return true\n+    }\n+\n+    override fun hashCode(): Int {\n+        return Arrays.hashCode(products)\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/services/ShopService.kt",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+package com.novoda.androidstoreexample.services\n+\n+import retrofit2.Call\n+import retrofit2.http.GET\n+import retrofit2.http.Path\n+\n+interface ShopService {\n+\n+    @GET(\"categories\")\n+    fun getCategories(): Call<CategoryResponse>\n+\n+    @GET(\"category/{categoryId}/items\")\n+    fun getProductsFromCategory(@Path(\"categoryId\") categoryName: Int): Call<ProductResponse>\n+\n+    @GET(\"items/{itemId}\")\n+    fun getItemForId(@Path(\"itemId\") itemId: Int): Call<ProductDetailsResponse>\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/utilities/Constants.kt",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,4 @@\n+package com.novoda.androidstoreexample.utilities\n+\n+const val CATEGORY_ID_EXTRA = \"CATEGORY_ID\"\n+const val PRODUCT_ID_EXTRA = \"PRODUCT_ID\"\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/java/com/novoda/androidstoreexample/utilities/ImageHelper.kt",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.androidstoreexample.utilities\n+\n+import android.content.Context\n+\n+class ImageHelper {\n+    fun getResourceIdForImage(context: Context, imageName: String): Int {\n+        return context.resources.getIdentifier(imageName,\n+                \"drawable\", context.packageName)\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/digitalgoodsimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/digitalgoodsimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hat1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hat1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hat2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hat2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hat3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hat3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hat4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hat4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hatimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hatimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodie1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodie1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodie2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodie2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodie3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodie3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodie4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodie4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodieimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/hoodieimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt5.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirt5.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirtimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-hdpi/shirtimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/digitalgoodsimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/digitalgoodsimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hat1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hat1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hat2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hat2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hat3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hat3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hat4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hat4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hatimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hatimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodie1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodie1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodie2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodie2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodie3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodie3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodie4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodie4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodieimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/hoodieimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt5.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirt5.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirtimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-mdpi/shirtimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-v24/ic_launcher_foreground.xml",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:aapt=\"http://schemas.android.com/aapt\"\n+    android:width=\"108dp\"\n+    android:height=\"108dp\"\n+    android:viewportHeight=\"108\"\n+    android:viewportWidth=\"108\">\n+    <path\n+        android:fillType=\"evenOdd\"\n+        android:pathData=\"M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z\"\n+        android:strokeColor=\"#00000000\"\n+        android:strokeWidth=\"1\">\n+        <aapt:attr name=\"android:fillColor\">\n+            <gradient\n+                android:endX=\"78.5885\"\n+                android:endY=\"90.9159\"\n+                android:startX=\"48.7653\"\n+                android:startY=\"61.0927\"\n+                android:type=\"linear\">\n+                <item\n+                    android:color=\"#44000000\"\n+                    android:offset=\"0.0\" />\n+                <item\n+                    android:color=\"#00000000\"\n+                    android:offset=\"1.0\" />\n+            </gradient>\n+        </aapt:attr>\n+    </path>\n+    <path\n+        android:fillColor=\"#FFFFFF\"\n+        android:fillType=\"nonZero\"\n+        android:pathData=\"M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z\"\n+        android:strokeColor=\"#00000000\"\n+        android:strokeWidth=\"1\" />\n+</vector>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/digitalgoodsimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/digitalgoodsimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hat1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hat1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hat2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hat2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hat3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hat3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hat4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hat4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hatimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hatimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodie1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodie1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodie2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodie2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodie3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodie3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodie4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodie4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodieimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/hoodieimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt5.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirt5.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirtimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xhdpi/shirtimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/digitalgoodsimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/digitalgoodsimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hat1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hat1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hat2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hat2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hat3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hat3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hat4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hat4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hatimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hatimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodie1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodie1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodie2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodie2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodie3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodie3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodie4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodie4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodieimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/hoodieimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt5.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirt5.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirtimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxhdpi/shirtimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/digitalgoodsimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/digitalgoodsimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hat1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hat1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hat2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hat2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hat3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hat3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hat4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hat4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hatimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hatimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodie1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodie1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodie2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodie2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodie3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodie3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodie4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodie4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodieimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/hoodieimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt1.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt2.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt3.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt4.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt5.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirt5.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirtimage.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/drawable-xxxhdpi/shirtimage.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/drawable/ic_launcher_background.xml",
            "additions": 170,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,170 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:width=\"108dp\"\n+    android:height=\"108dp\"\n+    android:viewportHeight=\"108\"\n+    android:viewportWidth=\"108\">\n+    <path\n+        android:fillColor=\"#26A69A\"\n+        android:pathData=\"M0,0h108v108h-108z\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M9,0L9,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,0L19,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M29,0L29,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M39,0L39,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M49,0L49,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M59,0L59,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M69,0L69,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M79,0L79,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M89,0L89,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M99,0L99,108\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,9L108,9\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,19L108,19\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,29L108,29\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,39L108,39\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,49L108,49\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,59L108,59\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,69L108,69\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,79L108,79\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,89L108,89\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,99L108,99\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,29L89,29\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,39L89,39\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,49L89,49\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,59L89,59\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,69L89,69\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,79L89,79\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M29,19L29,89\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M39,19L39,89\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M49,19L49,89\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M59,19L59,89\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M69,19L69,89\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M79,19L79,89\"\n+        android:strokeColor=\"#33FFFFFF\"\n+        android:strokeWidth=\"0.8\" />\n+</vector>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/layout/activity_basket.xml",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    tools:context=\"com.novoda.androidstoreexample.activities.BasketActivity\">\n+\n+\n+    <TextView\n+        android:id=\"@+id/basketTextField\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginStart=\"16dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:text=\"@string/basket\"\n+        android:textSize=\"18sp\"\n+        app:layout_constraintLeft_toLeftOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\" />\n+\n+    <android.support.v7.widget.RecyclerView\n+        android:id=\"@+id/basketList\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"0dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:layout_marginEnd=\"8dp\"\n+        android:layout_marginStart=\"8dp\"\n+        app:layout_constraintTop_toBottomOf=\"@id/basketTextField\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintHorizontal_bias=\"1.0\"\n+        app:layout_constraintStart_toStartOf=\"parent\" />\n+\n+</android.support.constraint.ConstraintLayout>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/layout/activity_main.xml",
            "additions": 58,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,58 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    tools:context=\"com.novoda.androidstoreexample.activities.MainActivity\">\n+\n+    <TextView\n+        android:id=\"@+id/categoriesTextField\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginStart=\"16dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:text=\"@string/categories\"\n+        android:textSize=\"18sp\"\n+        app:layout_constraintLeft_toLeftOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\" />\n+\n+    <Button\n+        android:id=\"@+id/button\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginEnd=\"8dp\"\n+        android:text=\"@string/to_the_basket\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        android:onClick=\"onBasketClicked\"/>\n+\n+\n+    <android.support.v7.widget.RecyclerView\n+        android:id=\"@+id/categoryListView\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"0dp\"\n+        android:layout_marginBottom=\"0dp\"\n+        android:layout_marginEnd=\"0dp\"\n+        android:layout_marginStart=\"0dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:divider=\"@null\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@id/categoriesTextField\" />\n+\n+    <ProgressBar\n+        android:id=\"@+id/mainActivityProgressBar\"\n+        style=\"?android:attr/progressBarStyle\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        app:layout_constraintEnd_toStartOf=\"@+id/categoryListView\"\n+        app:layout_constraintStart_toEndOf=\"@+id/categoryListView\"\n+        app:layout_constraintTop_toBottomOf=\"parent\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        android:visibility=\"gone\"\n+        />\n+\n+\n+</android.support.constraint.ConstraintLayout>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/layout/activity_product_details.xml",
            "additions": 102,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,102 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    tools:context=\"com.novoda.androidstoreexample.activities.ProductDetailsActivity\">\n+\n+    <ImageView\n+        android:id=\"@+id/productDetailImage\"\n+        android:layout_width=\"200dp\"\n+        android:layout_height=\"200dp\"\n+        android:layout_marginTop=\"8dp\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintHorizontal_bias=\"0.5\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/button3\"\n+        tools:srcCompat=\"@drawable/hat1\" />\n+\n+    <TextView\n+        android:id=\"@+id/productDetailTitle\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginEnd=\"24dp\"\n+        android:layout_marginStart=\"24dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:textAlignment=\"center\"\n+        android:textSize=\"20sp\"\n+        android:textStyle=\"bold\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintHorizontal_bias=\"0.5\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/productDetailImage\"\n+        tools:text=\"Very Loooooooong Product Description\" />\n+\n+    <TextView\n+        android:id=\"@+id/productDetailPrice\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginEnd=\"24dp\"\n+        android:layout_marginStart=\"24dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:textAlignment=\"center\"\n+        android:textSize=\"16sp\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintHorizontal_bias=\"0.5\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/productDetailTitle\"\n+        tools:text=\"$14\" />\n+\n+    <TextView\n+        android:id=\"@+id/productDetailDescription\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginEnd=\"24dp\"\n+        android:layout_marginStart=\"24dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:textAlignment=\"center\"\n+        android:textSize=\"16sp\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintHorizontal_bias=\"0.5\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/productDetailPrice\"\n+        tools:text=\"Celiac normcore artisan selvage fashion axe kombucha poutine. Tousled try-hard meggings knausgaard dreamcatcher helvetica. Humblebrag carry pop-up. Plaid chartreuse ethical readymade viral cold-pressed.\" />\n+\n+\n+    <ProgressBar\n+        android:id=\"@+id/productDetailsProgressBar\"\n+        style=\"?android:attr/progressBarStyle\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:visibility=\"gone\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toStartOf=\"parent\"\n+        app:layout_constraintStart_toEndOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"parent\" />\n+\n+    <Button\n+        android:id=\"@+id/addToBasketButton\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginBottom=\"8dp\"\n+        android:layout_marginEnd=\"16dp\"\n+        android:layout_marginStart=\"16dp\"\n+        android:text=\"@string/add_to_basket\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintHorizontal_bias=\"0.5\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        android:onClick=\"addToBasket\"/>\n+\n+    <Button\n+        android:id=\"@+id/button\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginEnd=\"8dp\"\n+        android:text=\"@string/to_the_basket\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        android:onClick=\"onBasketClicked\"/>\n+\n+</android.support.constraint.ConstraintLayout>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/layout/activity_product_list.xml",
            "additions": 69,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,69 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    tools:context=\"com.novoda.androidstoreexample.activities.ProductListActivity\">\n+\n+    <TextView\n+        android:id=\"@+id/noItemsVisibleTextView\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/error_in_fetching_data\"\n+\n+        app:layout_constraintBottom_toTopOf=\"@+id/productListView\"\n+        app:layout_constraintEnd_toStartOf=\"@+id/productListView\"\n+        app:layout_constraintHorizontal_bias=\"0.5\"\n+        app:layout_constraintStart_toEndOf=\"@+id/productListView\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/productListView\"\n+        android:visibility=\"gone\"/>\n+\n+    <Button\n+        android:id=\"@+id/button\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginEnd=\"8dp\"\n+        android:text=\"@string/to_the_basket\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        android:onClick=\"onBasketClicked\"/>\n+\n+    <TextView\n+        android:id=\"@+id/titleTextView\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginStart=\"16dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:text=\"@string/products\"\n+        android:textSize=\"18sp\"\n+        app:layout_constraintLeft_toLeftOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\" />\n+\n+    <android.support.v7.widget.RecyclerView\n+        android:id=\"@+id/productListView\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"0dp\"\n+        android:layout_marginBottom=\"0dp\"\n+        android:layout_marginEnd=\"0dp\"\n+        android:layout_marginStart=\"0dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:divider=\"@null\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/titleTextView\" />\n+\n+    <ProgressBar\n+        android:id=\"@+id/productListProgressView\"\n+        style=\"?android:attr/progressBarStyle\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        app:layout_constraintEnd_toStartOf=\"parent\"\n+        app:layout_constraintStart_toEndOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"parent\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        android:visibility=\"gone\"\n+        />\n+\n+</android.support.constraint.ConstraintLayout>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/layout/basket_item.xml",
            "additions": 74,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,74 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\">\n+\n+    <ImageView\n+        android:id=\"@+id/basketProductImage\"\n+        android:layout_width=\"100dp\"\n+        android:layout_height=\"100dp\"\n+        android:layout_marginBottom=\"8dp\"\n+        android:layout_marginStart=\"16dp\"\n+        android:layout_marginTop=\"24dp\"\n+        android:contentDescription=\"@string/basket_item_images\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        tools:srcCompat=\"@drawable/hat3\" />\n+\n+    <TextView\n+        android:id=\"@+id/basketProductTitle\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginStart=\"16dp\"\n+        android:textSize=\"16sp\"\n+        app:layout_constraintStart_toEndOf=\"@+id/basketProductImage\"\n+        app:layout_constraintTop_toTopOf=\"@+id/basketProductImage\"\n+        tools:text=\"Looooooooooong title\" />\n+\n+    <Button\n+        android:id=\"@+id/increaseButton\"\n+        android:layout_width=\"40dp\"\n+        android:layout_height=\"40dp\"\n+        android:layout_marginBottom=\"8dp\"\n+        android:layout_marginStart=\"32dp\"\n+        android:text=\"@string/plus\"\n+        app:layout_constraintBottom_toBottomOf=\"@+id/basketProductImage\"\n+        app:layout_constraintStart_toEndOf=\"@+id/basketProductImage\" />\n+\n+    <TextView\n+        android:id=\"@+id/NumberOfItemsTextField\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginBottom=\"8dp\"\n+        android:layout_marginStart=\"8dp\"\n+        android:layout_marginTop=\"8dp\"\n+        app:layout_constraintBottom_toBottomOf=\"@+id/increaseButton\"\n+        app:layout_constraintStart_toEndOf=\"@+id/increaseButton\"\n+        app:layout_constraintTop_toTopOf=\"@+id/increaseButton\"\n+        tools:text=\"1\" />\n+\n+    <Button\n+        android:id=\"@+id/button2\"\n+        android:layout_width=\"40dp\"\n+        android:layout_height=\"40dp\"\n+        android:layout_marginStart=\"8dp\"\n+        android:text=\"@string/minus\"\n+        app:layout_constraintBottom_toBottomOf=\"@+id/increaseButton\"\n+        app:layout_constraintStart_toEndOf=\"@+id/NumberOfItemsTextField\"\n+        app:layout_constraintTop_toTopOf=\"@+id/increaseButton\" />\n+\n+    <ImageButton\n+        android:id=\"@+id/deleteButton\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginBottom=\"8dp\"\n+        android:layout_marginEnd=\"16dp\"\n+        android:layout_marginTop=\"8dp\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        app:srcCompat=\"@android:drawable/btn_dialog\" />\n+</android.support.constraint.ConstraintLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/layout/category_item.xml",
            "additions": 32,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\">\n+\n+\n+    <ImageView\n+        android:id=\"@+id/categoryImage\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"150dp\"\n+        android:scaleType=\"centerCrop\"\n+        android:layout_marginTop=\"6dp\"\n+        android:layout_marginBottom=\"6dp\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\" />\n+\n+    <TextView\n+        android:id=\"@+id/categoryName\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:textColor=\"@android:color/white\"\n+        android:textSize=\"24sp\"\n+        android:textStyle=\"bold\"\n+        app:layout_constraintBottom_toBottomOf=\"@+id/categoryImage\"\n+        app:layout_constraintEnd_toEndOf=\"@+id/categoryImage\"\n+        app:layout_constraintStart_toStartOf=\"@+id/categoryImage\"\n+        app:layout_constraintTop_toTopOf=\"@+id/categoryImage\"\n+        tools:text=\"HATS\" />\n+</android.support.constraint.ConstraintLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/layout/product_list_item.xml",
            "additions": 50,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\">\n+\n+    <ImageView\n+        android:id=\"@+id/productImage\"\n+        android:layout_width=\"150dp\"\n+        android:layout_height=\"150dp\"\n+        android:layout_marginEnd=\"8dp\"\n+        android:layout_marginStart=\"8dp\"\n+        android:layout_marginTop=\"8dp\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        tools:srcCompat=\"@drawable/hat1\" />\n+\n+    <TextView\n+        android:id=\"@+id/productTitle\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginEnd=\"8dp\"\n+        android:layout_marginStart=\"8dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:textAlignment=\"center\"\n+        android:textSize=\"18sp\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/productImage\"\n+        tools:text=\"Veanie\" />\n+\n+    <TextView\n+        android:id=\"@+id/productPrice\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginBottom=\"15dp\"\n+        android:layout_marginEnd=\"8dp\"\n+        android:layout_marginStart=\"8dp\"\n+        android:layout_marginTop=\"16dp\"\n+        android:textAlignment=\"center\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/productTitle\"\n+        tools:text=\"$19\" />\n+\n+</android.support.constraint.ConstraintLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <background android:drawable=\"@drawable/ic_launcher_background\" />\n+    <foreground android:drawable=\"@drawable/ic_launcher_foreground\" />\n+</adaptive-icon>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <background android:drawable=\"@drawable/ic_launcher_background\" />\n+    <foreground android:drawable=\"@drawable/ic_launcher_foreground\" />\n+</adaptive-icon>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-hdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-hdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-mdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-mdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/values/colors.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <color name=\"colorPrimary\">#3F51B5</color>\n+    <color name=\"colorPrimaryDark\">#303F9F</color>\n+    <color name=\"colorAccent\">#FF4081</color>\n+</resources>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/values/strings.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<resources>\n+    <string name=\"app_name\">Android Store Example</string>\n+    <string name=\"categories\">Categories</string>\n+    <string name=\"products\">products</string>\n+    <string name=\"error_in_fetching_data\">Error in Fetching Data</string>\n+    <string name=\"error_fetching_data\">Error while fetching data</string>\n+    <string name=\"add_to_basket\">Add To Basket</string>\n+    <string name=\"basket_item_images\">Basket Item Images</string>\n+    <string name=\"plus\">+</string>\n+    <string name=\"minus\">-</string>\n+    <string name=\"basket\">Basket</string>\n+    <string name=\"to_the_basket\">To the basket</string>\n+</resources>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/main/res/values/styles.xml",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+<resources>\n+\n+    <!-- Base application theme. -->\n+    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n+        <!-- Customize your theme here. -->\n+        <item name=\"colorPrimary\">@color/colorPrimary</item>\n+        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n+        <item name=\"colorAccent\">@color/colorAccent</item>\n+    </style>\n+\n+</resources>\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/test/java/com/novoda/androidstoreexample/JsonSchemaTest.kt",
            "additions": 33,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,33 @@\n+package com.novoda.androidstoreexample\n+\n+import io.restassured.RestAssured\n+import io.restassured.RestAssured.get\n+import io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath\n+import org.junit.Assert.assertThat\n+import org.junit.Before\n+import org.junit.Test\n+import java.io.File\n+\n+\n+class JsonSchemaTest {\n+    @Before\n+    fun setUp() {\n+        RestAssured.baseURI = BuildConfig.API_URL\n+    }\n+\n+    @Test\n+    fun categegorySchema_matchesToTheServerResponse() {\n+        get(\"categories\")\n+                .then()\n+                .body(matchesJsonSchemaInClasspath(\"schemas/category-schema.json\"))\n+    }\n+\n+    @Test\n+    fun category() {\n+        val file = File(\"app/src/androidTest/assets/categories/categories.json\")\n+        val json = file.inputStream().bufferedReader().use { it.readText() }\n+\n+        assertThat(json, matchesJsonSchemaInClasspath(\"schemas/category-schema.json\"))\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/app/src/test/resources/schemas/category-schema.json",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+{\n+  \"type\": \"object\",\n+  \"properties\": {\n+    \"categories\": {\n+      \"type\": \"array\",\n+      \"items\": {\n+        \"type\": \"object\",\n+        \"properties\": {\n+          \"title\": {\n+            \"type\": \"string\",\n+            \"title\": \"The Title Schema\",\n+            \"description\": \"An explanation about the purpose of this instance.\",\n+            \"default\": \"\"\n+          },\n+          \"image\": {\n+            \"type\": \"string\",\n+            \"title\": \"The Image Schema\",\n+            \"description\": \"An explanation about the purpose of this instance.\",\n+            \"default\": \"\"\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/build.gradle",
            "additions": 32,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,32 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+\n+buildscript {\n+    ext.kotlin_version = '1.2.20'\n+    repositories {\n+        google()\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:3.1.0'\n+        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n+\n+        // NOTE: Do not place your application dependencies here; they belong\n+        // in the individual module build.gradle files\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        google()\n+        jcenter()\n+    }\n+}\n+\n+task copyTestClasses(type: Copy) {\n+    from \"build/tmp/kotlin-classes/debugUnitTest\"\n+    into \"build/intermediates/classes/debug\"\n+}\n+\n+task clean(type: Delete) {\n+    delete rootProject.buildDir\n+}\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/gradle.properties",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+# Project-wide Gradle settings.\n+\n+# IDE (e.g. Android Studio) users:\n+# Gradle settings configured through the IDE *will override*\n+# any settings specified in this file.\n+\n+# For more details on how to configure your build environment visit\n+# http://www.gradle.org/docs/current/userguide/build_environment.html\n+\n+# Specifies the JVM arguments used for the daemon process.\n+# The setting is particularly useful for tweaking memory settings.\n+org.gradle.jvmargs=-Xmx1536m\n+\n+# When configured, Gradle will run in incubating parallel mode.\n+# This option should only be used with decoupled projects. More details, visit\n+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n+# org.gradle.parallel=true\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/AndroidTestAutomationStarter/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Tue Apr 03 20:07:43 CEST 2018\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.4-all.zip\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/gradlew",
            "additions": 160,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/gradlew.bat",
            "additions": 90,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,90 @@\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:init\r\n+@rem Get command-line arguments, handling Windowz variants\r\n+\r\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n+if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n+\r\n+:win9xME_args\r\n+@rem Slurp the command line arguments.\r\n+set CMD_LINE_ARGS=\r\n+set _SKIP=2\r\n+\r\n+:win9xME_args_slurp\r\n+if \"x%~1\" == \"x\" goto execute\r\n+\r\n+set CMD_LINE_ARGS=%*\r\n+goto execute\r\n+\r\n+:4NT_args\r\n+@rem Get arguments from the 4NT Shell from JP Software\r\n+set CMD_LINE_ARGS=%$\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+include ':app'\n"
    },
    {
        "commit hash": "f4ec2087a3161aa618096d901ff828541ebead89",
        "previous commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "diff stats": {
            "file_path": "AndroidTestAutomationStarter/simplesinatraapi",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+Subproject commit 9515235ac23b33c5e79344a2c04e5afa1dd90c81\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/.gitignore",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+*.iml\n+.gradle\n+/local.properties\n+/.idea\n+/.idea/workspace.xml\n+/.idea/libraries\n+.DS_Store\n+/build\n+/captures\n+.externalNativeBuild\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/build.gradle",
            "additions": 33,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,33 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 25\n+    buildToolsVersion \"25.0.2\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.demo.movies\"\n+        minSdkVersion 14\n+        targetSdkVersion 25\n+        versionCode 1\n+        versionName \"1.0\"\n+        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n+    }\n+}\n+\n+dependencies {\n+    compile project(':core')\n+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n+        exclude group: 'com.android.support', module: 'support-annotations'\n+    })\n+    compile 'com.android.support:appcompat-v7:25.3.1'\n+    compile 'com.android.support:cardview-v7:25.3.1'\n+    compile 'com.android.support:recyclerview-v7:25.3.1'\n+    compile 'com.android.support.constraint:constraint-layout:1.0.2'\n+\n+    compile 'com.github.bumptech.glide:glide:3.7.0'\n+\n+    compile 'com.jakewharton:butterknife:8.5.1'\n+    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'\n+\n+    testCompile 'junit:junit:4.12'\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/AndroidManifest.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  package=\"com.novoda.demo.movies\">\n+\n+  <uses-permission android:name=\"android.permission.INTERNET\" />\n+  <application\n+    android:name=\"com.novoda.demo.movies.MoviesApplication\"\n+    android:allowBackup=\"true\"\n+    android:icon=\"@mipmap/ic_launcher\"\n+    android:label=\"@string/app_name\"\n+    android:roundIcon=\"@mipmap/ic_launcher_round\"\n+    android:supportsRtl=\"true\"\n+    android:theme=\"@style/AppTheme\">\n+    <activity android:name=\"com.novoda.demo.movies.MainActivity\">\n+      <intent-filter>\n+        <action android:name=\"android.intent.action.MAIN\" />\n+\n+        <category android:name=\"android.intent.category.LAUNCHER\" />\n+      </intent-filter>\n+    </activity>\n+  </application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/java/com/novoda/demo/movies/MainActivity.java",
            "additions": 87,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,87 @@\n+package com.novoda.demo.movies;\n+\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.support.v7.app.AppCompatActivity;\n+import android.support.v7.widget.LinearLayoutManager;\n+import android.support.v7.widget.RecyclerView;\n+import android.util.Log;\n+\n+import com.novoda.demo.movies.model.Movie;\n+import com.novoda.demo.movies.model.Video;\n+\n+import butterknife.BindView;\n+import butterknife.ButterKnife;\n+\n+public class MainActivity extends AppCompatActivity {\n+\n+    private MovieService movieService;\n+    private MoviesAdapter adapter;\n+\n+    @BindView(R.id.movies_list)\n+    RecyclerView resultList;\n+    private MovieService.Callback callback;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+        ButterKnife.bind(this);\n+        setTitle(\"Top Rated Movies\");\n+\n+        movieService = ((MoviesApplication) getApplication()).movieService();\n+\n+        resultList.setLayoutManager(new LinearLayoutManager(this));\n+\n+        adapter = new MoviesAdapter(new MoviesAdapter.Listener() {\n+            @Override\n+            public void onMovieSelected(final Movie movie) {\n+                startLoadingTrailer(movie);\n+            }\n+\n+            @Override\n+            public void onPageLoadRequested(final int page) {\n+                movieService.loadMore();\n+            }\n+        });\n+        resultList.setAdapter(adapter);\n+        callback = new MovieService.Callback() {\n+            @Override\n+            public void onNewData(MoviesSate moviesSate) {\n+                adapter.setMoviesSate(moviesSate);\n+            }\n+\n+            @Override\n+            public void onFailure(Throwable e) {\n+                Log.e(\"Movies\", \"while loading movies\", e);\n+            }\n+        };\n+    }\n+\n+    @Override\n+    protected void onStart() {\n+        super.onStart();\n+        movieService.subscribe(callback);\n+    }\n+\n+    @Override\n+    protected void onStop() {\n+        super.onStop();\n+        movieService.unsubscribe(callback);\n+    }\n+\n+    private void startLoadingTrailer(Movie movie) {\n+        movieService.loadTrailerFor(movie, new MovieService.TrailerCallback() {\n+            @Override\n+            public void onTrailerLoaded(Video video) {\n+                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(video.trailerUrl())));\n+            }\n+\n+            @Override\n+            public void onFailure(Throwable e) {\n+                Log.e(\"Movies\", \"while loading videos\", e);\n+            }\n+        });\n+    }\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/java/com/novoda/demo/movies/MoviesAdapter.java",
            "additions": 169,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,169 @@\n+package com.novoda.demo.movies;\n+\n+import android.support.v7.util.DiffUtil;\n+import android.support.v7.widget.RecyclerView;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.bumptech.glide.Glide;\n+import com.novoda.demo.movies.MoviesSate;\n+import com.novoda.demo.movies.model.Movie;\n+\n+import java.util.ArrayList;\n+\n+import butterknife.BindView;\n+import butterknife.ButterKnife;\n+\n+class MoviesAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {\n+\n+    private static final int MOVIE_ITEM = 0;\n+    private static final int NEXT_PAGE_ITEM = 1;\n+\n+    private MoviesSate moviesSate = new MoviesSate(new ArrayList<Movie>(), 0);\n+\n+    interface Listener {\n+        void onMovieSelected(Movie movie);\n+\n+        void onPageLoadRequested(int page);\n+    }\n+\n+    private final Listener listener;\n+\n+    public MoviesAdapter(Listener listener) {\n+        this.listener = listener;\n+        setHasStableIds(true);\n+    }\n+\n+    public void setMoviesSate(MoviesSate moviesSate) {\n+        DiffUtil.DiffResult diffResult = DiffUtil.calculateDiff(new MoviesDiffCallback(this.moviesSate, moviesSate), true);\n+        this.moviesSate = moviesSate;\n+        diffResult.dispatchUpdatesTo(this);\n+    }\n+\n+    @Override\n+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n+        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.movies_list_card, parent, false);\n+        if (viewType == 1) {\n+            return new LoadPageItem(view, listener);\n+        }\n+        return new MovieItem(view, listener);\n+    }\n+\n+    @Override\n+    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\n+        if (holder instanceof MovieItem) {\n+            ((MovieItem) holder).bind(moviesSate.get(position));\n+        } else {\n+            ((LoadPageItem) holder).bind(moviesSate.pageNumber());\n+        }\n+    }\n+\n+    @Override\n+    public int getItemCount() {\n+        return moviesSate.size() + 1;\n+    }\n+\n+    @Override\n+    public int getItemViewType(final int position) {\n+        return moviesSate.size() == position ? NEXT_PAGE_ITEM : MOVIE_ITEM;\n+    }\n+\n+    @Override\n+    public long getItemId(final int position) {\n+        if (position == moviesSate.size()) {\n+            return Long.MAX_VALUE;\n+        }\n+        return moviesSate.get(position).id.hashCode();\n+    }\n+\n+    class MovieItem extends RecyclerView.ViewHolder {\n+\n+        @BindView(R.id.movie_item_title) TextView text;\n+        @BindView(R.id.movie_item_poster) ImageView poster;\n+        @BindView(R.id.movie_item_rating) TextView rating;\n+\n+        MovieItem(View itemView, final Listener listener) {\n+            super(itemView);\n+            ButterKnife.bind(this, itemView);\n+            itemView.setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(final View v) {\n+                    int adapterPosition = getAdapterPosition();\n+                    if (adapterPosition != -1) {\n+                        listener.onMovieSelected(moviesSate.get(adapterPosition));\n+                    }\n+                }\n+            });\n+        }\n+\n+        public void bind(final Movie movie) {\n+            text.setText(movie.title);\n+            rating.setText(Double.toString(movie.rating));\n+            Glide.with(itemView.getContext()).load(movie.posterUrl()).into(poster);\n+        }\n+    }\n+\n+    static class LoadPageItem extends RecyclerView.ViewHolder {\n+\n+        @BindView(R.id.movie_item_title) TextView text;\n+        Listener listener;\n+\n+        LoadPageItem(View itemView, Listener listener) {\n+            super(itemView);\n+            ButterKnife.bind(this, itemView);\n+            this.listener = listener;\n+        }\n+\n+        public void bind(final int page) {\n+            text.setText(\"Loading page \" + page);\n+            listener.onPageLoadRequested(page);\n+        }\n+    }\n+\n+    private static class MoviesDiffCallback extends DiffUtil.Callback {\n+\n+        private final MoviesSate oldMovies;\n+        private final MoviesSate newMovies;\n+\n+        public MoviesDiffCallback(MoviesSate oldMovies, MoviesSate newMovies) {\n+            this.oldMovies = oldMovies;\n+            this.newMovies = newMovies;\n+        }\n+\n+        @Override\n+        public int getOldListSize() {\n+            return oldMovies.size() + 1;\n+        }\n+\n+        @Override\n+        public int getNewListSize() {\n+            return newMovies.size() + 1;\n+        }\n+\n+        @Override\n+        public boolean areItemsTheSame(int oldItemPosition, int newItemPosition) {\n+            if (oldItemPosition == oldMovies.size()) {\n+                return false;\n+            }\n+            if (newItemPosition == newMovies.size()) {\n+                return false;\n+            }\n+            return oldMovies.get(oldItemPosition).id.equals(newMovies.get(newItemPosition).id);\n+        }\n+\n+        @Override\n+        public boolean areContentsTheSame(int oldItemPosition, int newItemPosition) {\n+            if (oldItemPosition == oldMovies.size()) {\n+                return false;\n+            }\n+            if (newItemPosition == newMovies.size()) {\n+                return false;\n+            }\n+            return oldMovies.get(oldItemPosition).equals(newMovies.get(newItemPosition));\n+        }\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/java/com/novoda/demo/movies/MoviesApplication.java",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+package com.novoda.demo.movies;\n+\n+import android.app.Application;\n+\n+import com.novoda.demo.movies.Dependencies;\n+import com.novoda.demo.movies.MovieService;\n+\n+public class MoviesApplication extends Application {\n+\n+    private MovieService movieService;\n+\n+    @Override\n+    public void onCreate() {\n+        super.onCreate();\n+        Dependencies dependencies = new Dependencies(getCacheDir());\n+        movieService = dependencies.provideMovieService();\n+    }\n+\n+    public MovieService movieService() {\n+        return movieService;\n+    }\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/layout/activity_main.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:tools=\"http://schemas.android.com/tools\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  tools:context=\"com.novoda.demo.movies.MainActivity\">\n+\n+  <android.support.v7.widget.RecyclerView\n+    android:id=\"@+id/movies_list\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\" />\n+\n+</FrameLayout>\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/layout/movies_list_card.xml",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.v7.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:cardview=\"http://schemas.android.com/apk/res-auto\"\n+  android:id=\"@+id/card_view\"\n+  android:layout_gravity=\"center\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"wrap_content\"\n+  android:layout_margin=\"4dp\"\n+  android:clickable=\"true\"\n+  android:foreground=\"?android:attr/selectableItemBackground\"\n+  cardview:cardElevation=\"2dp\"\n+  cardview:cardCornerRadius=\"4dp\">\n+\n+  <include\n+    layout=\"@layout/movies_list_item\"\n+    android:layout_margin=\"16dp\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\" />\n+\n+</android.support.v7.widget.CardView>\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/layout/movies_list_item.xml",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+  xmlns:tools=\"http://schemas.android.com/tools\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\">\n+\n+  <ImageView\n+    android:id=\"@+id/movie_item_poster\"\n+    android:layout_width=\"92dp\"\n+    android:layout_height=\"140dp\"\n+    app:layout_constraintTop_toTopOf=\"parent\"\n+    app:layout_constraintLeft_toLeftOf=\"parent\"\n+    app:layout_constraintBottom_toBottomOf=\"parent\" />\n+\n+  <TextView\n+    android:id=\"@+id/movie_item_title\"\n+    android:layout_height=\"wrap_content\"\n+    android:paddingLeft=\"16dp\"\n+    android:maxLines=\"2\"\n+    android:ellipsize=\"end\"\n+    android:textSize=\"20sp\"\n+    tools:text=\"Some Title here\"\n+    app:layout_constraintRight_toRightOf=\"parent\"\n+    app:layout_constraintTop_toTopOf=\"@+id/movie_item_poster\"\n+    app:layout_constraintLeft_toRightOf=\"@+id/movie_item_poster\"\n+    app:layout_constraintBottom_toTopOf=\"@+id/movie_item_rating\"\n+    android:layout_width=\"0dp\"\n+    app:layout_constraintVertical_bias=\"0.0\"\n+    app:layout_constraintHorizontal_bias=\"0.0\"\n+    android:layout_marginRight=\"8dp\" />\n+\n+  <TextView\n+    tools:text=\"TextView\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"\n+    android:id=\"@+id/movie_item_rating\"\n+    app:layout_constraintRight_toRightOf=\"parent\"\n+    app:layout_constraintBottom_toBottomOf=\"@+id/movie_item_poster\"\n+    app:layout_constraintLeft_toRightOf=\"@+id/movie_item_poster\"\n+    app:layout_constraintHorizontal_bias=\"1.0\"\n+    android:layout_marginRight=\"8dp\"\n+    android:layout_marginBottom=\"0dp\" />\n+\n+</android.support.constraint.ConstraintLayout>\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-hdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-hdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-mdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-mdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/values/colors.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+  <color name=\"colorPrimary\">#3F51B5</color>\n+  <color name=\"colorPrimaryDark\">#303F9F</color>\n+  <color name=\"colorAccent\">#FF4081</color>\n+</resources>\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/values/strings.xml",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+<resources>\n+  <string name=\"app_name\">Movies</string>\n+</resources>\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/app/src/main/res/values/styles.xml",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+<resources>\n+\n+  <!-- Base application theme. -->\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n+    <!-- Customize your theme here. -->\n+    <item name=\"colorPrimary\">@color/colorPrimary</item>\n+    <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n+    <item name=\"colorAccent\">@color/colorAccent</item>\n+  </style>\n+\n+</resources>\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/build.gradle",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:2.3.1'\n+\n+        // NOTE: Do not place your application dependencies here; they belong\n+        // in the individual module build.gradle files\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        jcenter()\n+    }\n+}\n+\n+task clean(type: Delete) {\n+    delete rootProject.buildDir\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/build.gradle",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+apply plugin: 'java'\n+\n+dependencies {\n+    compile fileTree(dir: 'libs', include: ['*.jar'])\n+\n+    compile 'com.squareup.retrofit2:retrofit:2.2.0'\n+    compile 'com.squareup.retrofit2:converter-gson:2.2.0'\n+    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'\n+}\n+\n+sourceCompatibility = \"1.7\"\n+targetCompatibility = \"1.7\"\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/src/main/java/com/novoda/demo/movies/Dependencies.java",
            "additions": 53,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,53 @@\n+package com.novoda.demo.movies;\n+\n+import com.novoda.demo.movies.api.MoviesApi;\n+\n+import java.io.File;\n+\n+import okhttp3.Cache;\n+import okhttp3.OkHttpClient;\n+import retrofit2.Retrofit;\n+import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;\n+import retrofit2.converter.gson.GsonConverterFactory;\n+\n+public class Dependencies {\n+\n+    private final File cacheDir;\n+\n+    public Dependencies(File cacheDir) {\n+        this.cacheDir = cacheDir;\n+    }\n+\n+    public MovieService provideMovieService() {\n+        Cache cache = providesCache();\n+        OkHttpClient httpClient = providesOkHttp(cache);\n+        Retrofit retrofit = providesRetrofit(httpClient);\n+        MoviesApi moviesApi = providesApi(retrofit);\n+        return new MovieService(moviesApi);\n+    }\n+\n+    private MoviesApi providesApi(Retrofit retrofit) {\n+        return retrofit.create(MoviesApi.class);\n+    }\n+\n+    private Retrofit providesRetrofit(OkHttpClient httpClient) {\n+        return new Retrofit.Builder()\n+                    .client(httpClient)\n+                    .baseUrl(\"https://api.themoviedb.org/3/\")\n+                    .addConverterFactory(GsonConverterFactory.create())\n+                    .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n+                    .build();\n+    }\n+\n+    private OkHttpClient providesOkHttp(Cache cache) {\n+        return new OkHttpClient.Builder()\n+                    .cache(cache)\n+                    .build();\n+    }\n+\n+    private Cache providesCache() {\n+        int cacheSize = 10 * 1024 * 1024; // 10 MiB\n+        return new Cache(cacheDir, cacheSize);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/src/main/java/com/novoda/demo/movies/MovieService.java",
            "additions": 107,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,107 @@\n+package com.novoda.demo.movies;\n+\n+import com.novoda.demo.movies.api.MoviesApi;\n+import com.novoda.demo.movies.api.MoviesResponse;\n+import com.novoda.demo.movies.api.VideosResponse;\n+import com.novoda.demo.movies.model.Movie;\n+import com.novoda.demo.movies.model.Video;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import rx.Observable;\n+import rx.Observer;\n+import rx.functions.Func1;\n+import rx.schedulers.Schedulers;\n+\n+public class MovieService {\n+\n+    private final MoviesApi api;\n+    private MoviesSate moviesSate = new MoviesSate(new ArrayList<Movie>(), 1);\n+\n+    private Callback callback;\n+\n+    public MovieService(MoviesApi api) {\n+        this.api = api;\n+    }\n+\n+    public void subscribe(Callback callback) {\n+        this.callback = callback;\n+        callback.onNewData(moviesSate);\n+        if (moviesSate.isEmpty()) {\n+            loadMore();\n+        }\n+    }\n+\n+    public void unsubscribe(Callback callback) {\n+        this.callback = null;\n+    }\n+\n+    public void loadMore() {\n+        api.topRated(moviesSate.pageNumber()).enqueue(new retrofit2.Callback<MoviesResponse>() {\n+            @Override\n+            public void onResponse(Call<MoviesResponse> call, Response<MoviesResponse> response) {\n+                if (response == null || response.body() == null || response.body().results == null) {\n+                    return;\n+                }\n+                List<Movie> movies = moviesSate.movies();\n+                movies.addAll(response.body().results);\n+                moviesSate = new MoviesSate(movies, moviesSate.pageNumber() + 1);\n+                callback.onNewData(moviesSate);\n+            }\n+\n+            @Override\n+            public void onFailure(Call<MoviesResponse> call, Throwable throwable) {\n+                callback.onFailure(throwable);\n+            }\n+        });\n+    }\n+\n+    public void loadTrailerFor(Movie movie, final TrailerCallback trailerCallback) {\n+        api.videos(movie.id)\n+                .flatMapObservable(new Func1<VideosResponse, Observable<Video>>() {\n+                    @Override\n+                    public Observable<Video> call(final VideosResponse videosResponse) {\n+                        return Observable.from(videosResponse.results);\n+                    }\n+                })\n+                .takeFirst(new Func1<Video, Boolean>() {\n+                    @Override\n+                    public Boolean call(final Video video) {\n+                        return video.trailerUrl() != null;\n+                    }\n+                })\n+                .subscribeOn(Schedulers.io())\n+                .subscribe(new Observer<Video>() {\n+                    @Override\n+                    public void onCompleted() {\n+                        // noop\n+                    }\n+\n+                    @Override\n+                    public void onError(final Throwable e) {\n+                        trailerCallback.onFailure(e);\n+                    }\n+\n+                    @Override\n+                    public void onNext(final Video video) {\n+                        trailerCallback.onTrailerLoaded(video);\n+                    }\n+                });\n+         }\n+\n+    interface Callback {\n+        void onNewData(MoviesSate moviesSate);\n+\n+        void onFailure(Throwable e);\n+    }\n+\n+    interface TrailerCallback {\n+        void onTrailerLoaded(Video video);\n+\n+        void onFailure(Throwable e);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/src/main/java/com/novoda/demo/movies/MoviesSate.java",
            "additions": 61,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,61 @@\n+package com.novoda.demo.movies;\n+\n+import com.novoda.demo.movies.model.Movie;\n+\n+import java.util.List;\n+\n+public class MoviesSate {\n+\n+    private final List<Movie> movies;\n+    private final int pageNumber;\n+\n+    public MoviesSate(List<Movie> movies, int pageNumber) {\n+        this.movies = movies;\n+        this.pageNumber = pageNumber;\n+    }\n+\n+    public List<Movie> movies() {\n+        return movies;\n+    }\n+\n+    public int pageNumber() {\n+        return pageNumber;\n+    }\n+\n+    public boolean isEmpty() {\n+        return movies.isEmpty();\n+    }\n+\n+    public int size() {\n+        return movies.size();\n+    }\n+\n+    public Movie get(int position) {\n+        return movies.get(position);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        MoviesSate that = (MoviesSate) o;\n+\n+        if (pageNumber != that.pageNumber) {\n+            return false;\n+        }\n+        return movies != null ? movies.equals(that.movies) : that.movies == null;\n+\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = movies != null ? movies.hashCode() : 0;\n+        result = 31 * result + pageNumber;\n+        return result;\n+    }\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/src/main/java/com/novoda/demo/movies/api/MoviesApi.java",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+package com.novoda.demo.movies.api;\n+\n+import retrofit2.Call;\n+import retrofit2.http.GET;\n+import retrofit2.http.Path;\n+import retrofit2.http.Query;\n+import rx.Single;\n+\n+public interface MoviesApi {\n+\n+    String API_KEY = \"ENTER_YOUR_API_KEY\";\n+\n+    @GET(\"movie/top_rated?api_key=\"+API_KEY)\n+    Call<MoviesResponse> topRated(@Query(\"page\") int page);\n+\n+    @GET(\"movie/{id}/videos?api_key=\"+API_KEY)\n+    Single<VideosResponse> videos(@Path(\"id\") String movieId);\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/src/main/java/com/novoda/demo/movies/api/MoviesResponse.java",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+package com.novoda.demo.movies.api;\n+\n+import com.novoda.demo.movies.model.Movie;\n+\n+import java.util.List;\n+\n+public class MoviesResponse {\n+\n+    public int page;\n+\n+    public List<Movie> results;\n+\n+    public int total_pages;\n+\n+    public int total_results;\n+\n+    @Override\n+    public String toString() {\n+        return \"MoviesResponse{\" +\n+                \"page=\" + page +\n+                \", total_pages=\" + total_pages +\n+                \", total_results=\" + total_results +\n+                '}';\n+    }\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/src/main/java/com/novoda/demo/movies/api/VideosResponse.java",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+package com.novoda.demo.movies.api;\n+\n+import com.novoda.demo.movies.model.Video;\n+\n+import java.util.List;\n+\n+public class VideosResponse {\n+\n+    public String id;\n+\n+    public List<Video> results;\n+\n+    @Override\n+    public String toString() {\n+        return \"VideosResponse{\" +\n+                \"id=\" + id +\n+                \", results=\" + results +\n+                '}';\n+    }\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/src/main/java/com/novoda/demo/movies/model/Movie.java",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+package com.novoda.demo.movies.model;\n+\n+import com.google.gson.annotations.SerializedName;\n+\n+public class Movie {\n+\n+    public String id;\n+    public String title;\n+    public String poster_path;\n+    public String backdrop_path;\n+\n+    @SerializedName(\"vote_average\")\n+    public double rating;\n+\n+    @Override\n+    public String toString() {\n+        return \"Movie{\" +\n+                \"title='\" + title + '\\'' +\n+                \", rating=\" + rating +\n+                '}';\n+    }\n+\n+    public String posterUrl() {\n+        return \"http://image.tmdb.org/t/p/w92\" + poster_path;\n+    }\n+\n+    public String backDropUrl() {\n+        return \"http://image.tmdb.org/t/p/w300\" + poster_path;\n+    }\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/core/src/main/java/com/novoda/demo/movies/model/Video.java",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+package com.novoda.demo.movies.model;\n+\n+public class Video {\n+\n+    public String id;\n+    public String key;\n+    public String site;\n+    public String type;\n+\n+    @Override\n+    public String toString() {\n+        return \"Video{\" +\n+                \"id='\" + id + '\\'' +\n+                \", key='\" + key + '\\'' +\n+                \", site='\" + site + '\\'' +\n+                \", type='\" + type + '\\'' +\n+                '}';\n+    }\n+\n+    public String trailerUrl() {\n+        if (!\"YouTube\".equals(site) || !\"Trailer\".equals(type)) {\n+            return null;\n+        }\n+        return \"https://www.youtube.com/watch?v=\" + key;\n+    }\n+}\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/gradle.properties",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+# Project-wide Gradle settings.\n+\n+# IDE (e.g. Android Studio) users:\n+# Gradle settings configured through the IDE *will override*\n+# any settings specified in this file.\n+\n+# For more details on how to configure your build environment visit\n+# http://www.gradle.org/docs/current/userguide/build_environment.html\n+\n+# Specifies the JVM arguments used for the daemon process.\n+# The setting is particularly useful for tweaking memory settings.\n+org.gradle.jvmargs=-Xmx1536m\n+\n+# When configured, Gradle will run in incubating parallel mode.\n+# This option should only be used with decoupled projects. More details, visit\n+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n+# org.gradle.parallel=true\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MoviesExample/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Thu May 04 21:40:45 CEST 2017\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-3.5-all.zip\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/gradlew",
            "additions": 172,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,172 @@\n+#!/usr/bin/env sh\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+nonstop=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+  NONSTOP* )\n+    nonstop=true\n+    ;;\n+esac\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Escape application args\n+save ( ) {\n+    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n+    echo \" \"\n+}\n+APP_ARGS=$(save \"$@\")\n+\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\n+if [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n+  cd \"$(dirname \"$0\")\"\n+fi\n+\n+exec \"$JAVACMD\" \"$@\"\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/gradlew.bat",
            "additions": 84,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,84 @@\n+@if \"%DEBUG%\" == \"\" @echo off\n+@rem ##########################################################################\n+@rem\n+@rem  Gradle startup script for Windows\n+@rem\n+@rem ##########################################################################\n+\n+@rem Set local scope for the variables with windows NT shell\n+if \"%OS%\"==\"Windows_NT\" setlocal\n+\n+set DIRNAME=%~dp0\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\n+set APP_BASE_NAME=%~n0\n+set APP_HOME=%DIRNAME%\n+\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+set DEFAULT_JVM_OPTS=\n+\n+@rem Find java.exe\n+if defined JAVA_HOME goto findJavaFromJavaHome\n+\n+set JAVA_EXE=java.exe\n+%JAVA_EXE% -version >NUL 2>&1\n+if \"%ERRORLEVEL%\" == \"0\" goto init\n+\n+echo.\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:findJavaFromJavaHome\n+set JAVA_HOME=%JAVA_HOME:\"=%\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n+\n+if exist \"%JAVA_EXE%\" goto init\n+\n+echo.\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:init\n+@rem Get command-line arguments, handling Windows variants\n+\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n+\n+:win9xME_args\n+@rem Slurp the command line arguments.\n+set CMD_LINE_ARGS=\n+set _SKIP=2\n+\n+:win9xME_args_slurp\n+if \"x%~1\" == \"x\" goto execute\n+\n+set CMD_LINE_ARGS=%*\n+\n+:execute\n+@rem Setup the command line\n+\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n+\n+@rem Execute Gradle\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n+\n+:end\n+@rem End local scope for the variables with windows NT shell\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n+\n+:fail\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\n+rem the _cmd.exe /c_ return code!\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\n+exit /b 1\n+\n+:mainEnd\n+if \"%OS%\"==\"Windows_NT\" endlocal\n+\n+:omega\n"
    },
    {
        "commit hash": "5e25d5a6e52e740f7b96389f7aa3575d4dbe41df",
        "previous commit hash": "8ca5f8df5f574c843fd08e04cfeda8bd779c82d5",
        "diff stats": {
            "file_path": "MoviesExample/settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+include ':app', ':core'\n"
    },
    {
        "commit hash": "26dfdf932fd2e0964f8adf7d63926c36b12beaf6",
        "previous commit hash": "cd67348b994318a42e76b4b1cfe88c5ad41d6107",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/README.md",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,13 +1,13 @@\n Snowy Village Live Wallpaper\n ====================\n \n-![Icon](https://raw.githubusercontent.com/novoda/snowy-village-wallpaper/master/app/src/main/res/drawable-xxhdpi/ic_launcher.png)\n+![Icon](https://raw.githubusercontent.com/novoda/android-demos/master/snowy-village-wallpaper/app/src/main/res/drawable-xxhdpi/ic_launcher.png)\n \n A festive snowy village live wallpaper.\n  \n Based on the [amazing design](https://www.novoda.com/blog/happy-holidays-from-novoda) from Qi Qu and Nick Howes'[Parallax live wallpaper](https://github.com/halfninja/android-parallax-wallpaper).\n \n-![Animated demo](https://www.novoda.com/blog/content/images/2015/12/snow-weheeee.gif)\n+![Animated demo](https://raw.githubusercontent.com/novoda/android-demos/master/snowy-village-wallpaper/preview.gif)\n \n <a href=\"https://play.google.com/store/apps/details?id=com.novoda.snowyvillagewallpaper&utm_source=global_co&utm_medium=prtnr&utm_content=Mar2515&utm_campaign=PartBadge&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1\"><img alt=\"Get it on Google Play\" width=\"25%\" height=\"25%\" src=\"https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png\" /></a>\n \n"
    },
    {
        "commit hash": "26dfdf932fd2e0964f8adf7d63926c36b12beaf6",
        "previous commit hash": "cd67348b994318a42e76b4b1cfe88c5ad41d6107",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/preview.gif",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/preview.gif differ\n"
    },
    {
        "commit hash": "33bc10c6418d858238e6a6c25d6857a69b5af4f2",
        "previous commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "diff stats": {
            "file_path": "spritz/images/a-taste-of-spritz.gif",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/images/a-taste-of-spritz.gif and /dev/null differ\n"
    },
    {
        "commit hash": "33bc10c6418d858238e6a6c25d6857a69b5af4f2",
        "previous commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "diff stats": {
            "file_path": "spritz/images/banner.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/images/banner.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/.gitignore",
            "additions": 0,
            "deletions": 37
        },
        "diff content": "@@ -1,37 +0,0 @@\n-# Built application files\n-*.apk\n-*.ap_\n-\n-# Files for the Dalvik VM\n-*.dex\n-\n-# Java class files\n-*.class\n-\n-# Generated files\n-bin/\n-gen/\n-\n-# Gradle files\n-.gradle/\n-build/\n-\n-# Local configuration file (sdk path, etc)\n-local.properties\n-\n-# Release signing files\n-*.keystore\n-signing.properties\n-\n-# Log Files\n-*.log\n-\n-# IDEA/Android Studio ignores\n-*.iml\n-*.ipr\n-*.iws\n-/.idea/*\n-\n-# IDEA/Android Studio Ignore exceptions\n-!/.idea/copyright/\n-!/.idea/compiler.xml\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/LICENSE",
            "additions": 0,
            "deletions": 202
        },
        "diff content": "@@ -1,202 +0,0 @@\n-\n-                                 Apache License\n-                           Version 2.0, January 2004\n-                        http://www.apache.org/licenses/\n-\n-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-   1. Definitions.\n-\n-      \"License\" shall mean the terms and conditions for use, reproduction,\n-      and distribution as defined by Sections 1 through 9 of this document.\n-\n-      \"Licensor\" shall mean the copyright owner or entity authorized by\n-      the copyright owner that is granting the License.\n-\n-      \"Legal Entity\" shall mean the union of the acting entity and all\n-      other entities that control, are controlled by, or are under common\n-      control with that entity. For the purposes of this definition,\n-      \"control\" means (i) the power, direct or indirect, to cause the\n-      direction or management of such entity, whether by contract or\n-      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-      outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-      exercising permissions granted by this License.\n-\n-      \"Source\" form shall mean the preferred form for making modifications,\n-      including but not limited to software source code, documentation\n-      source, and configuration files.\n-\n-      \"Object\" form shall mean any form resulting from mechanical\n-      transformation or translation of a Source form, including but\n-      not limited to compiled object code, generated documentation,\n-      and conversions to other media types.\n-\n-      \"Work\" shall mean the work of authorship, whether in Source or\n-      Object form, made available under the License, as indicated by a\n-      copyright notice that is included in or attached to the work\n-      (an example is provided in the Appendix below).\n-\n-      \"Derivative Works\" shall mean any work, whether in Source or Object\n-      form, that is based on (or derived from) the Work and for which the\n-      editorial revisions, annotations, elaborations, or other modifications\n-      represent, as a whole, an original work of authorship. For the purposes\n-      of this License, Derivative Works shall not include works that remain\n-      separable from, or merely link (or bind by name) to the interfaces of,\n-      the Work and Derivative Works thereof.\n-\n-      \"Contribution\" shall mean any work of authorship, including\n-      the original version of the Work and any modifications or additions\n-      to that Work or Derivative Works thereof, that is intentionally\n-      submitted to Licensor for inclusion in the Work by the copyright owner\n-      or by an individual or Legal Entity authorized to submit on behalf of\n-      the copyright owner. For the purposes of this definition, \"submitted\"\n-      means any form of electronic, verbal, or written communication sent\n-      to the Licensor or its representatives, including but not limited to\n-      communication on electronic mailing lists, source code control systems,\n-      and issue tracking systems that are managed by, or on behalf of, the\n-      Licensor for the purpose of discussing and improving the Work, but\n-      excluding communication that is conspicuously marked or otherwise\n-      designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-      on behalf of whom a Contribution has been received by Licensor and\n-      subsequently incorporated within the Work.\n-\n-   2. Grant of Copyright License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      copyright license to reproduce, prepare Derivative Works of,\n-      publicly display, publicly perform, sublicense, and distribute the\n-      Work and such Derivative Works in Source or Object form.\n-\n-   3. Grant of Patent License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      (except as stated in this section) patent license to make, have made,\n-      use, offer to sell, sell, import, and otherwise transfer the Work,\n-      where such license applies only to those patent claims licensable\n-      by such Contributor that are necessarily infringed by their\n-      Contribution(s) alone or by combination of their Contribution(s)\n-      with the Work to which such Contribution(s) was submitted. If You\n-      institute patent litigation against any entity (including a\n-      cross-claim or counterclaim in a lawsuit) alleging that the Work\n-      or a Contribution incorporated within the Work constitutes direct\n-      or contributory patent infringement, then any patent licenses\n-      granted to You under this License for that Work shall terminate\n-      as of the date such litigation is filed.\n-\n-   4. Redistribution. You may reproduce and distribute copies of the\n-      Work or Derivative Works thereof in any medium, with or without\n-      modifications, and in Source or Object form, provided that You\n-      meet the following conditions:\n-\n-      (a) You must give any other recipients of the Work or\n-          Derivative Works a copy of this License; and\n-\n-      (b) You must cause any modified files to carry prominent notices\n-          stating that You changed the files; and\n-\n-      (c) You must retain, in the Source form of any Derivative Works\n-          that You distribute, all copyright, patent, trademark, and\n-          attribution notices from the Source form of the Work,\n-          excluding those notices that do not pertain to any part of\n-          the Derivative Works; and\n-\n-      (d) If the Work includes a \"NOTICE\" text file as part of its\n-          distribution, then any Derivative Works that You distribute must\n-          include a readable copy of the attribution notices contained\n-          within such NOTICE file, excluding those notices that do not\n-          pertain to any part of the Derivative Works, in at least one\n-          of the following places: within a NOTICE text file distributed\n-          as part of the Derivative Works; within the Source form or\n-          documentation, if provided along with the Derivative Works; or,\n-          within a display generated by the Derivative Works, if and\n-          wherever such third-party notices normally appear. The contents\n-          of the NOTICE file are for informational purposes only and\n-          do not modify the License. You may add Your own attribution\n-          notices within Derivative Works that You distribute, alongside\n-          or as an addendum to the NOTICE text from the Work, provided\n-          that such additional attribution notices cannot be construed\n-          as modifying the License.\n-\n-      You may add Your own copyright statement to Your modifications and\n-      may provide additional or different license terms and conditions\n-      for use, reproduction, or distribution of Your modifications, or\n-      for any such Derivative Works as a whole, provided Your use,\n-      reproduction, and distribution of the Work otherwise complies with\n-      the conditions stated in this License.\n-\n-   5. Submission of Contributions. Unless You explicitly state otherwise,\n-      any Contribution intentionally submitted for inclusion in the Work\n-      by You to the Licensor shall be under the terms and conditions of\n-      this License, without any additional terms or conditions.\n-      Notwithstanding the above, nothing herein shall supersede or modify\n-      the terms of any separate license agreement you may have executed\n-      with Licensor regarding such Contributions.\n-\n-   6. Trademarks. This License does not grant permission to use the trade\n-      names, trademarks, service marks, or product names of the Licensor,\n-      except as required for reasonable and customary use in describing the\n-      origin of the Work and reproducing the content of the NOTICE file.\n-\n-   7. Disclaimer of Warranty. Unless required by applicable law or\n-      agreed to in writing, Licensor provides the Work (and each\n-      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-      implied, including, without limitation, any warranties or conditions\n-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-      PARTICULAR PURPOSE. You are solely responsible for determining the\n-      appropriateness of using or redistributing the Work and assume any\n-      risks associated with Your exercise of permissions under this License.\n-\n-   8. Limitation of Liability. In no event and under no legal theory,\n-      whether in tort (including negligence), contract, or otherwise,\n-      unless required by applicable law (such as deliberate and grossly\n-      negligent acts) or agreed to in writing, shall any Contributor be\n-      liable to You for damages, including any direct, indirect, special,\n-      incidental, or consequential damages of any character arising as a\n-      result of this License or out of the use or inability to use the\n-      Work (including but not limited to damages for loss of goodwill,\n-      work stoppage, computer failure or malfunction, or any and all\n-      other commercial damages or losses), even if such Contributor\n-      has been advised of the possibility of such damages.\n-\n-   9. Accepting Warranty or Additional Liability. While redistributing\n-      the Work or Derivative Works thereof, You may choose to offer,\n-      and charge a fee for, acceptance of support, warranty, indemnity,\n-      or other liability obligations and/or rights consistent with this\n-      License. However, in accepting such obligations, You may act only\n-      on Your own behalf and on Your sole responsibility, not on behalf\n-      of any other Contributor, and only if You agree to indemnify,\n-      defend, and hold each Contributor harmless for any liability\n-      incurred by, or claims asserted against, such Contributor by reason\n-      of your accepting any such warranty or additional liability.\n-\n-   END OF TERMS AND CONDITIONS\n-\n-   APPENDIX: How to apply the Apache License to your work.\n-\n-      To apply the Apache License to your work, attach the following\n-      boilerplate notice, with the fields enclosed by brackets \"[]\"\n-      replaced with your own identifying information. (Don't include\n-      the brackets!)  The text should be enclosed in the appropriate\n-      comment syntax for the file format. We also recommend that a\n-      file or class name and description of purpose be included on the\n-      same \"printed page\" as the copyright notice for easier\n-      identification within third-party archives.\n-\n-   Copyright [yyyy] [name of copyright owner]\n-\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\n-   you may not use this file except in compliance with the License.\n-   You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License.\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 2,
            "deletions": 122
        },
        "diff content": "@@ -1,129 +1,8 @@\n <img src=\"images/spritz-header.png\" />\n \n-<img src=\"images/banner.png\" />\n-\n---------\n-\n Spritz is an Android library to seamlessly trigger a Lottie animation when the user drags a `ViewPager` or changes page programmatically.\n It supports animating while swiping and auto-playing when the swipe is complete.\n \n-You can read more about Spritz in our [introductory blog post](https://www.novoda.com/blog/onboard-your-users-with-lottie-of-spritz/).\n-\n-Get the demo here:\n-\n-<a href=\"https://play.google.com/store/apps/details?id=com.novoda.spritz.sample\" style=\"border-bottom: 0px solid;\">\n-    <img height=\"80px\" alt=\"Get it on Google Play\" src=\"https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png\" />\n-</a>\n-\n-Here's how our demo looks like:\n-\n-![A taste of spritz](images/a-taste-of-spritz.gif)\n-\n-## How to use\n-\n-### Basics\n-\n-Each step in the `ViewPager` has two possible animations:\n-\n-- a \"swipe away\" animation that will be triggered while the user drags from one page to the next or previous one\n-- an \"autoplay\" animation segment that plays as soon as the user enters the destination page\n-\n-When swiping forward, the animation will stop right before auto-playing. When swiping backwards, instead, the animation will stop at the end of the\n-previous page's autoplay animation, so it doesn't play again since that page is in an \"already visited\" state.\n-\n-### Lottie Animation\n-\n-To learn how to create a Lottie-compatible animation from After Effects, please read\n-[our blog post \"Whole Lottie Love\"](https://www.novoda.com/blog/whole-lottie-love/), which contains basic instructions on how to export an animation\n-into a Lottie-supported format.\n-\n-Your animation should have:\n-\n-- for each page, a \"swipe away\" animation\n-- for each page, optionally, an \"autoplay\" animation segment\n-\n-These segments must be consecutive to one another, as if the user continuously moves to one page to another.\n-\n-### Code!\n-\n-After getting your `LottieAnimationView` and your `ViewPager`, just create a `Spritz` object with the following syntax:\n-\n-```java\n-Spritz spritz = Spritz\n-                    .with(lottieAnimationView)\n-                    .withSteps(\n-                            new SpritzStep.Builder()\n-                                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n-                                    .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n-                                    .build(),\n-                            new SpritzStep.Builder()\n-                                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n-                                    .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n-                                    .build(),\n-                            new SpritzStep.Builder()\n-                                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n-                                    .build()\n-                    )\n-                    .build();\n-```\n-\n-Once you have your `Spritz` instance, you need to simply attach it to the `ViewPager`, and start any pending animation. If you're working in an\n-`Activity`, you would normally do it in `onStart`:\n-\n-```java\n-@Override\n-protected void onStart() {\n-    super.onStart();\n-    spritz.attachTo(viewPager);\n-    spritz.startPendingAnimations();\n-}\n-```\n-\n-When you're done with your view, detach the `Spritz` instance from the `ViewPager`:\n-\n-```java\n-@Override\n-protected void onStop() {\n-    spritz.detachFrom(viewPager);\n-    super.onStop();\n-}\n-```\n-\n-### Animation durations\n-\n-`Spritz` handles multiple types of animations for your view.\n-\n-**Note:** this library assumes that the first set animation on the first page starts from the time 0, and that all animations are in the order\n-`[autoplay (optional) 0 - swipe 0 - ... - swipe (n-1) - autoplay (optional) n]` and are consecutive to each other.\n-\n-#### Autoplay animation\n-\n-The autoplay animation is an optional animation that is launched automatically as soon as the `ViewPager` successfully transition to a new page.\n-You simply need to set (using `withAutoPlayDuration` on the page builder) how long the autoplay animation lasts in your After Effects project,\n-`Spritz` will take care of the rest.\n-\n-Please note that the autoplay animation is always played after the user swipes forward, it is not played when the user swipes back, since the\n-\"swipe back\" action sets the Lottie progress to the end of the previous autoplay animation.\n-\n-#### Swipe animation\n-\n-The swipe animation is started and progressed as the user drags the view pager back and forth. To set the duration of a page swipe animation, use\n-`withSwipeDuration`. This animation is not optional, since it's what this library has been created for :P.\n-\n-## License\n-\n-```\n-   Copyright 2017 Novoda\n-\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\n-   you may not use this file except in compliance with the License.\n-   You may obtain a copy of the License at\n-\n-     http://www.apache.org/licenses/LICENSE-2.0\n+--------\n \n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License.\n-```\n+[**Spritz has moved to the new novoda/spritz repo!**](https://github.com/novoda/spritz)\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/.gitignore",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-/build\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/build.gradle",
            "additions": 0,
            "deletions": 41
        },
        "diff content": "@@ -1,41 +0,0 @@\n-apply plugin: 'com.android.application'\n-\n-android {\n-    compileSdkVersion 27\n-    buildToolsVersion '27.0.0'\n-    defaultConfig {\n-        applicationId \"com.novoda.spritz.sample\"\n-        minSdkVersion 14\n-        targetSdkVersion 27\n-        versionCode 1\n-        versionName \"1.0.0\"\n-    }\n-\n-    def signingProperties = file(\"signing.properties\")\n-    signingConfigs {\n-        if (signingProperties.exists()) {\n-            Properties props = new Properties()\n-            props.load(new FileInputStream(signingProperties))\n-            release {\n-                storeFile file(props.storeFile)\n-                storePassword props.storePassword\n-                keyAlias props.keyAlias\n-                keyPassword props.keyPassword\n-            }\n-        }\n-    }\n-\n-    buildTypes {\n-        release {\n-            minifyEnabled false\n-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n-            if (signingProperties.exists()) {\n-                signingConfig signingConfigs.release\n-            }\n-        }\n-    }\n-}\n-\n-dependencies {\n-    compile project(path: ':spritz-android')\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 33
        },
        "diff content": "@@ -1,33 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    package=\"com.novoda.spritz.sample\">\n-\n-    <application\n-        android:allowBackup=\"false\"\n-        android:icon=\"@mipmap/ic_launcher\"\n-        android:label=\"@string/app_name\"\n-        android:roundIcon=\"@mipmap/ic_launcher_round\"\n-        android:supportsRtl=\"true\"\n-        android:theme=\"@style/AppTheme\">\n-\n-        <activity\n-            android:name=\"com.novoda.spritz.sample.MainActivity\"\n-            android:label=\"@string/app_name\"\n-            android:theme=\"@style/AppTheme.NoActionBar\">\n-\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-\n-        </activity>\n-\n-        <activity\n-          android:name=\"com.novoda.spritz.sample.DebugActivity\"\n-          android:label=\"@string/debug\"\n-          android:exported=\"true\"\n-          android:theme=\"@style/AppTheme.NoActionBar\" />\n-\n-    </application>\n-\n-</manifest>\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/demo-debug.json",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-{\"v\":\"4.10.1\",\"fr\":60,\"ip\":0,\"op\":300,\"w\":360,\"h\":568,\"nm\":\"Debug\",\"ddd\":0,\"assets\":[],\"fonts\":{\"list\":[{\"fName\":\"DINAlternate-Bold\",\"fFamily\":\"DIN Alternate\",\"fStyle\":\"Bold\",\"ascent\":71.1990356445312}]},\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":5,\"nm\":\"A 5\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[294,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"A\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":5,\"nm\":\"S 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[232,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"S\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":5,\"nm\":\"A 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[172,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"A\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":5,\"nm\":\"S\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[106,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"S\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":5,\"nm\":\"A\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[36,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"A\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Shape Layer 6\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[371,291.5,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,17,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[2.457,86.43],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-97.021,20.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Shape Layer 5\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[307,275,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[2.457,86.43],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.17417271932,1,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-97.021,20.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Shape Layer 4\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[243.5,291.5,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,17,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[2.457,86.43],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-97.021,20.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Shape Layer 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[180,275,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[2.457,86.43],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.17417271932,1,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-97.021,20.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Shape Layer 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[18.028,295.223,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-162,11.223,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0,100,100],\"e\":[100,100,100]},{\"t\":300}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[319.328,14.445],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-161.693,11.52],\"ix\":2},\"a\":{\"a\":0,\"k\":[-159.357,0.297],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Shape Layer 1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":40,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[177.664,295.223,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-2.336,11.223,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[319.328,14.445],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-161.693,11.52],\"ix\":2},\"a\":{\"a\":0,\"k\":[-159.357,0.297],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}],\"chars\":[{\"ch\":\"A\",\"size\":24,\"style\":\"Bold\",\"w\":60.99,\"data\":{\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[39.638,-25.484],[29.659,-56.628],[29.47,-56.628],[19.492,-25.484]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[42.617,-15.923],[16.465,-15.923],[11.169,0],[0.102,0],[25.167,-71.191],[33.916,-71.191],[58.98,0],[47.961,0]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false}],\"nm\":\"A\",\"np\":5,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}]},\"fFamily\":\"DIN Alternate\"},{\"ch\":\"S\",\"size\":24,\"style\":\"Bold\",\"w\":57.37,\"data\":{\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-7.574,-0.065],[-0.127,6.483],[6.057,1.076],[3.311,0.489],[3.09,3.519],[0,5.18],[-4.001,3.812],[-7.12,0.066],[-6.332,-4.707],[0,0],[6.215,0.131],[2.145,-1.662],[0.063,-3.421],[-1.546,-1.662],[-3.406,-0.652],[-3.281,-0.423],[-3.091,-3.876],[0,-5.049],[15.784,-0.195],[7.341,6.479]],\"o\":[[5.49,4.665],[8.961,-0.13],[0.065,-5.31],[-2.776,-0.391],[-5.93,-1.009],[-3.186,-3.616],[0,-6.223],[3.874,-3.78],[8.569,0.195],[0,0],[-5.174,-3.522],[-3.218,0],[-2.24,1.727],[0,2.052],[1.546,1.694],[1.892,0.326],[6.465,0.912],[3.059,3.812],[-0.346,13.619],[-10.208,0],[0,0]],\"v\":[[8.134,-17.247],[27.73,-10.152],[41.362,-20.072],[32.374,-29.651],[23.244,-30.971],[9.715,-37.763],[4.936,-50.958],[10.938,-66.01],[27.428,-71.777],[49.78,-64.423],[43.959,-55.56],[26.875,-61.04],[18.831,-58.547],[15.376,-50.826],[17.694,-45.255],[25.121,-41.736],[32.88,-40.612],[47.213,-33.428],[51.802,-20.135],[27.605,0.586],[1.282,-9.132]],\"c\":true},\"ix\":2},\"nm\":\"S\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false}],\"nm\":\"S\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}]},\"fFamily\":\"DIN Alternate\"}]}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/demo-pager.json",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-{\"v\":\"4.10.1\",\"fr\":60,\"ip\":0,\"op\":150,\"w\":360,\"h\":568,\"nm\":\"Pager With Autoplay\",\"ddd\":0,\"assets\":[{\"id\":\"image_0\",\"w\":2712,\"h\":4296,\"u\":\"images/\",\"p\":\"img_0.png\"},{\"id\":\"image_1\",\"w\":2712,\"h\":4296,\"u\":\"images/\",\"p\":\"img_1.png\"},{\"id\":\"comp_0\",\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Bus\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":30,\"s\":[8.438,6.31,0],\"e\":[18.188,6.31,0],\"to\":[1.625,0,0],\"ti\":[-1.625,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":60,\"s\":[18.188,6.31,0],\"e\":[18.188,6.31,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":90,\"s\":[18.188,6.31,0],\"e\":[28.5,6.31,0],\"to\":[1.71875,0,0],\"ti\":[-1.71875,0,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[5.372,262.622,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[4.244,4.244],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[5.372,262.622],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Stop 1\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":48,\"s\":[50],\"e\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":60,\"s\":[0],\"e\":[0]},{\"t\":90}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[18.438,6.31,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[5.372,262.622,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[4.244,4.244],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[5.372,262.622],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Stop 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":108,\"s\":[50],\"e\":[0]},{\"t\":120}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[28.438,6.31,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[5.372,262.622,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[4.244,4.244],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[5.372,262.622],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]}],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Moon Mask 2\",\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[304.598,462.895,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[124.598,-151.105,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":90,\"s\":[1,100,100],\"e\":[100,100,100]},{\"t\":120}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[248.598,37.789],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0.299,-151.105],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"NVDA - 3554 - S4 Outlines\",\"tt\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[69,470,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[1.747,-17.086],[4.109,-17.086],[11.604,-4.94],[11.65,-4.94],[11.65,-17.086],[14.155,-17.086],[14.155,0],[11.782,0],[4.298,-12.146],[4.253,-12.146],[4.253,0],[1.747,0]],\"c\":true},\"ix\":2},\"nm\":\"N\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"N\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[19.995,-17.086],[22.647,-17.086],[26.399,-4.071],[26.444,-4.071],[30.207,-17.086],[32.859,-17.086],[27.396,0],[25.447,0]],\"c\":true},\"ix\":2},\"nm\":\"V\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"V\",\"np\":3,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-1.12,-1.906],[-0.106,-0.703],[0,-1.727],[0.129,-0.727],[0.121,-0.289],[0.182,-0.305],[0.863,-0.523],[1.241,0],[0,0]],\"o\":[[0,0],[2.24,0.016],[0.401,0.641],[0.083,0.703],[0,1.836],[-0.061,0.367],[-0.129,0.281],[-0.484,0.805],[-0.855,0.562],[0,0],[0,0]],\"v\":[[38.617,-17.086],[44.408,-17.086],[49.449,-14.203],[50.209,-12.188],[50.333,-8.543],[50.14,-4.699],[49.868,-3.715],[49.402,-2.836],[47.382,-0.844],[44.237,0],[38.617,0]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.636,0.994],[-0.076,0.564],[0,1.527],[0.068,0.642],[0.341,0.399],[1.273,-0.031],[0,0]],\"o\":[[0,0],[1.409,0],[0.28,-0.368],[0.068,-0.556],[0,-1.487],[-0.091,-0.642],[-0.697,-0.994],[0,0],[0,0]],\"v\":[[41.122,-2.436],[44.123,-2.436],[47.191,-3.928],[47.725,-5.325],[47.828,-8.449],[47.725,-11.643],[47.078,-13.205],[44.123,-14.65],[41.122,-14.65]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"D\",\"np\":5,\"cix\":2,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[64.618,-6.116],[62.223,-13.591],[62.178,-13.591],[59.783,-6.116]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[65.333,-3.821],[59.057,-3.821],[57.786,0],[55.13,0],[61.145,-17.086],[63.245,-17.086],[69.26,0],[66.616,0]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"A\",\"np\":5,\"cix\":2,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[83.831,-7.862],[90.814,-7.862],[90.814,-5.427],[83.831,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.448,0.463],[0,0.715],[0.447,0.463],[0.704,0.016],[0.417,-0.338],[0.151,-0.707],[0,0],[-0.87,0.867],[-1.188,0.016],[-0.886,-0.977],[-0.015,-1.297],[0.234,-0.609],[0.703,-0.476],[-0.32,-0.656],[0,-0.719],[0.945,-0.922],[1.46,-0.016],[0.87,0.749],[0.257,1.419],[0,0],[-0.386,-0.352],[-0.651,0],[-0.477,0.493],[-0.015,0.854],[0.484,0.478],[0.734,0],[0,0]],\"o\":[[0,0],[0.811,0],[0.447,-0.448],[-0.015,-0.723],[-0.447,-0.448],[-0.508,0],[-0.439,0.338],[0,0],[0.121,-1.265],[0.855,-0.859],[1.506,0.016],[0.848,0.953],[0,0.656],[-0.274,0.609],[0.719,0.469],[0.305,0.656],[-0.015,1.602],[-0.93,0.945],[-1.127,0],[-0.87,-0.749],[0,0],[0.212,0.572],[0.393,0.368],[0.696,0],[0.484,-0.462],[-0.015,-0.869],[-0.477,-0.462],[0,0],[0,0]],\"v\":[[109.295,-9.878],[110.112,-9.878],[112,-10.573],[112.671,-12.316],[111.978,-14.095],[110.251,-14.79],[108.865,-14.284],[107.979,-12.717],[105.604,-12.717],[107.091,-15.915],[110.157,-17.227],[113.744,-15.738],[115.039,-12.363],[114.687,-10.465],[113.222,-8.836],[114.781,-7.148],[115.238,-5.086],[113.797,-1.301],[110.212,0.141],[107.217,-0.982],[105.527,-4.234],[107.9,-4.234],[108.797,-2.848],[110.364,-2.296],[112.124,-3.036],[112.873,-5.01],[112.124,-7.031],[110.308,-7.724],[109.295,-7.724]],\"c\":true},\"ix\":2},\"nm\":\"3\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"3\",\"np\":3,\"cix\":2,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[-0.994,0],[-0.531,-0.219],[-0.311,-0.351],[-0.204,-0.617],[-0.045,-0.484],[0,-0.719],[0.151,-0.594],[0.371,-0.453],[0.621,-0.365],[0.833,-0.016],[0.931,0.686],[0.227,1.567],[0,0],[-1.326,-0.016],[-0.341,0.235],[-0.129,0.368],[-0.03,0.431],[0,0.399],[0.312,0.611],[0.327,0.172],[0.486,0],[0.357,-0.203],[0.281,-0.524],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0.774,-0.625],[0.638,0.016],[0.501,0.242],[0.46,0.469],[0.105,0.336],[0.045,0.492],[0,1.109],[-0.159,0.586],[-0.326,0.443],[-0.606,0.381],[-1.12,0],[-0.946,-0.702],[0,0],[0.258,1.315],[0.568,0],[0.326,-0.227],[0.136,-0.368],[0.015,-0.423],[0.016,-0.979],[-0.167,-0.29],[-0.327,-0.141],[-0.433,0],[-0.357,0.211],[0,0],[0,0]],\"v\":[[121.452,-17.086],[130.274,-17.086],[130.274,-14.65],[123.677,-14.65],[123.677,-10.757],[126.329,-11.694],[128.083,-11.343],[129.301,-10.452],[130.296,-8.824],[130.523,-7.594],[130.591,-5.778],[130.364,-3.224],[129.569,-1.666],[128.15,-0.454],[125.992,0.141],[122.915,-0.889],[121.155,-4.292],[123.531,-4.292],[125.907,-2.296],[127.271,-2.648],[127.953,-3.541],[128.203,-4.738],[128.226,-5.971],[127.781,-8.355],[127.04,-9.048],[125.82,-9.259],[124.634,-8.954],[123.677,-7.85],[121.452,-7.85]],\"c\":true},\"ix\":2},\"nm\":\"5\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"5\",\"np\":3,\"cix\":2,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[-0.994,0],[-0.531,-0.219],[-0.311,-0.351],[-0.204,-0.617],[-0.045,-0.484],[0,-0.719],[0.151,-0.594],[0.371,-0.453],[0.621,-0.365],[0.833,-0.016],[0.931,0.686],[0.227,1.567],[0,0],[-1.326,-0.016],[-0.341,0.235],[-0.129,0.368],[-0.03,0.431],[0,0.399],[0.312,0.611],[0.327,0.172],[0.486,0],[0.357,-0.203],[0.281,-0.524],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0.774,-0.625],[0.638,0.016],[0.501,0.242],[0.46,0.469],[0.105,0.336],[0.045,0.492],[0,1.109],[-0.159,0.586],[-0.326,0.443],[-0.606,0.381],[-1.12,0],[-0.946,-0.702],[0,0],[0.258,1.315],[0.568,0],[0.326,-0.227],[0.136,-0.368],[0.015,-0.423],[0.016,-0.979],[-0.167,-0.29],[-0.327,-0.141],[-0.433,0],[-0.357,0.211],[0,0],[0,0]],\"v\":[[136.524,-17.086],[145.345,-17.086],[145.345,-14.65],[138.748,-14.65],[138.748,-10.757],[141.401,-11.694],[143.154,-11.343],[144.372,-10.452],[145.368,-8.824],[145.594,-7.594],[145.662,-5.778],[145.435,-3.224],[144.64,-1.666],[143.221,-0.454],[141.064,0.141],[137.987,-0.889],[136.227,-4.292],[138.602,-4.292],[140.978,-2.296],[142.342,-2.648],[143.024,-3.541],[143.275,-4.738],[143.297,-5.971],[142.853,-8.355],[142.111,-9.048],[140.892,-9.259],[139.706,-8.954],[138.748,-7.85],[136.524,-7.85]],\"c\":true},\"ix\":2},\"nm\":\"5\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"5\",\"np\":3,\"cix\":2,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[150.719,-4.839],[156.249,-17.086],[158.886,-17.086],[153.297,-4.839],[157.619,-4.839],[157.619,-9.76],[159.984,-9.76],[159.984,-4.839],[161.311,-4.839],[161.311,-2.544],[159.984,-2.544],[159.984,0],[157.619,0],[157.619,-2.542],[150.719,-2.544]],\"c\":true},\"ix\":2},\"nm\":\"4\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"4\",\"np\":3,\"cix\":2,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[176.043,-7.862],[183.025,-7.862],[183.025,-5.427],[176.043,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":10,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-1.818,-0.016],[-0.03,1.556],[1.454,0.258],[0.795,0.117],[0.742,0.844],[0,1.243],[-0.96,0.915],[-1.709,0.016],[-1.52,-1.13],[0,0],[1.492,0.031],[0.515,-0.399],[0.015,-0.821],[-0.371,-0.399],[-0.817,-0.156],[-0.787,-0.102],[-0.742,-0.93],[0,-1.212],[3.788,-0.047],[1.762,1.555]],\"o\":[[1.318,1.12],[2.151,-0.031],[0.016,-1.274],[-0.666,-0.094],[-1.423,-0.242],[-0.765,-0.868],[0,-1.493],[0.93,-0.907],[2.056,0.047],[0,0],[-1.242,-0.845],[-0.772,0],[-0.538,0.415],[0,0.493],[0.371,0.407],[0.454,0.078],[1.552,0.219],[0.734,0.915],[-0.083,3.269],[-2.45,0],[0,0]],\"v\":[[199.383,-4.139],[204.086,-2.436],[207.358,-4.817],[205.201,-7.116],[203.01,-7.433],[199.763,-9.063],[198.616,-12.23],[200.056,-15.842],[204.014,-17.227],[209.378,-15.462],[207.981,-13.334],[203.881,-14.65],[201.951,-14.051],[201.121,-12.198],[201.678,-10.861],[203.46,-10.017],[205.322,-9.747],[208.762,-8.023],[209.864,-4.833],[204.056,0.141],[197.739,-2.192]],\"c\":true},\"ix\":2},\"nm\":\"S\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"S\",\"np\":3,\"cix\":2,\"ix\":11,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[215.038,-4.839],[220.568,-17.086],[223.205,-17.086],[217.615,-4.839],[221.937,-4.839],[221.937,-9.76],[224.302,-9.76],[224.302,-4.839],[225.63,-4.839],[225.63,-2.544],[224.302,-2.544],[224.302,0],[221.937,0],[221.937,-2.542],[215.038,-2.544]],\"c\":true},\"ix\":2},\"nm\":\"4\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"4\",\"np\":3,\"cix\":2,\"ix\":12,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Moon Mask\",\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[304.598,132.895,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[124.598,-151.105,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":63,\"s\":[1,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":90,\"s\":[100,100,100],\"e\":[1,100,100]},{\"t\":105}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[248.598,37.789],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0.299,-151.105],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Moon Name\",\"tt\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[296,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-225.245,-17.086],[-222.883,-17.086],[-215.388,-4.94],[-215.343,-4.94],[-215.343,-17.086],[-212.837,-17.086],[-212.837,0],[-215.21,0],[-222.694,-12.146],[-222.739,-12.146],[-222.739,0],[-225.245,0]],\"c\":true},\"ix\":2},\"nm\":\"N\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"N\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-206.95,-17.086],[-204.297,-17.086],[-200.546,-4.071],[-200.5,-4.071],[-196.737,-17.086],[-194.085,-17.086],[-199.548,0],[-201.498,0]],\"c\":true},\"ix\":2},\"nm\":\"V\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"V\",\"np\":3,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-1.12,-1.906],[-0.106,-0.703],[0,-1.727],[0.129,-0.727],[0.121,-0.289],[0.182,-0.305],[0.863,-0.523],[1.241,0],[0,0]],\"o\":[[0,0],[2.24,0.016],[0.401,0.641],[0.083,0.703],[0,1.836],[-0.061,0.367],[-0.129,0.281],[-0.484,0.805],[-0.855,0.562],[0,0],[0,0]],\"v\":[[-188.279,-17.086],[-182.489,-17.086],[-177.447,-14.203],[-176.688,-12.188],[-176.563,-8.543],[-176.756,-4.699],[-177.028,-3.715],[-177.494,-2.836],[-179.515,-0.844],[-182.659,0],[-188.279,0]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.636,0.994],[-0.076,0.564],[0,1.527],[0.068,0.642],[0.341,0.399],[1.273,-0.031],[0,0]],\"o\":[[0,0],[1.409,0],[0.28,-0.368],[0.068,-0.556],[0,-1.487],[-0.091,-0.642],[-0.697,-0.994],[0,0],[0,0]],\"v\":[[-185.774,-2.436],[-182.773,-2.436],[-179.705,-3.928],[-179.171,-5.325],[-179.068,-8.449],[-179.171,-11.643],[-179.818,-13.205],[-182.773,-14.65],[-185.774,-14.65]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"D\",\"np\":5,\"cix\":2,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-162.23,-6.116],[-164.625,-13.591],[-164.67,-13.591],[-167.065,-6.116]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-161.515,-3.821],[-167.791,-3.821],[-169.062,0],[-171.718,0],[-165.703,-17.086],[-163.603,-17.086],[-157.588,0],[-160.232,0]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"A\",\"np\":5,\"cix\":2,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-142.921,-7.862],[-135.939,-7.862],[-135.939,-5.427],[-142.921,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.917,-0.851],[1.288,-0.016],[0.856,0.671],[0.25,1.24],[0,0],[-1.07,0],[-0.046,1.733],[0,0],[0.979,0.016],[0.758,0.782],[-0.016,1.642]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.098,-0.016],[-0.864,-0.655],[0,0],[0.372,0.957],[1.51,-0.016],[0,0],[-1.13,0.367],[-1.077,0.016],[-0.759,-0.758],[0,0]],\"v\":[[-120.557,-12.324],[-119.091,-15.963],[-115.864,-17.227],[-112.581,-15.961],[-111.16,-12.316],[-111.16,-4.781],[-112.581,-1.148],[-115.864,0.141],[-118.796,-0.889],[-120.466,-3.731],[-118.02,-3.731],[-115.858,-2.296],[-113.525,-4.919],[-113.525,-6.528],[-116.688,-6.001],[-119.442,-7.15],[-120.557,-10.75]],\"c\":true},\"ix\":2},\"nm\":\"9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-1.521,-0.016],[-0.046,1.73],[0,0],[1.514,0.031],[0.03,-1.714]],\"o\":[[0.03,1.73],[1.514,-0.016],[0,0],[-0.046,-1.714],[-1.521,0.031],[0,0]],\"v\":[[-118.192,-10.774],[-115.864,-8.155],[-113.525,-10.774],[-113.525,-12.171],[-115.864,-14.79],[-118.192,-12.171]],\"c\":true},\"ix\":2},\"nm\":\"9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"9\",\"np\":5,\"cix\":2,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.514,0.031],[0.03,-1.714],[0,0],[-1.521,-0.016],[-0.046,1.73]],\"o\":[[-0.046,-1.714],[-1.521,0.031],[0,0],[0.03,1.73],[1.514,-0.016],[0,0]],\"v\":[[-98.406,-12.172],[-100.745,-14.79],[-103.072,-12.172],[-103.072,-4.914],[-100.745,-2.296],[-98.406,-4.914]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.916,-0.851],[1.288,-0.016],[0.901,0.842],[0.015,1.568]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.25,-0.016],[-0.962,-0.85],[0,0]],\"v\":[[-105.437,-12.324],[-103.971,-15.963],[-100.745,-17.227],[-97.461,-15.961],[-96.041,-12.316],[-96.041,-4.781],[-97.461,-1.148],[-100.745,0.141],[-103.971,-1.146],[-105.437,-4.774]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"0\",\"np\":5,\"cix\":2,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.514,0.031],[0.03,-1.714],[0,0],[-1.521,-0.016],[-0.046,1.73]],\"o\":[[-0.046,-1.714],[-1.521,0.031],[0,0],[0.03,1.73],[1.514,-0.016],[0,0]],\"v\":[[-83.286,-12.172],[-85.625,-14.79],[-87.953,-12.172],[-87.953,-4.914],[-85.625,-2.296],[-83.286,-4.914]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.916,-0.851],[1.288,-0.016],[0.901,0.842],[0.015,1.568]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.25,-0.016],[-0.962,-0.85],[0,0]],\"v\":[[-90.318,-12.324],[-88.852,-15.963],[-85.625,-17.227],[-82.342,-15.961],[-80.921,-12.316],[-80.921,-4.781],[-82.342,-1.148],[-85.625,0.141],[-88.852,-1.146],[-90.318,-4.774]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"0\",\"np\":5,\"cix\":2,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-71.565,-14.503],[-73.919,-12.721],[-73.919,-15.327],[-71.565,-17.086],[-69.2,-17.086],[-69.2,0],[-71.565,0]],\"c\":true},\"ix\":2},\"nm\":\"1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"1\",\"np\":3,\"cix\":2,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-50.373,-7.862],[-43.391,-7.862],[-43.391,-5.427],[-50.373,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":10,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-1.818,-0.016],[-0.03,1.556],[1.454,0.258],[0.795,0.117],[0.742,0.844],[0,1.243],[-0.96,0.915],[-1.709,0.016],[-1.52,-1.13],[0,0],[1.492,0.031],[0.515,-0.399],[0.015,-0.821],[-0.371,-0.399],[-0.817,-0.156],[-0.787,-0.102],[-0.742,-0.93],[0,-1.212],[3.788,-0.047],[1.762,1.555]],\"o\":[[1.318,1.12],[2.151,-0.031],[0.016,-1.274],[-0.666,-0.094],[-1.423,-0.242],[-0.765,-0.868],[0,-1.493],[0.93,-0.907],[2.056,0.047],[0,0],[-1.242,-0.845],[-0.772,0],[-0.538,0.415],[0,0.493],[0.371,0.407],[0.454,0.078],[1.552,0.219],[0.734,0.915],[-0.083,3.269],[-2.45,0],[0,0]],\"v\":[[-26.937,-4.139],[-22.234,-2.436],[-18.962,-4.817],[-21.119,-7.116],[-23.311,-7.433],[-26.558,-9.063],[-27.704,-12.23],[-26.264,-15.842],[-22.306,-17.227],[-16.942,-15.462],[-18.339,-13.334],[-22.439,-14.65],[-24.37,-14.051],[-25.199,-12.198],[-24.642,-10.861],[-22.86,-10.017],[-20.998,-9.747],[-17.558,-8.023],[-16.457,-4.833],[-22.264,0.141],[-28.581,-2.192]],\"c\":true},\"ix\":2},\"nm\":\"S\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"S\",\"np\":3,\"cix\":2,\"ix\":11,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-7.007,-14.503],[-9.361,-12.721],[-9.361,-15.327],[-7.007,-17.086],[-4.642,-17.086],[-4.642,0],[-7.007,0]],\"c\":true},\"ix\":2},\"nm\":\"1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"1\",\"np\":3,\"cix\":2,\"ix\":12,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"Planet Mask\",\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[89,14,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-92,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0,0]},\"n\":[\"0p667_1_0p167_0p167\",\"0p667_1_0p167_0\",\"0p667_1_0p167_0\"],\"t\":30,\"s\":[0,349,100],\"e\":[100,349,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[100,349,100],\"e\":[5,349,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[175.391,37.391],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-1.305,107.695],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Planet Name\",\"tt\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p667_1_0p167_0p167\",\"t\":30,\"s\":[180,340,0],\"e\":[180,370,0],\"to\":[0,5,0],\"ti\":[0,-0.5,0]},{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":60,\"s\":[180,370,0],\"e\":[180,343,0],\"to\":[0,0.5,0],\"ti\":[0,4.5,0]},{\"t\":90}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-79.47,-17.086],[-77.108,-17.086],[-69.613,-4.94],[-69.567,-4.94],[-69.567,-17.086],[-67.062,-17.086],[-67.062,0],[-69.435,0],[-76.919,-12.146],[-76.964,-12.146],[-76.964,0],[-79.47,0]],\"c\":true},\"ix\":2},\"nm\":\"N\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"N\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-61.174,-17.086],[-58.522,-17.086],[-54.77,-4.071],[-54.725,-4.071],[-50.962,-17.086],[-48.309,-17.086],[-53.773,0],[-55.722,0]],\"c\":true},\"ix\":2},\"nm\":\"V\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"V\",\"np\":3,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-1.12,-1.906],[-0.106,-0.703],[0,-1.727],[0.129,-0.727],[0.121,-0.289],[0.182,-0.305],[0.863,-0.523],[1.241,0],[0,0]],\"o\":[[0,0],[2.24,0.016],[0.401,0.641],[0.083,0.703],[0,1.836],[-0.061,0.367],[-0.129,0.281],[-0.484,0.805],[-0.855,0.562],[0,0],[0,0]],\"v\":[[-42.504,-17.086],[-36.713,-17.086],[-31.672,-14.203],[-30.912,-12.188],[-30.787,-8.543],[-30.98,-4.699],[-31.253,-3.715],[-31.718,-2.836],[-33.739,-0.844],[-36.884,0],[-42.504,0]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.636,0.994],[-0.076,0.564],[0,1.527],[0.068,0.642],[0.341,0.399],[1.273,-0.031],[0,0]],\"o\":[[0,0],[1.409,0],[0.28,-0.368],[0.068,-0.556],[0,-1.487],[-0.091,-0.642],[-0.697,-0.994],[0,0],[0,0]],\"v\":[[-39.998,-2.436],[-36.998,-2.436],[-33.93,-3.928],[-33.395,-5.325],[-33.293,-8.449],[-33.395,-11.643],[-34.043,-13.205],[-36.998,-14.65],[-39.998,-14.65]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"D\",\"np\":5,\"cix\":2,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-16.455,-6.116],[-18.849,-13.591],[-18.895,-13.591],[-21.29,-6.116]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-15.739,-3.821],[-22.016,-3.821],[-23.287,0],[-25.943,0],[-19.927,-17.086],[-17.828,-17.086],[-11.812,0],[-14.457,0]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"A\",\"np\":5,\"cix\":2,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[2.855,-7.862],[9.837,-7.862],[9.837,-5.427],[2.855,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.917,-0.851],[1.288,-0.016],[0.856,0.671],[0.25,1.24],[0,0],[-1.07,0],[-0.046,1.733],[0,0],[0.979,0.016],[0.758,0.782],[-0.016,1.642]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.098,-0.016],[-0.864,-0.655],[0,0],[0.372,0.957],[1.51,-0.016],[0,0],[-1.13,0.367],[-1.077,0.016],[-0.759,-0.758],[0,0]],\"v\":[[25.219,-12.324],[26.684,-15.963],[29.911,-17.227],[33.195,-15.961],[34.615,-12.316],[34.615,-4.781],[33.195,-1.148],[29.911,0.141],[26.979,-0.889],[25.309,-3.731],[27.755,-3.731],[29.917,-2.296],[32.25,-4.919],[32.25,-6.528],[29.087,-6.001],[26.334,-7.15],[25.219,-10.75]],\"c\":true},\"ix\":2},\"nm\":\"9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-1.521,-0.016],[-0.046,1.73],[0,0],[1.514,0.031],[0.03,-1.714]],\"o\":[[0.03,1.73],[1.514,-0.016],[0,0],[-0.046,-1.714],[-1.521,0.031],[0,0]],\"v\":[[27.584,-10.774],[29.911,-8.155],[32.25,-10.774],[32.25,-12.171],[29.911,-14.79],[27.584,-12.171]],\"c\":true},\"ix\":2},\"nm\":\"9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"9\",\"np\":5,\"cix\":2,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.514,0.031],[0.03,-1.714],[0,0],[-1.521,-0.016],[-0.046,1.73]],\"o\":[[-0.046,-1.714],[-1.521,0.031],[0,0],[0.03,1.73],[1.514,-0.016],[0,0]],\"v\":[[47.369,-12.172],[45.031,-14.79],[42.703,-12.172],[42.703,-4.914],[45.031,-2.296],[47.369,-4.914]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.916,-0.851],[1.288,-0.016],[0.901,0.842],[0.015,1.568]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.25,-0.016],[-0.962,-0.85],[0,0]],\"v\":[[40.338,-12.324],[41.804,-15.963],[45.031,-17.227],[48.314,-15.961],[49.734,-12.316],[49.734,-4.781],[48.314,-1.148],[45.031,0.141],[41.804,-1.146],[40.338,-4.774]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"0\",\"np\":5,\"cix\":2,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.514,0.031],[0.03,-1.714],[0,0],[-1.521,-0.016],[-0.046,1.73]],\"o\":[[-0.046,-1.714],[-1.521,0.031],[0,0],[0.03,1.73],[1.514,-0.016],[0,0]],\"v\":[[62.489,-12.172],[60.15,-14.79],[57.823,-12.172],[57.823,-4.914],[60.15,-2.296],[62.489,-4.914]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.916,-0.851],[1.288,-0.016],[0.901,0.842],[0.015,1.568]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.25,-0.016],[-0.962,-0.85],[0,0]],\"v\":[[55.458,-12.324],[56.923,-15.963],[60.15,-17.227],[63.434,-15.961],[64.854,-12.316],[64.854,-4.781],[63.434,-1.148],[60.15,0.141],[56.923,-1.146],[55.458,-4.774]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"0\",\"np\":5,\"cix\":2,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[74.21,-14.503],[71.856,-12.721],[71.856,-15.327],[74.21,-17.086],[76.575,-17.086],[76.575,0],[74.21,0]],\"c\":true},\"ix\":2},\"nm\":\"1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"1\",\"np\":3,\"cix\":2,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":0,\"nm\":\"Indicator\",\"refId\":\"comp_0\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[180,545,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[19,6.5,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"w\":38,\"h\":13,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Planet 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p833_0p833_0p333_0\",\"t\":90,\"s\":[437,240,0],\"e\":[180,284,0],\"to\":[-42.8333320617676,7.33333349227905,0],\"ti\":[42.8333320617676,-7.33333349227905,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":120,\"s\":[180,284,0],\"e\":[180,284,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":150}],\"ix\":2},\"a\":{\"a\":0,\"k\":[-7,-43,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":120,\"s\":[68,68,100],\"e\":[145,145,100]},{\"t\":150}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[122.156,122.156],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.329,0.988,0.927,0.5,0.251,0.514,0.562,1,0.172,0.039,0.196],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,-32],\"ix\":5},\"e\":{\"a\":0,\"k\":[0.887,61.43],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7,-43],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Moon 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.333],\"y\":[0]},\"n\":[\"0_1_0p333_0\"],\"t\":120,\"s\":[100],\"e\":[0]},{\"t\":150}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.333],\"y\":[0]},\"n\":[\"0p833_0p833_0p333_0\"],\"t\":90,\"s\":[390],\"e\":[284]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0_1_0p167_0p167\"],\"t\":120,\"s\":[284],\"e\":[182]},{\"t\":150}],\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.333],\"y\":[0]},\"n\":[\"0p833_0p833_0p333_0\"],\"t\":90,\"s\":[395],\"e\":[361]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0_1_0p167_0p167\"],\"t\":120,\"s\":[361],\"e\":[283]},{\"t\":150}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7,-43,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[22.37,22.37,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[122.156,122.156],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.7,0.865,1,0.5,0.35,0.433,0.5,1,0,0,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[-20.953,-36.874],\"ix\":5},\"e\":{\"a\":0,\"k\":[40.283,45.489],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7,-43],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Moon\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":60,\"s\":[460,141,0],\"e\":[284,165,0],\"to\":[-29.3333339691162,4,0],\"ti\":[80.8333358764648,-8.33333301544189,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p833_0p833_0p333_0\",\"t\":90,\"s\":[284,165,0],\"e\":[-25,191,0],\"to\":[-80.8333358764648,8.33333301544189,0],\"ti\":[51.5,-4.33333349227905,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[-7,-43,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[52.37,52.37,100],\"e\":[22.37,22.37,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[122.156,122.156],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.329,0.988,0.927,0.5,0.251,0.514,0.562,1,0.172,0.039,0.196],\"ix\":9}},\"s\":{\"a\":0,\"k\":[-20.953,-36.874],\"ix\":5},\"e\":{\"a\":0,\"k\":[40.283,45.489],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7,-43],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Planet\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[40],\"e\":[100]},{\"t\":30}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.573,\"y\":0.78},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p573_0p78_0p167_0p167\",\"t\":30,\"s\":[180,284,0],\"e\":[180,240,0],\"to\":[-1.02933037281036,-3.17011475563049,0],\"ti\":[2.11975932121277,9.17943954467773,0]},{\"i\":{\"x\":0.693,\"y\":0.819},\"o\":{\"x\":0.334,\"y\":0.159},\"n\":\"0p693_0p819_0p334_0p159\",\"t\":60,\"s\":[180,240,0],\"e\":[180,284,0],\"to\":[-2.72540259361267,-11.8021268844604,0],\"ti\":[3.15910816192627,-1.60271632671356,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.378,\"y\":0.041},\"n\":\"0p833_0p833_0p378_0p041\",\"t\":90,\"s\":[180,284,0],\"e\":[-61,378,0],\"to\":[-54.8544769287109,27.8294239044189,0],\"ti\":[36.4361991882324,-21.7710075378418,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[-7,-43,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[25,25,100],\"e\":[142.568,142.568,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":30,\"s\":[142.568,142.568,100],\"e\":[142.568,142.568,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[142.568,142.568,100],\"e\":[68,68,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[122.156,122.156],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.329,0.988,0.927,0.5,0.251,0.514,0.562,1,0.172,0.039,0.196],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,-32],\"ix\":5},\"e\":{\"a\":0,\"k\":[0.887,61.43],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7,-43],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":12,\"ty\":2,\"nm\":\"stars2.png\",\"cl\":\"png\",\"refId\":\"image_0\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p833_0p833_0p333_0\",\"t\":90,\"s\":[180,284,0],\"e\":[100,284,0],\"to\":[-13.3333330154419,0,0],\"ti\":[13.3333330154419,0,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[1356,2148,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[14.991,14.991,100],\"e\":[20.991,20.991,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":30,\"s\":[20.991,20.991,100],\"e\":[20.991,20.991,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[20.991,20.991,100],\"e\":[14.991,14.991,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":13,\"ty\":2,\"nm\":\"stars1.png\",\"cl\":\"png\",\"refId\":\"image_1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[180,284,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[1356,2148,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[14.991,14.991,100],\"e\":[36.991,36.991,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":30,\"s\":[36.991,36.991,100],\"e\":[36.991,36.991,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[36.991,36.991,100],\"e\":[14.991,14.991,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/images/img_0.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/assets/images/img_0.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/images/img_1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/assets/images/img_1.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/spritz-pager.json",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-{\"v\":\"5.0.0\",\"fr\":60,\"ip\":0,\"op\":240,\"w\":280,\"h\":280,\"nm\":\"Main\",\"ddd\":0,\"assets\":[{\"id\":\"comp_0\",\"layers\":[{\"ddd\":0,\"ind\":3,\"ty\":0,\"nm\":\"Glass\",\"refId\":\"comp_1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.38],\"y\":[1]},\"o\":{\"x\":[0.02],\"y\":[0.167]},\"n\":[\"0p38_1_0p02_0p167\"],\"t\":60,\"s\":[414],\"e\":[140]},{\"t\":90}],\"ix\":3},\"y\":{\"a\":0,\"k\":146,\"ix\":4}},\"a\":{\"a\":0,\"k\":[140,140,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p167_0\",\"0p833_1_0p167_0\",\"0p833_1_0p167_0\"],\"t\":0,\"s\":[150,150,100],\"e\":[150,150,100]},{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":180,\"s\":[150,150,100],\"e\":[177,177,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"w\":280,\"h\":280,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Drop Shadow\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":197.334,\"s\":[0],\"e\":[100]},{\"t\":240}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":182.321,\"ix\":3},\"y\":{\"a\":0,\"k\":89.434,\"ix\":4}},\"a\":{\"a\":0,\"k\":[27,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.014,0.014,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,-0.052]},\"n\":[\"0p014_1_0p167_0\",\"0p014_1_0p167_0\",\"0p667_1_0p167_-0p052\"],\"t\":197.334,\"s\":[319,319,100],\"e\":[319,319,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[94.14,87.49],[0,190.19],[228.15,419.15],[311.77,415.83],[352.31,477],[363.42,413.78],[383,413],[367.76,389.07],[404.973,255.231],[177.463,26.921],[82,69.17]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,1,0,0,0.5,1,0,0,1,1,0,0,0,0.15,0.5,0.075,1,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[97.88,67.782],\"ix\":5},\"e\":{\"a\":0,\"k\":[241.319,232.083],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[16.509,16.509],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":15,\"ix\":10},\"r\":2,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,1,0,0,0.5,1,0,0,1,1,0,0,0,0.15,0.5,0.075,1,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":5},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 2\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":0,\"nm\":\"CirclesFixed\",\"refId\":\"comp_2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[240,240,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[140,140,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.37,0.37,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p37_1_0p333_0\",\"0p37_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":189,\"s\":[200,200,100],\"e\":[208,208,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"w\":280,\"h\":280,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":1,\"nm\":\"Background\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[140,140,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[90,90,100],\"ix\":6}},\"ao\":0,\"sw\":280,\"sh\":280,\"sc\":\"#ffe2d4\",\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]},{\"id\":\"comp_1\",\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Glass\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140.059,141.453,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[35.377,33.314,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[101,101,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[69.53,0],[0,63.01],[-22.92,35.94],[0,0],[0,-35.28]],\"o\":[[-69.53,0],[0,-35.28],[0,0],[22.92,35.94],[0,63.01]],\"v\":[[120,226],[0,117.25],[37.97,0],[202.03,0],[240,117.25]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[1,1,1,0.20000000298],\"ix\":3},\"o\":{\"a\":0,\"k\":20,\"ix\":4},\"w\":{\"a\":0,\"k\":4.5,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,0.152456998825],\"ix\":4},\"o\":{\"a\":0,\"k\":15.246,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[29.481,29.481],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Ice cube 7\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":34,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":160,\"s\":[-61],\"e\":[15]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":163.463,\"s\":[15],\"e\":[40]},{\"t\":180}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":144.974,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.938]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p938_0p167_0p167\"],\"t\":160,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.038],\"y\":[0.153]},\"n\":[\"0_1_0p038_0p153\"],\"t\":163.463,\"s\":[108.88],\"e\":[150.13]},{\"t\":180}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Ice cube 6\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":55,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":156,\"s\":[-83],\"e\":[-7]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":159.461,\"s\":[-7],\"e\":[27]},{\"t\":176.76953125}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":159.974,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.942]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p942_0p167_0p167\"],\"t\":156,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.035],\"y\":[0.135]},\"n\":[\"0_1_0p035_0p135\"],\"t\":159.461,\"s\":[108.88],\"e\":[151.38]},{\"t\":176.76953125}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Ice cube 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":16,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":153,\"s\":[-83],\"e\":[-7]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":156.463,\"s\":[-7],\"e\":[-20]},{\"t\":173.76953125}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":146.224,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.918]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p918_0p167_0p167\"],\"t\":153,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.035],\"y\":[0.122]},\"n\":[\"0_1_0p035_0p122\"],\"t\":156.463,\"s\":[108.88],\"e\":[163.88]},{\"t\":173.76953125}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"Ice cube 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":32,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":156,\"s\":[-98],\"e\":[-7]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":159.463,\"s\":[-7],\"e\":[-32]},{\"t\":176.76953125}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":120.599,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.922]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p922_0p167_0p167\"],\"t\":156,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.035],\"y\":[0.166]},\"n\":[\"0_1_0p035_0p166\"],\"t\":159.463,\"s\":[108.88],\"e\":[149.88]},{\"t\":176.76953125}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Ice cube\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":59,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":150,\"s\":[-83],\"e\":[-7]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":153.461,\"s\":[-7],\"e\":[18]},{\"t\":170.76953125}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":129.474,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.891]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p891_0p167_0p167\"],\"t\":150,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.035],\"y\":[0.174]},\"n\":[\"0_1_0p035_0p174\"],\"t\":153.461,\"s\":[108.88],\"e\":[161.88]},{\"t\":170.76953125}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Straw\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.936],\"y\":[0.819]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p936_0p819_0p167_0p167\"],\"t\":90,\"s\":[174],\"e\":[188]},{\"i\":{\"x\":[0.454],\"y\":[1.002]},\"o\":{\"x\":[0.017],\"y\":[0.112]},\"n\":[\"0p454_1p002_0p017_0p112\"],\"t\":105,\"s\":[188],\"e\":[210]},{\"t\":150}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":148.25,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":90,\"s\":[7.25],\"e\":[91]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":105,\"s\":[91],\"e\":[125.25]},{\"t\":150}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[4.187,86.948],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.274509803922,0.141176470588,0.141176470588,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-0.407,-5.776],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":8},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Bubbles\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":96.428,\"s\":[0],\"e\":[20]},{\"t\":150}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":1},\"o\":{\"x\":0,\"y\":0},\"n\":\"0p833_1_0_0\",\"t\":0,\"s\":[109.899,126.625,0],\"e\":[119.899,126.625,0],\"to\":[1.66666662693024,0,0],\"ti\":[-1.66666662693024,1.33333337306976,0]},{\"i\":{\"x\":0.833,\"y\":1},\"o\":{\"x\":0,\"y\":0},\"n\":\"0p833_1_0_0\",\"t\":90,\"s\":[119.899,126.625,0],\"e\":[119.899,118.625,0],\"to\":[1.66666662693024,-1.33333337306976,0],\"ti\":[0,1.33333337306976,0]},{\"t\":150}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[400,400,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[24,31],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[24.5,31.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[24.5,31.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval\",\"np\":1,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[15,37],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[15.5,37.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[15.5,37.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 19\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[13,35],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[13.5,35.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[13.5,35.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 20\",\"np\":1,\"cix\":2,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 2\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[33,19],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[33.5,19.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[33.5,19.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 13\",\"np\":1,\"cix\":2,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 3\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[23,16],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[23.5,16.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[23.5,16.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 21\",\"np\":1,\"cix\":2,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 4\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[25,19],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[25.5,19.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[25.5,19.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 14\",\"np\":1,\"cix\":2,\"ix\":10,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 5\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[25,42],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[25.5,42.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[25.5,42.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 15\",\"np\":1,\"cix\":2,\"ix\":12,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 6\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[14,22],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[14.5,22.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[14.5,22.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy\",\"np\":1,\"cix\":2,\"ix\":14,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 7\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[29,9],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[29.5,9.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[29.5,9.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 2\",\"np\":1,\"cix\":2,\"ix\":16,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 8\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[8,0],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[8.5,0.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[8.5,0.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 3\",\"np\":1,\"cix\":2,\"ix\":18,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 9\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[9,1],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[9.5,1.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[9.5,1.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 23\",\"np\":1,\"cix\":2,\"ix\":20,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 10\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,10],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0.5,10.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0.5,10.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 4\",\"np\":1,\"cix\":2,\"ix\":22,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 11\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[2,14],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[2.5,14.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[2.5,14.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 22\",\"np\":1,\"cix\":2,\"ix\":24,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 12\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[16,26],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[16.5,26.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[16.5,26.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 5\",\"np\":1,\"cix\":2,\"ix\":26,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 13\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[24,18],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[25,19],\"ix\":2},\"a\":{\"a\":0,\"k\":[25,19],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 6\",\"np\":1,\"cix\":2,\"ix\":28,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 14\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[16,26],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[17,27],\"ix\":2},\"a\":{\"a\":0,\"k\":[17,27],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 7\",\"np\":1,\"cix\":2,\"ix\":30,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 15\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[14,38],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[15,39],\"ix\":2},\"a\":{\"a\":0,\"k\":[15,39],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 18\",\"np\":1,\"cix\":2,\"ix\":32,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 16\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[1,10],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[2,11],\"ix\":2},\"a\":{\"a\":0,\"k\":[2,11],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 8\",\"np\":1,\"cix\":2,\"ix\":34,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 17\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[13,8],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[14,9],\"ix\":2},\"a\":{\"a\":0,\"k\":[14,9],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 16\",\"np\":1,\"cix\":2,\"ix\":36,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 18\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[14,7],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[15,8],\"ix\":2},\"a\":{\"a\":0,\"k\":[15,8],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 17\",\"np\":1,\"cix\":2,\"ix\":38,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 19\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[2,21],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[3,22],\"ix\":2},\"a\":{\"a\":0,\"k\":[3,22],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 9\",\"np\":1,\"cix\":2,\"ix\":40,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 20\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[4,23],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[5,24],\"ix\":2},\"a\":{\"a\":0,\"k\":[5,24],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 10\",\"np\":1,\"cix\":2,\"ix\":42,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 21\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[36,31],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[37,32],\"ix\":2},\"a\":{\"a\":0,\"k\":[37,32],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 11\",\"np\":1,\"cix\":2,\"ix\":44,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 22\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[35,30],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[36,31],\"ix\":2},\"a\":{\"a\":0,\"k\":[36,31],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 24\",\"np\":1,\"cix\":2,\"ix\":46,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 23\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[33,20],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[34,21],\"ix\":2},\"a\":{\"a\":0,\"k\":[34,21],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 12\",\"np\":1,\"cix\":2,\"ix\":48,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 24\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[29.481,29.481],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Combined Shape\",\"np\":50,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":3},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Glass\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[104.682,116.859,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[69.53,0],[0,63.04],[-13.41,29.27],[-10.63,-0.29],[0,-25.94]],\"o\":[[-69.53,0],[0,-25.93],[13.26,-0.33],[13.42,29.29],[0,63.04]],\"v\":[[120,196],[0,87.2],[21.54,0.25],[218.45,0.21],[240,87.2]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.937,0.231,0,0.5,0.969,0.396,0.053,1,1,0.561,0.106],\"ix\":9}},\"s\":{\"a\":0,\"k\":[122.304,91.478],\"ix\":5},\"e\":{\"a\":0,\"k\":[123.012,16.642],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[29.481,29.481],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]},{\"id\":\"comp_2\",\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Shape Layer 4\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":180,\"s\":[0],\"e\":[100]},{\"t\":220}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[273.965,274.215],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,1,1,1,0.5,1,1,1,1,1,1,1,0,0.35,0.5,0.175,1,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[-92.934,-90.373],\"ix\":5},\"e\":{\"a\":0,\"k\":[88.309,89.291],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-0.518,-0.107],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Shape Layer 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":32,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[38.062,16.062,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":20,\"s\":[0,0,100],\"e\":[59.74,59.74,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[154.125,154.125],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.525490196078,0.443137254902,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[38.062,16.062],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Shape Layer 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":89,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[38.062,16.062,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":10,\"s\":[0,0,100],\"e\":[93.506,93.506,100]},{\"t\":50}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[154.125,154.125],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.709803921569,0.525490196078,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[38.062,16.062],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Shape Layer 1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":32,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[38.062,16.062,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[131.169,131.169,100]},{\"t\":40}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[154.125,154.125],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.996078012504,0.698038976333,0.192156997381,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[38.062,16.062],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]}],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Bottom Shadow\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":200,\"s\":[0],\"e\":[15]},{\"t\":240}],\"ix\":11},\"r\":{\"a\":0,\"k\":180,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":140,\"ix\":3},\"y\":{\"a\":0,\"k\":191.5,\"ix\":4}},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[113.441,113.441,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-50.694,0],[-1.065,-50.439],[0,0.669],[51.362,0],[0,-51.362],[-0.014,-0.665]],\"o\":[[50.694,0],[0.014,-0.665],[0,-51.362],[-51.362,0],[0,0.669],[1.065,-50.439]],\"v\":[[0,-43.5],[92.975,47.5],[93,45.5],[0,-47.5],[-93,45.5],[-92.975,47.5]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0,0,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Glow\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":200,\"s\":[0],\"e\":[30]},{\"t\":240}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":140,\"ix\":3},\"y\":{\"a\":0,\"k\":88,\"ix\":4}},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[113.441,113.441,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-50.694,0],[-1.065,-50.439],[0,0.669],[51.362,0],[0,-51.362],[-0.014,-0.665]],\"o\":[[50.694,0],[0.014,-0.665],[0,-51.362],[-51.362,0],[0,0.669],[1.065,-50.439]],\"v\":[[0,-43.5],[92.975,47.5],[93,45.5],[0,-47.5],[-93,45.5],[-92.975,47.5]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Mask\",\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-3.962,6.538,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[101.087,101.087,100]},{\"i\":{\"x\":[0.44,0.44,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p44_1_0p333_0\",\"0p44_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[101.087,101.087,100],\"e\":[101.087,101.087,100]},{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":189,\"s\":[101.087,101.087,100],\"e\":[115.087,115.087,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[184.076,184.076],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-3.962,6.538],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":0,\"nm\":\"Contents\",\"tt\":1,\"refId\":\"comp_0\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[140,140,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"w\":280,\"h\":280,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"SHdow\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":200,\"s\":[0],\"e\":[100]},{\"t\":240}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-3.962,6.538,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[101.087,101.087,100]},{\"i\":{\"x\":[0.44,0.44,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p44_1_0p333_0\",\"0p44_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[101.087,101.087,100],\"e\":[101.087,101.087,100]},{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":189,\"s\":[101.087,101.087,100],\"e\":[115.087,115.087,100]},{\"i\":{\"x\":[0,0,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p833_1_0p333_0\"],\"t\":200,\"s\":[115.087,115.087,100],\"e\":[101.087,101.087,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"ef\":[{\"ty\":25,\"nm\":\"Drop Shadow\",\"np\":8,\"mn\":\"ADBE Drop Shadow\",\"ix\":1,\"en\":1,\"ef\":[{\"ty\":2,\"nm\":\"Shadow Color\",\"mn\":\"ADBE Drop Shadow-0001\",\"ix\":1,\"v\":{\"a\":0,\"k\":[0,0,0,1],\"ix\":1}},{\"ty\":0,\"nm\":\"Opacity\",\"mn\":\"ADBE Drop Shadow-0002\",\"ix\":2,\"v\":{\"a\":0,\"k\":40.5,\"ix\":2}},{\"ty\":0,\"nm\":\"Direction\",\"mn\":\"ADBE Drop Shadow-0003\",\"ix\":3,\"v\":{\"a\":0,\"k\":180,\"ix\":3}},{\"ty\":0,\"nm\":\"Distance\",\"mn\":\"ADBE Drop Shadow-0004\",\"ix\":4,\"v\":{\"a\":0,\"k\":8,\"ix\":4}},{\"ty\":0,\"nm\":\"Softness\",\"mn\":\"ADBE Drop Shadow-0005\",\"ix\":5,\"v\":{\"a\":0,\"k\":20,\"ix\":5}},{\"ty\":7,\"nm\":\"Shadow Only\",\"mn\":\"ADBE Drop Shadow-0006\",\"ix\":6,\"v\":{\"a\":0,\"k\":0,\"ix\":6}}]}],\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[184.076,184.076],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-3.962,6.538],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/DebugActivity.java",
            "additions": 0,
            "deletions": 149
        },
        "diff content": "@@ -1,149 +0,0 @@\n-package com.novoda.spritz.sample;\n-\n-import android.os.Bundle;\n-import android.support.annotation.Nullable;\n-import android.support.v4.app.Fragment;\n-import android.support.v4.app.FragmentManager;\n-import android.support.v4.app.FragmentStatePagerAdapter;\n-import android.support.v4.view.ViewPager;\n-import android.support.v7.app.AppCompatActivity;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.Button;\n-import android.widget.TextView;\n-\n-import com.airbnb.lottie.LottieAnimationView;\n-import com.novoda.spritz.Spritz;\n-import com.novoda.spritz.SpritzStep;\n-\n-import java.util.Locale;\n-import java.util.concurrent.TimeUnit;\n-\n-public class DebugActivity extends AppCompatActivity {\n-\n-    private static final int PAGES_COUNT = 3;\n-\n-    private Spritz spritz;\n-    private ViewPager viewPager;\n-    private TextView debugText;\n-\n-    @Override\n-    protected void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-        setContentView(R.layout.debug);\n-\n-        LottieAnimationView lottieAnimationView = findViewById(R.id.animation_view);\n-\n-        viewPager = findViewById(R.id.viewpager);\n-        viewPager.setAdapter(new ScreenSlidePagerAdapter(getSupportFragmentManager()));\n-\n-        spritz = Spritz\n-                .with(lottieAnimationView)\n-                .withSteps(\n-                        new SpritzStep.Builder()\n-                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n-                                .withSwipeDuration(1, TimeUnit.SECONDS)\n-                                .build(),\n-                        new SpritzStep.Builder()\n-                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n-                                .withSwipeDuration(1, TimeUnit.SECONDS)\n-                                .build(),\n-                        new SpritzStep.Builder()\n-                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n-                                .build()\n-                )\n-                .build();\n-\n-        Button continueButton = findViewById(R.id.btn_continue);\n-        continueButton.setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                int nextItem = viewPager.getCurrentItem() + 1;\n-                if (PAGES_COUNT > nextItem) {\n-                    viewPager.setCurrentItem(nextItem);\n-                }\n-            }\n-        });\n-        Button previousButton = findViewById(R.id.btn_previous);\n-        previousButton.setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                int prevItem = viewPager.getCurrentItem() - 1;\n-                if (prevItem >= 0) {\n-                    viewPager.setCurrentItem(prevItem);\n-                }\n-            }\n-        });\n-\n-        debugText = findViewById(R.id.debug_text);\n-\n-        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n-            @Override\n-            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n-                debugText.setText(String.format(Locale.ENGLISH, \"%f\", position + positionOffset + 1));\n-            }\n-\n-            @Override\n-            public void onPageSelected(int position) {\n-                // do nothing\n-            }\n-\n-            @Override\n-            public void onPageScrollStateChanged(int state) {\n-                // do nothing\n-            }\n-        });\n-\n-    }\n-\n-    @Override\n-    protected void onStart() {\n-        super.onStart();\n-        viewPager.setPageTransformer(false, new ViewPager.PageTransformer() {\n-            @Override\n-            public void transformPage(View page, float position) {\n-\n-            }\n-        });\n-        spritz.attachTo(viewPager);\n-        spritz.startPendingAnimations();\n-    }\n-\n-    @Override\n-    protected void onStop() {\n-        spritz.detachFrom(viewPager);\n-        super.onStop();\n-    }\n-\n-    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {\n-\n-        ScreenSlidePagerAdapter(FragmentManager fragmentManager) {\n-            super(fragmentManager);\n-        }\n-\n-        @Override\n-        public Fragment getItem(int position) {\n-            return new AnimationFragment();\n-        }\n-\n-        @Override\n-        public int getCount() {\n-            return PAGES_COUNT;\n-        }\n-\n-    }\n-\n-    public static class AnimationFragment extends Fragment {\n-\n-        public AnimationFragment() {\n-            // default constructor\n-        }\n-\n-        @Override\n-        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n-            return inflater.inflate(R.layout.page, container, false);\n-        }\n-\n-    }\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 0,
            "deletions": 133
        },
        "diff content": "@@ -1,133 +0,0 @@\n-package com.novoda.spritz.sample;\n-\n-import android.content.Intent;\n-import android.net.Uri;\n-import android.os.Bundle;\n-import android.support.annotation.Nullable;\n-import android.support.v4.app.Fragment;\n-import android.support.v4.app.FragmentManager;\n-import android.support.v4.app.FragmentStatePagerAdapter;\n-import android.support.v4.view.ViewPager;\n-import android.support.v7.app.AppCompatActivity;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.Button;\n-\n-import com.airbnb.lottie.LottieAnimationView;\n-import com.novoda.spritz.Spritz;\n-import com.novoda.spritz.SpritzStep;\n-\n-import java.util.concurrent.TimeUnit;\n-\n-public class MainActivity extends AppCompatActivity {\n-\n-    private static final int PAGES_COUNT = 3;\n-\n-    private Spritz spritz;\n-    private ViewPager viewPager;\n-\n-    @Override\n-    protected void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-        setContentView(R.layout.main);\n-\n-        LottieAnimationView lottieAnimationView = findViewById(R.id.animation_view);\n-        lottieAnimationView.setImageAssetsFolder(\"images\");\n-\n-        viewPager = findViewById(R.id.viewpager);\n-        viewPager.setAdapter(new ScreenSlidePagerAdapter(getSupportFragmentManager()));\n-\n-        spritz = Spritz\n-                .with(lottieAnimationView)\n-                .withSteps(\n-                        new SpritzStep.Builder()\n-                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n-                                .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n-                                .build(),\n-                        new SpritzStep.Builder()\n-                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n-                                .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n-                                .build(),\n-                        new SpritzStep.Builder()\n-                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n-                                .build()\n-                )\n-                .build();\n-\n-        Button continueButton = findViewById(R.id.btn_continue);\n-        continueButton.setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                int nextItem = viewPager.getCurrentItem() + 1;\n-                if (PAGES_COUNT > nextItem) {\n-                    viewPager.setCurrentItem(nextItem);\n-                }\n-            }\n-        });\n-        Button previousButton = findViewById(R.id.btn_previous);\n-        previousButton.setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                int prevItem = viewPager.getCurrentItem() - 1;\n-                if (prevItem >= 0) {\n-                    viewPager.setCurrentItem(prevItem);\n-                }\n-            }\n-        });\n-\n-        Button linkButton = findViewById(R.id.btn_blog);\n-        linkButton.setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View view) {\n-                Intent intent = new Intent(Intent.ACTION_VIEW);\n-                intent.setData(Uri.parse(\"https://www.novoda.com/blog/onboard-your-users-with-lottie-of-spritz/\"));\n-                startActivity(intent);\n-            }\n-        });\n-    }\n-\n-    @Override\n-    protected void onStart() {\n-        super.onStart();\n-        spritz.attachTo(viewPager);\n-        spritz.startPendingAnimations();\n-    }\n-\n-    @Override\n-    protected void onStop() {\n-        spritz.detachFrom(viewPager);\n-        super.onStop();\n-    }\n-\n-    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {\n-\n-        ScreenSlidePagerAdapter(FragmentManager fragmentManager) {\n-            super(fragmentManager);\n-        }\n-\n-        @Override\n-        public Fragment getItem(int position) {\n-            return new AnimationFragment();\n-        }\n-\n-        @Override\n-        public int getCount() {\n-            return PAGES_COUNT;\n-        }\n-\n-    }\n-\n-    public static class AnimationFragment extends Fragment {\n-\n-        public AnimationFragment() {\n-            // default constructor\n-        }\n-\n-        @Override\n-        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n-            return inflater.inflate(R.layout.page, container, false);\n-        }\n-\n-    }\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/debug.xml",
            "additions": 0,
            "deletions": 54
        },
        "diff content": "@@ -1,54 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n-  android:layout_width=\"match_parent\"\n-  android:layout_height=\"match_parent\"\n-  xmlns:tools=\"http://schemas.android.com/tools\"\n-  android:background=\"@android:color/black\">\n-\n-  <com.airbnb.lottie.LottieAnimationView\n-    android:id=\"@+id/animation_view\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:layout_centerInParent=\"true\"\n-    app:lottie_autoPlay=\"false\"\n-    app:lottie_fileName=\"demo-debug.json\" />\n-\n-  <android.support.v4.view.ViewPager\n-    android:id=\"@+id/viewpager\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"match_parent\" />\n-\n-  <LinearLayout\n-    android:id=\"@+id/buttons_layout\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:orientation=\"horizontal\">\n-\n-    <Button\n-      android:id=\"@+id/btn_previous\"\n-      android:layout_width=\"0dp\"\n-      android:layout_height=\"60dp\"\n-      android:layout_weight=\"1\"\n-      android:text=\"@string/previous\" />\n-\n-    <Button\n-      android:id=\"@+id/btn_continue\"\n-      android:layout_width=\"0dp\"\n-      android:layout_height=\"60dp\"\n-      android:layout_weight=\"1\"\n-      android:text=\"@string/next\" />\n-\n-  </LinearLayout>\n-\n-  <TextView\n-    android:id=\"@+id/debug_text\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:textSize=\"20sp\"\n-    android:textColor=\"#ffffff\"\n-    android:gravity=\"center\"\n-    android:layout_below=\"@id/buttons_layout\"\n-    tools:text=\"Info goes here\"/>\n-  \n-</RelativeLayout>\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 69
        },
        "diff content": "@@ -1,69 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n-  android:layout_width=\"match_parent\"\n-  android:layout_height=\"match_parent\"\n-  android:background=\"#fff2e7\">\n-\n-  <com.airbnb.lottie.LottieAnimationView\n-    android:id=\"@+id/animation_view\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:layout_centerInParent=\"true\"\n-    app:lottie_scale=\"1.5\"\n-    app:lottie_autoPlay=\"false\"\n-    app:lottie_fileName=\"spritz-pager.json\" />\n-\n-  <android.support.v4.view.ViewPager\n-    android:id=\"@+id/viewpager\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"match_parent\" />\n-\n-  <LinearLayout\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"match_parent\"\n-    android:orientation=\"horizontal\">\n-\n-    <Button\n-      android:id=\"@+id/btn_previous\"\n-      style=\"?android:attr/buttonBarButtonStyle\"\n-      android:layout_width=\"0dp\"\n-      android:layout_height=\"60dp\"\n-      android:layout_weight=\"1\"\n-      android:text=\"@string/previous\" />\n-\n-    <Button\n-      android:id=\"@+id/btn_continue\"\n-      style=\"?android:attr/buttonBarButtonStyle\"\n-      android:layout_width=\"0dp\"\n-      android:layout_height=\"60dp\"\n-      android:layout_weight=\"1\"\n-      android:text=\"@string/next\" />\n-\n-  </LinearLayout>\n-\n-  <TextView\n-    style=\"@style/LoveText\"\n-    android:layout_width=\"wrap_content\"\n-    android:layout_height=\"wrap_content\"\n-    android:layout_alignParentBottom=\"true\"\n-    android:layout_marginBottom=\"16dp\"\n-    android:padding=\"16dp\"\n-    android:text=\"@string/love_text\" />\n-\n-  <Button\n-    android:id=\"@+id/btn_blog\"\n-    style=\"@style/Widget.AppCompat.Button.Borderless\"\n-    android:layout_width=\"wrap_content\"\n-    android:layout_height=\"wrap_content\"\n-    android:layout_alignParentRight=\"true\"\n-    android:layout_alignParentEnd=\"true\"\n-    android:layout_alignParentBottom=\"true\"\n-    android:layout_marginRight=\"12dp\"\n-    android:layout_marginEnd=\"12dp\"\n-    android:layout_marginBottom=\"12dp\"\n-    android:padding=\"20dp\"\n-    android:text=\"@string/go_to_article\"\n-    android:textColor=\"@color/colorAccent\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/page.xml",
            "additions": 0,
            "deletions": 4
        },
        "diff content": "@@ -1,4 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<View xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-  android:layout_width=\"match_parent\"\n-  android:layout_height=\"match_parent\" />\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-hdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-hdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-hdpi/ic_launcher_round.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-mdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-mdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-mdpi/ic_launcher_round.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xhdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/colors.xml",
            "additions": 0,
            "deletions": 8
        },
        "diff content": "@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-    <color name=\"colorPrimary\">#3F51B5</color>\n-    <color name=\"colorPrimaryDark\">#000</color>\n-    <color name=\"colorAccent\">#FF7500</color>\n-    <color name=\"windowBg\">#f5f5f5</color>\n-    <color name=\"loveText\">#4A3939</color>\n-</resources>\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 8
        },
        "diff content": "@@ -1,8 +0,0 @@\n-<resources>\n-  <string name=\"app_name\">Taste of Spritz</string>\n-  <string name=\"previous\">Previous</string>\n-  <string name=\"next\">Next</string>\n-  <string name=\"debug\">Debug</string>\n-  <string name=\"love_text\">Made by Novoda with \u2764</string>\n-  <string name=\"go_to_article\">Go to article</string>\n-</resources>\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/styles.xml",
            "additions": 0,
            "deletions": 24
        },
        "diff content": "@@ -1,24 +0,0 @@\n-<resources>\n-\n-    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-        <item name=\"colorPrimary\">@color/colorPrimary</item>\n-        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n-        <item name=\"colorAccent\">@color/colorAccent</item>\n-        <item name=\"android:windowBackground\">@color/windowBg</item>\n-    </style>\n-\n-    <style name=\"AppTheme.NoActionBar\">\n-        <item name=\"windowActionBar\">false</item>\n-        <item name=\"windowNoTitle\">true</item>\n-    </style>\n-\n-    <style name=\"AppTheme.AppBarOverlay\" parent=\"ThemeOverlay.AppCompat.Dark.ActionBar\" />\n-\n-    <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\" />\n-\n-    <style name=\"LoveText\">\n-        <item name=\"android:textColor\">@color/loveText</item>\n-        <item name=\"android:gravity\">center</item>\n-        <item name=\"android:textSize\">16sp</item>\n-    </style>\n-</resources>\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/build.gradle",
            "additions": 0,
            "deletions": 21
        },
        "diff content": "@@ -1,21 +0,0 @@\n-buildscript {\n-    repositories {\n-        jcenter()\n-    }\n-    dependencies {\n-        classpath 'com.android.tools.build:gradle:3.0.0'\n-    }\n-}\n-\n-allprojects {\n-    repositories {\n-        jcenter()\n-        maven {\n-            url \"https://maven.google.com\"\n-        }\n-    }\n-}\n-\n-task clean(type: Delete) {\n-    delete rootProject.buildDir\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/gradle.properties",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,17 +0,0 @@\n-# Project-wide Gradle settings.\n-\n-# IDE (e.g. Android Studio) users:\n-# Gradle settings configured through the IDE *will override*\n-# any settings specified in this file.\n-\n-# For more details on how to configure your build environment visit\n-# http://www.gradle.org/docs/current/userguide/build_environment.html\n-\n-# Specifies the JVM arguments used for the daemon process.\n-# The setting is particularly useful for tweaking memory settings.\n-org.gradle.jvmargs=-Xmx1536m\n-\n-# When configured, Gradle will run in incubating parallel mode.\n-# This option should only be used with decoupled projects. More details, visit\n-# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n-# org.gradle.parallel=true\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/gradle/wrapper/gradle-wrapper.jar and /dev/null differ\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/gradle/wrapper/gradle-wrapper.properties",
            "additions": 0,
            "deletions": 6
        },
        "diff content": "@@ -1,6 +0,0 @@\n-#Tue Apr 04 11:20:56 BST 2017\n-distributionBase=GRADLE_USER_HOME\n-distributionPath=wrapper/dists\n-zipStoreBase=GRADLE_USER_HOME\n-zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/gradlew",
            "additions": 0,
            "deletions": 160
        },
        "diff content": "@@ -1,160 +0,0 @@\n-#!/usr/bin/env bash\n-\n-##############################################################################\n-##\n-##  Gradle start up script for UN*X\n-##\n-##############################################################################\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS=\"\"\n-\n-APP_NAME=\"Gradle\"\n-APP_BASE_NAME=`basename \"$0\"`\n-\n-# Use the maximum available, or set MAX_FD != -1 to use that value.\n-MAX_FD=\"maximum\"\n-\n-warn ( ) {\n-    echo \"$*\"\n-}\n-\n-die ( ) {\n-    echo\n-    echo \"$*\"\n-    echo\n-    exit 1\n-}\n-\n-# OS specific support (must be 'true' or 'false').\n-cygwin=false\n-msys=false\n-darwin=false\n-case \"`uname`\" in\n-  CYGWIN* )\n-    cygwin=true\n-    ;;\n-  Darwin* )\n-    darwin=true\n-    ;;\n-  MINGW* )\n-    msys=true\n-    ;;\n-esac\n-\n-# Attempt to set APP_HOME\n-# Resolve links: $0 may be a link\n-PRG=\"$0\"\n-# Need this for relative symlinks.\n-while [ -h \"$PRG\" ] ; do\n-    ls=`ls -ld \"$PRG\"`\n-    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n-    if expr \"$link\" : '/.*' > /dev/null; then\n-        PRG=\"$link\"\n-    else\n-        PRG=`dirname \"$PRG\"`\"/$link\"\n-    fi\n-done\n-SAVED=\"`pwd`\"\n-cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n-APP_HOME=\"`pwd -P`\"\n-cd \"$SAVED\" >/dev/null\n-\n-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n-\n-# Determine the Java command to use to start the JVM.\n-if [ -n \"$JAVA_HOME\" ] ; then\n-    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n-        # IBM's JDK on AIX uses strange locations for the executables\n-        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n-    else\n-        JAVACMD=\"$JAVA_HOME/bin/java\"\n-    fi\n-    if [ ! -x \"$JAVACMD\" ] ; then\n-        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n-\n-Please set the JAVA_HOME variable in your environment to match the\n-location of your Java installation.\"\n-    fi\n-else\n-    JAVACMD=\"java\"\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n-\n-Please set the JAVA_HOME variable in your environment to match the\n-location of your Java installation.\"\n-fi\n-\n-# Increase the maximum file descriptors if we can.\n-if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n-    MAX_FD_LIMIT=`ulimit -H -n`\n-    if [ $? -eq 0 ] ; then\n-        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n-            MAX_FD=\"$MAX_FD_LIMIT\"\n-        fi\n-        ulimit -n $MAX_FD\n-        if [ $? -ne 0 ] ; then\n-            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n-        fi\n-    else\n-        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n-    fi\n-fi\n-\n-# For Darwin, add options to specify how the application appears in the dock\n-if $darwin; then\n-    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n-fi\n-\n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin ; then\n-    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n-    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n-    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n-\n-    # We build the pattern for arguments to be converted via cygpath\n-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n-    SEP=\"\"\n-    for dir in $ROOTDIRSRAW ; do\n-        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n-        SEP=\"|\"\n-    done\n-    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n-    # Add a user-defined pattern to the cygpath arguments\n-    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n-        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n-    fi\n-    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n-    i=0\n-    for arg in \"$@\" ; do\n-        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n-        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n-\n-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n-            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n-        else\n-            eval `echo args$i`=\"\\\"$arg\\\"\"\n-        fi\n-        i=$((i+1))\n-    done\n-    case $i in\n-        (0) set -- ;;\n-        (1) set -- \"$args0\" ;;\n-        (2) set -- \"$args0\" \"$args1\" ;;\n-        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n-        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n-        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n-        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n-        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n-        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n-        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n-    esac\n-fi\n-\n-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n-function splitJvmOpts() {\n-    JVM_OPTS=(\"$@\")\n-}\n-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n-JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n-\n-exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/gradlew.bat",
            "additions": 0,
            "deletions": 90
        },
        "diff content": "@@ -1,90 +0,0 @@\n-@if \"%DEBUG%\" == \"\" @echo off\r\n-@rem ##########################################################################\r\n-@rem\r\n-@rem  Gradle startup script for Windows\r\n-@rem\r\n-@rem ##########################################################################\r\n-\r\n-@rem Set local scope for the variables with windows NT shell\r\n-if \"%OS%\"==\"Windows_NT\" setlocal\r\n-\r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\r\n-\r\n-set DIRNAME=%~dp0\r\n-if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n-set APP_BASE_NAME=%~n0\r\n-set APP_HOME=%DIRNAME%\r\n-\r\n-@rem Find java.exe\r\n-if defined JAVA_HOME goto findJavaFromJavaHome\r\n-\r\n-set JAVA_EXE=java.exe\r\n-%JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:findJavaFromJavaHome\r\n-set JAVA_HOME=%JAVA_HOME:\"=%\r\n-set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n-\r\n-if exist \"%JAVA_EXE%\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:init\r\n-@rem Get command-line arguments, handling Windowz variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-goto execute\r\n-\r\n-:4NT_args\r\n-@rem Get arguments from the 4NT Shell from JP Software\r\n-set CMD_LINE_ARGS=%$\r\n-\r\n-:execute\r\n-@rem Setup the command line\r\n-\r\n-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n-\r\n-@rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n-\r\n-:end\r\n-@rem End local scope for the variables with windows NT shell\r\n-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n-\r\n-:fail\r\n-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n-rem the _cmd.exe /c_ return code!\r\n-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n-exit /b 1\r\n-\r\n-:mainEnd\r\n-if \"%OS%\"==\"Windows_NT\" endlocal\r\n-\r\n-:omega\r\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/settings.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-include ':app', ':spritz-android'\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/.gitignore",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-/build\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/build.gradle",
            "additions": 0,
            "deletions": 41
        },
        "diff content": "@@ -1,41 +0,0 @@\n-buildscript {\n-    repositories {\n-        jcenter()\n-    }\n-\n-    dependencies {\n-        classpath 'com.novoda:bintray-release:0.5.0'\n-    }\n-}\n-\n-apply plugin: 'com.android.library'\n-apply plugin: 'bintray-release'\n-\n-version = '0.0.1'\n-\n-android {\n-    compileSdkVersion 27\n-    buildToolsVersion \"27.0.0\"\n-\n-    defaultConfig {\n-        minSdkVersion 14\n-        targetSdkVersion 27\n-        versionCode 1\n-        versionName project.version\n-    }\n-}\n-\n-dependencies {\n-    compile 'com.airbnb.android:lottie:2.2.5'\n-}\n-\n-publish {\n-    userOrg = 'novoda'\n-    groupId = 'com.novoda'\n-    artifactId = 'spritz'\n-    version = project.version\n-\n-    uploadName = 'spritz'\n-    description = 'Animate your view pager with Lottie and zero efforts.'\n-    website = 'https://github.com/novoda/android-demos/tree/master/spritz'\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-<manifest package=\"com.novoda.spritz\" />\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Animation.java",
            "additions": 0,
            "deletions": 21
        },
        "diff content": "@@ -1,21 +0,0 @@\n-package com.novoda.spritz;\n-\n-import com.airbnb.lottie.LottieAnimationView;\n-\n-class Animation {\n-\n-    private final LottieAnimationView lottieAnimationView;\n-\n-    Animation(LottieAnimationView lottieAnimationView) {\n-        this.lottieAnimationView = lottieAnimationView;\n-    }\n-\n-    float getCurrentProgress() {\n-        return lottieAnimationView.getProgress();\n-    }\n-\n-    void setProgressImmediately(float progress) {\n-        lottieAnimationView.setProgress(progress);\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/AnimationRunner.java",
            "additions": 0,
            "deletions": 48
        },
        "diff content": "@@ -1,48 +0,0 @@\n-package com.novoda.spritz;\n-\n-import android.animation.Animator;\n-import android.animation.AnimatorSet;\n-import android.animation.ValueAnimator;\n-\n-import com.airbnb.lottie.LottieAnimationView;\n-\n-class AnimationRunner {\n-\n-    private final LottieAnimationView lottieAnimationView;\n-\n-    private AnimatorSet animatorSet;\n-\n-    AnimationRunner(LottieAnimationView lottieAnimationView) {\n-        this.lottieAnimationView = lottieAnimationView;\n-        this.animatorSet = new AnimatorSet();\n-    }\n-\n-    void cancelCurrentAnimations() {\n-        animatorSet.cancel();\n-    }\n-\n-    void autoPlay(float from, float to, SpritzStepWithOffset spritzStep) {\n-        ValueAnimator autoPlayAnimation = ValueAnimator\n-                .ofFloat(from, to)\n-                .setDuration(spritzStep.autoPlayDuration());\n-        autoPlayAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n-\n-        playAnimations(autoPlayAnimation);\n-    }\n-\n-    private ValueAnimator.AnimatorUpdateListener defaultAnimatorUpdateListener() {\n-        return new ValueAnimator.AnimatorUpdateListener() {\n-            @Override\n-            public void onAnimationUpdate(ValueAnimator animation) {\n-                lottieAnimationView.setProgress((Float) animation.getAnimatedValue());\n-            }\n-        };\n-    }\n-\n-    private void playAnimations(Animator... animators) {\n-        animatorSet = new AnimatorSet();\n-        animatorSet.playSequentially(animators);\n-        animatorSet.start();\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/ProgressCalculator.java",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,23 +0,0 @@\n-package com.novoda.spritz;\n-\n-import java.util.List;\n-\n-class ProgressCalculator {\n-\n-    private final List<SpritzStepWithOffset> spritzSteps;\n-    private final long totalAnimationDuration;\n-\n-    ProgressCalculator(List<SpritzStepWithOffset> spritzSteps, long totalAnimationDuration) {\n-        this.spritzSteps = spritzSteps;\n-        this.totalAnimationDuration = totalAnimationDuration;\n-    }\n-\n-    float getSwipeEndProgressForPosition(int position) {\n-        return ((float) spritzSteps.get(position).swipeEnd()) / totalAnimationDuration;\n-    }\n-\n-    float getAutoPlayEndProgressForPosition(int position) {\n-        return ((float) spritzSteps.get(position).autoPlayEnd()) / totalAnimationDuration;\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 0,
            "deletions": 96
        },
        "diff content": "@@ -1,96 +0,0 @@\n-package com.novoda.spritz;\n-\n-import android.support.v4.view.ViewPager;\n-\n-import com.airbnb.lottie.LottieAnimationView;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-public class Spritz {\n-\n-    private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n-    private final ProgressCalculator progressCalculator;\n-    private final Animation animation;\n-    private final AnimationRunner animationRunner;\n-    private final SpritzPager spritzPager;\n-\n-    private SpritzOnPageChangeListener spritzOnPageChangeListener;\n-\n-    public static Builder with(LottieAnimationView lottieAnimationView) {\n-        return new Builder(lottieAnimationView);\n-    }\n-\n-    private Spritz(List<SpritzStepWithOffset> spritzStepsWithOffset,\n-                   ProgressCalculator progressCalculator,\n-                   Animation animation,\n-                   AnimationRunner animationRunner,\n-                   SpritzPager spritzPager) {\n-\n-        this.spritzStepsWithOffset = spritzStepsWithOffset;\n-        this.progressCalculator = progressCalculator;\n-        this.animation = animation;\n-        this.animationRunner = animationRunner;\n-        this.spritzPager = spritzPager;\n-    }\n-\n-    public void attachTo(ViewPager viewPager) {\n-        spritzPager.setViewPager(viewPager);\n-\n-        this.spritzOnPageChangeListener = new SpritzOnPageChangeListener(\n-                spritzStepsWithOffset,\n-                progressCalculator,\n-                animation,\n-                animationRunner,\n-                spritzPager\n-        );\n-\n-        viewPager.addOnPageChangeListener(spritzOnPageChangeListener);\n-    }\n-\n-    public void startPendingAnimations() {\n-        spritzOnPageChangeListener.onPageScrollStateChanged(ViewPager.SCROLL_STATE_IDLE);\n-    }\n-\n-    public void detachFrom(ViewPager viewPager) {\n-        viewPager.removeOnPageChangeListener(spritzOnPageChangeListener);\n-    }\n-\n-    @SuppressWarnings(\"WeakerAccess\")\n-    public static class Builder {\n-\n-        private final LottieAnimationView lottieAnimationView;\n-        private List<SpritzStepWithOffset> spritzStepsWithOffset;\n-\n-        private Builder(LottieAnimationView lottieAnimationView) {\n-            this.lottieAnimationView = lottieAnimationView;\n-            spritzStepsWithOffset = new ArrayList<>();\n-        }\n-\n-        public Builder withSteps(SpritzStep... spritzSteps) {\n-            this.spritzStepsWithOffset = SpritzStepWithOffset.fromSpritzSteps(spritzSteps);\n-            return this;\n-        }\n-\n-        public Spritz build() {\n-            return new Spritz(\n-                    spritzStepsWithOffset,\n-                    new ProgressCalculator(spritzStepsWithOffset, calculateTotalAnimationDuration()),\n-                    new Animation(lottieAnimationView),\n-                    new AnimationRunner(lottieAnimationView),\n-                    new SpritzPager()\n-            );\n-        }\n-\n-        private long calculateTotalAnimationDuration() {\n-            if (spritzStepsWithOffset.isEmpty()) {\n-                return 0;\n-            }\n-\n-            int lastIndex = spritzStepsWithOffset.size() - 1;\n-            return spritzStepsWithOffset.get(lastIndex).swipeEnd();\n-        }\n-\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 0,
            "deletions": 104
        },
        "diff content": "@@ -1,104 +0,0 @@\n-package com.novoda.spritz;\n-\n-import android.support.v4.view.ViewPager;\n-import android.util.Log;\n-\n-import java.util.List;\n-import java.util.Locale;\n-\n-class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n-\n-    private final static String TAG = \"Spritz\";\n-\n-    private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n-    private final ProgressCalculator progressCalculator;\n-    private final Animation animation;\n-    private final AnimationRunner animationRunner;\n-    private final SpritzPager spritzPager;\n-\n-    SpritzOnPageChangeListener(List<SpritzStepWithOffset> spritzStepsWithOffset,\n-                               ProgressCalculator progressCalculator,\n-                               Animation animation,\n-                               AnimationRunner animationRunner,\n-                               SpritzPager spritzPager) {\n-\n-        this.spritzStepsWithOffset = spritzStepsWithOffset;\n-        this.progressCalculator = progressCalculator;\n-        this.animation = animation;\n-        this.animationRunner = animationRunner;\n-        this.spritzPager = spritzPager;\n-    }\n-\n-    @Override\n-    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n-        float newPosition = position + positionOffset;\n-\n-        if (newPosition == spritzPager.getCurrentPosition() || newPosition == spritzPager.getCachedPosition()) {\n-            return;\n-        }\n-\n-        animationRunner.cancelCurrentAnimations();\n-\n-        float finalProgress;\n-        float realOffset;\n-\n-        if (swipingForward(newPosition)) {\n-            finalProgress = progressCalculator.getSwipeEndProgressForPosition(position);\n-            realOffset = positionOffset;\n-            log(String.format(Locale.ENGLISH, \"Swiping > %d+%f\", position, positionOffset));\n-        } else {\n-            finalProgress = progressCalculator.getAutoPlayEndProgressForPosition(position);\n-            realOffset = 1 - positionOffset;\n-            log(String.format(Locale.ENGLISH, \"Swiping < %d+%f\", position, positionOffset));\n-        }\n-\n-        float currentProgress = animation.getCurrentProgress();\n-        float progressToAnimate = finalProgress - currentProgress;\n-        float newProgress = currentProgress + (progressToAnimate * realOffset);\n-\n-        animation.setProgressImmediately(newProgress);\n-\n-        spritzPager.setCachedPosition(newPosition);\n-    }\n-\n-    @Override\n-    public void onPageSelected(final int position) {\n-        // do nothing\n-    }\n-\n-    private boolean swipingForward(float newPosition) {\n-        return newPosition > spritzPager.getCachedPosition();\n-    }\n-\n-    @Override\n-    public void onPageScrollStateChanged(int state) {\n-        int position = spritzPager.getCurrentPosition();\n-        float currentProgress = animation.getCurrentProgress();\n-        if (state == ViewPager.SCROLL_STATE_IDLE\n-                && currentProgress < progressCalculator.getAutoPlayEndProgressForPosition(position)) {\n-            onPageIdle(position);\n-        }\n-    }\n-\n-    private void onPageIdle(int position) {\n-        log(String.format(Locale.ENGLISH, \"Page idle, autoplaying for position %d\", position));\n-        autoPlay(position);\n-        spritzPager.setCachedPosition(position);\n-    }\n-\n-    private void log(String message) {\n-        if (Log.isLoggable(TAG, Log.DEBUG)) {\n-            Log.d(TAG, message);\n-        }\n-    }\n-\n-    private void autoPlay(int position) {\n-        float currentProgress = animation.getCurrentProgress();\n-        float autoPlayEndProgress = progressCalculator.getAutoPlayEndProgressForPosition(position);\n-        SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n-\n-        animationRunner.cancelCurrentAnimations();\n-        animationRunner.autoPlay(currentProgress, autoPlayEndProgress, currentStep);\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzPager.java",
            "additions": 0,
            "deletions": 26
        },
        "diff content": "@@ -1,26 +0,0 @@\n-package com.novoda.spritz;\n-\n-import android.support.v4.view.ViewPager;\n-\n-class SpritzPager {\n-\n-    private ViewPager viewPager;\n-    private float cachedPosition;\n-\n-    void setViewPager(ViewPager viewPager) {\n-        this.viewPager = viewPager;\n-    }\n-\n-    int getCurrentPosition() {\n-        return viewPager.getCurrentItem();\n-    }\n-\n-    float getCachedPosition() {\n-        return cachedPosition;\n-    }\n-\n-    void setCachedPosition(float cachedPosition) {\n-        this.cachedPosition = cachedPosition;\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzStep.java",
            "additions": 0,
            "deletions": 49
        },
        "diff content": "@@ -1,49 +0,0 @@\n-package com.novoda.spritz;\n-\n-import java.util.concurrent.TimeUnit;\n-\n-public class SpritzStep {\n-\n-    private final long autoPlayDuration;\n-    private final long swipeDuration;\n-\n-    private SpritzStep(long autoPlayDuration,\n-                       long swipeDuration) {\n-\n-        this.autoPlayDuration = autoPlayDuration;\n-        this.swipeDuration = swipeDuration;\n-    }\n-\n-    long autoPlayDuration() {\n-        return autoPlayDuration;\n-    }\n-\n-    long swipeDuration() {\n-        return swipeDuration;\n-    }\n-\n-    public static class Builder {\n-\n-        private long autoPlayDuration = 0;\n-        private long swipeDuration = 0;\n-\n-        public Builder withAutoPlayDuration(long autoPlayDuration, TimeUnit timeUnit) {\n-            this.autoPlayDuration = timeUnit.toMillis(autoPlayDuration);\n-            return this;\n-        }\n-\n-        public Builder withSwipeDuration(long swipeDuration, TimeUnit timeUnit) {\n-            this.swipeDuration = timeUnit.toMillis(swipeDuration);\n-            return this;\n-        }\n-\n-        public SpritzStep build() {\n-            return new SpritzStep(\n-                    autoPlayDuration,\n-                    swipeDuration\n-            );\n-        }\n-\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "45352e3035711c4aeca3ead582b37341cdd5018c",
        "previous commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzStepWithOffset.java",
            "additions": 0,
            "deletions": 54
        },
        "diff content": "@@ -1,54 +0,0 @@\n-package com.novoda.spritz;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-class SpritzStepWithOffset {\n-\n-    private final long autoPlayDuration;\n-    private final long autoPlayEnd;\n-    private final long swipeEnd;\n-\n-    private SpritzStepWithOffset(long autoPlayDuration,\n-                                 long autoPlayEnd,\n-                                 long swipeEnd) {\n-\n-        this.autoPlayDuration = autoPlayDuration;\n-        this.autoPlayEnd = autoPlayEnd;\n-        this.swipeEnd = swipeEnd;\n-    }\n-\n-    long autoPlayDuration() {\n-        return autoPlayDuration;\n-    }\n-\n-    long autoPlayEnd() {\n-        return autoPlayEnd;\n-    }\n-\n-    long swipeEnd() {\n-        return swipeEnd;\n-    }\n-\n-    static List<SpritzStepWithOffset> fromSpritzSteps(SpritzStep... spritzSteps) {\n-        List<SpritzStepWithOffset> spritzStepWithOffsetList = new ArrayList<>(spritzSteps.length);\n-        long totalAnimationTime = 0;\n-\n-        for (SpritzStep spritzStep : spritzSteps) {\n-            long autoPlayEnd = totalAnimationTime + spritzStep.autoPlayDuration();\n-            long swipeEnd = totalAnimationTime + spritzStep.autoPlayDuration() + spritzStep.swipeDuration();\n-\n-            spritzStepWithOffsetList.add(\n-                    new SpritzStepWithOffset(\n-                            spritzStep.autoPlayDuration(),\n-                            autoPlayEnd,\n-                            swipeEnd\n-                    )\n-            );\n-\n-            totalAnimationTime = swipeEnd;\n-        }\n-\n-        return spritzStepWithOffsetList;\n-    }\n-}\n"
    },
    {
        "commit hash": "bb65a907863425a02a321e8e0bea22df9a94d269",
        "previous commit hash": "81ed1ed76953ccf269782bdf3e3f2740ea1bc21c",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -7,6 +7,8 @@\n Spritz is an Android library to seamlessly trigger a Lottie animation when the user drags a `ViewPager` or changes page programmatically.\n It supports animating while swiping and auto-playing when the swipe is complete.\n \n+You can read more about Spritz in our [introductory blog post](https://www.novoda.com/blog/onboard-your-users-with-lottie-of-spritz/).\n+\n Get the demo here:\n \n <a href=\"https://play.google.com/store/apps/details?id=com.novoda.spritz.sample\" style=\"border-bottom: 0px solid;\">\n"
    },
    {
        "commit hash": "84f1c59087ba8091026284d3bf59f4d73ba97c37",
        "previous commit hash": "e5b97f9fab2f9c2bc60edac1b77d0022d3fbe67b",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/main.xml",
            "additions": 8,
            "deletions": 4
        },
        "diff content": "@@ -43,6 +43,7 @@\n   </LinearLayout>\n \n   <TextView\n+    style=\"@style/LoveText\"\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n     android:layout_alignParentBottom=\"true\"\n@@ -52,14 +53,17 @@\n \n   <Button\n     android:id=\"@+id/btn_blog\"\n-    style=\"?android:attr/buttonBarButtonStyle\"\n+    style=\"@style/Widget.AppCompat.Button.Borderless\"\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n-    android:layout_alignParentBottom=\"true\"\n     android:layout_alignParentRight=\"true\"\n-    android:layout_marginBottom=\"12dp\"\n+    android:layout_alignParentEnd=\"true\"\n+    android:layout_alignParentBottom=\"true\"\n     android:layout_marginRight=\"12dp\"\n+    android:layout_marginEnd=\"12dp\"\n+    android:layout_marginBottom=\"12dp\"\n     android:padding=\"20dp\"\n-    android:text=\"@string/go_to_article\" />\n+    android:text=\"@string/go_to_article\"\n+    android:textColor=\"@color/colorAccent\" />\n \n </RelativeLayout>\n"
    },
    {
        "commit hash": "e5b97f9fab2f9c2bc60edac1b77d0022d3fbe67b",
        "previous commit hash": "2dc04e10a4a82a54c3b974d33ae7674844cabd0e",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -1,5 +1,7 @@\n package com.novoda.spritz.sample;\n \n+import android.content.Intent;\n+import android.net.Uri;\n import android.os.Bundle;\n import android.support.annotation.Nullable;\n import android.support.v4.app.Fragment;\n@@ -73,6 +75,16 @@ public class MainActivity extends AppCompatActivity {\n                 }\n             }\n         });\n+\n+        Button linkButton = findViewById(R.id.btn_blog);\n+        linkButton.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                Intent intent = new Intent(Intent.ACTION_VIEW);\n+                intent.setData(Uri.parse(\"https://www.novoda.com/blog/onboard-your-users-with-lottie-of-spritz/\"));\n+                startActivity(intent);\n+            }\n+        });\n     }\n \n     @Override\n"
    },
    {
        "commit hash": "e5b97f9fab2f9c2bc60edac1b77d0022d3fbe67b",
        "previous commit hash": "2dc04e10a4a82a54c3b974d33ae7674844cabd0e",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/main.xml",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -42,4 +42,24 @@\n \n   </LinearLayout>\n \n+  <TextView\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"\n+    android:layout_alignParentBottom=\"true\"\n+    android:layout_marginBottom=\"16dp\"\n+    android:padding=\"16dp\"\n+    android:text=\"@string/love_text\" />\n+\n+  <Button\n+    android:id=\"@+id/btn_blog\"\n+    style=\"?android:attr/buttonBarButtonStyle\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"\n+    android:layout_alignParentBottom=\"true\"\n+    android:layout_alignParentRight=\"true\"\n+    android:layout_marginBottom=\"12dp\"\n+    android:layout_marginRight=\"12dp\"\n+    android:padding=\"20dp\"\n+    android:text=\"@string/go_to_article\" />\n+\n </RelativeLayout>\n"
    },
    {
        "commit hash": "e5b97f9fab2f9c2bc60edac1b77d0022d3fbe67b",
        "previous commit hash": "2dc04e10a4a82a54c3b974d33ae7674844cabd0e",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/colors.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -4,4 +4,5 @@\n     <color name=\"colorPrimaryDark\">#000</color>\n     <color name=\"colorAccent\">#FF7500</color>\n     <color name=\"windowBg\">#f5f5f5</color>\n+    <color name=\"loveText\">#4A3939</color>\n </resources>\n"
    },
    {
        "commit hash": "e5b97f9fab2f9c2bc60edac1b77d0022d3fbe67b",
        "previous commit hash": "2dc04e10a4a82a54c3b974d33ae7674844cabd0e",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/strings.xml",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -3,4 +3,6 @@\n   <string name=\"previous\">Previous</string>\n   <string name=\"next\">Next</string>\n   <string name=\"debug\">Debug</string>\n+  <string name=\"love_text\">Made by Novoda with \u2764</string>\n+  <string name=\"go_to_article\">Go to article</string>\n </resources>\n"
    },
    {
        "commit hash": "e5b97f9fab2f9c2bc60edac1b77d0022d3fbe67b",
        "previous commit hash": "2dc04e10a4a82a54c3b974d33ae7674844cabd0e",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/styles.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -16,4 +16,9 @@\n \n     <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\" />\n \n+    <style name=\"LoveText\">\n+        <item name=\"android:textColor\">@color/loveText</item>\n+        <item name=\"android:gravity\">center</item>\n+        <item name=\"android:textSize\">16sp</item>\n+    </style>\n </resources>\n"
    },
    {
        "commit hash": "506feec0cf6325854ba82d598af442c482055cbd",
        "previous commit hash": "28491f07482c538884cefad0f5e07eda217dea99",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/debug.xml",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -4,8 +4,7 @@\n   android:layout_width=\"match_parent\"\n   android:layout_height=\"match_parent\"\n   xmlns:tools=\"http://schemas.android.com/tools\"\n-  android:background=\"@android:color/black\"\n-  android:orientation=\"vertical\">\n+  android:background=\"@android:color/black\">\n \n   <com.airbnb.lottie.LottieAnimationView\n     android:id=\"@+id/animation_view\"\n"
    },
    {
        "commit hash": "506feec0cf6325854ba82d598af442c482055cbd",
        "previous commit hash": "28491f07482c538884cefad0f5e07eda217dea99",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/main.xml",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -3,8 +3,7 @@\n   xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n   android:layout_width=\"match_parent\"\n   android:layout_height=\"match_parent\"\n-  android:background=\"#fff2e7\"\n-  android:orientation=\"vertical\">\n+  android:background=\"#fff2e7\">\n \n   <com.airbnb.lottie.LottieAnimationView\n     android:id=\"@+id/animation_view\"\n"
    },
    {
        "commit hash": "28491f07482c538884cefad0f5e07eda217dea99",
        "previous commit hash": "aa3250ddfd63f9367047de26f546f3e951f165f7",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 1,
            "deletions": 3
        },
        "diff content": "@@ -1,6 +1,4 @@\n-<img src=\"images/spritz-header.png\" height=\"100px\" />\n-\n-_Animate your view pager with Lottie and zero efforts._\n+<img src=\"images/spritz-header.png\" />\n \n <img src=\"images/banner.png\" />\n \n"
    },
    {
        "commit hash": "aa3250ddfd63f9367047de26f546f3e951f165f7",
        "previous commit hash": "c2081c4692d93e24ad7e4f5cbe660744ad09ace3",
        "diff stats": {
            "file_path": "spritz/images/spritz-header.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/images/spritz-header.png and b/spritz/images/spritz-header.png differ\n"
    },
    {
        "commit hash": "c2081c4692d93e24ad7e4f5cbe660744ad09ace3",
        "previous commit hash": "d70d8abc5a67e5c2a61694e57691b9d5cf057fb8",
        "diff stats": {
            "file_path": "spritz/images/banner.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/images/banner.png and b/spritz/images/banner.png differ\n"
    },
    {
        "commit hash": "c2081c4692d93e24ad7e4f5cbe660744ad09ace3",
        "previous commit hash": "d70d8abc5a67e5c2a61694e57691b9d5cf057fb8",
        "diff stats": {
            "file_path": "spritz/images/spritz-header.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/images/spritz-header.png and b/spritz/images/spritz-header.png differ\n"
    },
    {
        "commit hash": "d70d8abc5a67e5c2a61694e57691b9d5cf057fb8",
        "previous commit hash": "5b82ec7ec1e697f072d9cf83e8d0b9111f812a9e",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-<img src=\"images/spritz-header.png\" height=\"50px\" />\n+<img src=\"images/spritz-header.png\" height=\"100px\" />\n \n _Animate your view pager with Lottie and zero efforts._\n \n"
    },
    {
        "commit hash": "5b82ec7ec1e697f072d9cf83e8d0b9111f812a9e",
        "previous commit hash": "b7464ac15c32ad79eff8e6a5305bf2859d99e85a",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 6,
            "deletions": 6
        },
        "diff content": "@@ -1,8 +1,8 @@\n-# ![Spritz!](images/spritz-icon-rect.png) spritz\n+<img src=\"images/spritz-header.png\" height=\"50px\" />\n \n _Animate your view pager with Lottie and zero efforts._\n \n-![](images/feature.png)\n+<img src=\"images/banner.png\" />\n \n --------\n \n@@ -33,7 +33,7 @@ previous page's autoplay animation, so it doesn't play again since that page is\n \n ### Lottie Animation\n \n-To learn how to create a Lottie-compatible animation from After Effects, please read \n+To learn how to create a Lottie-compatible animation from After Effects, please read\n [our blog post \"Whole Lottie Love\"](https://www.novoda.com/blog/whole-lottie-love/), which contains basic instructions on how to export an animation\n into a Lottie-supported format.\n \n@@ -67,7 +67,7 @@ Spritz spritz = Spritz\n                     .build();\n ```\n \n-Once you have your `Spritz` instance, you need to simply attach it to the `ViewPager`, and start any pending animation. If you're working in an \n+Once you have your `Spritz` instance, you need to simply attach it to the `ViewPager`, and start any pending animation. If you're working in an\n `Activity`, you would normally do it in `onStart`:\n \n ```java\n@@ -99,10 +99,10 @@ protected void onStop() {\n #### Autoplay animation\n \n The autoplay animation is an optional animation that is launched automatically as soon as the `ViewPager` successfully transition to a new page.\n-You simply need to set (using `withAutoPlayDuration` on the page builder) how long the autoplay animation lasts in your After Effects project, \n+You simply need to set (using `withAutoPlayDuration` on the page builder) how long the autoplay animation lasts in your After Effects project,\n `Spritz` will take care of the rest.\n \n-Please note that the autoplay animation is always played after the user swipes forward, it is not played when the user swipes back, since the \n+Please note that the autoplay animation is always played after the user swipes forward, it is not played when the user swipes back, since the\n \"swipe back\" action sets the Lottie progress to the end of the previous autoplay animation.\n \n #### Swipe animation\n"
    },
    {
        "commit hash": "5b82ec7ec1e697f072d9cf83e8d0b9111f812a9e",
        "previous commit hash": "b7464ac15c32ad79eff8e6a5305bf2859d99e85a",
        "diff stats": {
            "file_path": "spritz/images/banner.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/images/banner.png differ\n"
    },
    {
        "commit hash": "5b82ec7ec1e697f072d9cf83e8d0b9111f812a9e",
        "previous commit hash": "b7464ac15c32ad79eff8e6a5305bf2859d99e85a",
        "diff stats": {
            "file_path": "spritz/images/feature.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/images/feature.png and /dev/null differ\n"
    },
    {
        "commit hash": "5b82ec7ec1e697f072d9cf83e8d0b9111f812a9e",
        "previous commit hash": "b7464ac15c32ad79eff8e6a5305bf2859d99e85a",
        "diff stats": {
            "file_path": "spritz/images/spritz-header.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/images/spritz-header.png differ\n"
    },
    {
        "commit hash": "5b82ec7ec1e697f072d9cf83e8d0b9111f812a9e",
        "previous commit hash": "b7464ac15c32ad79eff8e6a5305bf2859d99e85a",
        "diff stats": {
            "file_path": "spritz/images/spritz-icon-rect.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/images/spritz-icon-rect.png and /dev/null differ\n"
    },
    {
        "commit hash": "b7464ac15c32ad79eff8e6a5305bf2859d99e85a",
        "previous commit hash": "ca9a0c6c6cc5b7526e4dce49236c5a2cc2be1476",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -2,11 +2,21 @@\n \n _Animate your view pager with Lottie and zero efforts._\n \n+![](images/feature.png)\n+\n --------\n \n Spritz is an Android library to seamlessly trigger a Lottie animation when the user drags a `ViewPager` or changes page programmatically.\n It supports animating while swiping and auto-playing when the swipe is complete.\n \n+Get the demo here:\n+\n+<a href=\"https://play.google.com/store/apps/details?id=com.novoda.spritz.sample\" style=\"border-bottom: 0px solid;\">\n+    <img height=\"80px\" alt=\"Get it on Google Play\" src=\"https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png\" />\n+</a>\n+\n+Here's how our demo looks like:\n+\n ![A taste of spritz](images/a-taste-of-spritz.gif)\n \n ## How to use\n"
    },
    {
        "commit hash": "b7464ac15c32ad79eff8e6a5305bf2859d99e85a",
        "previous commit hash": "ca9a0c6c6cc5b7526e4dce49236c5a2cc2be1476",
        "diff stats": {
            "file_path": "spritz/images/a-taste-of-spritz.gif",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/images/a-taste-of-spritz.gif and b/spritz/images/a-taste-of-spritz.gif differ\n"
    },
    {
        "commit hash": "b7464ac15c32ad79eff8e6a5305bf2859d99e85a",
        "previous commit hash": "ca9a0c6c6cc5b7526e4dce49236c5a2cc2be1476",
        "diff stats": {
            "file_path": "spritz/images/feature.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/images/feature.png differ\n"
    },
    {
        "commit hash": "ca9a0c6c6cc5b7526e4dce49236c5a2cc2be1476",
        "previous commit hash": "565b4e0e1aab813c0d0b090accdb02a3e9ac6506",
        "diff stats": {
            "file_path": "spritz/.gitignore",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -19,6 +19,10 @@ build/\n # Local configuration file (sdk path, etc)\n local.properties\n \n+# Release signing files\n+*.keystore\n+signing.properties\n+\n # Log Files\n *.log\n \n"
    },
    {
        "commit hash": "565b4e0e1aab813c0d0b090accdb02a3e9ac6506",
        "previous commit hash": "cf0364fe771f91d395ae961128caf1ee11d11a1b",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/spritz-pager.json",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+{\"v\":\"5.0.0\",\"fr\":60,\"ip\":0,\"op\":240,\"w\":280,\"h\":280,\"nm\":\"Main\",\"ddd\":0,\"assets\":[{\"id\":\"comp_0\",\"layers\":[{\"ddd\":0,\"ind\":3,\"ty\":0,\"nm\":\"Glass\",\"refId\":\"comp_1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.38],\"y\":[1]},\"o\":{\"x\":[0.02],\"y\":[0.167]},\"n\":[\"0p38_1_0p02_0p167\"],\"t\":60,\"s\":[414],\"e\":[140]},{\"t\":90}],\"ix\":3},\"y\":{\"a\":0,\"k\":146,\"ix\":4}},\"a\":{\"a\":0,\"k\":[140,140,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p167_0\",\"0p833_1_0p167_0\",\"0p833_1_0p167_0\"],\"t\":0,\"s\":[150,150,100],\"e\":[150,150,100]},{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":180,\"s\":[150,150,100],\"e\":[177,177,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"w\":280,\"h\":280,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Drop Shadow\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":197.334,\"s\":[0],\"e\":[100]},{\"t\":240}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":182.321,\"ix\":3},\"y\":{\"a\":0,\"k\":89.434,\"ix\":4}},\"a\":{\"a\":0,\"k\":[27,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.014,0.014,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,-0.052]},\"n\":[\"0p014_1_0p167_0\",\"0p014_1_0p167_0\",\"0p667_1_0p167_-0p052\"],\"t\":197.334,\"s\":[319,319,100],\"e\":[319,319,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[94.14,87.49],[0,190.19],[228.15,419.15],[311.77,415.83],[352.31,477],[363.42,413.78],[383,413],[367.76,389.07],[404.973,255.231],[177.463,26.921],[82,69.17]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,1,0,0,0.5,1,0,0,1,1,0,0,0,0.15,0.5,0.075,1,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[97.88,67.782],\"ix\":5},\"e\":{\"a\":0,\"k\":[241.319,232.083],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[16.509,16.509],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":15,\"ix\":10},\"r\":2,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,1,0,0,0.5,1,0,0,1,1,0,0,0,0.15,0.5,0.075,1,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":5},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 2\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":0,\"nm\":\"CirclesFixed\",\"refId\":\"comp_2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[240,240,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[140,140,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.37,0.37,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p37_1_0p333_0\",\"0p37_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":189,\"s\":[200,200,100],\"e\":[208,208,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"w\":280,\"h\":280,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":1,\"nm\":\"Background\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[140,140,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[90,90,100],\"ix\":6}},\"ao\":0,\"sw\":280,\"sh\":280,\"sc\":\"#ffe2d4\",\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]},{\"id\":\"comp_1\",\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Glass\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140.059,141.453,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[35.377,33.314,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[101,101,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[69.53,0],[0,63.01],[-22.92,35.94],[0,0],[0,-35.28]],\"o\":[[-69.53,0],[0,-35.28],[0,0],[22.92,35.94],[0,63.01]],\"v\":[[120,226],[0,117.25],[37.97,0],[202.03,0],[240,117.25]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[1,1,1,0.20000000298],\"ix\":3},\"o\":{\"a\":0,\"k\":20,\"ix\":4},\"w\":{\"a\":0,\"k\":4.5,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,0.152456998825],\"ix\":4},\"o\":{\"a\":0,\"k\":15.246,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[29.481,29.481],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Ice cube 7\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":34,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":160,\"s\":[-61],\"e\":[15]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":163.463,\"s\":[15],\"e\":[40]},{\"t\":180}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":144.974,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.938]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p938_0p167_0p167\"],\"t\":160,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.038],\"y\":[0.153]},\"n\":[\"0_1_0p038_0p153\"],\"t\":163.463,\"s\":[108.88],\"e\":[150.13]},{\"t\":180}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Ice cube 6\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":55,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":156,\"s\":[-83],\"e\":[-7]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":159.461,\"s\":[-7],\"e\":[27]},{\"t\":176.76953125}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":159.974,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.942]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p942_0p167_0p167\"],\"t\":156,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.035],\"y\":[0.135]},\"n\":[\"0_1_0p035_0p135\"],\"t\":159.461,\"s\":[108.88],\"e\":[151.38]},{\"t\":176.76953125}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Ice cube 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":16,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":153,\"s\":[-83],\"e\":[-7]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":156.463,\"s\":[-7],\"e\":[-20]},{\"t\":173.76953125}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":146.224,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.918]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p918_0p167_0p167\"],\"t\":153,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.035],\"y\":[0.122]},\"n\":[\"0_1_0p035_0p122\"],\"t\":156.463,\"s\":[108.88],\"e\":[163.88]},{\"t\":173.76953125}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"Ice cube 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":32,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":156,\"s\":[-98],\"e\":[-7]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":159.463,\"s\":[-7],\"e\":[-32]},{\"t\":176.76953125}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":120.599,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.922]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p922_0p167_0p167\"],\"t\":156,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.035],\"y\":[0.166]},\"n\":[\"0_1_0p035_0p166\"],\"t\":159.463,\"s\":[108.88],\"e\":[149.88]},{\"t\":176.76953125}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Ice cube\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":59,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":150,\"s\":[-83],\"e\":[-7]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":153.461,\"s\":[-7],\"e\":[18]},{\"t\":170.76953125}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":129.474,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.827],\"y\":[0.891]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p827_0p891_0p167_0p167\"],\"t\":150,\"s\":[5.463],\"e\":[108.88]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.035],\"y\":[0.174]},\"n\":[\"0_1_0p035_0p174\"],\"t\":153.461,\"s\":[108.88],\"e\":[161.88]},{\"t\":170.76953125}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7.151,19.974,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[14.698,14.698],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":2,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7.151,19.974],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Straw\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.936],\"y\":[0.819]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p936_0p819_0p167_0p167\"],\"t\":90,\"s\":[174],\"e\":[188]},{\"i\":{\"x\":[0.454],\"y\":[1.002]},\"o\":{\"x\":[0.017],\"y\":[0.112]},\"n\":[\"0p454_1p002_0p017_0p112\"],\"t\":105,\"s\":[188],\"e\":[210]},{\"t\":150}],\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":148.25,\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":90,\"s\":[7.25],\"e\":[91]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":105,\"s\":[91],\"e\":[125.25]},{\"t\":150}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[4.187,86.948],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.274509803922,0.141176470588,0.141176470588,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-0.407,-5.776],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":8},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Bubbles\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":96.428,\"s\":[0],\"e\":[20]},{\"t\":150}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":1},\"o\":{\"x\":0,\"y\":0},\"n\":\"0p833_1_0_0\",\"t\":0,\"s\":[109.899,126.625,0],\"e\":[119.899,126.625,0],\"to\":[1.66666662693024,0,0],\"ti\":[-1.66666662693024,1.33333337306976,0]},{\"i\":{\"x\":0.833,\"y\":1},\"o\":{\"x\":0,\"y\":0},\"n\":\"0p833_1_0_0\",\"t\":90,\"s\":[119.899,126.625,0],\"e\":[119.899,118.625,0],\"to\":[1.66666662693024,-1.33333337306976,0],\"ti\":[0,1.33333337306976,0]},{\"t\":150}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[400,400,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[24,31],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[24.5,31.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[24.5,31.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval\",\"np\":1,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[15,37],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[15.5,37.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[15.5,37.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 19\",\"np\":1,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[13,35],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[13.5,35.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[13.5,35.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 20\",\"np\":1,\"cix\":2,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 2\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[33,19],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[33.5,19.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[33.5,19.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 13\",\"np\":1,\"cix\":2,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 3\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[23,16],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[23.5,16.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[23.5,16.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 21\",\"np\":1,\"cix\":2,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 4\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[25,19],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[25.5,19.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[25.5,19.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 14\",\"np\":1,\"cix\":2,\"ix\":10,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 5\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[25,42],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[25.5,42.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[25.5,42.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 15\",\"np\":1,\"cix\":2,\"ix\":12,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 6\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[14,22],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[14.5,22.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[14.5,22.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy\",\"np\":1,\"cix\":2,\"ix\":14,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 7\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[29,9],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[29.5,9.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[29.5,9.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 2\",\"np\":1,\"cix\":2,\"ix\":16,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 8\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[8,0],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[8.5,0.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[8.5,0.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 3\",\"np\":1,\"cix\":2,\"ix\":18,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 9\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[9,1],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[9.5,1.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[9.5,1.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 23\",\"np\":1,\"cix\":2,\"ix\":20,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 10\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,10],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0.5,10.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0.5,10.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 4\",\"np\":1,\"cix\":2,\"ix\":22,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 11\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[2,14],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[2.5,14.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[2.5,14.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 22\",\"np\":1,\"cix\":2,\"ix\":24,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 12\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[1,1],\"ix\":2},\"p\":{\"a\":0,\"k\":[16,26],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[16.5,26.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[16.5,26.5],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 5\",\"np\":1,\"cix\":2,\"ix\":26,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 13\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[24,18],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[25,19],\"ix\":2},\"a\":{\"a\":0,\"k\":[25,19],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 6\",\"np\":1,\"cix\":2,\"ix\":28,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 14\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[16,26],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[17,27],\"ix\":2},\"a\":{\"a\":0,\"k\":[17,27],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 7\",\"np\":1,\"cix\":2,\"ix\":30,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 15\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[14,38],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[15,39],\"ix\":2},\"a\":{\"a\":0,\"k\":[15,39],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 18\",\"np\":1,\"cix\":2,\"ix\":32,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 16\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[1,10],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[2,11],\"ix\":2},\"a\":{\"a\":0,\"k\":[2,11],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 8\",\"np\":1,\"cix\":2,\"ix\":34,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 17\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[13,8],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[14,9],\"ix\":2},\"a\":{\"a\":0,\"k\":[14,9],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 16\",\"np\":1,\"cix\":2,\"ix\":36,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 18\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[14,7],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[15,8],\"ix\":2},\"a\":{\"a\":0,\"k\":[15,8],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 17\",\"np\":1,\"cix\":2,\"ix\":38,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 19\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[2,21],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[3,22],\"ix\":2},\"a\":{\"a\":0,\"k\":[3,22],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 9\",\"np\":1,\"cix\":2,\"ix\":40,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 20\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[4,23],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[5,24],\"ix\":2},\"a\":{\"a\":0,\"k\":[5,24],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 10\",\"np\":1,\"cix\":2,\"ix\":42,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 21\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[36,31],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[37,32],\"ix\":2},\"a\":{\"a\":0,\"k\":[37,32],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 11\",\"np\":1,\"cix\":2,\"ix\":44,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 22\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[35,30],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[36,31],\"ix\":2},\"a\":{\"a\":0,\"k\":[36,31],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 24\",\"np\":1,\"cix\":2,\"ix\":46,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 23\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[2,2],\"ix\":2},\"p\":{\"a\":0,\"k\":[33,20],\"ix\":3,\"x\":\"var $bm_rt;\\n$bm_rt = sum(div(thisProperty.propertyGroup(1)(2), 2), value);\"},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[34,21],\"ix\":2},\"a\":{\"a\":0,\"k\":[34,21],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval Copy 12\",\"np\":1,\"cix\":2,\"ix\":48,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":2,\"nm\":\"Merge Paths 24\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[29.481,29.481],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Combined Shape\",\"np\":50,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":3},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Glass\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[104.682,116.859,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[69.53,0],[0,63.04],[-13.41,29.27],[-10.63,-0.29],[0,-25.94]],\"o\":[[-69.53,0],[0,-25.93],[13.26,-0.33],[13.42,29.29],[0,63.04]],\"v\":[[120,196],[0,87.2],[21.54,0.25],[218.45,0.21],[240,87.2]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.937,0.231,0,0.5,0.969,0.396,0.053,1,1,0.561,0.106],\"ix\":9}},\"s\":{\"a\":0,\"k\":[122.304,91.478],\"ix\":5},\"e\":{\"a\":0,\"k\":[123.012,16.642],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[29.481,29.481],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]},{\"id\":\"comp_2\",\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Shape Layer 4\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":180,\"s\":[0],\"e\":[100]},{\"t\":220}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[273.965,274.215],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,1,1,1,0.5,1,1,1,1,1,1,1,0,0.35,0.5,0.175,1,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[-92.934,-90.373],\"ix\":5},\"e\":{\"a\":0,\"k\":[88.309,89.291],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-0.518,-0.107],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Shape Layer 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":32,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[38.062,16.062,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":20,\"s\":[0,0,100],\"e\":[59.74,59.74,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[154.125,154.125],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.525490196078,0.443137254902,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[38.062,16.062],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Shape Layer 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":89,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[38.062,16.062,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":10,\"s\":[0,0,100],\"e\":[93.506,93.506,100]},{\"t\":50}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[154.125,154.125],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.709803921569,0.525490196078,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[38.062,16.062],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Shape Layer 1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":32,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[38.062,16.062,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[131.169,131.169,100]},{\"t\":40}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[154.125,154.125],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.996078012504,0.698038976333,0.192156997381,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[38.062,16.062],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]}],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Bottom Shadow\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":200,\"s\":[0],\"e\":[15]},{\"t\":240}],\"ix\":11},\"r\":{\"a\":0,\"k\":180,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":140,\"ix\":3},\"y\":{\"a\":0,\"k\":191.5,\"ix\":4}},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[113.441,113.441,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-50.694,0],[-1.065,-50.439],[0,0.669],[51.362,0],[0,-51.362],[-0.014,-0.665]],\"o\":[[50.694,0],[0.014,-0.665],[0,-51.362],[-51.362,0],[0,0.669],[1.065,-50.439]],\"v\":[[0,-43.5],[92.975,47.5],[93,45.5],[0,-47.5],[-93,45.5],[-92.975,47.5]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0,0,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Glow\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":200,\"s\":[0],\"e\":[30]},{\"t\":240}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":0,\"k\":140,\"ix\":3},\"y\":{\"a\":0,\"k\":88,\"ix\":4}},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[113.441,113.441,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-50.694,0],[-1.065,-50.439],[0,0.669],[51.362,0],[0,-51.362],[-0.014,-0.665]],\"o\":[[50.694,0],[0.014,-0.665],[0,-51.362],[-51.362,0],[0,0.669],[1.065,-50.439]],\"v\":[[0,-43.5],[92.975,47.5],[93,45.5],[0,-47.5],[-93,45.5],[-92.975,47.5]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Mask\",\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-3.962,6.538,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[101.087,101.087,100]},{\"i\":{\"x\":[0.44,0.44,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p44_1_0p333_0\",\"0p44_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[101.087,101.087,100],\"e\":[101.087,101.087,100]},{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":189,\"s\":[101.087,101.087,100],\"e\":[115.087,115.087,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[184.076,184.076],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-3.962,6.538],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":0,\"nm\":\"Contents\",\"tt\":1,\"refId\":\"comp_0\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[140,140,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"w\":280,\"h\":280,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"SHdow\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":200,\"s\":[0],\"e\":[100]},{\"t\":240}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[140,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-3.962,6.538,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[101.087,101.087,100]},{\"i\":{\"x\":[0.44,0.44,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p44_1_0p333_0\",\"0p44_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[101.087,101.087,100],\"e\":[101.087,101.087,100]},{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":189,\"s\":[101.087,101.087,100],\"e\":[115.087,115.087,100]},{\"i\":{\"x\":[0,0,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p833_1_0p333_0\"],\"t\":200,\"s\":[115.087,115.087,100],\"e\":[101.087,101.087,100]},{\"t\":240}],\"ix\":6}},\"ao\":0,\"ef\":[{\"ty\":25,\"nm\":\"Drop Shadow\",\"np\":8,\"mn\":\"ADBE Drop Shadow\",\"ix\":1,\"en\":1,\"ef\":[{\"ty\":2,\"nm\":\"Shadow Color\",\"mn\":\"ADBE Drop Shadow-0001\",\"ix\":1,\"v\":{\"a\":0,\"k\":[0,0,0,1],\"ix\":1}},{\"ty\":0,\"nm\":\"Opacity\",\"mn\":\"ADBE Drop Shadow-0002\",\"ix\":2,\"v\":{\"a\":0,\"k\":40.5,\"ix\":2}},{\"ty\":0,\"nm\":\"Direction\",\"mn\":\"ADBE Drop Shadow-0003\",\"ix\":3,\"v\":{\"a\":0,\"k\":180,\"ix\":3}},{\"ty\":0,\"nm\":\"Distance\",\"mn\":\"ADBE Drop Shadow-0004\",\"ix\":4,\"v\":{\"a\":0,\"k\":8,\"ix\":4}},{\"ty\":0,\"nm\":\"Softness\",\"mn\":\"ADBE Drop Shadow-0005\",\"ix\":5,\"v\":{\"a\":0,\"k\":20,\"ix\":5}},{\"ty\":7,\"nm\":\"Shadow Only\",\"mn\":\"ADBE Drop Shadow-0006\",\"ix\":6,\"v\":{\"a\":0,\"k\":0,\"ix\":6}}]}],\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[184.076,184.076],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-3.962,6.538],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "565b4e0e1aab813c0d0b090accdb02a3e9ac6506",
        "previous commit hash": "cf0364fe771f91d395ae961128caf1ee11d11a1b",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -40,15 +40,15 @@ public class MainActivity extends AppCompatActivity {\n                 .with(lottieAnimationView)\n                 .withSteps(\n                         new SpritzStep.Builder()\n-                                .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n                                 .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n                                 .build(),\n                         new SpritzStep.Builder()\n-                                .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n                                 .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n                                 .build(),\n                         new SpritzStep.Builder()\n-                                .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n                                 .build()\n                 )\n                 .build();\n"
    },
    {
        "commit hash": "565b4e0e1aab813c0d0b090accdb02a3e9ac6506",
        "previous commit hash": "cf0364fe771f91d395ae961128caf1ee11d11a1b",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/main.xml",
            "additions": 6,
            "deletions": 3
        },
        "diff content": "@@ -3,7 +3,7 @@\n   xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n   android:layout_width=\"match_parent\"\n   android:layout_height=\"match_parent\"\n-  android:background=\"@android:color/black\"\n+  android:background=\"#fff2e7\"\n   android:orientation=\"vertical\">\n \n   <com.airbnb.lottie.LottieAnimationView\n@@ -11,8 +11,9 @@\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"wrap_content\"\n     android:layout_centerInParent=\"true\"\n+    app:lottie_scale=\"1.5\"\n     app:lottie_autoPlay=\"false\"\n-    app:lottie_fileName=\"demo-pager.json\" />\n+    app:lottie_fileName=\"spritz-pager.json\" />\n \n   <android.support.v4.view.ViewPager\n     android:id=\"@+id/viewpager\"\n@@ -26,6 +27,7 @@\n \n     <Button\n       android:id=\"@+id/btn_previous\"\n+      style=\"?android:attr/buttonBarButtonStyle\"\n       android:layout_width=\"0dp\"\n       android:layout_height=\"60dp\"\n       android:layout_weight=\"1\"\n@@ -33,11 +35,12 @@\n \n     <Button\n       android:id=\"@+id/btn_continue\"\n+      style=\"?android:attr/buttonBarButtonStyle\"\n       android:layout_width=\"0dp\"\n       android:layout_height=\"60dp\"\n       android:layout_weight=\"1\"\n       android:text=\"@string/next\" />\n \n   </LinearLayout>\n-  \n+\n </RelativeLayout>\n"
    },
    {
        "commit hash": "565b4e0e1aab813c0d0b090accdb02a3e9ac6506",
        "previous commit hash": "cf0364fe771f91d395ae961128caf1ee11d11a1b",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/strings.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,5 +1,5 @@\n <resources>\n-  <string name=\"app_name\">A Taste of Spritz</string>\n+  <string name=\"app_name\">Taste of Spritz</string>\n   <string name=\"previous\">Previous</string>\n   <string name=\"next\">Next</string>\n   <string name=\"debug\">Debug</string>\n"
    },
    {
        "commit hash": "cf0364fe771f91d395ae961128caf1ee11d11a1b",
        "previous commit hash": "be77bc1307869d18d45d6e57dea894d575ca35fe",
        "diff stats": {
            "file_path": "spritz/app/build.gradle",
            "additions": 22,
            "deletions": 4
        },
        "diff content": "@@ -1,19 +1,37 @@\n apply plugin: 'com.android.application'\n \n android {\n-    compileSdkVersion 26\n-    buildToolsVersion \"26.0.1\"\n+    compileSdkVersion 27\n+    buildToolsVersion '27.0.0'\n     defaultConfig {\n         applicationId \"com.novoda.spritz.sample\"\n         minSdkVersion 14\n-        targetSdkVersion 26\n+        targetSdkVersion 27\n         versionCode 1\n-        versionName \"1.0\"\n+        versionName \"1.0.0\"\n     }\n+\n+    def signingProperties = file(\"signing.properties\")\n+    signingConfigs {\n+        if (signingProperties.exists()) {\n+            Properties props = new Properties()\n+            props.load(new FileInputStream(signingProperties))\n+            release {\n+                storeFile file(props.storeFile)\n+                storePassword props.storePassword\n+                keyAlias props.keyAlias\n+                keyPassword props.keyPassword\n+            }\n+        }\n+    }\n+\n     buildTypes {\n         release {\n             minifyEnabled false\n             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n+            if (signingProperties.exists()) {\n+                signingConfig signingConfigs.release\n+            }\n         }\n     }\n }\n"
    },
    {
        "commit hash": "cf0364fe771f91d395ae961128caf1ee11d11a1b",
        "previous commit hash": "be77bc1307869d18d45d6e57dea894d575ca35fe",
        "diff stats": {
            "file_path": "spritz/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:2.3.3'\n+        classpath 'com.android.tools.build:gradle:3.0.0'\n     }\n }\n \n"
    },
    {
        "commit hash": "cf0364fe771f91d395ae961128caf1ee11d11a1b",
        "previous commit hash": "be77bc1307869d18d45d6e57dea894d575ca35fe",
        "diff stats": {
            "file_path": "spritz/spritz-android/build.gradle",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -14,12 +14,12 @@ apply plugin: 'bintray-release'\n version = '0.0.1'\n \n android {\n-    compileSdkVersion 26\n-    buildToolsVersion \"26.0.1\"\n+    compileSdkVersion 27\n+    buildToolsVersion \"27.0.0\"\n \n     defaultConfig {\n         minSdkVersion 14\n-        targetSdkVersion 26\n+        targetSdkVersion 27\n         versionCode 1\n         versionName project.version\n     }\n"
    },
    {
        "commit hash": "ba041d3f0f6cc7b70501ded73a5fd42b484fc726",
        "previous commit hash": "4d09abbdfc796cd87c13676f315cac81fb80f190",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Animation.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,11 +2,11 @@ package com.novoda.spritz;\n \n import com.airbnb.lottie.LottieAnimationView;\n \n-class SpritzAnimation {\n+class Animation {\n \n     private final LottieAnimationView lottieAnimationView;\n \n-    SpritzAnimation(LottieAnimationView lottieAnimationView) {\n+    Animation(LottieAnimationView lottieAnimationView) {\n         this.lottieAnimationView = lottieAnimationView;\n     }\n \n"
    },
    {
        "commit hash": "ba041d3f0f6cc7b70501ded73a5fd42b484fc726",
        "previous commit hash": "4d09abbdfc796cd87c13676f315cac81fb80f190",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/AnimationRunner.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -6,13 +6,13 @@ import android.animation.ValueAnimator;\n \n import com.airbnb.lottie.LottieAnimationView;\n \n-class SpritzAnimator {\n+class AnimationRunner {\n \n     private final LottieAnimationView lottieAnimationView;\n \n     private AnimatorSet animatorSet;\n \n-    SpritzAnimator(LottieAnimationView lottieAnimationView) {\n+    AnimationRunner(LottieAnimationView lottieAnimationView) {\n         this.lottieAnimationView = lottieAnimationView;\n         this.animatorSet = new AnimatorSet();\n     }\n"
    },
    {
        "commit hash": "ba041d3f0f6cc7b70501ded73a5fd42b484fc726",
        "previous commit hash": "4d09abbdfc796cd87c13676f315cac81fb80f190",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/ProgressCalculator.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,12 +2,12 @@ package com.novoda.spritz;\n \n import java.util.List;\n \n-class SpritzCalculator {\n+class ProgressCalculator {\n \n     private final List<SpritzStepWithOffset> spritzSteps;\n     private final long totalAnimationDuration;\n \n-    SpritzCalculator(List<SpritzStepWithOffset> spritzSteps, long totalAnimationDuration) {\n+    ProgressCalculator(List<SpritzStepWithOffset> spritzSteps, long totalAnimationDuration) {\n         this.spritzSteps = spritzSteps;\n         this.totalAnimationDuration = totalAnimationDuration;\n     }\n"
    },
    {
        "commit hash": "ba041d3f0f6cc7b70501ded73a5fd42b484fc726",
        "previous commit hash": "4d09abbdfc796cd87c13676f315cac81fb80f190",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 15,
            "deletions": 15
        },
        "diff content": "@@ -10,9 +10,9 @@ import java.util.List;\n public class Spritz {\n \n     private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n-    private final SpritzCalculator spritzCalculator;\n-    private final SpritzAnimation spritzAnimation;\n-    private final SpritzAnimator spritzAnimator;\n+    private final ProgressCalculator progressCalculator;\n+    private final Animation animation;\n+    private final AnimationRunner animationRunner;\n     private final SpritzPager spritzPager;\n \n     private SpritzOnPageChangeListener spritzOnPageChangeListener;\n@@ -22,15 +22,15 @@ public class Spritz {\n     }\n \n     private Spritz(List<SpritzStepWithOffset> spritzStepsWithOffset,\n-                   SpritzCalculator spritzCalculator,\n-                   SpritzAnimation spritzAnimation,\n-                   SpritzAnimator spritzAnimator,\n+                   ProgressCalculator progressCalculator,\n+                   Animation animation,\n+                   AnimationRunner animationRunner,\n                    SpritzPager spritzPager) {\n \n         this.spritzStepsWithOffset = spritzStepsWithOffset;\n-        this.spritzCalculator = spritzCalculator;\n-        this.spritzAnimation = spritzAnimation;\n-        this.spritzAnimator = spritzAnimator;\n+        this.progressCalculator = progressCalculator;\n+        this.animation = animation;\n+        this.animationRunner = animationRunner;\n         this.spritzPager = spritzPager;\n     }\n \n@@ -39,9 +39,9 @@ public class Spritz {\n \n         this.spritzOnPageChangeListener = new SpritzOnPageChangeListener(\n                 spritzStepsWithOffset,\n-                spritzCalculator,\n-                spritzAnimation,\n-                spritzAnimator,\n+                progressCalculator,\n+                animation,\n+                animationRunner,\n                 spritzPager\n         );\n \n@@ -75,9 +75,9 @@ public class Spritz {\n         public Spritz build() {\n             return new Spritz(\n                     spritzStepsWithOffset,\n-                    new SpritzCalculator(spritzStepsWithOffset, calculateTotalAnimationDuration()),\n-                    new SpritzAnimation(lottieAnimationView),\n-                    new SpritzAnimator(lottieAnimationView),\n+                    new ProgressCalculator(spritzStepsWithOffset, calculateTotalAnimationDuration()),\n+                    new Animation(lottieAnimationView),\n+                    new AnimationRunner(lottieAnimationView),\n                     new SpritzPager()\n             );\n         }\n"
    },
    {
        "commit hash": "ba041d3f0f6cc7b70501ded73a5fd42b484fc726",
        "previous commit hash": "4d09abbdfc796cd87c13676f315cac81fb80f190",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 20,
            "deletions": 20
        },
        "diff content": "@@ -11,21 +11,21 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n     private final static String TAG = \"Spritz\";\n \n     private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n-    private final SpritzCalculator spritzCalculator;\n-    private final SpritzAnimation spritzAnimation;\n-    private final SpritzAnimator spritzAnimator;\n+    private final ProgressCalculator progressCalculator;\n+    private final Animation animation;\n+    private final AnimationRunner animationRunner;\n     private final SpritzPager spritzPager;\n \n     SpritzOnPageChangeListener(List<SpritzStepWithOffset> spritzStepsWithOffset,\n-                               SpritzCalculator spritzCalculator,\n-                               SpritzAnimation spritzAnimation,\n-                               SpritzAnimator spritzAnimator,\n+                               ProgressCalculator progressCalculator,\n+                               Animation animation,\n+                               AnimationRunner animationRunner,\n                                SpritzPager spritzPager) {\n \n         this.spritzStepsWithOffset = spritzStepsWithOffset;\n-        this.spritzCalculator = spritzCalculator;\n-        this.spritzAnimation = spritzAnimation;\n-        this.spritzAnimator = spritzAnimator;\n+        this.progressCalculator = progressCalculator;\n+        this.animation = animation;\n+        this.animationRunner = animationRunner;\n         this.spritzPager = spritzPager;\n     }\n \n@@ -37,26 +37,26 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n             return;\n         }\n \n-        spritzAnimator.cancelCurrentAnimations();\n+        animationRunner.cancelCurrentAnimations();\n \n         float finalProgress;\n         float realOffset;\n \n         if (swipingForward(newPosition)) {\n-            finalProgress = spritzCalculator.getSwipeEndProgressForPosition(position);\n+            finalProgress = progressCalculator.getSwipeEndProgressForPosition(position);\n             realOffset = positionOffset;\n             log(String.format(Locale.ENGLISH, \"Swiping > %d+%f\", position, positionOffset));\n         } else {\n-            finalProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n+            finalProgress = progressCalculator.getAutoPlayEndProgressForPosition(position);\n             realOffset = 1 - positionOffset;\n             log(String.format(Locale.ENGLISH, \"Swiping < %d+%f\", position, positionOffset));\n         }\n \n-        float currentProgress = spritzAnimation.getCurrentProgress();\n+        float currentProgress = animation.getCurrentProgress();\n         float progressToAnimate = finalProgress - currentProgress;\n         float newProgress = currentProgress + (progressToAnimate * realOffset);\n \n-        spritzAnimation.setProgressImmediately(newProgress);\n+        animation.setProgressImmediately(newProgress);\n \n         spritzPager.setCachedPosition(newPosition);\n     }\n@@ -73,9 +73,9 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n     @Override\n     public void onPageScrollStateChanged(int state) {\n         int position = spritzPager.getCurrentPosition();\n-        float currentProgress = spritzAnimation.getCurrentProgress();\n+        float currentProgress = animation.getCurrentProgress();\n         if (state == ViewPager.SCROLL_STATE_IDLE\n-                && currentProgress < spritzCalculator.getAutoPlayEndProgressForPosition(position)) {\n+                && currentProgress < progressCalculator.getAutoPlayEndProgressForPosition(position)) {\n             onPageIdle(position);\n         }\n     }\n@@ -93,12 +93,12 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n     }\n \n     private void autoPlay(int position) {\n-        float currentProgress = spritzAnimation.getCurrentProgress();\n-        float autoPlayEndProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n+        float currentProgress = animation.getCurrentProgress();\n+        float autoPlayEndProgress = progressCalculator.getAutoPlayEndProgressForPosition(position);\n         SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n \n-        spritzAnimator.cancelCurrentAnimations();\n-        spritzAnimator.autoPlay(currentProgress, autoPlayEndProgress, currentStep);\n+        animationRunner.cancelCurrentAnimations();\n+        animationRunner.autoPlay(currentProgress, autoPlayEndProgress, currentStep);\n     }\n \n }\n"
    },
    {
        "commit hash": "4d09abbdfc796cd87c13676f315cac81fb80f190",
        "previous commit hash": "c6122444e8274850fd525f8bdc11e50e1b156b51",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 1,
            "deletions": 3
        },
        "diff content": "@@ -77,9 +77,7 @@ public class Spritz {\n                     spritzStepsWithOffset,\n                     new SpritzCalculator(spritzStepsWithOffset, calculateTotalAnimationDuration()),\n                     new SpritzAnimation(lottieAnimationView),\n-                    new SpritzAnimator(\n-                            lottieAnimationView\n-                    ),\n+                    new SpritzAnimator(lottieAnimationView),\n                     new SpritzPager()\n             );\n         }\n"
    },
    {
        "commit hash": "c6122444e8274850fd525f8bdc11e50e1b156b51",
        "previous commit hash": "20f5d92a128089b7d80c8c432ddf3b29b0bc7b04",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -87,7 +87,7 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n     }\n \n     private void log(String message) {\n-        if (Log.isLoggable(TAG, Log.DEBUG) || BuildConfig.DEBUG) {\n+        if (Log.isLoggable(TAG, Log.DEBUG)) {\n             Log.d(TAG, message);\n         }\n     }\n"
    },
    {
        "commit hash": "20f5d92a128089b7d80c8c432ddf3b29b0bc7b04",
        "previous commit hash": "275baa6b7a7447cf0f2523ab830a39a5f65fa7eb",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ import java.util.Locale;\n \n class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n \n-    private final static String TAG = SpritzOnPageChangeListener.class.getName();\n+    private final static String TAG = \"Spritz\";\n \n     private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n     private final SpritzCalculator spritzCalculator;\n"
    },
    {
        "commit hash": "275baa6b7a7447cf0f2523ab830a39a5f65fa7eb",
        "previous commit hash": "39a238f6d8d85ff90c53b0d1d2830c32fb5634cc",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 7,
            "deletions": 4
        },
        "diff content": "@@ -13,8 +13,8 @@ public class Spritz {\n     private final SpritzCalculator spritzCalculator;\n     private final SpritzAnimation spritzAnimation;\n     private final SpritzAnimator spritzAnimator;\n+    private final SpritzPager spritzPager;\n \n-    private SpritzPager spritzPager;\n     private SpritzOnPageChangeListener spritzOnPageChangeListener;\n \n     public static Builder with(LottieAnimationView lottieAnimationView) {\n@@ -24,16 +24,18 @@ public class Spritz {\n     private Spritz(List<SpritzStepWithOffset> spritzStepsWithOffset,\n                    SpritzCalculator spritzCalculator,\n                    SpritzAnimation spritzAnimation,\n-                   SpritzAnimator spritzAnimator) {\n+                   SpritzAnimator spritzAnimator,\n+                   SpritzPager spritzPager) {\n \n         this.spritzStepsWithOffset = spritzStepsWithOffset;\n         this.spritzCalculator = spritzCalculator;\n         this.spritzAnimation = spritzAnimation;\n         this.spritzAnimator = spritzAnimator;\n+        this.spritzPager = spritzPager;\n     }\n \n     public void attachTo(ViewPager viewPager) {\n-        this.spritzPager = new SpritzPager(viewPager);\n+        spritzPager.setViewPager(viewPager);\n \n         this.spritzOnPageChangeListener = new SpritzOnPageChangeListener(\n                 spritzStepsWithOffset,\n@@ -77,7 +79,8 @@ public class Spritz {\n                     new SpritzAnimation(lottieAnimationView),\n                     new SpritzAnimator(\n                             lottieAnimationView\n-                    )\n+                    ),\n+                    new SpritzPager()\n             );\n         }\n \n"
    },
    {
        "commit hash": "275baa6b7a7447cf0f2523ab830a39a5f65fa7eb",
        "previous commit hash": "39a238f6d8d85ff90c53b0d1d2830c32fb5634cc",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 3,
            "deletions": 5
        },
        "diff content": "@@ -39,24 +39,22 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n \n         spritzAnimator.cancelCurrentAnimations();\n \n-        float initialProgress;\n         float finalProgress;\n         float realOffset;\n \n         if (swipingForward(newPosition)) {\n-            initialProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n             finalProgress = spritzCalculator.getSwipeEndProgressForPosition(position);\n             realOffset = positionOffset;\n             log(String.format(Locale.ENGLISH, \"Swiping > %d+%f\", position, positionOffset));\n         } else {\n-            initialProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position + 1);\n             finalProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n             realOffset = 1 - positionOffset;\n             log(String.format(Locale.ENGLISH, \"Swiping < %d+%f\", position, positionOffset));\n         }\n \n-        float progressToAnimate = finalProgress - initialProgress;\n-        float newProgress = initialProgress + (progressToAnimate * realOffset);\n+        float currentProgress = spritzAnimation.getCurrentProgress();\n+        float progressToAnimate = finalProgress - currentProgress;\n+        float newProgress = currentProgress + (progressToAnimate * realOffset);\n \n         spritzAnimation.setProgressImmediately(newProgress);\n \n"
    },
    {
        "commit hash": "275baa6b7a7447cf0f2523ab830a39a5f65fa7eb",
        "previous commit hash": "39a238f6d8d85ff90c53b0d1d2830c32fb5634cc",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzPager.java",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -4,11 +4,10 @@ import android.support.v4.view.ViewPager;\n \n class SpritzPager {\n \n-    private final ViewPager viewPager;\n-\n+    private ViewPager viewPager;\n     private float cachedPosition;\n \n-    SpritzPager(ViewPager viewPager) {\n+    void setViewPager(ViewPager viewPager) {\n         this.viewPager = viewPager;\n     }\n \n"
    },
    {
        "commit hash": "39a238f6d8d85ff90c53b0d1d2830c32fb5634cc",
        "previous commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 1,
            "deletions": 5
        },
        "diff content": "@@ -6,7 +6,6 @@ import com.airbnb.lottie.LottieAnimationView;\n \n import java.util.ArrayList;\n import java.util.List;\n-import java.util.concurrent.TimeUnit;\n \n public class Spritz {\n \n@@ -48,8 +47,7 @@ public class Spritz {\n     }\n \n     public void startPendingAnimations() {\n-        int position = spritzPager.getCurrentPosition();\n-        spritzOnPageChangeListener.onPageIdle(position);\n+        spritzOnPageChangeListener.onPageScrollStateChanged(ViewPager.SCROLL_STATE_IDLE);\n     }\n \n     public void detachFrom(ViewPager viewPager) {\n@@ -59,8 +57,6 @@ public class Spritz {\n     @SuppressWarnings(\"WeakerAccess\")\n     public static class Builder {\n \n-        private static final long DEFAULT_SWIPE_ANIMATION_DURATION = TimeUnit.MILLISECONDS.toMillis(250);\n-\n         private final LottieAnimationView lottieAnimationView;\n         private List<SpritzStepWithOffset> spritzStepsWithOffset;\n \n"
    },
    {
        "commit hash": "39a238f6d8d85ff90c53b0d1d2830c32fb5634cc",
        "previous commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 7,
            "deletions": 10
        },
        "diff content": "@@ -6,7 +6,7 @@ import android.util.Log;\n import java.util.List;\n import java.util.Locale;\n \n-class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, SpritzOnPageIdleListener {\n+class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener {\n \n     private final static String TAG = SpritzOnPageChangeListener.class.getName();\n \n@@ -31,11 +31,9 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n \n     @Override\n     public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n-        if (position + positionOffset == spritzPager.getCurrentPosition()) {\n-            return;\n-        }\n+        float newPosition = position + positionOffset;\n \n-        if (position + positionOffset == spritzPager.getCachedPosition()) {\n+        if (newPosition == spritzPager.getCurrentPosition() || newPosition == spritzPager.getCachedPosition()) {\n             return;\n         }\n \n@@ -45,7 +43,7 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n         float finalProgress;\n         float realOffset;\n \n-        if (swipingForward(position + positionOffset)) {\n+        if (swipingForward(newPosition)) {\n             initialProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n             finalProgress = spritzCalculator.getSwipeEndProgressForPosition(position);\n             realOffset = positionOffset;\n@@ -62,7 +60,7 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n \n         spritzAnimation.setProgressImmediately(newProgress);\n \n-        spritzPager.setCachedPosition(position + positionOffset);\n+        spritzPager.setCachedPosition(newPosition);\n     }\n \n     @Override\n@@ -71,7 +69,7 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n     }\n \n     private boolean swipingForward(float newPosition) {\n-        return newPosition >= spritzPager.getCachedPosition();\n+        return newPosition > spritzPager.getCachedPosition();\n     }\n \n     @Override\n@@ -84,8 +82,7 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n         }\n     }\n \n-    @Override\n-    public void onPageIdle(int position) {\n+    private void onPageIdle(int position) {\n         log(String.format(Locale.ENGLISH, \"Page idle, autoplaying for position %d\", position));\n         autoPlay(position);\n         spritzPager.setCachedPosition(position);\n"
    },
    {
        "commit hash": "39a238f6d8d85ff90c53b0d1d2830c32fb5634cc",
        "previous commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageIdleListener.java",
            "additions": 0,
            "deletions": 7
        },
        "diff content": "@@ -1,7 +0,0 @@\n-package com.novoda.spritz;\n-\n-interface SpritzOnPageIdleListener {\n-\n-    void onPageIdle(int position);\n-\n-}\n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 0,
            "deletions": 10
        },
        "diff content": "@@ -41,9 +41,6 @@ After getting your `LottieAnimationView` and your `ViewPager`, just create a `Sp\n ```java\n Spritz spritz = Spritz\n                     .with(lottieAnimationView)\n-                    .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n-                    .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n-                    .withDefaultSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n                     .withSteps(\n                             new SpritzStep.Builder()\n                                     .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n@@ -103,13 +100,6 @@ Please note that the autoplay animation is always played after the user swipes f\n The swipe animation is started and progressed as the user drags the view pager back and forth. To set the duration of a page swipe animation, use\n `withSwipeDuration`. This animation is not optional, since it's what this library has been created for :P.\n \n-#### Swipe completion animation\n-\n-When a user starts dragging a page inside the pager and then releases the finger, `Spritz` needs to know how long the remaining part of the swipe \n-animation has to last. You can set a common value for all pages via `withDefaultSwipeAnimationDuration`, if no value is set, it will default to 250ms.\n-\n-You should keep your swipe animation as short as possible, since the view of the new page usually snaps in place in a few milliseconds.\n-\n ## License\n \n ```\n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/DebugActivity.java",
            "additions": 0,
            "deletions": 8
        },
        "diff content": "@@ -1,14 +1,11 @@\n package com.novoda.spritz.sample;\n \n-import android.animation.TimeInterpolator;\n import android.os.Bundle;\n import android.support.annotation.Nullable;\n import android.support.v4.app.Fragment;\n import android.support.v4.app.FragmentManager;\n import android.support.v4.app.FragmentStatePagerAdapter;\n import android.support.v4.view.ViewPager;\n-import android.support.v4.view.animation.FastOutSlowInInterpolator;\n-import android.support.v4.view.animation.LinearOutSlowInInterpolator;\n import android.support.v7.app.AppCompatActivity;\n import android.view.LayoutInflater;\n import android.view.View;\n@@ -26,8 +23,6 @@ import java.util.concurrent.TimeUnit;\n public class DebugActivity extends AppCompatActivity {\n \n     private static final int PAGES_COUNT = 3;\n-    private static final TimeInterpolator SWIPE_FORWARD_INTERPOLATOR = new LinearOutSlowInInterpolator();\n-    private static final TimeInterpolator SWIPE_BACKWARDS_INTERPOLATOR = new FastOutSlowInInterpolator();\n \n     private Spritz spritz;\n     private ViewPager viewPager;\n@@ -45,9 +40,6 @@ public class DebugActivity extends AppCompatActivity {\n \n         spritz = Spritz\n                 .with(lottieAnimationView)\n-                .withDefaultSwipeAnimationDuration(1, TimeUnit.SECONDS)\n-                .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n-                .withDefaultSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n                 .withSteps(\n                         new SpritzStep.Builder()\n                                 .withAutoPlayDuration(1, TimeUnit.SECONDS)\n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 0,
            "deletions": 8
        },
        "diff content": "@@ -1,14 +1,11 @@\n package com.novoda.spritz.sample;\n \n-import android.animation.TimeInterpolator;\n import android.os.Bundle;\n import android.support.annotation.Nullable;\n import android.support.v4.app.Fragment;\n import android.support.v4.app.FragmentManager;\n import android.support.v4.app.FragmentStatePagerAdapter;\n import android.support.v4.view.ViewPager;\n-import android.support.v4.view.animation.FastOutSlowInInterpolator;\n-import android.support.v4.view.animation.LinearOutSlowInInterpolator;\n import android.support.v7.app.AppCompatActivity;\n import android.view.LayoutInflater;\n import android.view.View;\n@@ -24,8 +21,6 @@ import java.util.concurrent.TimeUnit;\n public class MainActivity extends AppCompatActivity {\n \n     private static final int PAGES_COUNT = 3;\n-    private static final TimeInterpolator SWIPE_FORWARD_INTERPOLATOR = new LinearOutSlowInInterpolator();\n-    private static final TimeInterpolator SWIPE_BACKWARDS_INTERPOLATOR = new FastOutSlowInInterpolator();\n \n     private Spritz spritz;\n     private ViewPager viewPager;\n@@ -43,9 +38,6 @@ public class MainActivity extends AppCompatActivity {\n \n         spritz = Spritz\n                 .with(lottieAnimationView)\n-                .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n-                .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n-                .withDefaultSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n                 .withSteps(\n                         new SpritzStep.Builder()\n                                 .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 1,
            "deletions": 25
        },
        "diff content": "@@ -1,8 +1,6 @@\n package com.novoda.spritz;\n \n-import android.animation.TimeInterpolator;\n import android.support.v4.view.ViewPager;\n-import android.view.animation.LinearInterpolator;\n \n import com.airbnb.lottie.LottieAnimationView;\n \n@@ -64,10 +62,6 @@ public class Spritz {\n         private static final long DEFAULT_SWIPE_ANIMATION_DURATION = TimeUnit.MILLISECONDS.toMillis(250);\n \n         private final LottieAnimationView lottieAnimationView;\n-\n-        private long defaultSwipeAnimationDuration = DEFAULT_SWIPE_ANIMATION_DURATION;\n-        private TimeInterpolator defaultSwipeForwardInterpolator = new LinearInterpolator();\n-        private TimeInterpolator defaultSwipeBackwardsInterpolator = new LinearInterpolator();\n         private List<SpritzStepWithOffset> spritzStepsWithOffset;\n \n         private Builder(LottieAnimationView lottieAnimationView) {\n@@ -75,21 +69,6 @@ public class Spritz {\n             spritzStepsWithOffset = new ArrayList<>();\n         }\n \n-        public Builder withDefaultSwipeAnimationDuration(long defaultSwipeAnimationDuration, TimeUnit timeUnit) {\n-            this.defaultSwipeAnimationDuration = timeUnit.toMillis(defaultSwipeAnimationDuration);\n-            return this;\n-        }\n-\n-        public Builder withDefaultSwipeForwardInterpolator(TimeInterpolator swipeForwardInterpolator) {\n-            this.defaultSwipeForwardInterpolator = swipeForwardInterpolator;\n-            return this;\n-        }\n-\n-        public Builder withDefaultSwipeBackwardsInterpolator(TimeInterpolator swipeBackwardsInterpolator) {\n-            this.defaultSwipeBackwardsInterpolator = swipeBackwardsInterpolator;\n-            return this;\n-        }\n-\n         public Builder withSteps(SpritzStep... spritzSteps) {\n             this.spritzStepsWithOffset = SpritzStepWithOffset.fromSpritzSteps(spritzSteps);\n             return this;\n@@ -101,10 +80,7 @@ public class Spritz {\n                     new SpritzCalculator(spritzStepsWithOffset, calculateTotalAnimationDuration()),\n                     new SpritzAnimation(lottieAnimationView),\n                     new SpritzAnimator(\n-                            lottieAnimationView,\n-                            defaultSwipeForwardInterpolator,\n-                            defaultSwipeAnimationDuration,\n-                            defaultSwipeBackwardsInterpolator\n+                            lottieAnimationView\n                     )\n             );\n         }\n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzAnimator.java",
            "additions": 1,
            "deletions": 48
        },
        "diff content": "@@ -2,7 +2,6 @@ package com.novoda.spritz;\n \n import android.animation.Animator;\n import android.animation.AnimatorSet;\n-import android.animation.TimeInterpolator;\n import android.animation.ValueAnimator;\n \n import com.airbnb.lottie.LottieAnimationView;\n@@ -10,21 +9,11 @@ import com.airbnb.lottie.LottieAnimationView;\n class SpritzAnimator {\n \n     private final LottieAnimationView lottieAnimationView;\n-    private final TimeInterpolator defaultSwipeForwardInterpolator;\n-    private final long defaultSwipeAnimationDuration;\n-    private final TimeInterpolator defaultSwipeBackwardsInterpolator;\n \n     private AnimatorSet animatorSet;\n \n-    SpritzAnimator(LottieAnimationView lottieAnimationView,\n-                   TimeInterpolator defaultSwipeForwardInterpolator,\n-                   long defaultSwipeAnimationDuration,\n-                   TimeInterpolator defaultSwipeBackwardsInterpolator) {\n-\n+    SpritzAnimator(LottieAnimationView lottieAnimationView) {\n         this.lottieAnimationView = lottieAnimationView;\n-        this.defaultSwipeForwardInterpolator = defaultSwipeForwardInterpolator;\n-        this.defaultSwipeAnimationDuration = defaultSwipeAnimationDuration;\n-        this.defaultSwipeBackwardsInterpolator = defaultSwipeBackwardsInterpolator;\n         this.animatorSet = new AnimatorSet();\n     }\n \n@@ -32,42 +21,6 @@ class SpritzAnimator {\n         animatorSet.cancel();\n     }\n \n-    void finishSwipeForward(float from, float to, SpritzStepWithOffset spritzStep) {\n-        ValueAnimator finishSwipeAnimation = ValueAnimator\n-                .ofFloat(from, to)\n-                .setDuration(defaultSwipeAnimationDuration);\n-        finishSwipeAnimation.setInterpolator(getSwipeForwardInterpolatorFor(spritzStep));\n-        finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n-\n-        playAnimations(finishSwipeAnimation);\n-    }\n-\n-    private TimeInterpolator getSwipeForwardInterpolatorFor(SpritzStepWithOffset currentStep) {\n-        TimeInterpolator stepSwipeForwardInterpolator = currentStep.swipeForwardInterpolator();\n-        if (stepSwipeForwardInterpolator != null) {\n-            return stepSwipeForwardInterpolator;\n-        }\n-        return this.defaultSwipeForwardInterpolator;\n-    }\n-\n-    void finishSwipeBackwards(float from, float to, SpritzStepWithOffset spritzStep) {\n-        ValueAnimator finishSwipeAnimation = ValueAnimator\n-                .ofFloat(from, to)\n-                .setDuration(defaultSwipeAnimationDuration);\n-        finishSwipeAnimation.setInterpolator(getSwipeBackwardsInterpolatorFor(spritzStep));\n-        finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n-\n-        playAnimations(finishSwipeAnimation);\n-    }\n-\n-    private TimeInterpolator getSwipeBackwardsInterpolatorFor(SpritzStepWithOffset currentStep) {\n-        TimeInterpolator stepSwipeBackwardsInterpolator = currentStep.swipeBackwardsInterpolator();\n-        if (stepSwipeBackwardsInterpolator != null) {\n-            return stepSwipeBackwardsInterpolator;\n-        }\n-        return this.defaultSwipeBackwardsInterpolator;\n-    }\n-\n     void autoPlay(float from, float to, SpritzStepWithOffset spritzStep) {\n         ValueAnimator autoPlayAnimation = ValueAnimator\n                 .ofFloat(from, to)\n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzCalculator.java",
            "additions": 0,
            "deletions": 8
        },
        "diff content": "@@ -12,14 +12,6 @@ class SpritzCalculator {\n         this.totalAnimationDuration = totalAnimationDuration;\n     }\n \n-    float getSwipeEndForPreviousPositionOrZero(int position) {\n-        float swipeEndProgress = 0;\n-        if (position > 0) {\n-            swipeEndProgress = getSwipeEndProgressForPosition(position - 1);\n-        }\n-        return swipeEndProgress;\n-    }\n-\n     float getSwipeEndProgressForPosition(int position) {\n         return ((float) spritzSteps.get(position).swipeEnd()) / totalAnimationDuration;\n     }\n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 1,
            "deletions": 16
        },
        "diff content": "@@ -67,22 +67,7 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n \n     @Override\n     public void onPageSelected(final int position) {\n-        log(String.format(Locale.ENGLISH, \"Page selected, finishing swipe to position %d\", position));\n-        finishSwipeWithAnimation(position);\n-    }\n-\n-    private void finishSwipeWithAnimation(int position) {\n-        float from = spritzAnimation.getCurrentProgress();\n-\n-        if (swipingForward(position)) {\n-            float to = spritzCalculator.getSwipeEndForPreviousPositionOrZero(position);\n-            SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n-            spritzAnimator.finishSwipeForward(from, to, currentStep);\n-        } else {\n-            float to = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n-            SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n-            spritzAnimator.finishSwipeBackwards(from, to, currentStep);\n-        }\n+        // do nothing\n     }\n \n     private boolean swipingForward(float newPosition) {\n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzStep.java",
            "additions": 2,
            "deletions": 32
        },
        "diff content": "@@ -1,25 +1,17 @@\n package com.novoda.spritz;\n \n-import android.animation.TimeInterpolator;\n-\n import java.util.concurrent.TimeUnit;\n \n public class SpritzStep {\n \n     private final long autoPlayDuration;\n     private final long swipeDuration;\n-    private final TimeInterpolator swipeForwardInterpolator;\n-    private final TimeInterpolator swipeBackwardsInterpolator;\n \n     private SpritzStep(long autoPlayDuration,\n-                       long swipeDuration,\n-                       TimeInterpolator swipeForwardInterpolator,\n-                       TimeInterpolator swipeBackwardsInterpolator) {\n+                       long swipeDuration) {\n \n         this.autoPlayDuration = autoPlayDuration;\n         this.swipeDuration = swipeDuration;\n-        this.swipeForwardInterpolator = swipeForwardInterpolator;\n-        this.swipeBackwardsInterpolator = swipeBackwardsInterpolator;\n     }\n \n     long autoPlayDuration() {\n@@ -30,20 +22,10 @@ public class SpritzStep {\n         return swipeDuration;\n     }\n \n-    TimeInterpolator swipeForwardInterpolator() {\n-        return swipeForwardInterpolator;\n-    }\n-\n-    TimeInterpolator swipeBackwardsInterpolator() {\n-        return swipeBackwardsInterpolator;\n-    }\n-\n     public static class Builder {\n \n         private long autoPlayDuration = 0;\n         private long swipeDuration = 0;\n-        private TimeInterpolator swipeForwardInterpolator;\n-        private TimeInterpolator swipeBackwardsInterpolator;\n \n         public Builder withAutoPlayDuration(long autoPlayDuration, TimeUnit timeUnit) {\n             this.autoPlayDuration = timeUnit.toMillis(autoPlayDuration);\n@@ -55,22 +37,10 @@ public class SpritzStep {\n             return this;\n         }\n \n-        public Builder withSwipeForwardInterpolator(TimeInterpolator swipeForwardInterpolator) {\n-            this.swipeForwardInterpolator = swipeForwardInterpolator;\n-            return this;\n-        }\n-\n-        public Builder withSwipeBackwardsInterpolator(TimeInterpolator swipeBackwardsInterpolator) {\n-            this.swipeBackwardsInterpolator = swipeBackwardsInterpolator;\n-            return this;\n-        }\n-\n         public SpritzStep build() {\n             return new SpritzStep(\n                     autoPlayDuration,\n-                    swipeDuration,\n-                    swipeForwardInterpolator,\n-                    swipeBackwardsInterpolator\n+                    swipeDuration\n             );\n         }\n \n"
    },
    {
        "commit hash": "65b20a92905efbb60746faef6adf86e8f961629b",
        "previous commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzStepWithOffset.java",
            "additions": 2,
            "deletions": 20
        },
        "diff content": "@@ -1,7 +1,5 @@\n package com.novoda.spritz;\n \n-import android.animation.TimeInterpolator;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -10,20 +8,14 @@ class SpritzStepWithOffset {\n     private final long autoPlayDuration;\n     private final long autoPlayEnd;\n     private final long swipeEnd;\n-    private final TimeInterpolator swipeForwardInterpolator;\n-    private final TimeInterpolator swipeBackwardsInterpolator;\n \n     private SpritzStepWithOffset(long autoPlayDuration,\n                                  long autoPlayEnd,\n-                                 long swipeEnd,\n-                                 TimeInterpolator swipeForwardInterpolator,\n-                                 TimeInterpolator swipeBackwardsInterpolator) {\n+                                 long swipeEnd) {\n \n         this.autoPlayDuration = autoPlayDuration;\n         this.autoPlayEnd = autoPlayEnd;\n         this.swipeEnd = swipeEnd;\n-        this.swipeForwardInterpolator = swipeForwardInterpolator;\n-        this.swipeBackwardsInterpolator = swipeBackwardsInterpolator;\n     }\n \n     long autoPlayDuration() {\n@@ -38,14 +30,6 @@ class SpritzStepWithOffset {\n         return swipeEnd;\n     }\n \n-    TimeInterpolator swipeForwardInterpolator() {\n-        return swipeForwardInterpolator;\n-    }\n-\n-    TimeInterpolator swipeBackwardsInterpolator() {\n-        return swipeBackwardsInterpolator;\n-    }\n-\n     static List<SpritzStepWithOffset> fromSpritzSteps(SpritzStep... spritzSteps) {\n         List<SpritzStepWithOffset> spritzStepWithOffsetList = new ArrayList<>(spritzSteps.length);\n         long totalAnimationTime = 0;\n@@ -58,9 +42,7 @@ class SpritzStepWithOffset {\n                     new SpritzStepWithOffset(\n                             spritzStep.autoPlayDuration(),\n                             autoPlayEnd,\n-                            swipeEnd,\n-                            spritzStep.swipeForwardInterpolator(),\n-                            spritzStep.swipeBackwardsInterpolator()\n+                            swipeEnd\n                     )\n             );\n \n"
    },
    {
        "commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "previous commit hash": "686a51c9cd930a60e8e427a16c506f3cb13491ee",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzAnimation.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -10,11 +10,11 @@ class SpritzAnimation {\n         this.lottieAnimationView = lottieAnimationView;\n     }\n \n-    float getProgress() {\n+    float getCurrentProgress() {\n         return lottieAnimationView.getProgress();\n     }\n \n-    void setProgress(float progress) {\n+    void setProgressImmediately(float progress) {\n         lottieAnimationView.setProgress(progress);\n     }\n \n"
    },
    {
        "commit hash": "5c52382a109d4cce880fa203136558ff50176179",
        "previous commit hash": "686a51c9cd930a60e8e427a16c506f3cb13491ee",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 31,
            "deletions": 10
        },
        "diff content": "@@ -1,11 +1,15 @@\n package com.novoda.spritz;\n \n import android.support.v4.view.ViewPager;\n+import android.util.Log;\n \n import java.util.List;\n+import java.util.Locale;\n \n class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, SpritzOnPageIdleListener {\n \n+    private final static String TAG = SpritzOnPageChangeListener.class.getName();\n+\n     private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n     private final SpritzCalculator spritzCalculator;\n     private final SpritzAnimation spritzAnimation;\n@@ -27,39 +31,48 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n \n     @Override\n     public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n-        float currentProgress = spritzAnimation.getProgress();\n-        float finalProgress;\n-        float realOffset;\n-\n         if (position + positionOffset == spritzPager.getCurrentPosition()) {\n             return;\n         }\n \n+        if (position + positionOffset == spritzPager.getCachedPosition()) {\n+            return;\n+        }\n+\n         spritzAnimator.cancelCurrentAnimations();\n \n+        float initialProgress;\n+        float finalProgress;\n+        float realOffset;\n+\n         if (swipingForward(position + positionOffset)) {\n+            initialProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n             finalProgress = spritzCalculator.getSwipeEndProgressForPosition(position);\n             realOffset = positionOffset;\n+            log(String.format(Locale.ENGLISH, \"Swiping > %d+%f\", position, positionOffset));\n         } else {\n+            initialProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position + 1);\n             finalProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n             realOffset = 1 - positionOffset;\n+            log(String.format(Locale.ENGLISH, \"Swiping < %d+%f\", position, positionOffset));\n         }\n \n-        float progressToAnimate = finalProgress - currentProgress;\n-        float newProgress = currentProgress + (progressToAnimate * realOffset);\n+        float progressToAnimate = finalProgress - initialProgress;\n+        float newProgress = initialProgress + (progressToAnimate * realOffset);\n \n-        spritzAnimation.setProgress(newProgress);\n+        spritzAnimation.setProgressImmediately(newProgress);\n \n         spritzPager.setCachedPosition(position + positionOffset);\n     }\n \n     @Override\n     public void onPageSelected(final int position) {\n+        log(String.format(Locale.ENGLISH, \"Page selected, finishing swipe to position %d\", position));\n         finishSwipeWithAnimation(position);\n     }\n \n     private void finishSwipeWithAnimation(int position) {\n-        float from = spritzAnimation.getProgress();\n+        float from = spritzAnimation.getCurrentProgress();\n \n         if (swipingForward(position)) {\n             float to = spritzCalculator.getSwipeEndForPreviousPositionOrZero(position);\n@@ -79,20 +92,28 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n     @Override\n     public void onPageScrollStateChanged(int state) {\n         int position = spritzPager.getCurrentPosition();\n+        float currentProgress = spritzAnimation.getCurrentProgress();\n         if (state == ViewPager.SCROLL_STATE_IDLE\n-                && spritzAnimation.getProgress() < spritzCalculator.getAutoPlayEndProgressForPosition(position)) {\n+                && currentProgress < spritzCalculator.getAutoPlayEndProgressForPosition(position)) {\n             onPageIdle(position);\n         }\n     }\n \n     @Override\n     public void onPageIdle(int position) {\n+        log(String.format(Locale.ENGLISH, \"Page idle, autoplaying for position %d\", position));\n         autoPlay(position);\n         spritzPager.setCachedPosition(position);\n     }\n \n+    private void log(String message) {\n+        if (Log.isLoggable(TAG, Log.DEBUG) || BuildConfig.DEBUG) {\n+            Log.d(TAG, message);\n+        }\n+    }\n+\n     private void autoPlay(int position) {\n-        float currentProgress = spritzAnimation.getProgress();\n+        float currentProgress = spritzAnimation.getCurrentProgress();\n         float autoPlayEndProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n         SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n \n"
    },
    {
        "commit hash": "686a51c9cd930a60e8e427a16c506f3cb13491ee",
        "previous commit hash": "4463f70ebdd031955d9b023fdbeb51ea01e0b3d8",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -56,7 +56,6 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n     @Override\n     public void onPageSelected(final int position) {\n         finishSwipeWithAnimation(position);\n-        spritzPager.setCachedPosition(position);\n     }\n \n     private void finishSwipeWithAnimation(int position) {\n@@ -89,6 +88,7 @@ class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, Spri\n     @Override\n     public void onPageIdle(int position) {\n         autoPlay(position);\n+        spritzPager.setCachedPosition(position);\n     }\n \n     private void autoPlay(int position) {\n"
    },
    {
        "commit hash": "4463f70ebdd031955d9b023fdbeb51ea01e0b3d8",
        "previous commit hash": "133c4fcf5741cf3ee4e8e7ea4a9663f730487a4d",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 11,
            "deletions": 76
        },
        "diff content": "@@ -18,7 +18,7 @@ public class Spritz {\n     private final SpritzAnimator spritzAnimator;\n \n     private SpritzPager spritzPager;\n-    private ViewPager.OnPageChangeListener onPageChangeListener;\n+    private SpritzOnPageChangeListener spritzOnPageChangeListener;\n \n     public static Builder with(LottieAnimationView lottieAnimationView) {\n         return new Builder(lottieAnimationView);\n@@ -38,89 +38,24 @@ public class Spritz {\n     public void attachTo(ViewPager viewPager) {\n         this.spritzPager = new SpritzPager(viewPager);\n \n-        this.onPageChangeListener = new ViewPager.OnPageChangeListener() {\n-            @Override\n-            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n-                float currentProgress = spritzAnimation.getProgress();\n-                float finalProgress;\n-                float realOffset;\n+        this.spritzOnPageChangeListener = new SpritzOnPageChangeListener(\n+                spritzStepsWithOffset,\n+                spritzCalculator,\n+                spritzAnimation,\n+                spritzAnimator,\n+                spritzPager\n+        );\n \n-                if (position + positionOffset == spritzPager.getCurrentPosition()) {\n-                    return;\n-                }\n-\n-                spritzAnimator.cancelCurrentAnimations();\n-\n-                if (swipingForward(position + positionOffset)) {\n-                    finalProgress = spritzCalculator.getSwipeEndProgressForPosition(position);\n-                    realOffset = positionOffset;\n-                } else {\n-                    finalProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n-                    realOffset = 1 - positionOffset;\n-                }\n-\n-                float progressToAnimate = finalProgress - currentProgress;\n-                float newProgress = currentProgress + (progressToAnimate * realOffset);\n-\n-                spritzAnimation.setProgress(newProgress);\n-\n-                spritzPager.setCachedPosition(position + positionOffset);\n-            }\n-\n-            @Override\n-            public void onPageSelected(final int position) {\n-                finishSwipeWithAnimation(position);\n-                spritzPager.setCachedPosition(position);\n-            }\n-\n-            @Override\n-            public void onPageScrollStateChanged(int state) {\n-                int position = spritzPager.getCurrentPosition();\n-                if (state == ViewPager.SCROLL_STATE_IDLE\n-                        && spritzAnimation.getProgress() < spritzCalculator.getAutoPlayEndProgressForPosition(position)) {\n-                    autoPlay(position);\n-                }\n-            }\n-\n-        };\n-\n-        viewPager.addOnPageChangeListener(onPageChangeListener);\n-    }\n-\n-    private void autoPlay(int position) {\n-        float currentProgress = spritzAnimation.getProgress();\n-        float autoPlayEndProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n-        SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n-\n-        spritzAnimator.cancelCurrentAnimations();\n-        spritzAnimator.autoPlay(currentProgress, autoPlayEndProgress, currentStep);\n-    }\n-\n-    private boolean swipingForward(float newPosition) {\n-        return newPosition >= spritzPager.getCachedPosition();\n+        viewPager.addOnPageChangeListener(spritzOnPageChangeListener);\n     }\n \n     public void startPendingAnimations() {\n         int position = spritzPager.getCurrentPosition();\n-        autoPlay(position);\n-    }\n-\n-    private void finishSwipeWithAnimation(int position) {\n-        float from = spritzAnimation.getProgress();\n-\n-        if (swipingForward(position)) {\n-            float to = spritzCalculator.getSwipeEndForPreviousPositionOrZero(position);\n-            SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n-            spritzAnimator.finishSwipeForward(from, to, currentStep);\n-        } else {\n-            float to = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n-            SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n-            spritzAnimator.finishSwipeBackwards(from, to, currentStep);\n-        }\n+        spritzOnPageChangeListener.onPageIdle(position);\n     }\n \n     public void detachFrom(ViewPager viewPager) {\n-        viewPager.removeOnPageChangeListener(onPageChangeListener);\n+        viewPager.removeOnPageChangeListener(spritzOnPageChangeListener);\n     }\n \n     @SuppressWarnings(\"WeakerAccess\")\n"
    },
    {
        "commit hash": "4463f70ebdd031955d9b023fdbeb51ea01e0b3d8",
        "previous commit hash": "133c4fcf5741cf3ee4e8e7ea4a9663f730487a4d",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageChangeListener.java",
            "additions": 103,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,103 @@\n+package com.novoda.spritz;\n+\n+import android.support.v4.view.ViewPager;\n+\n+import java.util.List;\n+\n+class SpritzOnPageChangeListener implements ViewPager.OnPageChangeListener, SpritzOnPageIdleListener {\n+\n+    private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n+    private final SpritzCalculator spritzCalculator;\n+    private final SpritzAnimation spritzAnimation;\n+    private final SpritzAnimator spritzAnimator;\n+    private final SpritzPager spritzPager;\n+\n+    SpritzOnPageChangeListener(List<SpritzStepWithOffset> spritzStepsWithOffset,\n+                               SpritzCalculator spritzCalculator,\n+                               SpritzAnimation spritzAnimation,\n+                               SpritzAnimator spritzAnimator,\n+                               SpritzPager spritzPager) {\n+\n+        this.spritzStepsWithOffset = spritzStepsWithOffset;\n+        this.spritzCalculator = spritzCalculator;\n+        this.spritzAnimation = spritzAnimation;\n+        this.spritzAnimator = spritzAnimator;\n+        this.spritzPager = spritzPager;\n+    }\n+\n+    @Override\n+    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+        float currentProgress = spritzAnimation.getProgress();\n+        float finalProgress;\n+        float realOffset;\n+\n+        if (position + positionOffset == spritzPager.getCurrentPosition()) {\n+            return;\n+        }\n+\n+        spritzAnimator.cancelCurrentAnimations();\n+\n+        if (swipingForward(position + positionOffset)) {\n+            finalProgress = spritzCalculator.getSwipeEndProgressForPosition(position);\n+            realOffset = positionOffset;\n+        } else {\n+            finalProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n+            realOffset = 1 - positionOffset;\n+        }\n+\n+        float progressToAnimate = finalProgress - currentProgress;\n+        float newProgress = currentProgress + (progressToAnimate * realOffset);\n+\n+        spritzAnimation.setProgress(newProgress);\n+\n+        spritzPager.setCachedPosition(position + positionOffset);\n+    }\n+\n+    @Override\n+    public void onPageSelected(final int position) {\n+        finishSwipeWithAnimation(position);\n+        spritzPager.setCachedPosition(position);\n+    }\n+\n+    private void finishSwipeWithAnimation(int position) {\n+        float from = spritzAnimation.getProgress();\n+\n+        if (swipingForward(position)) {\n+            float to = spritzCalculator.getSwipeEndForPreviousPositionOrZero(position);\n+            SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n+            spritzAnimator.finishSwipeForward(from, to, currentStep);\n+        } else {\n+            float to = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n+            SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n+            spritzAnimator.finishSwipeBackwards(from, to, currentStep);\n+        }\n+    }\n+\n+    private boolean swipingForward(float newPosition) {\n+        return newPosition >= spritzPager.getCachedPosition();\n+    }\n+\n+    @Override\n+    public void onPageScrollStateChanged(int state) {\n+        int position = spritzPager.getCurrentPosition();\n+        if (state == ViewPager.SCROLL_STATE_IDLE\n+                && spritzAnimation.getProgress() < spritzCalculator.getAutoPlayEndProgressForPosition(position)) {\n+            onPageIdle(position);\n+        }\n+    }\n+\n+    @Override\n+    public void onPageIdle(int position) {\n+        autoPlay(position);\n+    }\n+\n+    private void autoPlay(int position) {\n+        float currentProgress = spritzAnimation.getProgress();\n+        float autoPlayEndProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n+        SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n+\n+        spritzAnimator.cancelCurrentAnimations();\n+        spritzAnimator.autoPlay(currentProgress, autoPlayEndProgress, currentStep);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "4463f70ebdd031955d9b023fdbeb51ea01e0b3d8",
        "previous commit hash": "133c4fcf5741cf3ee4e8e7ea4a9663f730487a4d",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzOnPageIdleListener.java",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.spritz;\n+\n+interface SpritzOnPageIdleListener {\n+\n+    void onPageIdle(int position);\n+\n+}\n"
    },
    {
        "commit hash": "133c4fcf5741cf3ee4e8e7ea4a9663f730487a4d",
        "previous commit hash": "09fe3fdad9221a34d31a7eb4073f474a631b0017",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 38,
            "deletions": 60
        },
        "diff content": "@@ -12,81 +12,72 @@ import java.util.concurrent.TimeUnit;\n \n public class Spritz {\n \n-    private final LottieAnimationView lottieAnimationView;\n     private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n-    private final long totalAnimationDuration;\n+    private final SpritzCalculator spritzCalculator;\n+    private final SpritzAnimation spritzAnimation;\n+    private final SpritzAnimator spritzAnimator;\n \n-    private ViewPager viewPager;\n-    private float currentPosition;\n-    private SpritzAnimator spritzAnimator;\n+    private SpritzPager spritzPager;\n     private ViewPager.OnPageChangeListener onPageChangeListener;\n \n     public static Builder with(LottieAnimationView lottieAnimationView) {\n         return new Builder(lottieAnimationView);\n     }\n \n-    private Spritz(LottieAnimationView lottieAnimationView,\n-                   List<SpritzStepWithOffset> spritzStepsWithOffset,\n-                   long totalAnimationDuration,\n-                   long defaultSwipeAnimationDuration,\n-                   TimeInterpolator defaultSwipeForwardInterpolator,\n-                   TimeInterpolator defaultSwipeBackwardsInterpolator) {\n+    private Spritz(List<SpritzStepWithOffset> spritzStepsWithOffset,\n+                   SpritzCalculator spritzCalculator,\n+                   SpritzAnimation spritzAnimation,\n+                   SpritzAnimator spritzAnimator) {\n \n-        this.lottieAnimationView = lottieAnimationView;\n         this.spritzStepsWithOffset = spritzStepsWithOffset;\n-        this.totalAnimationDuration = totalAnimationDuration;\n-        this.spritzAnimator = new SpritzAnimator(\n-                lottieAnimationView,\n-                defaultSwipeForwardInterpolator,\n-                defaultSwipeAnimationDuration,\n-                defaultSwipeBackwardsInterpolator\n-        );\n+        this.spritzCalculator = spritzCalculator;\n+        this.spritzAnimation = spritzAnimation;\n+        this.spritzAnimator = spritzAnimator;\n     }\n \n-    public void attachTo(final ViewPager viewPager) {\n-        this.viewPager = viewPager;\n-\n-        this.currentPosition = viewPager.getCurrentItem();\n+    public void attachTo(ViewPager viewPager) {\n+        this.spritzPager = new SpritzPager(viewPager);\n \n         this.onPageChangeListener = new ViewPager.OnPageChangeListener() {\n             @Override\n             public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n-                float currentProgress = lottieAnimationView.getProgress();\n+                float currentProgress = spritzAnimation.getProgress();\n                 float finalProgress;\n                 float realOffset;\n \n-                if (position + positionOffset == currentPosition) {\n+                if (position + positionOffset == spritzPager.getCurrentPosition()) {\n                     return;\n                 }\n \n                 spritzAnimator.cancelCurrentAnimations();\n \n                 if (swipingForward(position + positionOffset)) {\n-                    finalProgress = getSwipeEndProgressForPosition(position);\n+                    finalProgress = spritzCalculator.getSwipeEndProgressForPosition(position);\n                     realOffset = positionOffset;\n                 } else {\n-                    finalProgress = getAutoPlayEndProgressForPosition(position);\n+                    finalProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n                     realOffset = 1 - positionOffset;\n                 }\n \n                 float progressToAnimate = finalProgress - currentProgress;\n                 float newProgress = currentProgress + (progressToAnimate * realOffset);\n \n-                lottieAnimationView.setProgress(newProgress);\n+                spritzAnimation.setProgress(newProgress);\n \n-                currentPosition = position + positionOffset;\n+                spritzPager.setCachedPosition(position + positionOffset);\n             }\n \n             @Override\n             public void onPageSelected(final int position) {\n                 finishSwipeWithAnimation(position);\n-                currentPosition = position;\n+                spritzPager.setCachedPosition(position);\n             }\n \n             @Override\n             public void onPageScrollStateChanged(int state) {\n-                int position = viewPager.getCurrentItem();\n-                if (state == ViewPager.SCROLL_STATE_IDLE && lottieAnimationView.getProgress() < getAutoPlayEndProgressForPosition(position)) {\n+                int position = spritzPager.getCurrentPosition();\n+                if (state == ViewPager.SCROLL_STATE_IDLE\n+                        && spritzAnimation.getProgress() < spritzCalculator.getAutoPlayEndProgressForPosition(position)) {\n                     autoPlay(position);\n                 }\n             }\n@@ -97,8 +88,8 @@ public class Spritz {\n     }\n \n     private void autoPlay(int position) {\n-        float currentProgress = lottieAnimationView.getProgress();\n-        float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n+        float currentProgress = spritzAnimation.getProgress();\n+        float autoPlayEndProgress = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n         SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n \n         spritzAnimator.cancelCurrentAnimations();\n@@ -106,44 +97,28 @@ public class Spritz {\n     }\n \n     private boolean swipingForward(float newPosition) {\n-        return newPosition >= currentPosition;\n+        return newPosition >= spritzPager.getCachedPosition();\n     }\n \n     public void startPendingAnimations() {\n-        int position = viewPager.getCurrentItem();\n+        int position = spritzPager.getCurrentPosition();\n         autoPlay(position);\n     }\n \n     private void finishSwipeWithAnimation(int position) {\n-        float from = lottieAnimationView.getProgress();\n+        float from = spritzAnimation.getProgress();\n \n         if (swipingForward(position)) {\n-            float to = getSwipeEndForPreviousPositionOrZero(position);\n+            float to = spritzCalculator.getSwipeEndForPreviousPositionOrZero(position);\n             SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n             spritzAnimator.finishSwipeForward(from, to, currentStep);\n         } else {\n-            float to = getAutoPlayEndProgressForPosition(position);\n+            float to = spritzCalculator.getAutoPlayEndProgressForPosition(position);\n             SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n             spritzAnimator.finishSwipeBackwards(from, to, currentStep);\n         }\n     }\n \n-    private float getSwipeEndForPreviousPositionOrZero(int position) {\n-        float swipeEndProgress = 0;\n-        if (position > 0) {\n-            swipeEndProgress = getSwipeEndProgressForPosition(position - 1);\n-        }\n-        return swipeEndProgress;\n-    }\n-\n-    private float getSwipeEndProgressForPosition(int position) {\n-        return ((float) spritzStepsWithOffset.get(position).swipeEnd()) / totalAnimationDuration;\n-    }\n-\n-    private float getAutoPlayEndProgressForPosition(int position) {\n-        return ((float) spritzStepsWithOffset.get(position).autoPlayEnd()) / totalAnimationDuration;\n-    }\n-\n     public void detachFrom(ViewPager viewPager) {\n         viewPager.removeOnPageChangeListener(onPageChangeListener);\n     }\n@@ -187,12 +162,15 @@ public class Spritz {\n \n         public Spritz build() {\n             return new Spritz(\n-                    lottieAnimationView,\n                     spritzStepsWithOffset,\n-                    calculateTotalAnimationDuration(),\n-                    defaultSwipeAnimationDuration,\n-                    defaultSwipeForwardInterpolator,\n-                    defaultSwipeBackwardsInterpolator\n+                    new SpritzCalculator(spritzStepsWithOffset, calculateTotalAnimationDuration()),\n+                    new SpritzAnimation(lottieAnimationView),\n+                    new SpritzAnimator(\n+                            lottieAnimationView,\n+                            defaultSwipeForwardInterpolator,\n+                            defaultSwipeAnimationDuration,\n+                            defaultSwipeBackwardsInterpolator\n+                    )\n             );\n         }\n \n"
    },
    {
        "commit hash": "133c4fcf5741cf3ee4e8e7ea4a9663f730487a4d",
        "previous commit hash": "09fe3fdad9221a34d31a7eb4073f474a631b0017",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzAnimation.java",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+package com.novoda.spritz;\n+\n+import com.airbnb.lottie.LottieAnimationView;\n+\n+class SpritzAnimation {\n+\n+    private final LottieAnimationView lottieAnimationView;\n+\n+    SpritzAnimation(LottieAnimationView lottieAnimationView) {\n+        this.lottieAnimationView = lottieAnimationView;\n+    }\n+\n+    float getProgress() {\n+        return lottieAnimationView.getProgress();\n+    }\n+\n+    void setProgress(float progress) {\n+        lottieAnimationView.setProgress(progress);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "133c4fcf5741cf3ee4e8e7ea4a9663f730487a4d",
        "previous commit hash": "09fe3fdad9221a34d31a7eb4073f474a631b0017",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzCalculator.java",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+package com.novoda.spritz;\n+\n+import java.util.List;\n+\n+class SpritzCalculator {\n+\n+    private final List<SpritzStepWithOffset> spritzSteps;\n+    private final long totalAnimationDuration;\n+\n+    SpritzCalculator(List<SpritzStepWithOffset> spritzSteps, long totalAnimationDuration) {\n+        this.spritzSteps = spritzSteps;\n+        this.totalAnimationDuration = totalAnimationDuration;\n+    }\n+\n+    float getSwipeEndForPreviousPositionOrZero(int position) {\n+        float swipeEndProgress = 0;\n+        if (position > 0) {\n+            swipeEndProgress = getSwipeEndProgressForPosition(position - 1);\n+        }\n+        return swipeEndProgress;\n+    }\n+\n+    float getSwipeEndProgressForPosition(int position) {\n+        return ((float) spritzSteps.get(position).swipeEnd()) / totalAnimationDuration;\n+    }\n+\n+    float getAutoPlayEndProgressForPosition(int position) {\n+        return ((float) spritzSteps.get(position).autoPlayEnd()) / totalAnimationDuration;\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "133c4fcf5741cf3ee4e8e7ea4a9663f730487a4d",
        "previous commit hash": "09fe3fdad9221a34d31a7eb4073f474a631b0017",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzPager.java",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+package com.novoda.spritz;\n+\n+import android.support.v4.view.ViewPager;\n+\n+class SpritzPager {\n+\n+    private final ViewPager viewPager;\n+\n+    private float cachedPosition;\n+\n+    SpritzPager(ViewPager viewPager) {\n+        this.viewPager = viewPager;\n+    }\n+\n+    int getCurrentPosition() {\n+        return viewPager.getCurrentItem();\n+    }\n+\n+    float getCachedPosition() {\n+        return cachedPosition;\n+    }\n+\n+    void setCachedPosition(float cachedPosition) {\n+        this.cachedPosition = cachedPosition;\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "09fe3fdad9221a34d31a7eb4073f474a631b0017",
        "previous commit hash": "e6c9695afce1a05566aae79feef00630e9728ee5",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 22,
            "deletions": 89
        },
        "diff content": "@@ -1,9 +1,6 @@\n package com.novoda.spritz;\n \n-import android.animation.Animator;\n-import android.animation.AnimatorSet;\n import android.animation.TimeInterpolator;\n-import android.animation.ValueAnimator;\n import android.support.v4.view.ViewPager;\n import android.view.animation.LinearInterpolator;\n \n@@ -18,13 +15,10 @@ public class Spritz {\n     private final LottieAnimationView lottieAnimationView;\n     private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n     private final long totalAnimationDuration;\n-    private final long defaultSwipeAnimationDuration;\n-    private final TimeInterpolator defaultSwipeForwardInterpolator;\n-    private final TimeInterpolator defaultSwipeBackwardsInterpolator;\n \n     private ViewPager viewPager;\n     private float currentPosition;\n-    private AnimatorSet animatorSet;\n+    private SpritzAnimator spritzAnimator;\n     private ViewPager.OnPageChangeListener onPageChangeListener;\n \n     public static Builder with(LottieAnimationView lottieAnimationView) {\n@@ -41,10 +35,12 @@ public class Spritz {\n         this.lottieAnimationView = lottieAnimationView;\n         this.spritzStepsWithOffset = spritzStepsWithOffset;\n         this.totalAnimationDuration = totalAnimationDuration;\n-        this.defaultSwipeAnimationDuration = defaultSwipeAnimationDuration;\n-        this.defaultSwipeForwardInterpolator = defaultSwipeForwardInterpolator;\n-        this.defaultSwipeBackwardsInterpolator = defaultSwipeBackwardsInterpolator;\n-        this.animatorSet = new AnimatorSet();\n+        this.spritzAnimator = new SpritzAnimator(\n+                lottieAnimationView,\n+                defaultSwipeForwardInterpolator,\n+                defaultSwipeAnimationDuration,\n+                defaultSwipeBackwardsInterpolator\n+        );\n     }\n \n     public void attachTo(final ViewPager viewPager) {\n@@ -63,6 +59,8 @@ public class Spritz {\n                     return;\n                 }\n \n+                spritzAnimator.cancelCurrentAnimations();\n+\n                 if (swipingForward(position + positionOffset)) {\n                     finalProgress = getSwipeEndProgressForPosition(position);\n                     realOffset = positionOffset;\n@@ -89,8 +87,7 @@ public class Spritz {\n             public void onPageScrollStateChanged(int state) {\n                 int position = viewPager.getCurrentItem();\n                 if (state == ViewPager.SCROLL_STATE_IDLE && lottieAnimationView.getProgress() < getAutoPlayEndProgressForPosition(position)) {\n-                    animatorSet.cancel();\n-                    animatorSet = playAnimations(autoPlay(position));\n+                    autoPlay(position);\n                 }\n             }\n \n@@ -99,16 +96,13 @@ public class Spritz {\n         viewPager.addOnPageChangeListener(onPageChangeListener);\n     }\n \n-    private ValueAnimator autoPlay(int position) {\n+    private void autoPlay(int position) {\n         float currentProgress = lottieAnimationView.getProgress();\n         float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n         SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n \n-        ValueAnimator autoPlayAnimation = ValueAnimator\n-                .ofFloat(currentProgress, autoPlayEndProgress)\n-                .setDuration(currentStep.autoPlayDuration());\n-        autoPlayAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n-        return autoPlayAnimation;\n+        spritzAnimator.cancelCurrentAnimations();\n+        spritzAnimator.autoPlay(currentProgress, autoPlayEndProgress, currentStep);\n     }\n \n     private boolean swipingForward(float newPosition) {\n@@ -116,45 +110,22 @@ public class Spritz {\n     }\n \n     public void startPendingAnimations() {\n-        animatorSet.cancel();\n         int position = viewPager.getCurrentItem();\n-        animatorSet = playAnimations(autoPlay(position));\n+        autoPlay(position);\n     }\n \n     private void finishSwipeWithAnimation(int position) {\n-        animatorSet.cancel();\n-\n-        Animator[] animationList;\n+        float from = lottieAnimationView.getProgress();\n \n         if (swipingForward(position)) {\n-            animationList = swipeForward(position);\n+            float to = getSwipeEndForPreviousPositionOrZero(position);\n+            SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n+            spritzAnimator.finishSwipeForward(from, to, currentStep);\n         } else {\n-            animationList = swipeBackwards(position);\n+            float to = getAutoPlayEndProgressForPosition(position);\n+            SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n+            spritzAnimator.finishSwipeBackwards(from, to, currentStep);\n         }\n-\n-        animatorSet = playAnimations(animationList);\n-    }\n-\n-    private AnimatorSet playAnimations(Animator... animators) {\n-        animatorSet = new AnimatorSet();\n-        animatorSet.playSequentially(animators);\n-        animatorSet.start();\n-\n-        return animatorSet;\n-    }\n-\n-    private Animator[] swipeForward(int position) {\n-        float currentProgress = lottieAnimationView.getProgress();\n-        float previousSwipeEndProgress = getSwipeEndForPreviousPositionOrZero(position);\n-        SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n-\n-        ValueAnimator finishSwipeAnimation = ValueAnimator\n-                .ofFloat(currentProgress, previousSwipeEndProgress)\n-                .setDuration(defaultSwipeAnimationDuration);\n-        finishSwipeAnimation.setInterpolator(getSwipeForwardInterpolatorFor(currentStep));\n-        finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n-\n-        return new Animator[]{finishSwipeAnimation};\n     }\n \n     private float getSwipeEndForPreviousPositionOrZero(int position) {\n@@ -169,53 +140,15 @@ public class Spritz {\n         return ((float) spritzStepsWithOffset.get(position).swipeEnd()) / totalAnimationDuration;\n     }\n \n-    private TimeInterpolator getSwipeForwardInterpolatorFor(SpritzStepWithOffset currentStep) {\n-        TimeInterpolator stepSwipeForwardInterpolator = currentStep.swipeForwardInterpolator();\n-        if (stepSwipeForwardInterpolator != null) {\n-            return stepSwipeForwardInterpolator;\n-        }\n-        return this.defaultSwipeForwardInterpolator;\n-    }\n-\n-    private Animator[] swipeBackwards(int position) {\n-        SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n-        float currentProgress = lottieAnimationView.getProgress();\n-        float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n-\n-        ValueAnimator finishSwipeAnimation = ValueAnimator\n-                .ofFloat(currentProgress, autoPlayEndProgress)\n-                .setDuration(defaultSwipeAnimationDuration);\n-        finishSwipeAnimation.setInterpolator(getSwipeBackwardsInterpolatorFor(currentStep));\n-        finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n-\n-        return new Animator[]{finishSwipeAnimation};\n-    }\n-\n     private float getAutoPlayEndProgressForPosition(int position) {\n         return ((float) spritzStepsWithOffset.get(position).autoPlayEnd()) / totalAnimationDuration;\n     }\n \n-    private TimeInterpolator getSwipeBackwardsInterpolatorFor(SpritzStepWithOffset currentStep) {\n-        TimeInterpolator stepSwipeBackwardsInterpolator = currentStep.swipeBackwardsInterpolator();\n-        if (stepSwipeBackwardsInterpolator != null) {\n-            return stepSwipeBackwardsInterpolator;\n-        }\n-        return this.defaultSwipeBackwardsInterpolator;\n-    }\n-\n-    private ValueAnimator.AnimatorUpdateListener defaultAnimatorUpdateListener() {\n-        return new ValueAnimator.AnimatorUpdateListener() {\n-            @Override\n-            public void onAnimationUpdate(ValueAnimator animation) {\n-                lottieAnimationView.setProgress((Float) animation.getAnimatedValue());\n-            }\n-        };\n-    }\n-\n     public void detachFrom(ViewPager viewPager) {\n         viewPager.removeOnPageChangeListener(onPageChangeListener);\n     }\n \n+    @SuppressWarnings(\"WeakerAccess\")\n     public static class Builder {\n \n         private static final long DEFAULT_SWIPE_ANIMATION_DURATION = TimeUnit.MILLISECONDS.toMillis(250);\n"
    },
    {
        "commit hash": "09fe3fdad9221a34d31a7eb4073f474a631b0017",
        "previous commit hash": "e6c9695afce1a05566aae79feef00630e9728ee5",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzAnimator.java",
            "additions": 95,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,95 @@\n+package com.novoda.spritz;\n+\n+import android.animation.Animator;\n+import android.animation.AnimatorSet;\n+import android.animation.TimeInterpolator;\n+import android.animation.ValueAnimator;\n+\n+import com.airbnb.lottie.LottieAnimationView;\n+\n+class SpritzAnimator {\n+\n+    private final LottieAnimationView lottieAnimationView;\n+    private final TimeInterpolator defaultSwipeForwardInterpolator;\n+    private final long defaultSwipeAnimationDuration;\n+    private final TimeInterpolator defaultSwipeBackwardsInterpolator;\n+\n+    private AnimatorSet animatorSet;\n+\n+    SpritzAnimator(LottieAnimationView lottieAnimationView,\n+                   TimeInterpolator defaultSwipeForwardInterpolator,\n+                   long defaultSwipeAnimationDuration,\n+                   TimeInterpolator defaultSwipeBackwardsInterpolator) {\n+\n+        this.lottieAnimationView = lottieAnimationView;\n+        this.defaultSwipeForwardInterpolator = defaultSwipeForwardInterpolator;\n+        this.defaultSwipeAnimationDuration = defaultSwipeAnimationDuration;\n+        this.defaultSwipeBackwardsInterpolator = defaultSwipeBackwardsInterpolator;\n+        this.animatorSet = new AnimatorSet();\n+    }\n+\n+    void cancelCurrentAnimations() {\n+        animatorSet.cancel();\n+    }\n+\n+    void finishSwipeForward(float from, float to, SpritzStepWithOffset spritzStep) {\n+        ValueAnimator finishSwipeAnimation = ValueAnimator\n+                .ofFloat(from, to)\n+                .setDuration(defaultSwipeAnimationDuration);\n+        finishSwipeAnimation.setInterpolator(getSwipeForwardInterpolatorFor(spritzStep));\n+        finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n+\n+        playAnimations(finishSwipeAnimation);\n+    }\n+\n+    private TimeInterpolator getSwipeForwardInterpolatorFor(SpritzStepWithOffset currentStep) {\n+        TimeInterpolator stepSwipeForwardInterpolator = currentStep.swipeForwardInterpolator();\n+        if (stepSwipeForwardInterpolator != null) {\n+            return stepSwipeForwardInterpolator;\n+        }\n+        return this.defaultSwipeForwardInterpolator;\n+    }\n+\n+    void finishSwipeBackwards(float from, float to, SpritzStepWithOffset spritzStep) {\n+        ValueAnimator finishSwipeAnimation = ValueAnimator\n+                .ofFloat(from, to)\n+                .setDuration(defaultSwipeAnimationDuration);\n+        finishSwipeAnimation.setInterpolator(getSwipeBackwardsInterpolatorFor(spritzStep));\n+        finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n+\n+        playAnimations(finishSwipeAnimation);\n+    }\n+\n+    private TimeInterpolator getSwipeBackwardsInterpolatorFor(SpritzStepWithOffset currentStep) {\n+        TimeInterpolator stepSwipeBackwardsInterpolator = currentStep.swipeBackwardsInterpolator();\n+        if (stepSwipeBackwardsInterpolator != null) {\n+            return stepSwipeBackwardsInterpolator;\n+        }\n+        return this.defaultSwipeBackwardsInterpolator;\n+    }\n+\n+    void autoPlay(float from, float to, SpritzStepWithOffset spritzStep) {\n+        ValueAnimator autoPlayAnimation = ValueAnimator\n+                .ofFloat(from, to)\n+                .setDuration(spritzStep.autoPlayDuration());\n+        autoPlayAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n+\n+        playAnimations(autoPlayAnimation);\n+    }\n+\n+    private ValueAnimator.AnimatorUpdateListener defaultAnimatorUpdateListener() {\n+        return new ValueAnimator.AnimatorUpdateListener() {\n+            @Override\n+            public void onAnimationUpdate(ValueAnimator animation) {\n+                lottieAnimationView.setProgress((Float) animation.getAnimatedValue());\n+            }\n+        };\n+    }\n+\n+    private void playAnimations(Animator... animators) {\n+        animatorSet = new AnimatorSet();\n+        animatorSet.playSequentially(animators);\n+        animatorSet.start();\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "e6c9695afce1a05566aae79feef00630e9728ee5",
        "previous commit hash": "a53c2477eb73a10d32a437e4932e7e3106145f74",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 36,
            "deletions": 20
        },
        "diff content": "@@ -10,8 +10,6 @@ import android.view.animation.LinearInterpolator;\n import com.airbnb.lottie.LottieAnimationView;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n import java.util.concurrent.TimeUnit;\n \n@@ -49,7 +47,7 @@ public class Spritz {\n         this.animatorSet = new AnimatorSet();\n     }\n \n-    public void attachTo(ViewPager viewPager) {\n+    public void attachTo(final ViewPager viewPager) {\n         this.viewPager = viewPager;\n \n         this.currentPosition = viewPager.getCurrentItem();\n@@ -83,13 +81,17 @@ public class Spritz {\n \n             @Override\n             public void onPageSelected(final int position) {\n-                autoPlayForPosition(position);\n+                finishSwipeWithAnimation(position);\n                 currentPosition = position;\n             }\n \n             @Override\n             public void onPageScrollStateChanged(int state) {\n-                // do nothing\n+                int position = viewPager.getCurrentItem();\n+                if (state == ViewPager.SCROLL_STATE_IDLE && lottieAnimationView.getProgress() < getAutoPlayEndProgressForPosition(position)) {\n+                    animatorSet.cancel();\n+                    animatorSet = playAnimations(autoPlay(position));\n+                }\n             }\n \n         };\n@@ -97,34 +99,53 @@ public class Spritz {\n         viewPager.addOnPageChangeListener(onPageChangeListener);\n     }\n \n+    private ValueAnimator autoPlay(int position) {\n+        float currentProgress = lottieAnimationView.getProgress();\n+        float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n+        SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n+\n+        ValueAnimator autoPlayAnimation = ValueAnimator\n+                .ofFloat(currentProgress, autoPlayEndProgress)\n+                .setDuration(currentStep.autoPlayDuration());\n+        autoPlayAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n+        return autoPlayAnimation;\n+    }\n+\n     private boolean swipingForward(float newPosition) {\n         return newPosition >= currentPosition;\n     }\n \n     public void startPendingAnimations() {\n-        autoPlayForPosition(viewPager.getCurrentItem());\n+        animatorSet.cancel();\n+        int position = viewPager.getCurrentItem();\n+        animatorSet = playAnimations(autoPlay(position));\n     }\n \n-    private void autoPlayForPosition(int position) {\n+    private void finishSwipeWithAnimation(int position) {\n         animatorSet.cancel();\n \n-        List<Animator> animationList;\n+        Animator[] animationList;\n \n         if (swipingForward(position)) {\n-            animationList = swipeForwardThenAutoPlay(position);\n+            animationList = swipeForward(position);\n         } else {\n             animationList = swipeBackwards(position);\n         }\n \n+        animatorSet = playAnimations(animationList);\n+    }\n+\n+    private AnimatorSet playAnimations(Animator... animators) {\n         animatorSet = new AnimatorSet();\n-        animatorSet.playSequentially(animationList);\n+        animatorSet.playSequentially(animators);\n         animatorSet.start();\n+\n+        return animatorSet;\n     }\n \n-    private List<Animator> swipeForwardThenAutoPlay(int position) {\n+    private Animator[] swipeForward(int position) {\n         float currentProgress = lottieAnimationView.getProgress();\n         float previousSwipeEndProgress = getSwipeEndForPreviousPositionOrZero(position);\n-        float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n         SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n \n         ValueAnimator finishSwipeAnimation = ValueAnimator\n@@ -133,12 +154,7 @@ public class Spritz {\n         finishSwipeAnimation.setInterpolator(getSwipeForwardInterpolatorFor(currentStep));\n         finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n \n-        ValueAnimator autoPlayAnimation = ValueAnimator\n-                .ofFloat(previousSwipeEndProgress, autoPlayEndProgress)\n-                .setDuration(currentStep.autoPlayDuration());\n-        autoPlayAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n-\n-        return Arrays.<Animator>asList(finishSwipeAnimation, autoPlayAnimation);\n+        return new Animator[]{finishSwipeAnimation};\n     }\n \n     private float getSwipeEndForPreviousPositionOrZero(int position) {\n@@ -161,7 +177,7 @@ public class Spritz {\n         return this.defaultSwipeForwardInterpolator;\n     }\n \n-    private List<Animator> swipeBackwards(int position) {\n+    private Animator[] swipeBackwards(int position) {\n         SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n         float currentProgress = lottieAnimationView.getProgress();\n         float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n@@ -172,7 +188,7 @@ public class Spritz {\n         finishSwipeAnimation.setInterpolator(getSwipeBackwardsInterpolatorFor(currentStep));\n         finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n \n-        return Collections.<Animator>singletonList(finishSwipeAnimation);\n+        return new Animator[]{finishSwipeAnimation};\n     }\n \n     private float getAutoPlayEndProgressForPosition(int position) {\n"
    },
    {
        "commit hash": "a53c2477eb73a10d32a437e4932e7e3106145f74",
        "previous commit hash": "b91c7826367de5700ef84c0eb2e7f60012293084",
        "diff stats": {
            "file_path": "spritz/app/src/main/AndroidManifest.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -22,6 +22,12 @@\n \n         </activity>\n \n+        <activity\n+          android:name=\"com.novoda.spritz.sample.DebugActivity\"\n+          android:label=\"@string/debug\"\n+          android:exported=\"true\"\n+          android:theme=\"@style/AppTheme.NoActionBar\" />\n+\n     </application>\n \n </manifest>\n"
    },
    {
        "commit hash": "a53c2477eb73a10d32a437e4932e7e3106145f74",
        "previous commit hash": "b91c7826367de5700ef84c0eb2e7f60012293084",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/demo-debug.json",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+{\"v\":\"4.10.1\",\"fr\":60,\"ip\":0,\"op\":300,\"w\":360,\"h\":568,\"nm\":\"Debug\",\"ddd\":0,\"assets\":[],\"fonts\":{\"list\":[{\"fName\":\"DINAlternate-Bold\",\"fFamily\":\"DIN Alternate\",\"fStyle\":\"Bold\",\"ascent\":71.1990356445312}]},\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":5,\"nm\":\"A 5\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[294,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"A\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":5,\"nm\":\"S 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[232,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"S\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":5,\"nm\":\"A 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[172,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"A\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":5,\"nm\":\"S\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[106,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"S\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":5,\"nm\":\"A\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[36,256,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"t\":{\"d\":{\"k\":[{\"s\":{\"s\":24,\"f\":\"DINAlternate-Bold\",\"t\":\"A\",\"j\":0,\"tr\":148,\"lh\":28.8,\"ls\":0,\"fc\":[1,1,1]},\"t\":0}]},\"p\":{},\"m\":{\"g\":1,\"a\":{\"a\":0,\"k\":[0,0],\"ix\":2}},\"a\":[]},\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Shape Layer 6\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[371,291.5,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,17,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[2.457,86.43],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-97.021,20.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Shape Layer 5\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[307,275,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[2.457,86.43],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.17417271932,1,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-97.021,20.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Shape Layer 4\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[243.5,291.5,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,17,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[2.457,86.43],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-97.021,20.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Shape Layer 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[180,275,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[2.457,86.43],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.17417271932,1,0,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-97.021,20.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Shape Layer 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[18.028,295.223,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-162,11.223,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0,100,100],\"e\":[100,100,100]},{\"t\":300}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[319.328,14.445],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-161.693,11.52],\"ix\":2},\"a\":{\"a\":0,\"k\":[-159.357,0.297],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Shape Layer 1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":40,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[177.664,295.223,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-2.336,11.223,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[319.328,14.445],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-161.693,11.52],\"ix\":2},\"a\":{\"a\":0,\"k\":[-159.357,0.297],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}],\"chars\":[{\"ch\":\"A\",\"size\":24,\"style\":\"Bold\",\"w\":60.99,\"data\":{\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[39.638,-25.484],[29.659,-56.628],[29.47,-56.628],[19.492,-25.484]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[42.617,-15.923],[16.465,-15.923],[11.169,0],[0.102,0],[25.167,-71.191],[33.916,-71.191],[58.98,0],[47.961,0]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false}],\"nm\":\"A\",\"np\":5,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}]},\"fFamily\":\"DIN Alternate\"},{\"ch\":\"S\",\"size\":24,\"style\":\"Bold\",\"w\":57.37,\"data\":{\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-7.574,-0.065],[-0.127,6.483],[6.057,1.076],[3.311,0.489],[3.09,3.519],[0,5.18],[-4.001,3.812],[-7.12,0.066],[-6.332,-4.707],[0,0],[6.215,0.131],[2.145,-1.662],[0.063,-3.421],[-1.546,-1.662],[-3.406,-0.652],[-3.281,-0.423],[-3.091,-3.876],[0,-5.049],[15.784,-0.195],[7.341,6.479]],\"o\":[[5.49,4.665],[8.961,-0.13],[0.065,-5.31],[-2.776,-0.391],[-5.93,-1.009],[-3.186,-3.616],[0,-6.223],[3.874,-3.78],[8.569,0.195],[0,0],[-5.174,-3.522],[-3.218,0],[-2.24,1.727],[0,2.052],[1.546,1.694],[1.892,0.326],[6.465,0.912],[3.059,3.812],[-0.346,13.619],[-10.208,0],[0,0]],\"v\":[[8.134,-17.247],[27.73,-10.152],[41.362,-20.072],[32.374,-29.651],[23.244,-30.971],[9.715,-37.763],[4.936,-50.958],[10.938,-66.01],[27.428,-71.777],[49.78,-64.423],[43.959,-55.56],[26.875,-61.04],[18.831,-58.547],[15.376,-50.826],[17.694,-45.255],[25.121,-41.736],[32.88,-40.612],[47.213,-33.428],[51.802,-20.135],[27.605,0.586],[1.282,-9.132]],\"c\":true},\"ix\":2},\"nm\":\"S\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false}],\"nm\":\"S\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}]},\"fFamily\":\"DIN Alternate\"}]}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a53c2477eb73a10d32a437e4932e7e3106145f74",
        "previous commit hash": "b91c7826367de5700ef84c0eb2e7f60012293084",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/DebugActivity.java",
            "additions": 157,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,157 @@\n+package com.novoda.spritz.sample;\n+\n+import android.animation.TimeInterpolator;\n+import android.os.Bundle;\n+import android.support.annotation.Nullable;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.app.FragmentManager;\n+import android.support.v4.app.FragmentStatePagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.support.v4.view.animation.FastOutSlowInInterpolator;\n+import android.support.v4.view.animation.LinearOutSlowInInterpolator;\n+import android.support.v7.app.AppCompatActivity;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.TextView;\n+\n+import com.airbnb.lottie.LottieAnimationView;\n+import com.novoda.spritz.Spritz;\n+import com.novoda.spritz.SpritzStep;\n+\n+import java.util.Locale;\n+import java.util.concurrent.TimeUnit;\n+\n+public class DebugActivity extends AppCompatActivity {\n+\n+    private static final int PAGES_COUNT = 3;\n+    private static final TimeInterpolator SWIPE_FORWARD_INTERPOLATOR = new LinearOutSlowInInterpolator();\n+    private static final TimeInterpolator SWIPE_BACKWARDS_INTERPOLATOR = new FastOutSlowInInterpolator();\n+\n+    private Spritz spritz;\n+    private ViewPager viewPager;\n+    private TextView debugText;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.debug);\n+\n+        LottieAnimationView lottieAnimationView = findViewById(R.id.animation_view);\n+\n+        viewPager = findViewById(R.id.viewpager);\n+        viewPager.setAdapter(new ScreenSlidePagerAdapter(getSupportFragmentManager()));\n+\n+        spritz = Spritz\n+                .with(lottieAnimationView)\n+                .withDefaultSwipeAnimationDuration(1, TimeUnit.SECONDS)\n+                .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n+                .withDefaultSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n+                .withSteps(\n+                        new SpritzStep.Builder()\n+                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n+                                .withSwipeDuration(1, TimeUnit.SECONDS)\n+                                .build(),\n+                        new SpritzStep.Builder()\n+                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n+                                .withSwipeDuration(1, TimeUnit.SECONDS)\n+                                .build(),\n+                        new SpritzStep.Builder()\n+                                .withAutoPlayDuration(1, TimeUnit.SECONDS)\n+                                .build()\n+                )\n+                .build();\n+\n+        Button continueButton = findViewById(R.id.btn_continue);\n+        continueButton.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                int nextItem = viewPager.getCurrentItem() + 1;\n+                if (PAGES_COUNT > nextItem) {\n+                    viewPager.setCurrentItem(nextItem);\n+                }\n+            }\n+        });\n+        Button previousButton = findViewById(R.id.btn_previous);\n+        previousButton.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                int prevItem = viewPager.getCurrentItem() - 1;\n+                if (prevItem >= 0) {\n+                    viewPager.setCurrentItem(prevItem);\n+                }\n+            }\n+        });\n+\n+        debugText = findViewById(R.id.debug_text);\n+\n+        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n+            @Override\n+            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+                debugText.setText(String.format(Locale.ENGLISH, \"%f\", position + positionOffset + 1));\n+            }\n+\n+            @Override\n+            public void onPageSelected(int position) {\n+                // do nothing\n+            }\n+\n+            @Override\n+            public void onPageScrollStateChanged(int state) {\n+                // do nothing\n+            }\n+        });\n+\n+    }\n+\n+    @Override\n+    protected void onStart() {\n+        super.onStart();\n+        viewPager.setPageTransformer(false, new ViewPager.PageTransformer() {\n+            @Override\n+            public void transformPage(View page, float position) {\n+\n+            }\n+        });\n+        spritz.attachTo(viewPager);\n+        spritz.startPendingAnimations();\n+    }\n+\n+    @Override\n+    protected void onStop() {\n+        spritz.detachFrom(viewPager);\n+        super.onStop();\n+    }\n+\n+    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {\n+\n+        ScreenSlidePagerAdapter(FragmentManager fragmentManager) {\n+            super(fragmentManager);\n+        }\n+\n+        @Override\n+        public Fragment getItem(int position) {\n+            return new AnimationFragment();\n+        }\n+\n+        @Override\n+        public int getCount() {\n+            return PAGES_COUNT;\n+        }\n+\n+    }\n+\n+    public static class AnimationFragment extends Fragment {\n+\n+        public AnimationFragment() {\n+            // default constructor\n+        }\n+\n+        @Override\n+        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+            return inflater.inflate(R.layout.page, container, false);\n+        }\n+\n+    }\n+}\n"
    },
    {
        "commit hash": "a53c2477eb73a10d32a437e4932e7e3106145f74",
        "previous commit hash": "b91c7826367de5700ef84c0eb2e7f60012293084",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/debug.xml",
            "additions": 55,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  xmlns:tools=\"http://schemas.android.com/tools\"\n+  android:background=\"@android:color/black\"\n+  android:orientation=\"vertical\">\n+\n+  <com.airbnb.lottie.LottieAnimationView\n+    android:id=\"@+id/animation_view\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:layout_centerInParent=\"true\"\n+    app:lottie_autoPlay=\"false\"\n+    app:lottie_fileName=\"demo-debug.json\" />\n+\n+  <android.support.v4.view.ViewPager\n+    android:id=\"@+id/viewpager\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\" />\n+\n+  <LinearLayout\n+    android:id=\"@+id/buttons_layout\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\">\n+\n+    <Button\n+      android:id=\"@+id/btn_previous\"\n+      android:layout_width=\"0dp\"\n+      android:layout_height=\"60dp\"\n+      android:layout_weight=\"1\"\n+      android:text=\"@string/previous\" />\n+\n+    <Button\n+      android:id=\"@+id/btn_continue\"\n+      android:layout_width=\"0dp\"\n+      android:layout_height=\"60dp\"\n+      android:layout_weight=\"1\"\n+      android:text=\"@string/next\" />\n+\n+  </LinearLayout>\n+\n+  <TextView\n+    android:id=\"@+id/debug_text\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:textSize=\"20sp\"\n+    android:textColor=\"#ffffff\"\n+    android:gravity=\"center\"\n+    android:layout_below=\"@id/buttons_layout\"\n+    tools:text=\"Info goes here\"/>\n+  \n+</RelativeLayout>\n"
    },
    {
        "commit hash": "a53c2477eb73a10d32a437e4932e7e3106145f74",
        "previous commit hash": "b91c7826367de5700ef84c0eb2e7f60012293084",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/strings.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -2,4 +2,5 @@\n   <string name=\"app_name\">A Taste of Spritz</string>\n   <string name=\"previous\">Previous</string>\n   <string name=\"next\">Next</string>\n+  <string name=\"debug\">Debug</string>\n </resources>\n"
    },
    {
        "commit hash": "74a274533d9dda9b770e31f799c77fe6803af2dc",
        "previous commit hash": "76881fcd413279aeb7e368583fcd46001472442f",
        "diff stats": {
            "file_path": "spritz/spritz-android/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -11,6 +11,8 @@ buildscript {\n apply plugin: 'com.android.library'\n apply plugin: 'bintray-release'\n \n+version = '0.0.1'\n+\n android {\n     compileSdkVersion 26\n     buildToolsVersion \"26.0.1\"\n@@ -19,7 +21,7 @@ android {\n         minSdkVersion 14\n         targetSdkVersion 26\n         versionCode 1\n-        versionName \"0.0.1\"\n+        versionName project.version\n     }\n }\n \n"
    },
    {
        "commit hash": "5eb726bcb0071ff41d54f424f2da1c6f467e7eae",
        "previous commit hash": "0404907f7f63eef94293c59e75c7d2e37715ed73",
        "diff stats": {
            "file_path": "spritz/spritz-android/build.gradle",
            "additions": 22,
            "deletions": 2
        },
        "diff content": "@@ -1,4 +1,15 @@\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+\n+    dependencies {\n+        classpath 'com.novoda:bintray-release:0.5.0'\n+    }\n+}\n+\n apply plugin: 'com.android.library'\n+apply plugin: 'bintray-release'\n \n android {\n     compileSdkVersion 26\n@@ -8,12 +19,21 @@ android {\n         minSdkVersion 14\n         targetSdkVersion 26\n         versionCode 1\n-        versionName \"1.0\"\n+        versionName \"0.0.1\"\n     }\n }\n \n dependencies {\n     compile 'com.airbnb.android:lottie:2.2.5'\n+}\n+\n+publish {\n+    userOrg = 'novoda'\n+    groupId = 'com.novoda'\n+    artifactId = 'spritz'\n+    version = project.version\n \n-    testCompile 'junit:junit:4.12'\n+    uploadName = 'spritz'\n+    description = 'Animate your view pager with Lottie and zero efforts.'\n+    website = 'https://github.com/novoda/android-demos/tree/master/spritz'\n }\n"
    },
    {
        "commit hash": "6062a0fbcc3da1f066ea159c8589034ac67fe6e9",
        "previous commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 55,
            "deletions": 79
        },
        "diff content": "@@ -1,11 +1,11 @@\n-# spritz\n+# ![Spritz!](images/spritz-icon-rect.png) spritz\n \n _Animate your view pager with Lottie and zero efforts._\n \n --------\n \n-Spritz is an Android library to seamlessly trigger a Lottie animation when the user drags a `ViewPager` or changes page. It supports animating \n-while swiping and auto-playing when the swipe is complete.\n+Spritz is an Android library to seamlessly trigger a Lottie animation when the user drags a `ViewPager` or changes page programmatically.\n+It supports animating while swiping and auto-playing when the swipe is complete.\n \n ![A taste of spritz](images/a-taste-of-spritz.gif)\n \n@@ -39,100 +39,76 @@ These segments must be consecutive to one another, as if the user continuously m\n After getting your `LottieAnimationView` and your `ViewPager`, just create a `Spritz` object with the following syntax:\n \n ```java\n-Spritz\n-    .with(lottieAnimationView)\n-    .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n-    .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n-    .withSteps(\n-            new SpritzStep.Builder()\n-                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n-                    .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n-                    .build(),\n-            new SpritzStep.Builder()\n-                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n-                    .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n-                    .withSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n-                    .build(),\n-            new SpritzStep.Builder()\n-                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n-                    .build()\n-    )\n-    .attachTo(viewPager);\n+Spritz spritz = Spritz\n+                    .with(lottieAnimationView)\n+                    .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n+                    .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n+                    .withDefaultSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n+                    .withSteps(\n+                            new SpritzStep.Builder()\n+                                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                    .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n+                                    .build(),\n+                            new SpritzStep.Builder()\n+                                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                    .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n+                                    .build(),\n+                            new SpritzStep.Builder()\n+                                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                    .build()\n+                    )\n+                    .build();\n ```\n \n-## Technical documentation\n-\n-### Make your own kind of Spritz\n-\n-Start building your view pager animation by calling:\n+Once you have your `Spritz` instance, you need to simply attach it to the `ViewPager`, and start any pending animation. If you're working in an \n+`Activity`, you would normally do it in `onStart`:\n \n ```java\n-SpritzPage.with(lottieAnimationView)\n+@Override\n+protected void onStart() {\n+    super.onStart();\n+    spritz.attachTo(viewPager);\n+    spritz.startPendingAnimations();\n+}\n ```\n \n-This will set the specific `LottieAnimationView` as the target of your animations. The Lottie view must load the animation separately, as it is not \n-in the scope of this library.\n-\n-After that, you can proceed setting your view pager transitions.\n-\n-#### `withDefaultSwipeAnimationDuration`\n-\n-`withDefaultSwipeAnimationDuration(long duration, TimeUnit timeUnit)` allows you to specify how long the swiping animation has to complete if the user \n-stops dragging.\n-\n-#### `withDefaultSwipeForwardInterpolator`\n-\n-`withDefaultSwipeForwardInterpolator(TimeInterpolator swipeForwardInterpolator)` sets the interpolator to use for all pages to complete the swipe \n-animation if the user stops dragging forwards at any point (before starting the autoplay animation, if any). If you don't set this, it will default to\n-`LinearInterpolator`. You can always override this default for single pages (see [`withSwipeForwardInterpolator`](#withswipeforwardinterpolator)).\n-\n-#### `withDefaultSwipeBackwardsInterpolator`\n+When you're done with your view, detach the `Spritz` instance from the `ViewPager`:\n \n-`withDefaultSwipeBackwardsInterpolator(TimeInterpolator swipeBackwardsInterpolator)` sets the interpolator to use for all pages to complete the swipe \n-animation if the user stops dragging backwards at any point. If you don't set this, it will default to `LinearInterpolator`. You can always override \n-this default for single pages (see [`withSwipeBackwardsInterpolator`](#withswipebackwardsinterpolator)).\n-\n-#### `withSteps`\n-\n-`withSteps(SpritzStep... steps)` lets you specify the steps to animate through. The library is made to work with the same number of pages as the ones \n-set in the `ViewPager`.\n-\n-See [Building the steps](#building-the-steps) to learn how to build a list of steps that match your exported animation.\n-\n-#### `attachTo`\n-\n-After setting the steps, simply call `attachTo(ViewPager viewPager)` to register all the needed listeners and set everything up. Congratulations! Now\n-you have a `spritz` object!\n-\n-#### `startPendingAnimations`\n+```java\n+@Override\n+protected void onStop() {\n+    spritz.detachFrom(viewPager);\n+    super.onStop();\n+}\n+```\n \n-You can call `startPendingAnimations` on your `spritz` object to trigger the autoplay animation for your first step.\n+### Animation durations\n \n-### Building the steps\n+`Spritz` handles multiple types of animations for your view.\n \n-To build a step, use the `SpritzStep.Builder` class, configure it as explained in the following sections, then build it with `.build()`.\n+**Note:** this library assumes that the first set animation on the first page starts from the time 0, and that all animations are in the order\n+`[autoplay (optional) 0 - swipe 0 - ... - swipe (n-1) - autoplay (optional) n]` and are consecutive to each other.\n \n-#### `withAutoPlayDuration`\n+#### Autoplay animation\n \n-`withAutoPlayDuration(long duration, TimeUnit timeUnit)` sets the duration of the autoplay animation for the given step. This must match the exact \n-duration of the autoplay segment in your AfterEffects project.\n+The autoplay animation is an optional animation that is launched automatically as soon as the `ViewPager` successfully transition to a new page.\n+You simply need to set (using `withAutoPlayDuration` on the page builder) how long the autoplay animation lasts in your After Effects project, \n+`Spritz` will take care of the rest.\n \n-#### `withSwipeDuration`\n+Please note that the autoplay animation is always played after the user swipes forward, it is not played when the user swipes back, since the \n+\"swipe back\" action sets the Lottie progress to the end of the previous autoplay animation.\n \n-`withSwipeDuration(long duration, TimeUnit timeUnit)` sets the duration of the swipe animation for the given step. This must match the exact \n-duration of the swipe segment in your AfterEffects project.\n+#### Swipe animation\n \n-#### `withSwipeForwardInterpolator`\n+The swipe animation is started and progressed as the user drags the view pager back and forth. To set the duration of a page swipe animation, use\n+`withSwipeDuration`. This animation is not optional, since it's what this library has been created for :P.\n \n-`withSwipeForwardInterpolator(TimeInterpolator timeInterpolator)` sets the interpolator to use to complete the swipe animation if the user stops \n-dragging forwards at any point (before starting the autoplay animation, if any). If you don't set this, it will default to the one you set in \n-`withDefaultSwipeForwardInterpolator` or a `LinearInterpolator` if you didn't set one.\n+#### Swipe completion animation\n \n-#### `withSwipeBackwardsInterpolator`\n+When a user starts dragging a page inside the pager and then releases the finger, `Spritz` needs to know how long the remaining part of the swipe \n+animation has to last. You can set a common value for all pages via `withDefaultSwipeAnimationDuration`, if no value is set, it will default to 250ms.\n \n-`withSwipeBackwardsInterpolator(TimeInterpolator timeInterpolator)` sets the interpolator to use to complete the swipe animation if the user stops \n-dragging backwards at any point. If you don't set this, it will default to the one you set in `withDefaultSwipeBackwardsInterpolator` or a \n-`LinearInterpolator` if you didn't set one.\n+You should keep your swipe animation as short as possible, since the view of the new page usually snaps in place in a few milliseconds.\n \n ## License\n \n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-hdpi/ic_launcher.png and b/spritz/app/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-hdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-hdpi/ic_launcher_round.png and b/spritz/app/src/main/res/mipmap-hdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-mdpi/ic_launcher.png and b/spritz/app/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-mdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-mdpi/ic_launcher_round.png and b/spritz/app/src/main/res/mipmap-mdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xhdpi/ic_launcher.png and b/spritz/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png and b/spritz/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher.png and b/spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png and b/spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png and b/spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png and b/spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "98543eb4dc7ebdc7a0bd8676cf53ec767becd4c8",
        "previous commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "diff stats": {
            "file_path": "spritz/images/spritz-icon-rect.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/images/spritz-icon-rect.png differ\n"
    },
    {
        "commit hash": "798587a202aded5688059fb29d8956b381507fa4",
        "previous commit hash": "97a96827503b9fbf8b63770f8bf29f76d04b32aa",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -202,7 +202,7 @@ public class Spritz {\n \n     public static class Builder {\n \n-        private static final long DEFAULT_SWIPE_ANIMATION_DURATION = TimeUnit.MILLISECONDS.toMillis(500);\n+        private static final long DEFAULT_SWIPE_ANIMATION_DURATION = TimeUnit.MILLISECONDS.toMillis(250);\n \n         private final LottieAnimationView lottieAnimationView;\n \n"
    },
    {
        "commit hash": "97a96827503b9fbf8b63770f8bf29f76d04b32aa",
        "previous commit hash": "b2e8c6d2050aaf19b2a02a29d7fdeb4a7573dbb0",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 2,
            "deletions": 5
        },
        "diff content": "@@ -29,7 +29,6 @@ public class MainActivity extends AppCompatActivity {\n \n     private Spritz spritz;\n     private ViewPager viewPager;\n-    private ViewPager.OnPageChangeListener onPageChangeListener;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n@@ -62,9 +61,6 @@ public class MainActivity extends AppCompatActivity {\n                 )\n                 .build();\n \n-        onPageChangeListener = spritz.getOnPageChangeListenerForViewPager(viewPager);\n-        viewPager.addOnPageChangeListener(onPageChangeListener);\n-\n         Button continueButton = findViewById(R.id.btn_continue);\n         continueButton.setOnClickListener(new View.OnClickListener() {\n             @Override\n@@ -90,12 +86,13 @@ public class MainActivity extends AppCompatActivity {\n     @Override\n     protected void onStart() {\n         super.onStart();\n+        spritz.attachTo(viewPager);\n         spritz.startPendingAnimations();\n     }\n \n     @Override\n     protected void onStop() {\n-        viewPager.removeOnPageChangeListener(onPageChangeListener);\n+        spritz.detachFrom(viewPager);\n         super.onStop();\n     }\n \n"
    },
    {
        "commit hash": "97a96827503b9fbf8b63770f8bf29f76d04b32aa",
        "previous commit hash": "b2e8c6d2050aaf19b2a02a29d7fdeb4a7573dbb0",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 11,
            "deletions": 3
        },
        "diff content": "@@ -27,6 +27,7 @@ public class Spritz {\n     private ViewPager viewPager;\n     private float currentPosition;\n     private AnimatorSet animatorSet;\n+    private ViewPager.OnPageChangeListener onPageChangeListener;\n \n     public static Builder with(LottieAnimationView lottieAnimationView) {\n         return new Builder(lottieAnimationView);\n@@ -48,12 +49,12 @@ public class Spritz {\n         this.animatorSet = new AnimatorSet();\n     }\n \n-    public ViewPager.OnPageChangeListener getOnPageChangeListenerForViewPager(ViewPager viewPager) {\n+    public void attachTo(ViewPager viewPager) {\n         this.viewPager = viewPager;\n-        currentPosition = viewPager.getCurrentItem();\n \n-        return new ViewPager.OnPageChangeListener() {\n+        this.currentPosition = viewPager.getCurrentItem();\n \n+        this.onPageChangeListener = new ViewPager.OnPageChangeListener() {\n             @Override\n             public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n                 float currentProgress = lottieAnimationView.getProgress();\n@@ -92,6 +93,8 @@ public class Spritz {\n             }\n \n         };\n+\n+        viewPager.addOnPageChangeListener(onPageChangeListener);\n     }\n \n     private boolean swipingForward(float newPosition) {\n@@ -101,6 +104,7 @@ public class Spritz {\n     public void startPendingAnimations() {\n         autoPlayForPosition(viewPager.getCurrentItem());\n     }\n+\n     private void autoPlayForPosition(int position) {\n         animatorSet.cancel();\n \n@@ -192,6 +196,10 @@ public class Spritz {\n         };\n     }\n \n+    public void detachFrom(ViewPager viewPager) {\n+        viewPager.removeOnPageChangeListener(onPageChangeListener);\n+    }\n+\n     public static class Builder {\n \n         private static final long DEFAULT_SWIPE_ANIMATION_DURATION = TimeUnit.MILLISECONDS.toMillis(500);\n"
    },
    {
        "commit hash": "b2e8c6d2050aaf19b2a02a29d7fdeb4a7573dbb0",
        "previous commit hash": "d0615f0eaef246046c8ea55e152b0d438d200f0b",
        "diff stats": {
            "file_path": "spritz/build.gradle",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -1,5 +1,3 @@\n-// Top-level build file where you can add configuration options common to all sub-projects/modules.\n-\n buildscript {\n     repositories {\n         jcenter()\n"
    },
    {
        "commit hash": "d0615f0eaef246046c8ea55e152b0d438d200f0b",
        "previous commit hash": "2be9a1807bd9569d4df9fcded758b2d4efe8dbd4",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 13,
            "deletions": 2
        },
        "diff content": "@@ -28,6 +28,8 @@ public class MainActivity extends AppCompatActivity {\n     private static final TimeInterpolator SWIPE_BACKWARDS_INTERPOLATOR = new FastOutSlowInInterpolator();\n \n     private Spritz spritz;\n+    private ViewPager viewPager;\n+    private ViewPager.OnPageChangeListener onPageChangeListener;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n@@ -37,7 +39,7 @@ public class MainActivity extends AppCompatActivity {\n         LottieAnimationView lottieAnimationView = findViewById(R.id.animation_view);\n         lottieAnimationView.setImageAssetsFolder(\"images\");\n \n-        final ViewPager viewPager = findViewById(R.id.viewpager);\n+        viewPager = findViewById(R.id.viewpager);\n         viewPager.setAdapter(new ScreenSlidePagerAdapter(getSupportFragmentManager()));\n \n         spritz = Spritz\n@@ -58,7 +60,10 @@ public class MainActivity extends AppCompatActivity {\n                                 .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n                                 .build()\n                 )\n-                .attachTo(viewPager);\n+                .build();\n+\n+        onPageChangeListener = spritz.getOnPageChangeListenerForViewPager(viewPager);\n+        viewPager.addOnPageChangeListener(onPageChangeListener);\n \n         Button continueButton = findViewById(R.id.btn_continue);\n         continueButton.setOnClickListener(new View.OnClickListener() {\n@@ -88,6 +93,12 @@ public class MainActivity extends AppCompatActivity {\n         spritz.startPendingAnimations();\n     }\n \n+    @Override\n+    protected void onStop() {\n+        viewPager.removeOnPageChangeListener(onPageChangeListener);\n+        super.onStop();\n+    }\n+\n     private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {\n \n         ScreenSlidePagerAdapter(FragmentManager fragmentManager) {\n"
    },
    {
        "commit hash": "d0615f0eaef246046c8ea55e152b0d438d200f0b",
        "previous commit hash": "2be9a1807bd9569d4df9fcded758b2d4efe8dbd4",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 10,
            "deletions": 14
        },
        "diff content": "@@ -48,10 +48,11 @@ public class Spritz {\n         this.animatorSet = new AnimatorSet();\n     }\n \n-    private void attach(ViewPager viewPager) {\n+    public ViewPager.OnPageChangeListener getOnPageChangeListenerForViewPager(ViewPager viewPager) {\n         this.viewPager = viewPager;\n+        currentPosition = viewPager.getCurrentItem();\n \n-        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n+        return new ViewPager.OnPageChangeListener() {\n \n             @Override\n             public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n@@ -90,23 +91,16 @@ public class Spritz {\n                 // do nothing\n             }\n \n-        });\n-\n-        currentPosition = viewPager.getCurrentItem();\n+        };\n     }\n \n     private boolean swipingForward(float newPosition) {\n         return newPosition >= currentPosition;\n     }\n \n-    private float getSwipeEndProgressForPosition(int position) {\n-        return ((float) spritzStepsWithOffset.get(position).swipeEnd()) / totalAnimationDuration;\n-    }\n-\n     public void startPendingAnimations() {\n         autoPlayForPosition(viewPager.getCurrentItem());\n     }\n-\n     private void autoPlayForPosition(int position) {\n         animatorSet.cancel();\n \n@@ -151,6 +145,10 @@ public class Spritz {\n         return swipeEndProgress;\n     }\n \n+    private float getSwipeEndProgressForPosition(int position) {\n+        return ((float) spritzStepsWithOffset.get(position).swipeEnd()) / totalAnimationDuration;\n+    }\n+\n     private TimeInterpolator getSwipeForwardInterpolatorFor(SpritzStepWithOffset currentStep) {\n         TimeInterpolator stepSwipeForwardInterpolator = currentStep.swipeForwardInterpolator();\n         if (stepSwipeForwardInterpolator != null) {\n@@ -230,8 +228,8 @@ public class Spritz {\n             return this;\n         }\n \n-        public Spritz attachTo(ViewPager viewPager) {\n-            Spritz spritz = new Spritz(\n+        public Spritz build() {\n+            return new Spritz(\n                     lottieAnimationView,\n                     spritzStepsWithOffset,\n                     calculateTotalAnimationDuration(),\n@@ -239,8 +237,6 @@ public class Spritz {\n                     defaultSwipeForwardInterpolator,\n                     defaultSwipeBackwardsInterpolator\n             );\n-            spritz.attach(viewPager);\n-            return spritz;\n         }\n \n         private long calculateTotalAnimationDuration() {\n"
    },
    {
        "commit hash": "2be9a1807bd9569d4df9fcded758b2d4efe8dbd4",
        "previous commit hash": "0a6abe94e0ba611d97570909f42bffbd2187bfe0",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/page.xml",
            "additions": 2,
            "deletions": 5
        },
        "diff content": "@@ -1,7 +1,4 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+<View xmlns:android=\"http://schemas.android.com/apk/res/android\"\n   android:layout_width=\"match_parent\"\n-  android:layout_height=\"match_parent\"\n-  android:orientation=\"vertical\">\n-\n-</RelativeLayout>\n+  android:layout_height=\"match_parent\" />\n"
    },
    {
        "commit hash": "0a6abe94e0ba611d97570909f42bffbd2187bfe0",
        "previous commit hash": "f44b30d478853854fb618a3dbc9881bed4d37c42",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -83,8 +83,8 @@ public class MainActivity extends AppCompatActivity {\n     }\n \n     @Override\n-    protected void onResume() {\n-        super.onResume();\n+    protected void onStart() {\n+        super.onStart();\n         spritz.startPendingAnimations();\n     }\n \n"
    },
    {
        "commit hash": "f44b30d478853854fb618a3dbc9881bed4d37c42",
        "previous commit hash": "2f5e61a472fd70180ccdad9a6c9ea95810b4dd75",
        "diff stats": {
            "file_path": "spritz/app/build.gradle",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -20,7 +20,4 @@ android {\n \n dependencies {\n     compile project(path: ':spritz-android')\n-\n-    compile 'com.android.support:appcompat-v7:26.1.0'\n-    compile 'com.android.support:design:26.1.0'\n }\n"
    },
    {
        "commit hash": "f44b30d478853854fb618a3dbc9881bed4d37c42",
        "previous commit hash": "2f5e61a472fd70180ccdad9a6c9ea95810b4dd75",
        "diff stats": {
            "file_path": "spritz/spritz-android/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -13,7 +13,6 @@ android {\n }\n \n dependencies {\n-    compile 'com.android.support:appcompat-v7:26.1.0'\n     compile 'com.airbnb.android:lottie:2.2.5'\n \n     testCompile 'junit:junit:4.12'\n"
    },
    {
        "commit hash": "2f5e61a472fd70180ccdad9a6c9ea95810b4dd75",
        "previous commit hash": "7310506c771437dedd2ac58ddc074a5bf6c6a982",
        "diff stats": {
            "file_path": "spritz/build.gradle",
            "additions": 0,
            "deletions": 4
        },
        "diff content": "@@ -3,13 +3,9 @@\n buildscript {\n     repositories {\n         jcenter()\n-\n     }\n     dependencies {\n         classpath 'com.android.tools.build:gradle:2.3.3'\n-\n-        // NOTE: Do not place your application dependencies here; they belong\n-        // in the individual module build.gradle files\n     }\n }\n \n"
    },
    {
        "commit hash": "7310506c771437dedd2ac58ddc074a5bf6c6a982",
        "previous commit hash": "ebe99aaeb3931424b1b1d4ae249401269a023e03",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/styles.xml",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -1,8 +1,6 @@\n <resources>\n \n-    <!-- Base application theme. -->\n     <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-        <!-- Customize your theme here. -->\n         <item name=\"colorPrimary\">@color/colorPrimary</item>\n         <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n         <item name=\"colorAccent\">@color/colorAccent</item>\n"
    },
    {
        "commit hash": "ebe99aaeb3931424b1b1d4ae249401269a023e03",
        "previous commit hash": "b8aac679c88dfbfb33f64c4fbb71788c19578ac9",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/strings.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,5 +1,5 @@\n <resources>\n-    <string name=\"app_name\">A Taste of Spritz</string>\n+  <string name=\"app_name\">A Taste of Spritz</string>\n   <string name=\"previous\">Previous</string>\n   <string name=\"next\">Next</string>\n </resources>\n"
    },
    {
        "commit hash": "b8aac679c88dfbfb33f64c4fbb71788c19578ac9",
        "previous commit hash": "bf8af393e8ffd08e0294948383ba373bde63e63e",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/main.xml",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -39,6 +39,5 @@\n       android:text=\"@string/next\" />\n \n   </LinearLayout>\n-\n-\n+  \n </RelativeLayout>\n"
    },
    {
        "commit hash": "bf8af393e8ffd08e0294948383ba373bde63e63e",
        "previous commit hash": "efe508669bc9b38523311c9def54b54435736883",
        "diff stats": {
            "file_path": "spritz/app/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -22,6 +22,5 @@ dependencies {\n     compile project(path: ':spritz-android')\n \n     compile 'com.android.support:appcompat-v7:26.1.0'\n-    compile 'com.android.support.constraint:constraint-layout:1.0.2'\n     compile 'com.android.support:design:26.1.0'\n }\n"
    },
    {
        "commit hash": "efe508669bc9b38523311c9def54b54435736883",
        "previous commit hash": "635fd6158c58fde214d93abb95a699868919a90b",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -112,7 +112,6 @@ public class MainActivity extends AppCompatActivity {\n             // default constructor\n         }\n \n-        @Nullable\n         @Override\n         public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n             return inflater.inflate(R.layout.page, container, false);\n"
    },
    {
        "commit hash": "635fd6158c58fde214d93abb95a699868919a90b",
        "previous commit hash": "bec8bf8a5da89d03bf4646289c0d4ce3fe9464e4",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -23,7 +23,7 @@ import java.util.concurrent.TimeUnit;\n \n public class MainActivity extends AppCompatActivity {\n \n-    public static final int PAGER_NUM = 3;\n+    private static final int PAGES_COUNT = 3;\n     private static final TimeInterpolator SWIPE_FORWARD_INTERPOLATOR = new LinearOutSlowInInterpolator();\n     private static final TimeInterpolator SWIPE_BACKWARDS_INTERPOLATOR = new FastOutSlowInInterpolator();\n \n@@ -65,7 +65,7 @@ public class MainActivity extends AppCompatActivity {\n             @Override\n             public void onClick(View v) {\n                 int nextItem = viewPager.getCurrentItem() + 1;\n-                if (PAGER_NUM > nextItem) {\n+                if (PAGES_COUNT > nextItem) {\n                     viewPager.setCurrentItem(nextItem);\n                 }\n             }\n@@ -101,7 +101,7 @@ public class MainActivity extends AppCompatActivity {\n \n         @Override\n         public int getCount() {\n-            return PAGER_NUM;\n+            return PAGES_COUNT;\n         }\n \n     }\n"
    },
    {
        "commit hash": "bec8bf8a5da89d03bf4646289c0d4ce3fe9464e4",
        "previous commit hash": "bc0c033522d78ef89f5798d780a84a1362b52a4f",
        "diff stats": {
            "file_path": "spritz/app/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@\n     package=\"com.novoda.spritz.sample\">\n \n     <application\n-        android:allowBackup=\"true\"\n+        android:allowBackup=\"false\"\n         android:icon=\"@mipmap/ic_launcher\"\n         android:label=\"@string/app_name\"\n         android:roundIcon=\"@mipmap/ic_launcher_round\"\n"
    },
    {
        "commit hash": "bc0c033522d78ef89f5798d780a84a1362b52a4f",
        "previous commit hash": "bd30c37c43e4749853fb732b993c05c7cc01a824",
        "diff stats": {
            "file_path": "spritz/app/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -24,5 +24,4 @@ dependencies {\n     compile 'com.android.support:appcompat-v7:26.1.0'\n     compile 'com.android.support.constraint:constraint-layout:1.0.2'\n     compile 'com.android.support:design:26.1.0'\n-    compile 'com.airbnb.android:lottie:2.1.0'\n }\n"
    },
    {
        "commit hash": "bc0c033522d78ef89f5798d780a84a1362b52a4f",
        "previous commit hash": "bd30c37c43e4749853fb732b993c05c7cc01a824",
        "diff stats": {
            "file_path": "spritz/spritz-android/build.gradle",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -14,8 +14,7 @@ android {\n \n dependencies {\n     compile 'com.android.support:appcompat-v7:26.1.0'\n-    compile 'com.android.support:design:26.1.0'\n-    compile 'com.airbnb.android:lottie:2.1.0'\n+    compile 'com.airbnb.android:lottie:2.2.5'\n \n     testCompile 'junit:junit:4.12'\n }\n"
    },
    {
        "commit hash": "bd30c37c43e4749853fb732b993c05c7cc01a824",
        "previous commit hash": "30085d03d38ca15e25083f45da022d506a92ad45",
        "diff stats": {
            "file_path": "spritz/LICENSE",
            "additions": 202,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,202 @@\n+\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n"
    },
    {
        "commit hash": "30085d03d38ca15e25083f45da022d506a92ad45",
        "previous commit hash": "7adc4638ab2c0b1e585c94fd305ce220724b2e61",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -89,7 +89,7 @@ animation if the user stops dragging forwards at any point (before starting the\n #### `withDefaultSwipeBackwardsInterpolator`\n \n `withDefaultSwipeBackwardsInterpolator(TimeInterpolator swipeBackwardsInterpolator)` sets the interpolator to use for all pages to complete the swipe \n-animation if the user stops  dragging backwards at any point. If you don't set this, it will default to `LinearInterpolator`. You can always override \n+animation if the user stops dragging backwards at any point. If you don't set this, it will default to `LinearInterpolator`. You can always override \n this default for single pages (see [`withSwipeBackwardsInterpolator`](#withswipebackwardsinterpolator)).\n \n #### `withSteps`\n"
    },
    {
        "commit hash": "7adc4638ab2c0b1e585c94fd305ce220724b2e61",
        "previous commit hash": "62ad738a64883501985846f1525dba12c839016f",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -38,7 +38,7 @@ These segments must be consecutive to one another, as if the user continuously m\n \n After getting your `LottieAnimationView` and your `ViewPager`, just create a `Spritz` object with the following syntax:\n \n-```\n+```java\n Spritz\n     .with(lottieAnimationView)\n     .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n@@ -66,7 +66,7 @@ Spritz\n \n Start building your view pager animation by calling:\n \n-```\n+```java\n SpritzPage.with(lottieAnimationView)\n ```\n \n"
    },
    {
        "commit hash": "62ad738a64883501985846f1525dba12c839016f",
        "previous commit hash": "e2a51cdb19e2d3e97f72ab0f246ac572131838bd",
        "diff stats": {
            "file_path": "spritz/.gitignore",
            "additions": 32,
            "deletions": 8
        },
        "diff content": "@@ -1,9 +1,33 @@\n+# Built application files\n+*.apk\n+*.ap_\n+\n+# Files for the Dalvik VM\n+*.dex\n+\n+# Java class files\n+*.class\n+\n+# Generated files\n+bin/\n+gen/\n+\n+# Gradle files\n+.gradle/\n+build/\n+\n+# Local configuration file (sdk path, etc)\n+local.properties\n+\n+# Log Files\n+*.log\n+\n+# IDEA/Android Studio ignores\n *.iml\n-.gradle\n-/local.properties\n-/.idea/workspace.xml\n-/.idea/libraries\n-.DS_Store\n-/build\n-/captures\n-.externalNativeBuild\n+*.ipr\n+*.iws\n+/.idea/*\n+\n+# IDEA/Android Studio Ignore exceptions\n+!/.idea/copyright/\n+!/.idea/compiler.xml\n"
    },
    {
        "commit hash": "e2a51cdb19e2d3e97f72ab0f246ac572131838bd",
        "previous commit hash": "4bfb1654368f0becc7a283392e72483f336b173b",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 15,
            "deletions": 15
        },
        "diff content": "@@ -13,7 +13,7 @@ while swiping and auto-playing when the swipe is complete.\n \n ### Basics\n \n-Each page in the `ViewPager` has two possible animations:\n+Each step in the `ViewPager` has two possible animations:\n \n - a \"swipe away\" animation that will be triggered while the user drags from one page to the next or previous one\n - an \"autoplay\" animation segment that plays as soon as the user enters the destination page\n@@ -43,17 +43,17 @@ Spritz\n     .with(lottieAnimationView)\n     .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n     .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n-    .withPages(\n-            new SpritzPage.Builder()\n+    .withSteps(\n+            new SpritzStep.Builder()\n                     .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n                     .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n                     .build(),\n-            new SpritzPage.Builder()\n+            new SpritzStep.Builder()\n                     .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n                     .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n                     .withSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n                     .build(),\n-            new SpritzPage.Builder()\n+            new SpritzStep.Builder()\n                     .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n                     .build()\n     )\n@@ -92,34 +92,34 @@ animation if the user stops dragging forwards at any point (before starting the\n animation if the user stops  dragging backwards at any point. If you don't set this, it will default to `LinearInterpolator`. You can always override \n this default for single pages (see [`withSwipeBackwardsInterpolator`](#withswipebackwardsinterpolator)).\n \n-#### `withPages`\n+#### `withSteps`\n \n-`withPages(SpritzPage... pages)` lets you specify the number of pages to animate through. The library is made to work with the same number of pages as \n-the ones set in the `ViewPager`.\n+`withSteps(SpritzStep... steps)` lets you specify the steps to animate through. The library is made to work with the same number of pages as the ones \n+set in the `ViewPager`.\n \n-See [Building the pages](#building-the-pages) to learn how to build a list of pages that match your exported animation.\n+See [Building the steps](#building-the-steps) to learn how to build a list of steps that match your exported animation.\n \n #### `attachTo`\n \n-After setting the pages, simply call `attachTo(ViewPager viewPager)` to register all the needed listeners and set everything up. Congratulations! Now\n+After setting the steps, simply call `attachTo(ViewPager viewPager)` to register all the needed listeners and set everything up. Congratulations! Now\n you have a `spritz` object!\n \n #### `startPendingAnimations`\n \n-You can call `startPendingAnimations` on your `spritz` object to trigger the autoplay animation for your first page, if you have one.\n+You can call `startPendingAnimations` on your `spritz` object to trigger the autoplay animation for your first step.\n \n-### Building the pages\n+### Building the steps\n \n-To build a page, use the `SpritzPage.Builder` class, configure it as explained in the following sections, then build it with `.build()`.\n+To build a step, use the `SpritzStep.Builder` class, configure it as explained in the following sections, then build it with `.build()`.\n \n #### `withAutoPlayDuration`\n \n-`withAutoPlayDuration(long duration, TimeUnit timeUnit)` sets the duration of the autoplay animation for the given page. This must match the exact \n+`withAutoPlayDuration(long duration, TimeUnit timeUnit)` sets the duration of the autoplay animation for the given step. This must match the exact \n duration of the autoplay segment in your AfterEffects project.\n \n #### `withSwipeDuration`\n \n-`withSwipeDuration(long duration, TimeUnit timeUnit)` sets the duration of the swipe animation for the given page. This must match the exact \n+`withSwipeDuration(long duration, TimeUnit timeUnit)` sets the duration of the swipe animation for the given step. This must match the exact \n duration of the swipe segment in your AfterEffects project.\n \n #### `withSwipeForwardInterpolator`\n"
    },
    {
        "commit hash": "e2a51cdb19e2d3e97f72ab0f246ac572131838bd",
        "previous commit hash": "4bfb1654368f0becc7a283392e72483f336b173b",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -17,7 +17,7 @@ import android.widget.Button;\n \n import com.airbnb.lottie.LottieAnimationView;\n import com.novoda.spritz.Spritz;\n-import com.novoda.spritz.SpritzPage;\n+import com.novoda.spritz.SpritzStep;\n \n import java.util.concurrent.TimeUnit;\n \n@@ -45,16 +45,16 @@ public class MainActivity extends AppCompatActivity {\n                 .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n                 .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n                 .withDefaultSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n-                .withPages(\n-                        new SpritzPage.Builder()\n+                .withSteps(\n+                        new SpritzStep.Builder()\n                                 .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n                                 .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n                                 .build(),\n-                        new SpritzPage.Builder()\n+                        new SpritzStep.Builder()\n                                 .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n                                 .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n                                 .build(),\n-                        new SpritzPage.Builder()\n+                        new SpritzStep.Builder()\n                                 .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n                                 .build()\n                 )\n"
    },
    {
        "commit hash": "e2a51cdb19e2d3e97f72ab0f246ac572131838bd",
        "previous commit hash": "4bfb1654368f0becc7a283392e72483f336b173b",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 26,
            "deletions": 26
        },
        "diff content": "@@ -18,7 +18,7 @@ import java.util.concurrent.TimeUnit;\n public class Spritz {\n \n     private final LottieAnimationView lottieAnimationView;\n-    private final List<SpritzPageWithOffset> spritzPagesWithOffset;\n+    private final List<SpritzStepWithOffset> spritzStepsWithOffset;\n     private final long totalAnimationDuration;\n     private final long defaultSwipeAnimationDuration;\n     private final TimeInterpolator defaultSwipeForwardInterpolator;\n@@ -33,14 +33,14 @@ public class Spritz {\n     }\n \n     private Spritz(LottieAnimationView lottieAnimationView,\n-                   List<SpritzPageWithOffset> spritzPagesWithOffset,\n+                   List<SpritzStepWithOffset> spritzStepsWithOffset,\n                    long totalAnimationDuration,\n                    long defaultSwipeAnimationDuration,\n                    TimeInterpolator defaultSwipeForwardInterpolator,\n                    TimeInterpolator defaultSwipeBackwardsInterpolator) {\n \n         this.lottieAnimationView = lottieAnimationView;\n-        this.spritzPagesWithOffset = spritzPagesWithOffset;\n+        this.spritzStepsWithOffset = spritzStepsWithOffset;\n         this.totalAnimationDuration = totalAnimationDuration;\n         this.defaultSwipeAnimationDuration = defaultSwipeAnimationDuration;\n         this.defaultSwipeForwardInterpolator = defaultSwipeForwardInterpolator;\n@@ -100,7 +100,7 @@ public class Spritz {\n     }\n \n     private float getSwipeEndProgressForPosition(int position) {\n-        return ((float) spritzPagesWithOffset.get(position).swipeEnd()) / totalAnimationDuration;\n+        return ((float) spritzStepsWithOffset.get(position).swipeEnd()) / totalAnimationDuration;\n     }\n \n     public void startPendingAnimations() {\n@@ -127,17 +127,17 @@ public class Spritz {\n         float currentProgress = lottieAnimationView.getProgress();\n         float previousSwipeEndProgress = getSwipeEndForPreviousPositionOrZero(position);\n         float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n-        SpritzPageWithOffset currentPage = spritzPagesWithOffset.get(position);\n+        SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n \n         ValueAnimator finishSwipeAnimation = ValueAnimator\n                 .ofFloat(currentProgress, previousSwipeEndProgress)\n                 .setDuration(defaultSwipeAnimationDuration);\n-        finishSwipeAnimation.setInterpolator(getSwipeForwardInterpolatorFor(currentPage));\n+        finishSwipeAnimation.setInterpolator(getSwipeForwardInterpolatorFor(currentStep));\n         finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n \n         ValueAnimator autoPlayAnimation = ValueAnimator\n                 .ofFloat(previousSwipeEndProgress, autoPlayEndProgress)\n-                .setDuration(currentPage.autoPlayDuration());\n+                .setDuration(currentStep.autoPlayDuration());\n         autoPlayAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n \n         return Arrays.<Animator>asList(finishSwipeAnimation, autoPlayAnimation);\n@@ -151,36 +151,36 @@ public class Spritz {\n         return swipeEndProgress;\n     }\n \n-    private TimeInterpolator getSwipeForwardInterpolatorFor(SpritzPageWithOffset currentPage) {\n-        TimeInterpolator pageSwipeForwardInterpolator = currentPage.swipeForwardInterpolator();\n-        if (pageSwipeForwardInterpolator != null) {\n-            return pageSwipeForwardInterpolator;\n+    private TimeInterpolator getSwipeForwardInterpolatorFor(SpritzStepWithOffset currentStep) {\n+        TimeInterpolator stepSwipeForwardInterpolator = currentStep.swipeForwardInterpolator();\n+        if (stepSwipeForwardInterpolator != null) {\n+            return stepSwipeForwardInterpolator;\n         }\n         return this.defaultSwipeForwardInterpolator;\n     }\n \n     private List<Animator> swipeBackwards(int position) {\n-        SpritzPageWithOffset currentPage = spritzPagesWithOffset.get(position);\n+        SpritzStepWithOffset currentStep = spritzStepsWithOffset.get(position);\n         float currentProgress = lottieAnimationView.getProgress();\n         float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n \n         ValueAnimator finishSwipeAnimation = ValueAnimator\n                 .ofFloat(currentProgress, autoPlayEndProgress)\n                 .setDuration(defaultSwipeAnimationDuration);\n-        finishSwipeAnimation.setInterpolator(getSwipeBackwardsInterpolatorFor(currentPage));\n+        finishSwipeAnimation.setInterpolator(getSwipeBackwardsInterpolatorFor(currentStep));\n         finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n \n         return Collections.<Animator>singletonList(finishSwipeAnimation);\n     }\n \n     private float getAutoPlayEndProgressForPosition(int position) {\n-        return ((float) spritzPagesWithOffset.get(position).autoPlayEnd()) / totalAnimationDuration;\n+        return ((float) spritzStepsWithOffset.get(position).autoPlayEnd()) / totalAnimationDuration;\n     }\n \n-    private TimeInterpolator getSwipeBackwardsInterpolatorFor(SpritzPageWithOffset currentPage) {\n-        TimeInterpolator pageSwipeBackwardsInterpolator = currentPage.swipeBackwardsInterpolator();\n-        if (pageSwipeBackwardsInterpolator != null) {\n-            return pageSwipeBackwardsInterpolator;\n+    private TimeInterpolator getSwipeBackwardsInterpolatorFor(SpritzStepWithOffset currentStep) {\n+        TimeInterpolator stepSwipeBackwardsInterpolator = currentStep.swipeBackwardsInterpolator();\n+        if (stepSwipeBackwardsInterpolator != null) {\n+            return stepSwipeBackwardsInterpolator;\n         }\n         return this.defaultSwipeBackwardsInterpolator;\n     }\n@@ -203,11 +203,11 @@ public class Spritz {\n         private long defaultSwipeAnimationDuration = DEFAULT_SWIPE_ANIMATION_DURATION;\n         private TimeInterpolator defaultSwipeForwardInterpolator = new LinearInterpolator();\n         private TimeInterpolator defaultSwipeBackwardsInterpolator = new LinearInterpolator();\n-        private List<SpritzPageWithOffset> spritzPagesWithOffset;\n+        private List<SpritzStepWithOffset> spritzStepsWithOffset;\n \n         private Builder(LottieAnimationView lottieAnimationView) {\n             this.lottieAnimationView = lottieAnimationView;\n-            spritzPagesWithOffset = new ArrayList<>();\n+            spritzStepsWithOffset = new ArrayList<>();\n         }\n \n         public Builder withDefaultSwipeAnimationDuration(long defaultSwipeAnimationDuration, TimeUnit timeUnit) {\n@@ -225,15 +225,15 @@ public class Spritz {\n             return this;\n         }\n \n-        public Builder withPages(SpritzPage... spritzPages) {\n-            this.spritzPagesWithOffset = SpritzPageWithOffset.fromSpritzPages(spritzPages);\n+        public Builder withSteps(SpritzStep... spritzSteps) {\n+            this.spritzStepsWithOffset = SpritzStepWithOffset.fromSpritzSteps(spritzSteps);\n             return this;\n         }\n \n         public Spritz attachTo(ViewPager viewPager) {\n             Spritz spritz = new Spritz(\n                     lottieAnimationView,\n-                    spritzPagesWithOffset,\n+                    spritzStepsWithOffset,\n                     calculateTotalAnimationDuration(),\n                     defaultSwipeAnimationDuration,\n                     defaultSwipeForwardInterpolator,\n@@ -244,12 +244,12 @@ public class Spritz {\n         }\n \n         private long calculateTotalAnimationDuration() {\n-            if (spritzPagesWithOffset.isEmpty()) {\n+            if (spritzStepsWithOffset.isEmpty()) {\n                 return 0;\n             }\n \n-            int lastIndex = spritzPagesWithOffset.size() - 1;\n-            return spritzPagesWithOffset.get(lastIndex).swipeEnd();\n+            int lastIndex = spritzStepsWithOffset.size() - 1;\n+            return spritzStepsWithOffset.get(lastIndex).swipeEnd();\n         }\n \n     }\n"
    },
    {
        "commit hash": "e2a51cdb19e2d3e97f72ab0f246ac572131838bd",
        "previous commit hash": "4bfb1654368f0becc7a283392e72483f336b173b",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzStep.java",
            "additions": 4,
            "deletions": 4
        },
        "diff content": "@@ -4,14 +4,14 @@ import android.animation.TimeInterpolator;\n \n import java.util.concurrent.TimeUnit;\n \n-public class SpritzPage {\n+public class SpritzStep {\n \n     private final long autoPlayDuration;\n     private final long swipeDuration;\n     private final TimeInterpolator swipeForwardInterpolator;\n     private final TimeInterpolator swipeBackwardsInterpolator;\n \n-    private SpritzPage(long autoPlayDuration,\n+    private SpritzStep(long autoPlayDuration,\n                        long swipeDuration,\n                        TimeInterpolator swipeForwardInterpolator,\n                        TimeInterpolator swipeBackwardsInterpolator) {\n@@ -65,8 +65,8 @@ public class SpritzPage {\n             return this;\n         }\n \n-        public SpritzPage build() {\n-            return new SpritzPage(\n+        public SpritzStep build() {\n+            return new SpritzStep(\n                     autoPlayDuration,\n                     swipeDuration,\n                     swipeForwardInterpolator,\n"
    },
    {
        "commit hash": "e2a51cdb19e2d3e97f72ab0f246ac572131838bd",
        "previous commit hash": "4bfb1654368f0becc7a283392e72483f336b173b",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzStepWithOffset.java",
            "additions": 13,
            "deletions": 13
        },
        "diff content": "@@ -5,7 +5,7 @@ import android.animation.TimeInterpolator;\n import java.util.ArrayList;\n import java.util.List;\n \n-class SpritzPageWithOffset {\n+class SpritzStepWithOffset {\n \n     private final long autoPlayDuration;\n     private final long autoPlayEnd;\n@@ -13,7 +13,7 @@ class SpritzPageWithOffset {\n     private final TimeInterpolator swipeForwardInterpolator;\n     private final TimeInterpolator swipeBackwardsInterpolator;\n \n-    private SpritzPageWithOffset(long autoPlayDuration,\n+    private SpritzStepWithOffset(long autoPlayDuration,\n                                  long autoPlayEnd,\n                                  long swipeEnd,\n                                  TimeInterpolator swipeForwardInterpolator,\n@@ -46,27 +46,27 @@ class SpritzPageWithOffset {\n         return swipeBackwardsInterpolator;\n     }\n \n-    static List<SpritzPageWithOffset> fromSpritzPages(SpritzPage... spritzPages) {\n-        List<SpritzPageWithOffset> spritzPageWithOffsetList = new ArrayList<>(spritzPages.length);\n+    static List<SpritzStepWithOffset> fromSpritzSteps(SpritzStep... spritzSteps) {\n+        List<SpritzStepWithOffset> spritzStepWithOffsetList = new ArrayList<>(spritzSteps.length);\n         long totalAnimationTime = 0;\n \n-        for (SpritzPage spritzPage : spritzPages) {\n-            long autoPlayEnd = totalAnimationTime + spritzPage.autoPlayDuration();\n-            long swipeEnd = totalAnimationTime + spritzPage.autoPlayDuration() + spritzPage.swipeDuration();\n+        for (SpritzStep spritzStep : spritzSteps) {\n+            long autoPlayEnd = totalAnimationTime + spritzStep.autoPlayDuration();\n+            long swipeEnd = totalAnimationTime + spritzStep.autoPlayDuration() + spritzStep.swipeDuration();\n \n-            spritzPageWithOffsetList.add(\n-                    new SpritzPageWithOffset(\n-                            spritzPage.autoPlayDuration(),\n+            spritzStepWithOffsetList.add(\n+                    new SpritzStepWithOffset(\n+                            spritzStep.autoPlayDuration(),\n                             autoPlayEnd,\n                             swipeEnd,\n-                            spritzPage.swipeForwardInterpolator(),\n-                            spritzPage.swipeBackwardsInterpolator()\n+                            spritzStep.swipeForwardInterpolator(),\n+                            spritzStep.swipeBackwardsInterpolator()\n                     )\n             );\n \n             totalAnimationTime = swipeEnd;\n         }\n \n-        return spritzPageWithOffsetList;\n+        return spritzStepWithOffsetList;\n     }\n }\n"
    },
    {
        "commit hash": "4bfb1654368f0becc7a283392e72483f336b173b",
        "previous commit hash": "96a580d7747ed633d2e2e0672dee327caaeb826c",
        "diff stats": {
            "file_path": "spritz/app/proguard-rules.pro",
            "additions": 0,
            "deletions": 25
        },
        "diff content": "@@ -1,25 +0,0 @@\n-# Add project specific ProGuard rules here.\n-# By default, the flags in this file are appended to flags specified\n-# in /Users/chris/Library/Android/sdk/tools/proguard/proguard-android.txt\n-# You can edit the include path and order by changing the proguardFiles\n-# directive in build.gradle.\n-#\n-# For more details, see\n-#   http://developer.android.com/guide/developing/tools/proguard.html\n-\n-# Add any project specific keep options here:\n-\n-# If your project uses WebView with JS, uncomment the following\n-# and specify the fully qualified class name to the JavaScript interface\n-# class:\n-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n-#   public *;\n-#}\n-\n-# Uncomment this to preserve the line number information for\n-# debugging stack traces.\n-#-keepattributes SourceFile,LineNumberTable\n-\n-# If you keep the line number information, uncomment this to\n-# hide the original source file name.\n-#-renamesourcefileattribute SourceFile\n"
    },
    {
        "commit hash": "4bfb1654368f0becc7a283392e72483f336b173b",
        "previous commit hash": "96a580d7747ed633d2e2e0672dee327caaeb826c",
        "diff stats": {
            "file_path": "spritz/spritz-android/proguard-rules.pro",
            "additions": 0,
            "deletions": 25
        },
        "diff content": "@@ -1,25 +0,0 @@\n-# Add project specific ProGuard rules here.\n-# By default, the flags in this file are appended to flags specified\n-# in /Users/fra/Library/Android/sdk/tools/proguard/proguard-android.txt\n-# You can edit the include path and order by changing the proguardFiles\n-# directive in build.gradle.\n-#\n-# For more details, see\n-#   http://developer.android.com/guide/developing/tools/proguard.html\n-\n-# Add any project specific keep options here:\n-\n-# If your project uses WebView with JS, uncomment the following\n-# and specify the fully qualified class name to the JavaScript interface\n-# class:\n-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n-#   public *;\n-#}\n-\n-# Uncomment this to preserve the line number information for\n-# debugging stack traces.\n-#-keepattributes SourceFile,LineNumberTable\n-\n-# If you keep the line number information, uncomment this to\n-# hide the original source file name.\n-#-renamesourcefileattribute SourceFile\n"
    },
    {
        "commit hash": "96a580d7747ed633d2e2e0672dee327caaeb826c",
        "previous commit hash": "8c97f9cdeeefc70e291983c2e929bb507b878c17",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -22,7 +22,6 @@ include 'OptionalDependencies'\n include 'PinchZoomDetector'\n include 'simperAudioStreamer'\n include 'sms'\n-include 'spritz'\n include 'TabHostExample'\n include 'TabHostSelfContainedTabBrowsing'\n include 'wizard'\n"
    },
    {
        "commit hash": "8c97f9cdeeefc70e291983c2e929bb507b878c17",
        "previous commit hash": "98b423a8a47d8a3ccd97a4ad219950a5010b8e20",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -7,6 +7,8 @@ _Animate your view pager with Lottie and zero efforts._\n Spritz is an Android library to seamlessly trigger a Lottie animation when the user drags a `ViewPager` or changes page. It supports animating \n while swiping and auto-playing when the swipe is complete.\n \n+![A taste of spritz](images/a-taste-of-spritz.gif)\n+\n ## How to use\n \n ### Basics\n"
    },
    {
        "commit hash": "8c97f9cdeeefc70e291983c2e929bb507b878c17",
        "previous commit hash": "98b423a8a47d8a3ccd97a4ad219950a5010b8e20",
        "diff stats": {
            "file_path": "spritz/images/a-taste-of-spritz.gif",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/images/a-taste-of-spritz.gif differ\n"
    },
    {
        "commit hash": "98b423a8a47d8a3ccd97a4ad219950a5010b8e20",
        "previous commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -115,7 +115,7 @@ To build a page, use the `SpritzPage.Builder` class, configure it as explained i\n `withAutoPlayDuration(long duration, TimeUnit timeUnit)` sets the duration of the autoplay animation for the given page. This must match the exact \n duration of the autoplay segment in your AfterEffects project.\n \n-#### ``\n+#### `withSwipeDuration`\n \n `withSwipeDuration(long duration, TimeUnit timeUnit)` sets the duration of the swipe animation for the given page. This must match the exact \n duration of the swipe segment in your AfterEffects project.\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -22,6 +22,7 @@ This is a collection of basic android examples created by Novoda.\n * [PinchZoomDetector](http://github.com/novoda/android-demos/tree/master/PinchZoomDetector)\n * [simperAudioStreamer](http://github.com/novoda/android-demos/tree/master/simperAudioStreamer)\n * [sms](http://github.com/novoda/android-demos/tree/master/sms)\n+* [spritz](http://github.com/novoda/android-demos/tree/master/spritz)\n * [TabHostExample](http://github.com/novoda/android-demos/tree/master/TabHostExample)\n * [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n * [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 5,
            "deletions": 4
        },
        "diff content": "@@ -8,20 +8,21 @@ include 'FixedSizeTextColumns'\n include 'Fragments'\n include 'GsonJsonWebservice'\n include 'LeftNavBarLibrary'\n-project(':LeftNavBarLibrary').projectDir = new File('LeftNavBarExample/LeftNavBarLibrary') \n+project(':LeftNavBarLibrary').projectDir = new File('LeftNavBarExample/LeftNavBarLibrary')\n include 'LeftNavBarExample'\n-project(':LeftNavBarExample').projectDir = new File('LeftNavBarExample/Example') \n+project(':LeftNavBarExample').projectDir = new File('LeftNavBarExample/Example')\n include 'ListStyles'\n include 'LivewallpaperSwitchAnimation'\n-project(':LivewallpaperSwitchAnimation').projectDir = new File('Livewallpaper/switch_animation') \n+project(':LivewallpaperSwitchAnimation').projectDir = new File('Livewallpaper/switch_animation')\n include 'LivewallpaperSwitchLeftRight'\n-project(':LivewallpaperSwitchLeftRight').projectDir = new File('Livewallpaper/switch_leftright') \n+project(':LivewallpaperSwitchLeftRight').projectDir = new File('Livewallpaper/switch_leftright')\n include 'MapApiV2Demo'\n include 'MultipleContacts'\n include 'OptionalDependencies'\n include 'PinchZoomDetector'\n include 'simperAudioStreamer'\n include 'sms'\n+include 'spritz'\n include 'TabHostExample'\n include 'TabHostSelfContainedTabBrowsing'\n include 'wizard'\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/.gitignore",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+*.iml\n+.gradle\n+/local.properties\n+/.idea/workspace.xml\n+/.idea/libraries\n+.DS_Store\n+/build\n+/captures\n+.externalNativeBuild\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/README.md",
            "additions": 151,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,151 @@\n+# spritz\n+\n+_Animate your view pager with Lottie and zero efforts._\n+\n+--------\n+\n+Spritz is an Android library to seamlessly trigger a Lottie animation when the user drags a `ViewPager` or changes page. It supports animating \n+while swiping and auto-playing when the swipe is complete.\n+\n+## How to use\n+\n+### Basics\n+\n+Each page in the `ViewPager` has two possible animations:\n+\n+- a \"swipe away\" animation that will be triggered while the user drags from one page to the next or previous one\n+- an \"autoplay\" animation segment that plays as soon as the user enters the destination page\n+\n+When swiping forward, the animation will stop right before auto-playing. When swiping backwards, instead, the animation will stop at the end of the\n+previous page's autoplay animation, so it doesn't play again since that page is in an \"already visited\" state.\n+\n+### Lottie Animation\n+\n+To learn how to create a Lottie-compatible animation from After Effects, please read \n+[our blog post \"Whole Lottie Love\"](https://www.novoda.com/blog/whole-lottie-love/), which contains basic instructions on how to export an animation\n+into a Lottie-supported format.\n+\n+Your animation should have:\n+\n+- for each page, a \"swipe away\" animation\n+- for each page, optionally, an \"autoplay\" animation segment\n+\n+These segments must be consecutive to one another, as if the user continuously moves to one page to another.\n+\n+### Code!\n+\n+After getting your `LottieAnimationView` and your `ViewPager`, just create a `Spritz` object with the following syntax:\n+\n+```\n+Spritz\n+    .with(lottieAnimationView)\n+    .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n+    .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n+    .withPages(\n+            new SpritzPage.Builder()\n+                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                    .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n+                    .build(),\n+            new SpritzPage.Builder()\n+                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                    .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n+                    .withSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n+                    .build(),\n+            new SpritzPage.Builder()\n+                    .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                    .build()\n+    )\n+    .attachTo(viewPager);\n+```\n+\n+## Technical documentation\n+\n+### Make your own kind of Spritz\n+\n+Start building your view pager animation by calling:\n+\n+```\n+SpritzPage.with(lottieAnimationView)\n+```\n+\n+This will set the specific `LottieAnimationView` as the target of your animations. The Lottie view must load the animation separately, as it is not \n+in the scope of this library.\n+\n+After that, you can proceed setting your view pager transitions.\n+\n+#### `withDefaultSwipeAnimationDuration`\n+\n+`withDefaultSwipeAnimationDuration(long duration, TimeUnit timeUnit)` allows you to specify how long the swiping animation has to complete if the user \n+stops dragging.\n+\n+#### `withDefaultSwipeForwardInterpolator`\n+\n+`withDefaultSwipeForwardInterpolator(TimeInterpolator swipeForwardInterpolator)` sets the interpolator to use for all pages to complete the swipe \n+animation if the user stops dragging forwards at any point (before starting the autoplay animation, if any). If you don't set this, it will default to\n+`LinearInterpolator`. You can always override this default for single pages (see [`withSwipeForwardInterpolator`](#withswipeforwardinterpolator)).\n+\n+#### `withDefaultSwipeBackwardsInterpolator`\n+\n+`withDefaultSwipeBackwardsInterpolator(TimeInterpolator swipeBackwardsInterpolator)` sets the interpolator to use for all pages to complete the swipe \n+animation if the user stops  dragging backwards at any point. If you don't set this, it will default to `LinearInterpolator`. You can always override \n+this default for single pages (see [`withSwipeBackwardsInterpolator`](#withswipebackwardsinterpolator)).\n+\n+#### `withPages`\n+\n+`withPages(SpritzPage... pages)` lets you specify the number of pages to animate through. The library is made to work with the same number of pages as \n+the ones set in the `ViewPager`.\n+\n+See [Building the pages](#building-the-pages) to learn how to build a list of pages that match your exported animation.\n+\n+#### `attachTo`\n+\n+After setting the pages, simply call `attachTo(ViewPager viewPager)` to register all the needed listeners and set everything up. Congratulations! Now\n+you have a `spritz` object!\n+\n+#### `startPendingAnimations`\n+\n+You can call `startPendingAnimations` on your `spritz` object to trigger the autoplay animation for your first page, if you have one.\n+\n+### Building the pages\n+\n+To build a page, use the `SpritzPage.Builder` class, configure it as explained in the following sections, then build it with `.build()`.\n+\n+#### `withAutoPlayDuration`\n+\n+`withAutoPlayDuration(long duration, TimeUnit timeUnit)` sets the duration of the autoplay animation for the given page. This must match the exact \n+duration of the autoplay segment in your AfterEffects project.\n+\n+#### ``\n+\n+`withSwipeDuration(long duration, TimeUnit timeUnit)` sets the duration of the swipe animation for the given page. This must match the exact \n+duration of the swipe segment in your AfterEffects project.\n+\n+#### `withSwipeForwardInterpolator`\n+\n+`withSwipeForwardInterpolator(TimeInterpolator timeInterpolator)` sets the interpolator to use to complete the swipe animation if the user stops \n+dragging forwards at any point (before starting the autoplay animation, if any). If you don't set this, it will default to the one you set in \n+`withDefaultSwipeForwardInterpolator` or a `LinearInterpolator` if you didn't set one.\n+\n+#### `withSwipeBackwardsInterpolator`\n+\n+`withSwipeBackwardsInterpolator(TimeInterpolator timeInterpolator)` sets the interpolator to use to complete the swipe animation if the user stops \n+dragging backwards at any point. If you don't set this, it will default to the one you set in `withDefaultSwipeBackwardsInterpolator` or a \n+`LinearInterpolator` if you didn't set one.\n+\n+## License\n+\n+```\n+   Copyright 2017 Novoda\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+```\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/build.gradle",
            "additions": 28,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,28 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 26\n+    buildToolsVersion \"26.0.1\"\n+    defaultConfig {\n+        applicationId \"com.novoda.spritz.sample\"\n+        minSdkVersion 14\n+        targetSdkVersion 26\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+}\n+\n+dependencies {\n+    compile project(path: ':spritz-android')\n+\n+    compile 'com.android.support:appcompat-v7:26.1.0'\n+    compile 'com.android.support.constraint:constraint-layout:1.0.2'\n+    compile 'com.android.support:design:26.1.0'\n+    compile 'com.airbnb.android:lottie:2.1.0'\n+}\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/proguard-rules.pro",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+# Add project specific ProGuard rules here.\n+# By default, the flags in this file are appended to flags specified\n+# in /Users/chris/Library/Android/sdk/tools/proguard/proguard-android.txt\n+# You can edit the include path and order by changing the proguardFiles\n+# directive in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# Add any project specific keep options here:\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/AndroidManifest.xml",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.novoda.spritz.sample\">\n+\n+    <application\n+        android:allowBackup=\"true\"\n+        android:icon=\"@mipmap/ic_launcher\"\n+        android:label=\"@string/app_name\"\n+        android:roundIcon=\"@mipmap/ic_launcher_round\"\n+        android:supportsRtl=\"true\"\n+        android:theme=\"@style/AppTheme\">\n+\n+        <activity\n+            android:name=\"com.novoda.spritz.sample.MainActivity\"\n+            android:label=\"@string/app_name\"\n+            android:theme=\"@style/AppTheme.NoActionBar\">\n+\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+\n+        </activity>\n+\n+    </application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/demo-pager.json",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+{\"v\":\"4.10.1\",\"fr\":60,\"ip\":0,\"op\":150,\"w\":360,\"h\":568,\"nm\":\"Pager With Autoplay\",\"ddd\":0,\"assets\":[{\"id\":\"image_0\",\"w\":2712,\"h\":4296,\"u\":\"images/\",\"p\":\"img_0.png\"},{\"id\":\"image_1\",\"w\":2712,\"h\":4296,\"u\":\"images/\",\"p\":\"img_1.png\"},{\"id\":\"comp_0\",\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Bus\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":30,\"s\":[8.438,6.31,0],\"e\":[18.188,6.31,0],\"to\":[1.625,0,0],\"ti\":[-1.625,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":60,\"s\":[18.188,6.31,0],\"e\":[18.188,6.31,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":90,\"s\":[18.188,6.31,0],\"e\":[28.5,6.31,0],\"to\":[1.71875,0,0],\"ti\":[-1.71875,0,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[5.372,262.622,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[4.244,4.244],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[5.372,262.622],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Stop 1\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":48,\"s\":[50],\"e\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":60,\"s\":[0],\"e\":[0]},{\"t\":90}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[18.438,6.31,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[5.372,262.622,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[4.244,4.244],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[5.372,262.622],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Stop 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":108,\"s\":[50],\"e\":[0]},{\"t\":120}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[28.438,6.31,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[5.372,262.622,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[4.244,4.244],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[5.372,262.622],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]}],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Moon Mask 2\",\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[304.598,462.895,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[124.598,-151.105,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":90,\"s\":[1,100,100],\"e\":[100,100,100]},{\"t\":120}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[248.598,37.789],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0.299,-151.105],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"NVDA - 3554 - S4 Outlines\",\"tt\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[69,470,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[1.747,-17.086],[4.109,-17.086],[11.604,-4.94],[11.65,-4.94],[11.65,-17.086],[14.155,-17.086],[14.155,0],[11.782,0],[4.298,-12.146],[4.253,-12.146],[4.253,0],[1.747,0]],\"c\":true},\"ix\":2},\"nm\":\"N\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"N\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[19.995,-17.086],[22.647,-17.086],[26.399,-4.071],[26.444,-4.071],[30.207,-17.086],[32.859,-17.086],[27.396,0],[25.447,0]],\"c\":true},\"ix\":2},\"nm\":\"V\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"V\",\"np\":3,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-1.12,-1.906],[-0.106,-0.703],[0,-1.727],[0.129,-0.727],[0.121,-0.289],[0.182,-0.305],[0.863,-0.523],[1.241,0],[0,0]],\"o\":[[0,0],[2.24,0.016],[0.401,0.641],[0.083,0.703],[0,1.836],[-0.061,0.367],[-0.129,0.281],[-0.484,0.805],[-0.855,0.562],[0,0],[0,0]],\"v\":[[38.617,-17.086],[44.408,-17.086],[49.449,-14.203],[50.209,-12.188],[50.333,-8.543],[50.14,-4.699],[49.868,-3.715],[49.402,-2.836],[47.382,-0.844],[44.237,0],[38.617,0]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.636,0.994],[-0.076,0.564],[0,1.527],[0.068,0.642],[0.341,0.399],[1.273,-0.031],[0,0]],\"o\":[[0,0],[1.409,0],[0.28,-0.368],[0.068,-0.556],[0,-1.487],[-0.091,-0.642],[-0.697,-0.994],[0,0],[0,0]],\"v\":[[41.122,-2.436],[44.123,-2.436],[47.191,-3.928],[47.725,-5.325],[47.828,-8.449],[47.725,-11.643],[47.078,-13.205],[44.123,-14.65],[41.122,-14.65]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"D\",\"np\":5,\"cix\":2,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[64.618,-6.116],[62.223,-13.591],[62.178,-13.591],[59.783,-6.116]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[65.333,-3.821],[59.057,-3.821],[57.786,0],[55.13,0],[61.145,-17.086],[63.245,-17.086],[69.26,0],[66.616,0]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"A\",\"np\":5,\"cix\":2,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[83.831,-7.862],[90.814,-7.862],[90.814,-5.427],[83.831,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.448,0.463],[0,0.715],[0.447,0.463],[0.704,0.016],[0.417,-0.338],[0.151,-0.707],[0,0],[-0.87,0.867],[-1.188,0.016],[-0.886,-0.977],[-0.015,-1.297],[0.234,-0.609],[0.703,-0.476],[-0.32,-0.656],[0,-0.719],[0.945,-0.922],[1.46,-0.016],[0.87,0.749],[0.257,1.419],[0,0],[-0.386,-0.352],[-0.651,0],[-0.477,0.493],[-0.015,0.854],[0.484,0.478],[0.734,0],[0,0]],\"o\":[[0,0],[0.811,0],[0.447,-0.448],[-0.015,-0.723],[-0.447,-0.448],[-0.508,0],[-0.439,0.338],[0,0],[0.121,-1.265],[0.855,-0.859],[1.506,0.016],[0.848,0.953],[0,0.656],[-0.274,0.609],[0.719,0.469],[0.305,0.656],[-0.015,1.602],[-0.93,0.945],[-1.127,0],[-0.87,-0.749],[0,0],[0.212,0.572],[0.393,0.368],[0.696,0],[0.484,-0.462],[-0.015,-0.869],[-0.477,-0.462],[0,0],[0,0]],\"v\":[[109.295,-9.878],[110.112,-9.878],[112,-10.573],[112.671,-12.316],[111.978,-14.095],[110.251,-14.79],[108.865,-14.284],[107.979,-12.717],[105.604,-12.717],[107.091,-15.915],[110.157,-17.227],[113.744,-15.738],[115.039,-12.363],[114.687,-10.465],[113.222,-8.836],[114.781,-7.148],[115.238,-5.086],[113.797,-1.301],[110.212,0.141],[107.217,-0.982],[105.527,-4.234],[107.9,-4.234],[108.797,-2.848],[110.364,-2.296],[112.124,-3.036],[112.873,-5.01],[112.124,-7.031],[110.308,-7.724],[109.295,-7.724]],\"c\":true},\"ix\":2},\"nm\":\"3\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"3\",\"np\":3,\"cix\":2,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[-0.994,0],[-0.531,-0.219],[-0.311,-0.351],[-0.204,-0.617],[-0.045,-0.484],[0,-0.719],[0.151,-0.594],[0.371,-0.453],[0.621,-0.365],[0.833,-0.016],[0.931,0.686],[0.227,1.567],[0,0],[-1.326,-0.016],[-0.341,0.235],[-0.129,0.368],[-0.03,0.431],[0,0.399],[0.312,0.611],[0.327,0.172],[0.486,0],[0.357,-0.203],[0.281,-0.524],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0.774,-0.625],[0.638,0.016],[0.501,0.242],[0.46,0.469],[0.105,0.336],[0.045,0.492],[0,1.109],[-0.159,0.586],[-0.326,0.443],[-0.606,0.381],[-1.12,0],[-0.946,-0.702],[0,0],[0.258,1.315],[0.568,0],[0.326,-0.227],[0.136,-0.368],[0.015,-0.423],[0.016,-0.979],[-0.167,-0.29],[-0.327,-0.141],[-0.433,0],[-0.357,0.211],[0,0],[0,0]],\"v\":[[121.452,-17.086],[130.274,-17.086],[130.274,-14.65],[123.677,-14.65],[123.677,-10.757],[126.329,-11.694],[128.083,-11.343],[129.301,-10.452],[130.296,-8.824],[130.523,-7.594],[130.591,-5.778],[130.364,-3.224],[129.569,-1.666],[128.15,-0.454],[125.992,0.141],[122.915,-0.889],[121.155,-4.292],[123.531,-4.292],[125.907,-2.296],[127.271,-2.648],[127.953,-3.541],[128.203,-4.738],[128.226,-5.971],[127.781,-8.355],[127.04,-9.048],[125.82,-9.259],[124.634,-8.954],[123.677,-7.85],[121.452,-7.85]],\"c\":true},\"ix\":2},\"nm\":\"5\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"5\",\"np\":3,\"cix\":2,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[-0.994,0],[-0.531,-0.219],[-0.311,-0.351],[-0.204,-0.617],[-0.045,-0.484],[0,-0.719],[0.151,-0.594],[0.371,-0.453],[0.621,-0.365],[0.833,-0.016],[0.931,0.686],[0.227,1.567],[0,0],[-1.326,-0.016],[-0.341,0.235],[-0.129,0.368],[-0.03,0.431],[0,0.399],[0.312,0.611],[0.327,0.172],[0.486,0],[0.357,-0.203],[0.281,-0.524],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0.774,-0.625],[0.638,0.016],[0.501,0.242],[0.46,0.469],[0.105,0.336],[0.045,0.492],[0,1.109],[-0.159,0.586],[-0.326,0.443],[-0.606,0.381],[-1.12,0],[-0.946,-0.702],[0,0],[0.258,1.315],[0.568,0],[0.326,-0.227],[0.136,-0.368],[0.015,-0.423],[0.016,-0.979],[-0.167,-0.29],[-0.327,-0.141],[-0.433,0],[-0.357,0.211],[0,0],[0,0]],\"v\":[[136.524,-17.086],[145.345,-17.086],[145.345,-14.65],[138.748,-14.65],[138.748,-10.757],[141.401,-11.694],[143.154,-11.343],[144.372,-10.452],[145.368,-8.824],[145.594,-7.594],[145.662,-5.778],[145.435,-3.224],[144.64,-1.666],[143.221,-0.454],[141.064,0.141],[137.987,-0.889],[136.227,-4.292],[138.602,-4.292],[140.978,-2.296],[142.342,-2.648],[143.024,-3.541],[143.275,-4.738],[143.297,-5.971],[142.853,-8.355],[142.111,-9.048],[140.892,-9.259],[139.706,-8.954],[138.748,-7.85],[136.524,-7.85]],\"c\":true},\"ix\":2},\"nm\":\"5\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"5\",\"np\":3,\"cix\":2,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[150.719,-4.839],[156.249,-17.086],[158.886,-17.086],[153.297,-4.839],[157.619,-4.839],[157.619,-9.76],[159.984,-9.76],[159.984,-4.839],[161.311,-4.839],[161.311,-2.544],[159.984,-2.544],[159.984,0],[157.619,0],[157.619,-2.542],[150.719,-2.544]],\"c\":true},\"ix\":2},\"nm\":\"4\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"4\",\"np\":3,\"cix\":2,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[176.043,-7.862],[183.025,-7.862],[183.025,-5.427],[176.043,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":10,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-1.818,-0.016],[-0.03,1.556],[1.454,0.258],[0.795,0.117],[0.742,0.844],[0,1.243],[-0.96,0.915],[-1.709,0.016],[-1.52,-1.13],[0,0],[1.492,0.031],[0.515,-0.399],[0.015,-0.821],[-0.371,-0.399],[-0.817,-0.156],[-0.787,-0.102],[-0.742,-0.93],[0,-1.212],[3.788,-0.047],[1.762,1.555]],\"o\":[[1.318,1.12],[2.151,-0.031],[0.016,-1.274],[-0.666,-0.094],[-1.423,-0.242],[-0.765,-0.868],[0,-1.493],[0.93,-0.907],[2.056,0.047],[0,0],[-1.242,-0.845],[-0.772,0],[-0.538,0.415],[0,0.493],[0.371,0.407],[0.454,0.078],[1.552,0.219],[0.734,0.915],[-0.083,3.269],[-2.45,0],[0,0]],\"v\":[[199.383,-4.139],[204.086,-2.436],[207.358,-4.817],[205.201,-7.116],[203.01,-7.433],[199.763,-9.063],[198.616,-12.23],[200.056,-15.842],[204.014,-17.227],[209.378,-15.462],[207.981,-13.334],[203.881,-14.65],[201.951,-14.051],[201.121,-12.198],[201.678,-10.861],[203.46,-10.017],[205.322,-9.747],[208.762,-8.023],[209.864,-4.833],[204.056,0.141],[197.739,-2.192]],\"c\":true},\"ix\":2},\"nm\":\"S\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"S\",\"np\":3,\"cix\":2,\"ix\":11,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[215.038,-4.839],[220.568,-17.086],[223.205,-17.086],[217.615,-4.839],[221.937,-4.839],[221.937,-9.76],[224.302,-9.76],[224.302,-4.839],[225.63,-4.839],[225.63,-2.544],[224.302,-2.544],[224.302,0],[221.937,0],[221.937,-2.542],[215.038,-2.544]],\"c\":true},\"ix\":2},\"nm\":\"4\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"4\",\"np\":3,\"cix\":2,\"ix\":12,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Moon Mask\",\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[304.598,132.895,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[124.598,-151.105,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":63,\"s\":[1,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":90,\"s\":[100,100,100],\"e\":[1,100,100]},{\"t\":105}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[248.598,37.789],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0.299,-151.105],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Moon Name\",\"tt\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[296,140,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-225.245,-17.086],[-222.883,-17.086],[-215.388,-4.94],[-215.343,-4.94],[-215.343,-17.086],[-212.837,-17.086],[-212.837,0],[-215.21,0],[-222.694,-12.146],[-222.739,-12.146],[-222.739,0],[-225.245,0]],\"c\":true},\"ix\":2},\"nm\":\"N\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"N\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-206.95,-17.086],[-204.297,-17.086],[-200.546,-4.071],[-200.5,-4.071],[-196.737,-17.086],[-194.085,-17.086],[-199.548,0],[-201.498,0]],\"c\":true},\"ix\":2},\"nm\":\"V\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"V\",\"np\":3,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-1.12,-1.906],[-0.106,-0.703],[0,-1.727],[0.129,-0.727],[0.121,-0.289],[0.182,-0.305],[0.863,-0.523],[1.241,0],[0,0]],\"o\":[[0,0],[2.24,0.016],[0.401,0.641],[0.083,0.703],[0,1.836],[-0.061,0.367],[-0.129,0.281],[-0.484,0.805],[-0.855,0.562],[0,0],[0,0]],\"v\":[[-188.279,-17.086],[-182.489,-17.086],[-177.447,-14.203],[-176.688,-12.188],[-176.563,-8.543],[-176.756,-4.699],[-177.028,-3.715],[-177.494,-2.836],[-179.515,-0.844],[-182.659,0],[-188.279,0]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.636,0.994],[-0.076,0.564],[0,1.527],[0.068,0.642],[0.341,0.399],[1.273,-0.031],[0,0]],\"o\":[[0,0],[1.409,0],[0.28,-0.368],[0.068,-0.556],[0,-1.487],[-0.091,-0.642],[-0.697,-0.994],[0,0],[0,0]],\"v\":[[-185.774,-2.436],[-182.773,-2.436],[-179.705,-3.928],[-179.171,-5.325],[-179.068,-8.449],[-179.171,-11.643],[-179.818,-13.205],[-182.773,-14.65],[-185.774,-14.65]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"D\",\"np\":5,\"cix\":2,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-162.23,-6.116],[-164.625,-13.591],[-164.67,-13.591],[-167.065,-6.116]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-161.515,-3.821],[-167.791,-3.821],[-169.062,0],[-171.718,0],[-165.703,-17.086],[-163.603,-17.086],[-157.588,0],[-160.232,0]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"A\",\"np\":5,\"cix\":2,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-142.921,-7.862],[-135.939,-7.862],[-135.939,-5.427],[-142.921,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.917,-0.851],[1.288,-0.016],[0.856,0.671],[0.25,1.24],[0,0],[-1.07,0],[-0.046,1.733],[0,0],[0.979,0.016],[0.758,0.782],[-0.016,1.642]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.098,-0.016],[-0.864,-0.655],[0,0],[0.372,0.957],[1.51,-0.016],[0,0],[-1.13,0.367],[-1.077,0.016],[-0.759,-0.758],[0,0]],\"v\":[[-120.557,-12.324],[-119.091,-15.963],[-115.864,-17.227],[-112.581,-15.961],[-111.16,-12.316],[-111.16,-4.781],[-112.581,-1.148],[-115.864,0.141],[-118.796,-0.889],[-120.466,-3.731],[-118.02,-3.731],[-115.858,-2.296],[-113.525,-4.919],[-113.525,-6.528],[-116.688,-6.001],[-119.442,-7.15],[-120.557,-10.75]],\"c\":true},\"ix\":2},\"nm\":\"9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-1.521,-0.016],[-0.046,1.73],[0,0],[1.514,0.031],[0.03,-1.714]],\"o\":[[0.03,1.73],[1.514,-0.016],[0,0],[-0.046,-1.714],[-1.521,0.031],[0,0]],\"v\":[[-118.192,-10.774],[-115.864,-8.155],[-113.525,-10.774],[-113.525,-12.171],[-115.864,-14.79],[-118.192,-12.171]],\"c\":true},\"ix\":2},\"nm\":\"9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"9\",\"np\":5,\"cix\":2,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.514,0.031],[0.03,-1.714],[0,0],[-1.521,-0.016],[-0.046,1.73]],\"o\":[[-0.046,-1.714],[-1.521,0.031],[0,0],[0.03,1.73],[1.514,-0.016],[0,0]],\"v\":[[-98.406,-12.172],[-100.745,-14.79],[-103.072,-12.172],[-103.072,-4.914],[-100.745,-2.296],[-98.406,-4.914]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.916,-0.851],[1.288,-0.016],[0.901,0.842],[0.015,1.568]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.25,-0.016],[-0.962,-0.85],[0,0]],\"v\":[[-105.437,-12.324],[-103.971,-15.963],[-100.745,-17.227],[-97.461,-15.961],[-96.041,-12.316],[-96.041,-4.781],[-97.461,-1.148],[-100.745,0.141],[-103.971,-1.146],[-105.437,-4.774]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"0\",\"np\":5,\"cix\":2,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.514,0.031],[0.03,-1.714],[0,0],[-1.521,-0.016],[-0.046,1.73]],\"o\":[[-0.046,-1.714],[-1.521,0.031],[0,0],[0.03,1.73],[1.514,-0.016],[0,0]],\"v\":[[-83.286,-12.172],[-85.625,-14.79],[-87.953,-12.172],[-87.953,-4.914],[-85.625,-2.296],[-83.286,-4.914]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.916,-0.851],[1.288,-0.016],[0.901,0.842],[0.015,1.568]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.25,-0.016],[-0.962,-0.85],[0,0]],\"v\":[[-90.318,-12.324],[-88.852,-15.963],[-85.625,-17.227],[-82.342,-15.961],[-80.921,-12.316],[-80.921,-4.781],[-82.342,-1.148],[-85.625,0.141],[-88.852,-1.146],[-90.318,-4.774]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"0\",\"np\":5,\"cix\":2,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-71.565,-14.503],[-73.919,-12.721],[-73.919,-15.327],[-71.565,-17.086],[-69.2,-17.086],[-69.2,0],[-71.565,0]],\"c\":true},\"ix\":2},\"nm\":\"1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"1\",\"np\":3,\"cix\":2,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-50.373,-7.862],[-43.391,-7.862],[-43.391,-5.427],[-50.373,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":10,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-1.818,-0.016],[-0.03,1.556],[1.454,0.258],[0.795,0.117],[0.742,0.844],[0,1.243],[-0.96,0.915],[-1.709,0.016],[-1.52,-1.13],[0,0],[1.492,0.031],[0.515,-0.399],[0.015,-0.821],[-0.371,-0.399],[-0.817,-0.156],[-0.787,-0.102],[-0.742,-0.93],[0,-1.212],[3.788,-0.047],[1.762,1.555]],\"o\":[[1.318,1.12],[2.151,-0.031],[0.016,-1.274],[-0.666,-0.094],[-1.423,-0.242],[-0.765,-0.868],[0,-1.493],[0.93,-0.907],[2.056,0.047],[0,0],[-1.242,-0.845],[-0.772,0],[-0.538,0.415],[0,0.493],[0.371,0.407],[0.454,0.078],[1.552,0.219],[0.734,0.915],[-0.083,3.269],[-2.45,0],[0,0]],\"v\":[[-26.937,-4.139],[-22.234,-2.436],[-18.962,-4.817],[-21.119,-7.116],[-23.311,-7.433],[-26.558,-9.063],[-27.704,-12.23],[-26.264,-15.842],[-22.306,-17.227],[-16.942,-15.462],[-18.339,-13.334],[-22.439,-14.65],[-24.37,-14.051],[-25.199,-12.198],[-24.642,-10.861],[-22.86,-10.017],[-20.998,-9.747],[-17.558,-8.023],[-16.457,-4.833],[-22.264,0.141],[-28.581,-2.192]],\"c\":true},\"ix\":2},\"nm\":\"S\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"S\",\"np\":3,\"cix\":2,\"ix\":11,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-7.007,-14.503],[-9.361,-12.721],[-9.361,-15.327],[-7.007,-17.086],[-4.642,-17.086],[-4.642,0],[-7.007,0]],\"c\":true},\"ix\":2},\"nm\":\"1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"1\",\"np\":3,\"cix\":2,\"ix\":12,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"Planet Mask\",\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[89,14,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-92,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0,0]},\"n\":[\"0p667_1_0p167_0p167\",\"0p667_1_0p167_0\",\"0p667_1_0p167_0\"],\"t\":30,\"s\":[0,349,100],\"e\":[100,349,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[100,349,100],\"e\":[5,349,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[175.391,37.391],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-1.305,107.695],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Planet Name\",\"tt\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p667_1_0p167_0p167\",\"t\":30,\"s\":[180,340,0],\"e\":[180,370,0],\"to\":[0,5,0],\"ti\":[0,-0.5,0]},{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":60,\"s\":[180,370,0],\"e\":[180,343,0],\"to\":[0,0.5,0],\"ti\":[0,4.5,0]},{\"t\":90}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-79.47,-17.086],[-77.108,-17.086],[-69.613,-4.94],[-69.567,-4.94],[-69.567,-17.086],[-67.062,-17.086],[-67.062,0],[-69.435,0],[-76.919,-12.146],[-76.964,-12.146],[-76.964,0],[-79.47,0]],\"c\":true},\"ix\":2},\"nm\":\"N\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"N\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-61.174,-17.086],[-58.522,-17.086],[-54.77,-4.071],[-54.725,-4.071],[-50.962,-17.086],[-48.309,-17.086],[-53.773,0],[-55.722,0]],\"c\":true},\"ix\":2},\"nm\":\"V\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"V\",\"np\":3,\"cix\":2,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-1.12,-1.906],[-0.106,-0.703],[0,-1.727],[0.129,-0.727],[0.121,-0.289],[0.182,-0.305],[0.863,-0.523],[1.241,0],[0,0]],\"o\":[[0,0],[2.24,0.016],[0.401,0.641],[0.083,0.703],[0,1.836],[-0.061,0.367],[-0.129,0.281],[-0.484,0.805],[-0.855,0.562],[0,0],[0,0]],\"v\":[[-42.504,-17.086],[-36.713,-17.086],[-31.672,-14.203],[-30.912,-12.188],[-30.787,-8.543],[-30.98,-4.699],[-31.253,-3.715],[-31.718,-2.836],[-33.739,-0.844],[-36.884,0],[-42.504,0]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.636,0.994],[-0.076,0.564],[0,1.527],[0.068,0.642],[0.341,0.399],[1.273,-0.031],[0,0]],\"o\":[[0,0],[1.409,0],[0.28,-0.368],[0.068,-0.556],[0,-1.487],[-0.091,-0.642],[-0.697,-0.994],[0,0],[0,0]],\"v\":[[-39.998,-2.436],[-36.998,-2.436],[-33.93,-3.928],[-33.395,-5.325],[-33.293,-8.449],[-33.395,-11.643],[-34.043,-13.205],[-36.998,-14.65],[-39.998,-14.65]],\"c\":true},\"ix\":2},\"nm\":\"D\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"D\",\"np\":5,\"cix\":2,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-16.455,-6.116],[-18.849,-13.591],[-18.895,-13.591],[-21.29,-6.116]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-15.739,-3.821],[-22.016,-3.821],[-23.287,0],[-25.943,0],[-19.927,-17.086],[-17.828,-17.086],[-11.812,0],[-14.457,0]],\"c\":true},\"ix\":2},\"nm\":\"A\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"A\",\"np\":5,\"cix\":2,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[2.855,-7.862],[9.837,-7.862],[9.837,-5.427],[2.855,-5.427]],\"c\":true},\"ix\":2},\"nm\":\"-\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"-\",\"np\":3,\"cix\":2,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.917,-0.851],[1.288,-0.016],[0.856,0.671],[0.25,1.24],[0,0],[-1.07,0],[-0.046,1.733],[0,0],[0.979,0.016],[0.758,0.782],[-0.016,1.642]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.098,-0.016],[-0.864,-0.655],[0,0],[0.372,0.957],[1.51,-0.016],[0,0],[-1.13,0.367],[-1.077,0.016],[-0.759,-0.758],[0,0]],\"v\":[[25.219,-12.324],[26.684,-15.963],[29.911,-17.227],[33.195,-15.961],[34.615,-12.316],[34.615,-4.781],[33.195,-1.148],[29.911,0.141],[26.979,-0.889],[25.309,-3.731],[27.755,-3.731],[29.917,-2.296],[32.25,-4.919],[32.25,-6.528],[29.087,-6.001],[26.334,-7.15],[25.219,-10.75]],\"c\":true},\"ix\":2},\"nm\":\"9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-1.521,-0.016],[-0.046,1.73],[0,0],[1.514,0.031],[0.03,-1.714]],\"o\":[[0.03,1.73],[1.514,-0.016],[0,0],[-0.046,-1.714],[-1.521,0.031],[0,0]],\"v\":[[27.584,-10.774],[29.911,-8.155],[32.25,-10.774],[32.25,-12.171],[29.911,-14.79],[27.584,-12.171]],\"c\":true},\"ix\":2},\"nm\":\"9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"9\",\"np\":5,\"cix\":2,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.514,0.031],[0.03,-1.714],[0,0],[-1.521,-0.016],[-0.046,1.73]],\"o\":[[-0.046,-1.714],[-1.521,0.031],[0,0],[0.03,1.73],[1.514,-0.016],[0,0]],\"v\":[[47.369,-12.172],[45.031,-14.79],[42.703,-12.172],[42.703,-4.914],[45.031,-2.296],[47.369,-4.914]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.916,-0.851],[1.288,-0.016],[0.901,0.842],[0.015,1.568]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.25,-0.016],[-0.962,-0.85],[0,0]],\"v\":[[40.338,-12.324],[41.804,-15.963],[45.031,-17.227],[48.314,-15.961],[49.734,-12.316],[49.734,-4.781],[48.314,-1.148],[45.031,0.141],[41.804,-1.146],[40.338,-4.774]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"0\",\"np\":5,\"cix\":2,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.514,0.031],[0.03,-1.714],[0,0],[-1.521,-0.016],[-0.046,1.73]],\"o\":[[-0.046,-1.714],[-1.521,0.031],[0,0],[0.03,1.73],[1.514,-0.016],[0,0]],\"v\":[[62.489,-12.172],[60.15,-14.79],[57.823,-12.172],[57.823,-4.914],[60.15,-2.296],[62.489,-4.914]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.962,0.85],[-1.25,0],[-0.901,-0.844],[-0.03,-1.578],[0,0],[0.916,-0.851],[1.288,-0.016],[0.901,0.842],[0.015,1.568]],\"o\":[[0.015,-1.576],[0.901,-0.842],[1.288,0],[0.916,0.852],[0,0],[-0.03,1.57],[-0.901,0.844],[-1.25,-0.016],[-0.962,-0.85],[0,0]],\"v\":[[55.458,-12.324],[56.923,-15.963],[60.15,-17.227],[63.434,-15.961],[64.854,-12.316],[64.854,-4.781],[63.434,-1.148],[60.15,0.141],[56.923,-1.146],[55.458,-4.774]],\"c\":true},\"ix\":2},\"nm\":\"0\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":1,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"0\",\"np\":5,\"cix\":2,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[74.21,-14.503],[71.856,-12.721],[71.856,-15.327],[74.21,-17.086],[76.575,-17.086],[76.575,0],[74.21,0]],\"c\":true},\"ix\":2},\"nm\":\"1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"1\",\"np\":3,\"cix\":2,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":0,\"nm\":\"Indicator\",\"refId\":\"comp_0\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[180,545,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[19,6.5,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"w\":38,\"h\":13,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Planet 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p833_0p833_0p333_0\",\"t\":90,\"s\":[437,240,0],\"e\":[180,284,0],\"to\":[-42.8333320617676,7.33333349227905,0],\"ti\":[42.8333320617676,-7.33333349227905,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":120,\"s\":[180,284,0],\"e\":[180,284,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":150}],\"ix\":2},\"a\":{\"a\":0,\"k\":[-7,-43,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":120,\"s\":[68,68,100],\"e\":[145,145,100]},{\"t\":150}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[122.156,122.156],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.329,0.988,0.927,0.5,0.251,0.514,0.562,1,0.172,0.039,0.196],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,-32],\"ix\":5},\"e\":{\"a\":0,\"k\":[0.887,61.43],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7,-43],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Moon 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.333],\"y\":[0]},\"n\":[\"0_1_0p333_0\"],\"t\":120,\"s\":[100],\"e\":[0]},{\"t\":150}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"s\":true,\"x\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.333],\"y\":[0]},\"n\":[\"0p833_0p833_0p333_0\"],\"t\":90,\"s\":[390],\"e\":[284]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0_1_0p167_0p167\"],\"t\":120,\"s\":[284],\"e\":[182]},{\"t\":150}],\"ix\":3},\"y\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.333],\"y\":[0]},\"n\":[\"0p833_0p833_0p333_0\"],\"t\":90,\"s\":[395],\"e\":[361]},{\"i\":{\"x\":[0],\"y\":[1]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0_1_0p167_0p167\"],\"t\":120,\"s\":[361],\"e\":[283]},{\"t\":150}],\"ix\":4}},\"a\":{\"a\":0,\"k\":[-7,-43,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[22.37,22.37,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[122.156,122.156],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.7,0.865,1,0.5,0.35,0.433,0.5,1,0,0,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[-20.953,-36.874],\"ix\":5},\"e\":{\"a\":0,\"k\":[40.283,45.489],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7,-43],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Moon\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":60,\"s\":[460,141,0],\"e\":[284,165,0],\"to\":[-29.3333339691162,4,0],\"ti\":[80.8333358764648,-8.33333301544189,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p833_0p833_0p333_0\",\"t\":90,\"s\":[284,165,0],\"e\":[-25,191,0],\"to\":[-80.8333358764648,8.33333301544189,0],\"ti\":[51.5,-4.33333349227905,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[-7,-43,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[52.37,52.37,100],\"e\":[22.37,22.37,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[122.156,122.156],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.329,0.988,0.927,0.5,0.251,0.514,0.562,1,0.172,0.039,0.196],\"ix\":9}},\"s\":{\"a\":0,\"k\":[-20.953,-36.874],\"ix\":5},\"e\":{\"a\":0,\"k\":[40.283,45.489],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7,-43],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Planet\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[40],\"e\":[100]},{\"t\":30}],\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.573,\"y\":0.78},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p573_0p78_0p167_0p167\",\"t\":30,\"s\":[180,284,0],\"e\":[180,240,0],\"to\":[-1.02933037281036,-3.17011475563049,0],\"ti\":[2.11975932121277,9.17943954467773,0]},{\"i\":{\"x\":0.693,\"y\":0.819},\"o\":{\"x\":0.334,\"y\":0.159},\"n\":\"0p693_0p819_0p334_0p159\",\"t\":60,\"s\":[180,240,0],\"e\":[180,284,0],\"to\":[-2.72540259361267,-11.8021268844604,0],\"ti\":[3.15910816192627,-1.60271632671356,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.378,\"y\":0.041},\"n\":\"0p833_0p833_0p378_0p041\",\"t\":90,\"s\":[180,284,0],\"e\":[-61,378,0],\"to\":[-54.8544769287109,27.8294239044189,0],\"ti\":[36.4361991882324,-21.7710075378418,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[-7,-43,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[25,25,100],\"e\":[142.568,142.568,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":30,\"s\":[142.568,142.568,100],\"e\":[142.568,142.568,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[142.568,142.568,100],\"e\":[68,68,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[122.156,122.156],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.329,0.988,0.927,0.5,0.251,0.514,0.562,1,0.172,0.039,0.196],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,-32],\"ix\":5},\"e\":{\"a\":0,\"k\":[0.887,61.43],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[-7,-43],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":12,\"ty\":2,\"nm\":\"stars2.png\",\"cl\":\"png\",\"refId\":\"image_0\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p833_0p833_0p333_0\",\"t\":90,\"s\":[180,284,0],\"e\":[100,284,0],\"to\":[-13.3333330154419,0,0],\"ti\":[13.3333330154419,0,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[1356,2148,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[14.991,14.991,100],\"e\":[20.991,20.991,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":30,\"s\":[20.991,20.991,100],\"e\":[20.991,20.991,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[20.991,20.991,100],\"e\":[14.991,14.991,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":13,\"ty\":2,\"nm\":\"stars1.png\",\"cl\":\"png\",\"refId\":\"image_1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[180,284,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[1356,2148,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0_1_0p333_0\",\"0_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[14.991,14.991,100],\"e\":[36.991,36.991,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":30,\"s\":[36.991,36.991,100],\"e\":[36.991,36.991,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":60,\"s\":[36.991,36.991,100],\"e\":[14.991,14.991,100]},{\"t\":90}],\"ix\":6}},\"ao\":0,\"ip\":0,\"op\":600,\"st\":0,\"bm\":0}]}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/images/img_0.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/assets/images/img_0.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/assets/images/img_1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/assets/images/img_1.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/java/com/novoda/spritz/sample/MainActivity.java",
            "additions": 122,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,122 @@\n+package com.novoda.spritz.sample;\n+\n+import android.animation.TimeInterpolator;\n+import android.os.Bundle;\n+import android.support.annotation.Nullable;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.app.FragmentManager;\n+import android.support.v4.app.FragmentStatePagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.support.v4.view.animation.FastOutSlowInInterpolator;\n+import android.support.v4.view.animation.LinearOutSlowInInterpolator;\n+import android.support.v7.app.AppCompatActivity;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+\n+import com.airbnb.lottie.LottieAnimationView;\n+import com.novoda.spritz.Spritz;\n+import com.novoda.spritz.SpritzPage;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public class MainActivity extends AppCompatActivity {\n+\n+    public static final int PAGER_NUM = 3;\n+    private static final TimeInterpolator SWIPE_FORWARD_INTERPOLATOR = new LinearOutSlowInInterpolator();\n+    private static final TimeInterpolator SWIPE_BACKWARDS_INTERPOLATOR = new FastOutSlowInInterpolator();\n+\n+    private Spritz spritz;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.main);\n+\n+        LottieAnimationView lottieAnimationView = findViewById(R.id.animation_view);\n+        lottieAnimationView.setImageAssetsFolder(\"images\");\n+\n+        final ViewPager viewPager = findViewById(R.id.viewpager);\n+        viewPager.setAdapter(new ScreenSlidePagerAdapter(getSupportFragmentManager()));\n+\n+        spritz = Spritz\n+                .with(lottieAnimationView)\n+                .withDefaultSwipeAnimationDuration(300, TimeUnit.MILLISECONDS)\n+                .withDefaultSwipeForwardInterpolator(SWIPE_FORWARD_INTERPOLATOR)\n+                .withDefaultSwipeBackwardsInterpolator(SWIPE_BACKWARDS_INTERPOLATOR)\n+                .withPages(\n+                        new SpritzPage.Builder()\n+                                .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n+                                .build(),\n+                        new SpritzPage.Builder()\n+                                .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                .withSwipeDuration(500, TimeUnit.MILLISECONDS)\n+                                .build(),\n+                        new SpritzPage.Builder()\n+                                .withAutoPlayDuration(500, TimeUnit.MILLISECONDS)\n+                                .build()\n+                )\n+                .attachTo(viewPager);\n+\n+        Button continueButton = findViewById(R.id.btn_continue);\n+        continueButton.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                int nextItem = viewPager.getCurrentItem() + 1;\n+                if (PAGER_NUM > nextItem) {\n+                    viewPager.setCurrentItem(nextItem);\n+                }\n+            }\n+        });\n+        Button previousButton = findViewById(R.id.btn_previous);\n+        previousButton.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                int prevItem = viewPager.getCurrentItem() - 1;\n+                if (prevItem >= 0) {\n+                    viewPager.setCurrentItem(prevItem);\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        super.onResume();\n+        spritz.startPendingAnimations();\n+    }\n+\n+    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {\n+\n+        ScreenSlidePagerAdapter(FragmentManager fragmentManager) {\n+            super(fragmentManager);\n+        }\n+\n+        @Override\n+        public Fragment getItem(int position) {\n+            return new AnimationFragment();\n+        }\n+\n+        @Override\n+        public int getCount() {\n+            return PAGER_NUM;\n+        }\n+\n+    }\n+\n+    public static class AnimationFragment extends Fragment {\n+\n+        public AnimationFragment() {\n+            // default constructor\n+        }\n+\n+        @Nullable\n+        @Override\n+        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+            return inflater.inflate(R.layout.page, container, false);\n+        }\n+\n+    }\n+}\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/main.xml",
            "additions": 44,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  android:background=\"@android:color/black\"\n+  android:orientation=\"vertical\">\n+\n+  <com.airbnb.lottie.LottieAnimationView\n+    android:id=\"@+id/animation_view\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:layout_centerInParent=\"true\"\n+    app:lottie_autoPlay=\"false\"\n+    app:lottie_fileName=\"demo-pager.json\" />\n+\n+  <android.support.v4.view.ViewPager\n+    android:id=\"@+id/viewpager\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\" />\n+\n+  <LinearLayout\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"horizontal\">\n+\n+    <Button\n+      android:id=\"@+id/btn_previous\"\n+      android:layout_width=\"0dp\"\n+      android:layout_height=\"60dp\"\n+      android:layout_weight=\"1\"\n+      android:text=\"@string/previous\" />\n+\n+    <Button\n+      android:id=\"@+id/btn_continue\"\n+      android:layout_width=\"0dp\"\n+      android:layout_height=\"60dp\"\n+      android:layout_weight=\"1\"\n+      android:text=\"@string/next\" />\n+\n+  </LinearLayout>\n+\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/layout/page.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  android:orientation=\"vertical\">\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-hdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-hdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-mdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-mdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/colors.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <color name=\"colorPrimary\">#3F51B5</color>\n+    <color name=\"colorPrimaryDark\">#000</color>\n+    <color name=\"colorAccent\">#FF7500</color>\n+    <color name=\"windowBg\">#f5f5f5</color>\n+</resources>\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<resources>\n+    <string name=\"app_name\">A Taste of Spritz</string>\n+  <string name=\"previous\">Previous</string>\n+  <string name=\"next\">Next</string>\n+</resources>\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/app/src/main/res/values/styles.xml",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+<resources>\n+\n+    <!-- Base application theme. -->\n+    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n+        <!-- Customize your theme here. -->\n+        <item name=\"colorPrimary\">@color/colorPrimary</item>\n+        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n+        <item name=\"colorAccent\">@color/colorAccent</item>\n+        <item name=\"android:windowBackground\">@color/windowBg</item>\n+    </style>\n+\n+    <style name=\"AppTheme.NoActionBar\">\n+        <item name=\"windowActionBar\">false</item>\n+        <item name=\"windowNoTitle\">true</item>\n+    </style>\n+\n+    <style name=\"AppTheme.AppBarOverlay\" parent=\"ThemeOverlay.AppCompat.Dark.ActionBar\" />\n+\n+    <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\" />\n+\n+</resources>\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/build.gradle",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+\n+buildscript {\n+    repositories {\n+        jcenter()\n+\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:2.3.3'\n+\n+        // NOTE: Do not place your application dependencies here; they belong\n+        // in the individual module build.gradle files\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        jcenter()\n+        maven {\n+            url \"https://maven.google.com\"\n+        }\n+    }\n+}\n+\n+task clean(type: Delete) {\n+    delete rootProject.buildDir\n+}\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/gradle.properties",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+# Project-wide Gradle settings.\n+\n+# IDE (e.g. Android Studio) users:\n+# Gradle settings configured through the IDE *will override*\n+# any settings specified in this file.\n+\n+# For more details on how to configure your build environment visit\n+# http://www.gradle.org/docs/current/userguide/build_environment.html\n+\n+# Specifies the JVM arguments used for the daemon process.\n+# The setting is particularly useful for tweaking memory settings.\n+org.gradle.jvmargs=-Xmx1536m\n+\n+# When configured, Gradle will run in incubating parallel mode.\n+# This option should only be used with decoupled projects. More details, visit\n+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n+# org.gradle.parallel=true\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/spritz/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Tue Apr 04 11:20:56 BST 2017\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/gradlew",
            "additions": 160,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/gradlew.bat",
            "additions": 90,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,90 @@\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:init\r\n+@rem Get command-line arguments, handling Windowz variants\r\n+\r\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n+if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n+\r\n+:win9xME_args\r\n+@rem Slurp the command line arguments.\r\n+set CMD_LINE_ARGS=\r\n+set _SKIP=2\r\n+\r\n+:win9xME_args_slurp\r\n+if \"x%~1\" == \"x\" goto execute\r\n+\r\n+set CMD_LINE_ARGS=%*\r\n+goto execute\r\n+\r\n+:4NT_args\r\n+@rem Get arguments from the 4NT Shell from JP Software\r\n+set CMD_LINE_ARGS=%$\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+include ':app', ':spritz-android'\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/spritz-android/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/spritz-android/build.gradle",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+apply plugin: 'com.android.library'\n+\n+android {\n+    compileSdkVersion 26\n+    buildToolsVersion \"26.0.1\"\n+\n+    defaultConfig {\n+        minSdkVersion 14\n+        targetSdkVersion 26\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n+dependencies {\n+    compile 'com.android.support:appcompat-v7:26.1.0'\n+    compile 'com.android.support:design:26.1.0'\n+    compile 'com.airbnb.android:lottie:2.1.0'\n+\n+    testCompile 'junit:junit:4.12'\n+}\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/spritz-android/proguard-rules.pro",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+# Add project specific ProGuard rules here.\n+# By default, the flags in this file are appended to flags specified\n+# in /Users/fra/Library/Android/sdk/tools/proguard/proguard-android.txt\n+# You can edit the include path and order by changing the proguardFiles\n+# directive in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# Add any project specific keep options here:\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+<manifest package=\"com.novoda.spritz\" />\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/Spritz.java",
            "additions": 257,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,257 @@\n+package com.novoda.spritz;\n+\n+import android.animation.Animator;\n+import android.animation.AnimatorSet;\n+import android.animation.TimeInterpolator;\n+import android.animation.ValueAnimator;\n+import android.support.v4.view.ViewPager;\n+import android.view.animation.LinearInterpolator;\n+\n+import com.airbnb.lottie.LottieAnimationView;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+public class Spritz {\n+\n+    private final LottieAnimationView lottieAnimationView;\n+    private final List<SpritzPageWithOffset> spritzPagesWithOffset;\n+    private final long totalAnimationDuration;\n+    private final long defaultSwipeAnimationDuration;\n+    private final TimeInterpolator defaultSwipeForwardInterpolator;\n+    private final TimeInterpolator defaultSwipeBackwardsInterpolator;\n+\n+    private ViewPager viewPager;\n+    private float currentPosition;\n+    private AnimatorSet animatorSet;\n+\n+    public static Builder with(LottieAnimationView lottieAnimationView) {\n+        return new Builder(lottieAnimationView);\n+    }\n+\n+    private Spritz(LottieAnimationView lottieAnimationView,\n+                   List<SpritzPageWithOffset> spritzPagesWithOffset,\n+                   long totalAnimationDuration,\n+                   long defaultSwipeAnimationDuration,\n+                   TimeInterpolator defaultSwipeForwardInterpolator,\n+                   TimeInterpolator defaultSwipeBackwardsInterpolator) {\n+\n+        this.lottieAnimationView = lottieAnimationView;\n+        this.spritzPagesWithOffset = spritzPagesWithOffset;\n+        this.totalAnimationDuration = totalAnimationDuration;\n+        this.defaultSwipeAnimationDuration = defaultSwipeAnimationDuration;\n+        this.defaultSwipeForwardInterpolator = defaultSwipeForwardInterpolator;\n+        this.defaultSwipeBackwardsInterpolator = defaultSwipeBackwardsInterpolator;\n+        this.animatorSet = new AnimatorSet();\n+    }\n+\n+    private void attach(ViewPager viewPager) {\n+        this.viewPager = viewPager;\n+\n+        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n+\n+            @Override\n+            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+                float currentProgress = lottieAnimationView.getProgress();\n+                float finalProgress;\n+                float realOffset;\n+\n+                if (position + positionOffset == currentPosition) {\n+                    return;\n+                }\n+\n+                if (swipingForward(position + positionOffset)) {\n+                    finalProgress = getSwipeEndProgressForPosition(position);\n+                    realOffset = positionOffset;\n+                } else {\n+                    finalProgress = getAutoPlayEndProgressForPosition(position);\n+                    realOffset = 1 - positionOffset;\n+                }\n+\n+                float progressToAnimate = finalProgress - currentProgress;\n+                float newProgress = currentProgress + (progressToAnimate * realOffset);\n+\n+                lottieAnimationView.setProgress(newProgress);\n+\n+                currentPosition = position + positionOffset;\n+            }\n+\n+            @Override\n+            public void onPageSelected(final int position) {\n+                autoPlayForPosition(position);\n+                currentPosition = position;\n+            }\n+\n+            @Override\n+            public void onPageScrollStateChanged(int state) {\n+                // do nothing\n+            }\n+\n+        });\n+\n+        currentPosition = viewPager.getCurrentItem();\n+    }\n+\n+    private boolean swipingForward(float newPosition) {\n+        return newPosition >= currentPosition;\n+    }\n+\n+    private float getSwipeEndProgressForPosition(int position) {\n+        return ((float) spritzPagesWithOffset.get(position).swipeEnd()) / totalAnimationDuration;\n+    }\n+\n+    public void startPendingAnimations() {\n+        autoPlayForPosition(viewPager.getCurrentItem());\n+    }\n+\n+    private void autoPlayForPosition(int position) {\n+        animatorSet.cancel();\n+\n+        List<Animator> animationList;\n+\n+        if (swipingForward(position)) {\n+            animationList = swipeForwardThenAutoPlay(position);\n+        } else {\n+            animationList = swipeBackwards(position);\n+        }\n+\n+        animatorSet = new AnimatorSet();\n+        animatorSet.playSequentially(animationList);\n+        animatorSet.start();\n+    }\n+\n+    private List<Animator> swipeForwardThenAutoPlay(int position) {\n+        float currentProgress = lottieAnimationView.getProgress();\n+        float previousSwipeEndProgress = getSwipeEndForPreviousPositionOrZero(position);\n+        float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n+        SpritzPageWithOffset currentPage = spritzPagesWithOffset.get(position);\n+\n+        ValueAnimator finishSwipeAnimation = ValueAnimator\n+                .ofFloat(currentProgress, previousSwipeEndProgress)\n+                .setDuration(defaultSwipeAnimationDuration);\n+        finishSwipeAnimation.setInterpolator(getSwipeForwardInterpolatorFor(currentPage));\n+        finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n+\n+        ValueAnimator autoPlayAnimation = ValueAnimator\n+                .ofFloat(previousSwipeEndProgress, autoPlayEndProgress)\n+                .setDuration(currentPage.autoPlayDuration());\n+        autoPlayAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n+\n+        return Arrays.<Animator>asList(finishSwipeAnimation, autoPlayAnimation);\n+    }\n+\n+    private float getSwipeEndForPreviousPositionOrZero(int position) {\n+        float swipeEndProgress = 0;\n+        if (position > 0) {\n+            swipeEndProgress = getSwipeEndProgressForPosition(position - 1);\n+        }\n+        return swipeEndProgress;\n+    }\n+\n+    private TimeInterpolator getSwipeForwardInterpolatorFor(SpritzPageWithOffset currentPage) {\n+        TimeInterpolator pageSwipeForwardInterpolator = currentPage.swipeForwardInterpolator();\n+        if (pageSwipeForwardInterpolator != null) {\n+            return pageSwipeForwardInterpolator;\n+        }\n+        return this.defaultSwipeForwardInterpolator;\n+    }\n+\n+    private List<Animator> swipeBackwards(int position) {\n+        SpritzPageWithOffset currentPage = spritzPagesWithOffset.get(position);\n+        float currentProgress = lottieAnimationView.getProgress();\n+        float autoPlayEndProgress = getAutoPlayEndProgressForPosition(position);\n+\n+        ValueAnimator finishSwipeAnimation = ValueAnimator\n+                .ofFloat(currentProgress, autoPlayEndProgress)\n+                .setDuration(defaultSwipeAnimationDuration);\n+        finishSwipeAnimation.setInterpolator(getSwipeBackwardsInterpolatorFor(currentPage));\n+        finishSwipeAnimation.addUpdateListener(defaultAnimatorUpdateListener());\n+\n+        return Collections.<Animator>singletonList(finishSwipeAnimation);\n+    }\n+\n+    private float getAutoPlayEndProgressForPosition(int position) {\n+        return ((float) spritzPagesWithOffset.get(position).autoPlayEnd()) / totalAnimationDuration;\n+    }\n+\n+    private TimeInterpolator getSwipeBackwardsInterpolatorFor(SpritzPageWithOffset currentPage) {\n+        TimeInterpolator pageSwipeBackwardsInterpolator = currentPage.swipeBackwardsInterpolator();\n+        if (pageSwipeBackwardsInterpolator != null) {\n+            return pageSwipeBackwardsInterpolator;\n+        }\n+        return this.defaultSwipeBackwardsInterpolator;\n+    }\n+\n+    private ValueAnimator.AnimatorUpdateListener defaultAnimatorUpdateListener() {\n+        return new ValueAnimator.AnimatorUpdateListener() {\n+            @Override\n+            public void onAnimationUpdate(ValueAnimator animation) {\n+                lottieAnimationView.setProgress((Float) animation.getAnimatedValue());\n+            }\n+        };\n+    }\n+\n+    public static class Builder {\n+\n+        private static final long DEFAULT_SWIPE_ANIMATION_DURATION = TimeUnit.MILLISECONDS.toMillis(500);\n+\n+        private final LottieAnimationView lottieAnimationView;\n+\n+        private long defaultSwipeAnimationDuration = DEFAULT_SWIPE_ANIMATION_DURATION;\n+        private TimeInterpolator defaultSwipeForwardInterpolator = new LinearInterpolator();\n+        private TimeInterpolator defaultSwipeBackwardsInterpolator = new LinearInterpolator();\n+        private List<SpritzPageWithOffset> spritzPagesWithOffset;\n+\n+        private Builder(LottieAnimationView lottieAnimationView) {\n+            this.lottieAnimationView = lottieAnimationView;\n+            spritzPagesWithOffset = new ArrayList<>();\n+        }\n+\n+        public Builder withDefaultSwipeAnimationDuration(long defaultSwipeAnimationDuration, TimeUnit timeUnit) {\n+            this.defaultSwipeAnimationDuration = timeUnit.toMillis(defaultSwipeAnimationDuration);\n+            return this;\n+        }\n+\n+        public Builder withDefaultSwipeForwardInterpolator(TimeInterpolator swipeForwardInterpolator) {\n+            this.defaultSwipeForwardInterpolator = swipeForwardInterpolator;\n+            return this;\n+        }\n+\n+        public Builder withDefaultSwipeBackwardsInterpolator(TimeInterpolator swipeBackwardsInterpolator) {\n+            this.defaultSwipeBackwardsInterpolator = swipeBackwardsInterpolator;\n+            return this;\n+        }\n+\n+        public Builder withPages(SpritzPage... spritzPages) {\n+            this.spritzPagesWithOffset = SpritzPageWithOffset.fromSpritzPages(spritzPages);\n+            return this;\n+        }\n+\n+        public Spritz attachTo(ViewPager viewPager) {\n+            Spritz spritz = new Spritz(\n+                    lottieAnimationView,\n+                    spritzPagesWithOffset,\n+                    calculateTotalAnimationDuration(),\n+                    defaultSwipeAnimationDuration,\n+                    defaultSwipeForwardInterpolator,\n+                    defaultSwipeBackwardsInterpolator\n+            );\n+            spritz.attach(viewPager);\n+            return spritz;\n+        }\n+\n+        private long calculateTotalAnimationDuration() {\n+            if (spritzPagesWithOffset.isEmpty()) {\n+                return 0;\n+            }\n+\n+            int lastIndex = spritzPagesWithOffset.size() - 1;\n+            return spritzPagesWithOffset.get(lastIndex).swipeEnd();\n+        }\n+\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzPage.java",
            "additions": 79,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,79 @@\n+package com.novoda.spritz;\n+\n+import android.animation.TimeInterpolator;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public class SpritzPage {\n+\n+    private final long autoPlayDuration;\n+    private final long swipeDuration;\n+    private final TimeInterpolator swipeForwardInterpolator;\n+    private final TimeInterpolator swipeBackwardsInterpolator;\n+\n+    private SpritzPage(long autoPlayDuration,\n+                       long swipeDuration,\n+                       TimeInterpolator swipeForwardInterpolator,\n+                       TimeInterpolator swipeBackwardsInterpolator) {\n+\n+        this.autoPlayDuration = autoPlayDuration;\n+        this.swipeDuration = swipeDuration;\n+        this.swipeForwardInterpolator = swipeForwardInterpolator;\n+        this.swipeBackwardsInterpolator = swipeBackwardsInterpolator;\n+    }\n+\n+    long autoPlayDuration() {\n+        return autoPlayDuration;\n+    }\n+\n+    long swipeDuration() {\n+        return swipeDuration;\n+    }\n+\n+    TimeInterpolator swipeForwardInterpolator() {\n+        return swipeForwardInterpolator;\n+    }\n+\n+    TimeInterpolator swipeBackwardsInterpolator() {\n+        return swipeBackwardsInterpolator;\n+    }\n+\n+    public static class Builder {\n+\n+        private long autoPlayDuration = 0;\n+        private long swipeDuration = 0;\n+        private TimeInterpolator swipeForwardInterpolator;\n+        private TimeInterpolator swipeBackwardsInterpolator;\n+\n+        public Builder withAutoPlayDuration(long autoPlayDuration, TimeUnit timeUnit) {\n+            this.autoPlayDuration = timeUnit.toMillis(autoPlayDuration);\n+            return this;\n+        }\n+\n+        public Builder withSwipeDuration(long swipeDuration, TimeUnit timeUnit) {\n+            this.swipeDuration = timeUnit.toMillis(swipeDuration);\n+            return this;\n+        }\n+\n+        public Builder withSwipeForwardInterpolator(TimeInterpolator swipeForwardInterpolator) {\n+            this.swipeForwardInterpolator = swipeForwardInterpolator;\n+            return this;\n+        }\n+\n+        public Builder withSwipeBackwardsInterpolator(TimeInterpolator swipeBackwardsInterpolator) {\n+            this.swipeBackwardsInterpolator = swipeBackwardsInterpolator;\n+            return this;\n+        }\n+\n+        public SpritzPage build() {\n+            return new SpritzPage(\n+                    autoPlayDuration,\n+                    swipeDuration,\n+                    swipeForwardInterpolator,\n+                    swipeBackwardsInterpolator\n+            );\n+        }\n+\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "4dd83ebc34127467fc9a9f79a18ec4620384f6ff",
        "previous commit hash": "7d9e5c23e7a4604e2e6e955e2ca0adc96391ac61",
        "diff stats": {
            "file_path": "spritz/spritz-android/src/main/java/com/novoda/spritz/SpritzPageWithOffset.java",
            "additions": 72,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,72 @@\n+package com.novoda.spritz;\n+\n+import android.animation.TimeInterpolator;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+class SpritzPageWithOffset {\n+\n+    private final long autoPlayDuration;\n+    private final long autoPlayEnd;\n+    private final long swipeEnd;\n+    private final TimeInterpolator swipeForwardInterpolator;\n+    private final TimeInterpolator swipeBackwardsInterpolator;\n+\n+    private SpritzPageWithOffset(long autoPlayDuration,\n+                                 long autoPlayEnd,\n+                                 long swipeEnd,\n+                                 TimeInterpolator swipeForwardInterpolator,\n+                                 TimeInterpolator swipeBackwardsInterpolator) {\n+\n+        this.autoPlayDuration = autoPlayDuration;\n+        this.autoPlayEnd = autoPlayEnd;\n+        this.swipeEnd = swipeEnd;\n+        this.swipeForwardInterpolator = swipeForwardInterpolator;\n+        this.swipeBackwardsInterpolator = swipeBackwardsInterpolator;\n+    }\n+\n+    long autoPlayDuration() {\n+        return autoPlayDuration;\n+    }\n+\n+    long autoPlayEnd() {\n+        return autoPlayEnd;\n+    }\n+\n+    long swipeEnd() {\n+        return swipeEnd;\n+    }\n+\n+    TimeInterpolator swipeForwardInterpolator() {\n+        return swipeForwardInterpolator;\n+    }\n+\n+    TimeInterpolator swipeBackwardsInterpolator() {\n+        return swipeBackwardsInterpolator;\n+    }\n+\n+    static List<SpritzPageWithOffset> fromSpritzPages(SpritzPage... spritzPages) {\n+        List<SpritzPageWithOffset> spritzPageWithOffsetList = new ArrayList<>(spritzPages.length);\n+        long totalAnimationTime = 0;\n+\n+        for (SpritzPage spritzPage : spritzPages) {\n+            long autoPlayEnd = totalAnimationTime + spritzPage.autoPlayDuration();\n+            long swipeEnd = totalAnimationTime + spritzPage.autoPlayDuration() + spritzPage.swipeDuration();\n+\n+            spritzPageWithOffsetList.add(\n+                    new SpritzPageWithOffset(\n+                            spritzPage.autoPlayDuration(),\n+                            autoPlayEnd,\n+                            swipeEnd,\n+                            spritzPage.swipeForwardInterpolator(),\n+                            spritzPage.swipeBackwardsInterpolator()\n+                    )\n+            );\n+\n+            totalAnimationTime = swipeEnd;\n+        }\n+\n+        return spritzPageWithOffsetList;\n+    }\n+}\n"
    },
    {
        "commit hash": "9153393a7707da307d890cc1ec3b917290740aec",
        "previous commit hash": "ce008367da66239503f950975a34f6aec3e1eaa4",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/DatabaseCleaner.java",
            "additions": 5,
            "deletions": 4
        },
        "diff content": "@@ -1,18 +1,19 @@\n-package xyz.lgvalle.tddpersistence;\n+package com.novoda.demo.tddpersistence;\n \n import android.database.sqlite.SQLiteDatabase;\n \n+import com.novoda.demo.tddpersistence.db.TaskReaderContract;\n+import com.novoda.demo.tddpersistence.db.TaskReaderDbHelper;\n+\n import java.sql.SQLException;\n \n-import xyz.lgvalle.tddpersistence.db.TaskReaderDbHelper;\n \n-import static xyz.lgvalle.tddpersistence.db.TaskReaderContract.*;\n \n public class DatabaseCleaner {\n \n     private static final String[] TABLES = {\n             // Add tables to delete here\n-            TaskEntry.TABLE_NAME\n+            TaskReaderContract.TaskEntry.TABLE_NAME\n     };\n \n     private final TaskReaderDbHelper dbHelper;\n"
    },
    {
        "commit hash": "9153393a7707da307d890cc1ec3b917290740aec",
        "previous commit hash": "ce008367da66239503f950975a34f6aec3e1eaa4",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/PersistabilityTest.java",
            "additions": 6,
            "deletions": 6
        },
        "diff content": "@@ -1,21 +1,21 @@\n-package xyz.lgvalle.tddpersistence;\n+package com.novoda.demo.tddpersistence;\n \n import android.content.Context;\n import android.support.test.InstrumentationRegistry;\n import android.support.test.runner.AndroidJUnit4;\n \n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n+import com.novoda.demo.tddpersistence.db.TaskReaderDbHelper;\n \n import java.util.Arrays;\n import java.util.List;\n \n-import xyz.lgvalle.tddpersistence.db.TaskReaderDbHelper;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n \n+import static com.novoda.demo.tddpersistence.TaskRepositoryTest.TaskBuilder.aTask;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n-import static xyz.lgvalle.tddpersistence.TaskRepositoryTest.TaskBuilder.aTask;\n \n @RunWith(AndroidJUnit4.class)\n public class PersistabilityTest {\n"
    },
    {
        "commit hash": "9153393a7707da307d890cc1ec3b917290740aec",
        "previous commit hash": "ce008367da66239503f950975a34f6aec3e1eaa4",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/TaskNamedMatcher.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-package xyz.lgvalle.tddpersistence;\n+package com.novoda.demo.tddpersistence;\n \n import org.hamcrest.Description;\n import org.hamcrest.TypeSafeMatcher;\n"
    },
    {
        "commit hash": "9153393a7707da307d890cc1ec3b917290740aec",
        "previous commit hash": "ce008367da66239503f950975a34f6aec3e1eaa4",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/TaskRepositoryTest.java",
            "additions": 11,
            "deletions": 11
        },
        "diff content": "@@ -1,32 +1,32 @@\n-package xyz.lgvalle.tddpersistence;\n+package com.novoda.demo.tddpersistence;\n \n import android.content.Context;\n import android.support.test.InstrumentationRegistry;\n import android.support.test.runner.AndroidJUnit4;\n \n-import org.hamcrest.Matcher;\n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n+import com.novoda.demo.tddpersistence.db.TaskReaderDbHelper;\n \n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n+import java.util.Locale;\n \n-import xyz.lgvalle.tddpersistence.db.TaskReaderDbHelper;\n+import org.hamcrest.Matcher;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n \n+import static com.novoda.demo.tddpersistence.TaskNamedMatcher.aTaskNamed;\n+import static com.novoda.demo.tddpersistence.TaskRepositoryTest.TaskBuilder.aTask;\n import static org.hamcrest.Matchers.containsInAnyOrder;\n import static org.junit.Assert.assertThat;\n-import static xyz.lgvalle.tddpersistence.TaskNamedMatcher.aTaskNamed;\n-import static xyz.lgvalle.tddpersistence.TaskRepositoryTest.TaskBuilder.aTask;\n \n \n @RunWith(AndroidJUnit4.class)\n public class TaskRepositoryTest {\n-    private static SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n+    private static SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.UK);\n     private TaskRepository taskRepository;\n \n-\n     @Before\n     public void setUp() throws Exception {\n         Context appContext = InstrumentationRegistry.getTargetContext();\n@@ -103,4 +103,4 @@ public class TaskRepositoryTest {\n \n \n     }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "9153393a7707da307d890cc1ec3b917290740aec",
        "previous commit hash": "ce008367da66239503f950975a34f6aec3e1eaa4",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/MainActivity.java",
            "additions": 6,
            "deletions": 3
        },
        "diff content": "@@ -2,6 +2,7 @@ package com.novoda.demo.tddpersistence;\n \n import android.os.Bundle;\n import android.support.v7.app.AppCompatActivity;\n+import android.util.Log;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.widget.EditText;\n@@ -14,10 +15,12 @@ import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n import java.util.List;\n+import java.util.Locale;\n \n public class MainActivity extends AppCompatActivity {\n-    private static String TAG = \"MainActivity.class\"\n-    SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n+    private static final String TAG = MainActivity.class.getSimpleName();\n+    private static final SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.UK);\n+\n     private TaskRepository taskRepository;\n     private EditText taskEditTitle;\n     private EditText taskEditDate;\n@@ -61,7 +64,7 @@ public class MainActivity extends AppCompatActivity {\n             date = dateFormat.parse(strDate);\n         } catch (ParseException ex) {\n             date = null;\n-            Log.e(TAG, \"A problem occur during the parsing of the string strDate: \"+ strDate, ex);\n+            Log.e(TAG, \"A problem occur during the parsing of the string strDate: \" + strDate, ex);\n         }\n \n         return new Task(taskEditTitle.getText().toString(), date);\n"
    },
    {
        "commit hash": "9153393a7707da307d890cc1ec3b917290740aec",
        "previous commit hash": "ce008367da66239503f950975a34f6aec3e1eaa4",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/MainActivityPresenter.java",
            "additions": 0,
            "deletions": 16
        },
        "diff content": "@@ -1,16 +0,0 @@\n-package com.novoda.demo.tddpersistence;\n-\n-\n-public class MainActivityPresenter {\n-\n-    private final TaskRepository taskRepository;\n-\n-    public MainActivityPresenter(TaskRepository taskRepository) {\n-        this.taskRepository = taskRepository;\n-    }\n-\n-    public void save(Task task) {\n-        taskRepository.persistTask(task);\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "9153393a7707da307d890cc1ec3b917290740aec",
        "previous commit hash": "ce008367da66239503f950975a34f6aec3e1eaa4",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/TaskStorage.java",
            "additions": 0,
            "deletions": 3
        },
        "diff content": "@@ -2,9 +2,6 @@ package com.novoda.demo.tddpersistence;\n \n import java.util.List;\n \n-/**\n- * Created by lgvalle on 08/01/2017.\n- */\n public interface TaskStorage {\n     void insert(TaskDBModel taskDBModel);\n \n"
    },
    {
        "commit hash": "9153393a7707da307d890cc1ec3b917290740aec",
        "previous commit hash": "ce008367da66239503f950975a34f6aec3e1eaa4",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/db/AndroidTransactor.java",
            "additions": 0,
            "deletions": 37
        },
        "diff content": "@@ -1,37 +0,0 @@\n-package com.novoda.demo.tddpersistence.db;\n-\n-import android.database.sqlite.SQLiteDatabase;\n-import android.util.Log;\n-\n-\n-public class AndroidTransactor {\n-\n-    private static final String TAG = AndroidTransactor.class.getSimpleName();\n-\n-    public interface UnitOfWork {\n-        void work(SQLiteDatabase db) throws Exception;\n-    }\n-\n-\n-    private final TaskReaderDbHelper dbHelper;\n-\n-    public AndroidTransactor(TaskReaderDbHelper dbHelper) {\n-        this.dbHelper = dbHelper;\n-    }\n-\n-    public void perform(UnitOfWork unitOfWork)  {\n-        SQLiteDatabase db = dbHelper.getWritableDatabase();\n-\n-        db.beginTransaction();\n-        try {\n-            unitOfWork.work(db);\n-            db.setTransactionSuccessful();\n-        } catch (Exception e) {\n-            Log.d(TAG, e.getMessage());\n-        } finally {\n-            db.endTransaction();\n-        }\n-        db.close();\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/README.md",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+Snowy Village Live Wallpaper\n+====================\n+\n+![Icon](https://raw.githubusercontent.com/novoda/snowy-village-wallpaper/master/app/src/main/res/drawable-xxhdpi/ic_launcher.png)\n+\n+A festive snowy village live wallpaper.\n+ \n+Based on the [amazing design](https://www.novoda.com/blog/happy-holidays-from-novoda) from Qi Qu and Nick Howes'[Parallax live wallpaper](https://github.com/halfninja/android-parallax-wallpaper).\n+\n+![Animated demo](https://www.novoda.com/blog/content/images/2015/12/snow-weheeee.gif)\n+\n+<a href=\"https://play.google.com/store/apps/details?id=com.novoda.snowyvillagewallpaper&utm_source=global_co&utm_medium=prtnr&utm_content=Mar2515&utm_campaign=PartBadge&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1\"><img alt=\"Get it on Google Play\" width=\"25%\" height=\"25%\" src=\"https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png\" /></a>\n+\n+<sub><sup>Android, Google Play and the Google Play logo are trademarks of Google Inc.</sub></sup>\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/build.gradle",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 23\n+    buildToolsVersion \"23.0.2\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.snowyvillagewallpaper\"\n+        minSdkVersion 7\n+        targetSdkVersion 23\n+\n+        versionCode 4\n+        versionName \"1.1.0\"\n+\n+        testApplicationId \"net.bonysoft.snowyvillagewallpaper.test\"\n+        testInstrumentationRunner \"android.test.InstrumentationTestRunner\"\n+    }\n+\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+}\n+dependencies {\n+    testCompile 'junit:junit:4.12'\n+    testCompile 'org.mockito:mockito-core:1.10.19'\n+    testCompile 'org.easytesting:fest-assert-core:2.0M10'\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/androidTest/java/uk/co/halfninja/wallpaper/parallax/test/BitmapUtilsTest.java",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+package uk.co.halfninja.wallpaper.parallax.test;\n+\n+import android.test.AndroidTestCase;\n+\n+import uk.co.halfninja.wallpaper.parallax.gl.BitmapUtils;\n+\n+public class BitmapUtilsTest extends AndroidTestCase {\n+\tpublic void testPowerOfTwo() {\n+\t\tassertEquals(2, BitmapUtils.getNextPowerOfTwo(2));\n+\t\tassertEquals(4, BitmapUtils.getNextPowerOfTwo(3));\n+\t\tassertEquals(4, BitmapUtils.getNextPowerOfTwo(4));\n+\t\tassertEquals(64, BitmapUtils.getNextPowerOfTwo(47));\n+\t\tassertEquals(128, BitmapUtils.getNextPowerOfTwo(99));\n+\t}\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/androidTest/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/androidTest/res/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/androidTest/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/androidTest/res/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/androidTest/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/androidTest/res/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/androidTest/res/layout/main.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    android:orientation=\"vertical\" >\n+\n+    <TextView\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/hello\" />\n+\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/androidTest/res/values/strings.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\n+    <string name=\"hello\">Hello World!</string>\n+    <string name=\"app_name\">ParallaxWallpaperTestTest</string>\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/AndroidManifest.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  package=\"com.novoda.snowyvillagewallpaper\">\n+\n+  <uses-feature android:name=\"android.software.live_wallpaper\" />\n+\n+  <application\n+    android:icon=\"@drawable/ic_launcher\"\n+    android:label=\"@string/app_name\"\n+    android:allowBackup=\"false\">\n+\n+    <service\n+      android:name=\"com.novoda.snowyvillagewallpaper.ParallaxWallpaper\"\n+      android:label=\"@string/app_name\"\n+      android:permission=\"android.permission.BIND_WALLPAPER\">\n+      <intent-filter>\n+        <action android:name=\"android.service.wallpaper.WallpaperService\" />\n+      </intent-filter>\n+      <meta-data\n+        android:name=\"android.service.wallpaper\"\n+        android:resource=\"@xml/wallpaper\" />\n+    </service>\n+\n+  </application>\n+</manifest>\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/santa_to_left.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/santa_to_left.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/santa_to_right.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/santa_to_right.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/snow.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/snow.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_1.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_2.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_3.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_4.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_5.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_5.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_land_1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_land_1.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_land_2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_land_2.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_land_3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_land_3.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_land_4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_land_4.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/assets/village_land_5.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/assets/village_land_5.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/ParallaxWallpaper.java",
            "additions": 67,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,67 @@\n+package com.novoda.snowyvillagewallpaper;\n+\n+import android.util.Log;\n+\n+import java.io.IOException;\n+\n+import net.rbgrn.android.glwallpaperservice.GLWallpaperService;\n+\n+/**\n+ * Draws a wallpaper much like the regular wallpapers which slide behind\n+ * the home screen with a parallax effect. The difference with this wallpaper\n+ * is that it supports multiple images with different widths, for a much more\n+ * intricate-looking parallax effect.\n+ * <p/>\n+ * The main thing is that it's configurable, so you can use any set of images.\n+ */\n+public class ParallaxWallpaper extends GLWallpaperService {\n+\n+    public static final String TAG = \"ParallaxWallpaper\";\n+\n+    private ParallaxWallpaperRenderer renderer;\n+\n+    @Override\n+    public void onCreate() {\n+        super.onCreate();\n+    }\n+\n+    @Override\n+    public void onDestroy() {\n+        super.onDestroy();\n+    }\n+\n+    @Override\n+    public Engine onCreateEngine() {\n+        return new ParallaxEngine();\n+    }\n+\n+    class ParallaxEngine extends GLEngine {\n+\n+        ParallaxEngine() {\n+            super();\n+            renderer = new ParallaxWallpaperRenderer(ParallaxWallpaper.this.getAssets());\n+            setRenderer(renderer);\n+\n+            // TODO: use RENDERMODE_WHEN_DIRTY if not showing snow\n+            setRenderMode(RENDERMODE_CONTINUOUSLY);\n+\n+            initLayers();\n+            requestRender();\n+        }\n+\n+        public void initLayers() {\n+            try {\n+                renderer.reloadLayers();\n+                renderer.resizeLayers();\n+            } catch (IOException e) {\n+                Log.e(TAG, \"Error loading textures\", e);\n+            }\n+        }\n+\n+        @Override\n+        public void onOffsetsChanged(float xOffset, float yOffset, float xStep, float yStep, int xPixels, int yPixels) {\n+            renderer.setOffset(xOffset, xPixels);\n+            requestRender();\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/ParallaxWallpaperRenderer.java",
            "additions": 291,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,291 @@\n+package com.novoda.snowyvillagewallpaper;\n+\n+import android.content.res.AssetManager;\n+import android.opengl.GLSurfaceView;\n+import android.util.Log;\n+\n+import com.novoda.snowyvillagewallpaper.santa.SantaSchedule;\n+import com.novoda.snowyvillagewallpaper.santa.SantaTracker;\n+\n+import javax.microedition.khronos.egl.EGLConfig;\n+import javax.microedition.khronos.opengles.GL10;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Random;\n+\n+import uk.co.halfninja.wallpaper.parallax.gl.Capabilities;\n+import uk.co.halfninja.wallpaper.parallax.gl.Quad;\n+import uk.co.halfninja.wallpaper.parallax.gl.Texture;\n+import uk.co.halfninja.wallpaper.parallax.gl.TextureLoader;\n+import uk.co.halfninja.wallpaper.parallax.gl.Utils;\n+\n+import static com.novoda.snowyvillagewallpaper.ParallaxWallpaper.TAG;\n+import static javax.microedition.khronos.opengles.GL10.*;\n+\n+public final class ParallaxWallpaperRenderer implements GLSurfaceView.Renderer {\n+\n+    private static final int MAX_SNOW_FLAKES_COUNT = 40;\n+\n+    private static final float SKY_COLOR_R = 0.05f;\n+    private static final float SKY_COLOR_G = 0.06f;\n+    private static final float SKY_COLOR_B = 0.156f;\n+    private static final float SKY_COLOR_A = 1f;\n+\n+    private static final String[] PORTRAIT_LAYERS_FILES_NAMES = {\n+            \"village_1.png\",\n+            \"village_2.png\",\n+            \"village_3.png\",\n+            \"village_4.png\",\n+            \"village_5.png\"\n+    };\n+\n+    private static final String[] LANDSCAPE_LAYERS_FILES_NAMES = {\n+            \"village_land_1.png\",\n+            \"village_land_2.png\",\n+            \"village_land_3.png\",\n+            \"village_land_4.png\",\n+            \"village_land_5.png\"\n+    };\n+\n+    private static final String SNOW_FILE_NAME = \"snow.png\";\n+    private static final String SANTA_TO_RIGHT_FILE_NAME = \"santa_to_right.png\";\n+    private static final String SANTA_TO_LEFT_FILE_NAME = \"santa_to_left.png\";\n+    private static final float SANTA_LAYER_RESIZE_RATIO = 0.3f;\n+\n+    private float offset = 0.0f;\n+    private int pixelOffset = 0;\n+    private int surfaceHeight;\n+    private int surfaceWidth;\n+    private int maxSnowflakeHeight;\n+\n+    private final Capabilities capabilities = new Capabilities();\n+    private final Comparator<SnowFlake> snowFlakeComparator = new SnowFlakeSizeComparator();\n+    private final TextureLoader textureLoader;\n+    private List<Quad> portraitLayers = new ArrayList<>(PORTRAIT_LAYERS_FILES_NAMES.length);\n+    private List<Quad> landscapeLayers = new ArrayList<>(LANDSCAPE_LAYERS_FILES_NAMES.length);\n+    private List<Quad> snowFlakesQuads = new ArrayList<>(SnowFlakeTypes.count());\n+    private List<Quad> currentLayers = new ArrayList<>();\n+    private List<SnowFlake> snowFlakes = new ArrayList<>(MAX_SNOW_FLAKES_COUNT);\n+\n+    private Quad santaToLeftLayer;\n+    private Quad santaToRightLayer;\n+    private SantaTracker santaTracker;\n+\n+    private GL10 gl;\n+\n+    public ParallaxWallpaperRenderer(AssetManager assets) {\n+        this.textureLoader = new TextureLoader(capabilities, assets);\n+    }\n+\n+    @Override\n+    public void onSurfaceCreated(GL10 gl, EGLConfig cfg) {\n+        this.gl = gl;\n+        capabilities.reload(gl);\n+\n+        try {\n+            reloadLayers();\n+        } catch (IOException e) {\n+            Log.e(TAG, \"Error loading textures\", e);\n+        }\n+    }\n+\n+    public void reloadLayers() throws IOException {\n+        if (gl != null && layersNotAlreadyLoaded()) {\n+            portraitLayers.clear();\n+            landscapeLayers.clear();\n+            snowFlakesQuads.clear();\n+            textureLoader.clear(gl);\n+            for (String bitmapPath : LANDSCAPE_LAYERS_FILES_NAMES) {\n+                loadLayerTo(bitmapPath, landscapeLayers);\n+            }\n+            for (String bitmapPath : PORTRAIT_LAYERS_FILES_NAMES) {\n+                loadLayerTo(bitmapPath, portraitLayers);\n+            }\n+            loadSantaLayers();\n+            loadSnowFlakesLayers();\n+        }\n+    }\n+\n+    private boolean layersNotAlreadyLoaded() {\n+        return snowFlakesQuads.isEmpty() && portraitLayers.isEmpty() && landscapeLayers.isEmpty();\n+    }\n+\n+    private void loadLayerTo(String bitmapPath, List<Quad> layerList) throws IOException {\n+        Quad quad = new Quad();\n+        Texture tex = textureLoader.loadTextureFromFile(gl, bitmapPath);\n+        quad.setTexture(tex);\n+        layerList.add(0, quad);\n+    }\n+\n+    private void loadSantaLayers() throws IOException {\n+        santaToRightLayer = new Quad();\n+        Texture texRight = textureLoader.loadTextureFromFile(gl, SANTA_TO_RIGHT_FILE_NAME);\n+        santaToRightLayer.setTexture(texRight);\n+\n+        santaToLeftLayer = new Quad();\n+        Texture texLeft = textureLoader.loadTextureFromFile(gl, SANTA_TO_LEFT_FILE_NAME);\n+        santaToLeftLayer.setTexture(texLeft);\n+    }\n+\n+    private void loadSnowFlakesLayers() throws IOException {\n+        Texture tex = textureLoader.loadTextureFromFile(gl, SNOW_FILE_NAME);\n+        for (int i = 0; i < SnowFlakeTypes.count(); i++) {\n+            Quad quad = new Quad();\n+            quad.setTexture(tex);\n+            snowFlakesQuads.add(0, quad);\n+        }\n+    }\n+\n+    @Override\n+    public void onDrawFrame(GL10 gl) {\n+        gl.glClearColor(SKY_COLOR_R, SKY_COLOR_G, SKY_COLOR_B, SKY_COLOR_A);\n+        gl.glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n+        gl.glColor4f(1f, 1f, 1f, 1f);\n+\n+        // TODO: draw Santa in front of the Moon but behind the village\n+        for (Quad quad : currentLayers) {\n+            quad.setX(offset * (surfaceWidth - quad.getWidth()));\n+            quad.draw(gl);\n+        }\n+\n+        if (santaTracker.isSantaInTown()) {\n+            santaTracker.updatePosition();\n+            Quad currentSantaDirectionLayer;\n+\n+            if (santaTracker.movingToRight()) {\n+                currentSantaDirectionLayer = santaToRightLayer;\n+            } else {\n+                currentSantaDirectionLayer = santaToLeftLayer;\n+            }\n+            currentSantaDirectionLayer.setX(santaTracker.getX() + pixelOffset);\n+            currentSantaDirectionLayer.setY(santaTracker.getY());\n+            currentSantaDirectionLayer.draw(gl);\n+        }\n+\n+        for (SnowFlake flake : snowFlakes) {\n+            Quad quad = snowFlakesQuads.get(flake.getFlakeImageId());\n+            flake.update(surfaceHeight, maxSnowflakeHeight);\n+            quad.setY(flake.getY());\n+            quad.setX(flake.getX());\n+            quad.draw(gl);\n+        }\n+    }\n+\n+    @Override\n+    public void onSurfaceChanged(GL10 gl, int w, int h) {\n+        if (w == surfaceWidth && h == surfaceHeight) {\n+            return;\n+        }\n+        surfaceWidth = w;\n+        surfaceHeight = h;\n+        Utils.pixelProjection(gl, w, h);\n+        gl.glEnable(GL_TEXTURE_2D);\n+        gl.glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);\n+        gl.glEnable(GL_BLEND);\n+        gl.glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n+\n+        resizeLayers();\n+        setCurrentLayers();\n+\n+        initSantaTracker();\n+\n+        createSnowFlakes();\n+        maxSnowflakeHeight = calculateMaxSnowFlakeHeight();\n+    }\n+\n+    private void initSantaTracker() {\n+        SantaSchedule santaSchedule = SantaSchedule.newInstance();\n+        Quad foregroundLayer = currentLayers.get(currentLayers.size() - 1);\n+        santaTracker = new SantaTracker(\n+                foregroundLayer.getWidth(),\n+                foregroundLayer.getHeight(),\n+                santaToLeftLayer.getWidth(),\n+                santaToLeftLayer.getHeight(),\n+                santaSchedule\n+        );\n+    }\n+\n+    public void resizeLayers() {\n+        if (portraitLayers.isEmpty()) {\n+            return;\n+        }\n+        float portraitRatio = getPortraitRatio();\n+        resizeLayers(portraitRatio, portraitLayers);\n+\n+        float landscapeRatio = getLandscapeRatio();\n+        resizeLayers(landscapeRatio, landscapeLayers);\n+\n+        resizeSnowLayers(portraitRatio);\n+\n+        resizeLayer(santaToLeftLayer, portraitRatio * SANTA_LAYER_RESIZE_RATIO);\n+        resizeLayer(santaToRightLayer, portraitRatio * SANTA_LAYER_RESIZE_RATIO);\n+    }\n+\n+    private float getPortraitRatio() {\n+        int bitmapHeight = portraitLayers.get(0).getTexture().getBitmapHeight();\n+        return (float) surfaceHeight / bitmapHeight;\n+    }\n+\n+    private float getLandscapeRatio() {\n+        int bitmapHeight = landscapeLayers.get(0).getTexture().getBitmapHeight();\n+        return (float) surfaceHeight / bitmapHeight;\n+    }\n+\n+    private void resizeLayers(float landscapeRatio, List<Quad> layers) {\n+        for (Quad quad : layers) {\n+            resizeLayer(quad, landscapeRatio);\n+        }\n+    }\n+\n+    private void resizeLayer(Quad quad, float ratio) {\n+        quad.setHeight(quad.getTexture().getBitmapHeight() * ratio);\n+        quad.setWidth(quad.getTexture().getBitmapWidth() * ratio);\n+    }\n+\n+    private void resizeSnowLayers(float portraitRatio) {\n+        resizeLayer(snowFlakesQuads.get(0), portraitRatio * SnowFlakeTypes.SMALL.getTextureRatio());\n+        resizeLayer(snowFlakesQuads.get(1), portraitRatio * SnowFlakeTypes.MEDIUM.getTextureRatio());\n+        resizeLayer(snowFlakesQuads.get(2), portraitRatio * SnowFlakeTypes.BIG.getTextureRatio());\n+    }\n+\n+    private void setCurrentLayers() {\n+        currentLayers.clear();\n+        if (surfaceHeight > surfaceWidth) {\n+            currentLayers.addAll(portraitLayers);\n+        } else {\n+            currentLayers.addAll(landscapeLayers);\n+        }\n+    }\n+\n+    private void createSnowFlakes() {\n+        Random rng = new Random();\n+        snowFlakes.clear();\n+        for (int i = 0; i < MAX_SNOW_FLAKES_COUNT; i++) {\n+            float startX = rng.nextFloat() * surfaceWidth;\n+            float startY = 0 - rng.nextFloat() * surfaceHeight;\n+            int snowFlakeShapeIndex = rng.nextInt(SnowFlakeTypes.count());\n+            SnowFlakeTypes flakeType = SnowFlakeTypes.values()[snowFlakeShapeIndex];\n+            float speed = flakeType.getBaseSpeed() + rng.nextFloat();\n+            snowFlakes.add(new SnowFlake(flakeType, startX, startY, snowFlakeShapeIndex, speed));\n+        }\n+\n+        Collections.sort(snowFlakes, snowFlakeComparator);\n+    }\n+\n+    private int calculateMaxSnowFlakeHeight() {\n+        int max = 0;\n+        for (Quad quad : snowFlakesQuads) {\n+            max = Math.max(max, (int) quad.getHeight());\n+        }\n+        return max;\n+    }\n+\n+    public void setOffset(float xOffset, int xPixels) {\n+        offset = xOffset;\n+        pixelOffset = xPixels;\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/SnowFlake.java",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+package com.novoda.snowyvillagewallpaper;\n+\n+class SnowFlake {\n+\n+    private final int flakeImageId;\n+    private final float speed;\n+    private final SnowFlakeTypes flakeType;\n+    private final float x;\n+    private float y;\n+\n+    public SnowFlake(SnowFlakeTypes flakeType, float x, float y, int flakeImageId, float speed) {\n+        this.flakeType = flakeType;\n+        this.x = x;\n+        this.y = y;\n+        this.flakeImageId = flakeImageId;\n+        this.speed = speed;\n+    }\n+\n+    public int getFlakeImageId() {\n+        return flakeImageId;\n+    }\n+\n+    public float getX() {\n+        return x;\n+    }\n+\n+    public float getY() {\n+        return y;\n+    }\n+\n+    public void update(final int surfaceHeight, final int maxSnowflakeHeight) {\n+        y += speed;\n+        if (y > surfaceHeight) {\n+            y = -maxSnowflakeHeight;\n+        }\n+    }\n+\n+    public SnowFlakeTypes getFlakeType() {\n+        return flakeType;\n+    }\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/SnowFlakeSizeComparator.java",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+package com.novoda.snowyvillagewallpaper;\n+\n+import java.util.Comparator;\n+\n+class SnowFlakeSizeComparator implements Comparator<SnowFlake> {\n+\n+    @Override\n+    public int compare(SnowFlake lhs, SnowFlake rhs) {\n+        return lhs.getFlakeType().compareTo(rhs.getFlakeType());\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/SnowFlakeTypes.java",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+package com.novoda.snowyvillagewallpaper;\n+\n+enum SnowFlakeTypes {\n+    SMALL(1f, 0.09f),\n+    MEDIUM(2f, 0.26f),\n+    BIG(3f, 0.40f);\n+\n+    private final float baseSpeed;\n+    private final float textureRatio;\n+\n+    SnowFlakeTypes(float baseSpeed, float textureRatio) {\n+        this.baseSpeed = baseSpeed;\n+        this.textureRatio = textureRatio;\n+    }\n+\n+    public static int count() {\n+        return values().length;\n+    }\n+\n+    public float getBaseSpeed() {\n+        return baseSpeed;\n+    }\n+\n+    public float getTextureRatio() {\n+        return textureRatio;\n+    }\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/santa/Clock.java",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.snowyvillagewallpaper.santa;\n+\n+class Clock {\n+\n+    public long getCurrentTime() {\n+        return System.currentTimeMillis();\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/santa/RoundDelay.java",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+package com.novoda.snowyvillagewallpaper.santa;\n+\n+import java.util.Random;\n+import java.util.concurrent.TimeUnit;\n+\n+class RoundDelay {\n+\n+    private static final int MIN_INTERVAL_BETWEEN_ROUNDS = (int) TimeUnit.SECONDS.toMillis(5);\n+    private static final int MAX_INTERVAL_BETWEEN_ROUNDS = (int) TimeUnit.SECONDS.toMillis(10);\n+\n+    private final Random random;\n+\n+    public RoundDelay() {\n+        random = new Random();\n+    }\n+\n+     public int getNextRoundDelay() {\n+         return MIN_INTERVAL_BETWEEN_ROUNDS\n+                 + random.nextInt(MAX_INTERVAL_BETWEEN_ROUNDS - MIN_INTERVAL_BETWEEN_ROUNDS);\n+     }\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/santa/SantaSchedule.java",
            "additions": 60,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,60 @@\n+package com.novoda.snowyvillagewallpaper.santa;\n+\n+import java.util.Calendar;\n+\n+public class SantaSchedule {\n+\n+    private final Clock clock;\n+    private final RoundDelay roundDelay;\n+\n+    private long nextTimeInTown;\n+\n+    public static SantaSchedule newInstance() {\n+        Clock clock = new Clock();\n+        RoundDelay roundDelay = new RoundDelay();\n+        return new SantaSchedule(clock, roundDelay);\n+    }\n+\n+    SantaSchedule(Clock clock, RoundDelay roundDelay) {\n+        this.clock = clock;\n+        this.roundDelay = roundDelay;\n+    }\n+\n+    public void calculateNextVisitTime() {\n+        if (isChristmas()) {\n+            nextTimeInTown = clock.getCurrentTime() + roundDelay.getNextRoundDelay();\n+        } else {\n+            nextTimeInTown = getNextChristmasMidnight();\n+        }\n+    }\n+\n+    private boolean isChristmas() {\n+        Calendar now = Calendar.getInstance();\n+        now.setTimeInMillis(clock.getCurrentTime());\n+        return now.get(Calendar.DAY_OF_MONTH) == 25\n+                && now.get(Calendar.MONTH) == Calendar.DECEMBER;\n+    }\n+\n+    private long getNextChristmasMidnight() {\n+        Calendar calendar = Calendar.getInstance();\n+        calendar.setTimeInMillis(clock.getCurrentTime());\n+        if (isAfterChristmas(calendar)) {\n+            calendar.add(Calendar.YEAR, 1);\n+        }\n+        calendar.set(Calendar.MONTH, Calendar.DECEMBER);\n+        calendar.set(Calendar.DAY_OF_MONTH, 25);\n+        calendar.set(Calendar.HOUR_OF_DAY, 0);\n+        calendar.set(Calendar.MINUTE, 0);\n+        calendar.set(Calendar.SECOND, 0);\n+        return calendar.getTimeInMillis();\n+    }\n+\n+    private boolean isAfterChristmas(Calendar now) {\n+        return now.get(Calendar.MONTH) == Calendar.DECEMBER && now.get(Calendar.DAY_OF_MONTH) > 25;\n+    }\n+\n+    public boolean isSantaInTown() {\n+        return clock.getCurrentTime() >= nextTimeInTown;\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/com/novoda/snowyvillagewallpaper/santa/SantaTracker.java",
            "additions": 89,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,89 @@\n+package com.novoda.snowyvillagewallpaper.santa;\n+\n+import java.util.Random;\n+\n+public class SantaTracker {\n+\n+    private static final float SKY_HEIGHT_FRACTION = 0.6f;\n+    private static final float TOP_SKY_FRACTION = 0.1f;\n+    private static final float SPEED = 4.0f;\n+\n+    private final float skyWidth;\n+    private final float skyHeight;\n+    private final float santaWidth;\n+    private final float santaHeight;\n+\n+    private float x;\n+    private float y;\n+    private Direction direction;\n+\n+    private final SantaSchedule santaSchedule;\n+\n+    public SantaTracker(float skyWidth, float skyHeight, float santaWidth, float santaHeight, SantaSchedule santaSchedule) {\n+        this.skyWidth = skyWidth;\n+        this.skyHeight = skyHeight;\n+        this.santaWidth = santaWidth;\n+        this.santaHeight = santaHeight;\n+        this.santaSchedule = santaSchedule;\n+\n+        direction = Direction.TO_RIGHT;\n+        resetPosition();\n+        santaSchedule.calculateNextVisitTime();\n+    }\n+\n+    private void resetPosition() {\n+        y = resetYToCentralHeight();\n+        if (direction == Direction.TO_RIGHT) {\n+            x = -santaWidth;\n+        } else {\n+            x = skyWidth;\n+        }\n+    }\n+\n+    private float resetYToCentralHeight() {\n+        Random random = new Random();\n+        return random.nextFloat() * (skyHeight - santaHeight) * SKY_HEIGHT_FRACTION + (skyHeight - santaHeight) * TOP_SKY_FRACTION;\n+    }\n+\n+    public void updatePosition() {\n+        if (direction == Direction.TO_RIGHT) {\n+            x += SPEED;\n+        } else {\n+            x -= SPEED;\n+        }\n+        if (x > skyWidth || x < -santaWidth) {\n+            santaSchedule.calculateNextVisitTime();\n+            flipDirection();\n+            resetPosition();\n+        }\n+    }\n+\n+    private void flipDirection() {\n+        if (direction == Direction.TO_LEFT) {\n+            direction = Direction.TO_RIGHT;\n+        } else {\n+            direction = Direction.TO_LEFT;\n+        }\n+    }\n+\n+    public float getX() {\n+        return x;\n+    }\n+\n+    public float getY() {\n+        return y;\n+    }\n+\n+    public boolean movingToRight() {\n+        return direction == Direction.TO_RIGHT;\n+    }\n+\n+    public boolean isSantaInTown() {\n+        return santaSchedule.isSantaInTown();\n+    }\n+\n+    private enum Direction {\n+        TO_LEFT,\n+        TO_RIGHT\n+    }\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/net/rbgrn/android/glwallpaperservice/BaseConfigChooser.java",
            "additions": 153,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright (C) 2008 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.rbgrn.android.glwallpaperservice;\n+\n+import android.opengl.GLSurfaceView;\n+\n+import javax.microedition.khronos.egl.EGL10;\n+import javax.microedition.khronos.egl.EGLConfig;\n+import javax.microedition.khronos.egl.EGLDisplay;\n+\n+/**\n+ * Created by romannurik on 11/6/13.\n+ */\n+abstract class BaseConfigChooser implements GLSurfaceView.EGLConfigChooser {\n+        private int eglContextClientVersion;\n+\n+        public BaseConfigChooser(int[] configSpec, int eglContextClientVersion) {\n+                this.eglContextClientVersion = eglContextClientVersion;\n+        mConfigSpec = filterConfigSpec(configSpec);\n+    }\n+\n+    public EGLConfig chooseConfig(EGL10 egl, EGLDisplay display) {\n+        int[] num_config = new int[1];\n+        if (!egl.eglChooseConfig(display, mConfigSpec, null, 0,\n+                num_config)) {\n+            throw new IllegalArgumentException(\"eglChooseConfig failed\");\n+        }\n+\n+        int numConfigs = num_config[0];\n+\n+        if (numConfigs <= 0) {\n+            throw new IllegalArgumentException(\n+                    \"No configs match configSpec\");\n+        }\n+\n+        EGLConfig[] configs = new EGLConfig[numConfigs];\n+        if (!egl.eglChooseConfig(display, mConfigSpec, configs, numConfigs,\n+                num_config)) {\n+            throw new IllegalArgumentException(\"eglChooseConfig#2 failed\");\n+        }\n+        EGLConfig config = chooseConfig(egl, display, configs);\n+        if (config == null) {\n+            throw new IllegalArgumentException(\"No config chosen\");\n+        }\n+        return config;\n+    }\n+\n+    abstract EGLConfig chooseConfig(EGL10 egl, EGLDisplay display,\n+            EGLConfig[] configs);\n+\n+    protected int[] mConfigSpec;\n+\n+    private int[] filterConfigSpec(int[] configSpec) {\n+        if (eglContextClientVersion != 2) {\n+            return configSpec;\n+        }\n+        /* We know none of the subclasses define EGL_RENDERABLE_TYPE.\n+         * And we know the configSpec is well formed.\n+         */\n+        int len = configSpec.length;\n+        int[] newConfigSpec = new int[len + 2];\n+        System.arraycopy(configSpec, 0, newConfigSpec, 0, len-1);\n+        newConfigSpec[len-1] = EGL10.EGL_RENDERABLE_TYPE;\n+        newConfigSpec[len] = 4; /* EGL_OPENGL_ES2_BIT */\n+        newConfigSpec[len+1] = EGL10.EGL_NONE;\n+        return newConfigSpec;\n+    }\n+\n+        public static class ComponentSizeChooser extends BaseConfigChooser {\n+                public ComponentSizeChooser(int redSize, int greenSize, int blueSize, int alphaSize, int depthSize,\n+                                int stencilSize, int eglContextClientVersion) {\n+                        super(new int[] { EGL10.EGL_RED_SIZE, redSize, EGL10.EGL_GREEN_SIZE, greenSize, EGL10.EGL_BLUE_SIZE,\n+                                        blueSize, EGL10.EGL_ALPHA_SIZE, alphaSize, EGL10.EGL_DEPTH_SIZE, depthSize, EGL10.EGL_STENCIL_SIZE,\n+                                        stencilSize, EGL10.EGL_NONE }, eglContextClientVersion);\n+                        mValue = new int[1];\n+                        mRedSize = redSize;\n+                        mGreenSize = greenSize;\n+                        mBlueSize = blueSize;\n+                        mAlphaSize = alphaSize;\n+                        mDepthSize = depthSize;\n+                        mStencilSize = stencilSize;\n+                }\n+\n+                @Override\n+                public EGLConfig chooseConfig(EGL10 egl, EGLDisplay display, EGLConfig[] configs) {\n+                        EGLConfig closestConfig = null;\n+                        int closestDistance = 1000;\n+                        for (EGLConfig config : configs) {\n+                                int d = findConfigAttrib(egl, display, config, EGL10.EGL_DEPTH_SIZE, 0);\n+                                int s = findConfigAttrib(egl, display, config, EGL10.EGL_STENCIL_SIZE, 0);\n+                                if (d >= mDepthSize && s >= mStencilSize) {\n+                                        int r = findConfigAttrib(egl, display, config, EGL10.EGL_RED_SIZE, 0);\n+                                        int g = findConfigAttrib(egl, display, config, EGL10.EGL_GREEN_SIZE, 0);\n+                                        int b = findConfigAttrib(egl, display, config, EGL10.EGL_BLUE_SIZE, 0);\n+                                        int a = findConfigAttrib(egl, display, config, EGL10.EGL_ALPHA_SIZE, 0);\n+                                        int distance = Math.abs(r - mRedSize) + Math.abs(g - mGreenSize) + Math.abs(b - mBlueSize)\n+                                        + Math.abs(a - mAlphaSize);\n+                                        if (distance < closestDistance) {\n+                                                closestDistance = distance;\n+                                                closestConfig = config;\n+                                        }\n+                                }\n+                        }\n+                        return closestConfig;\n+                }\n+\n+                private int findConfigAttrib(EGL10 egl, EGLDisplay display, EGLConfig config, int attribute, int defaultValue) {\n+\n+                        if (egl.eglGetConfigAttrib(display, config, attribute, mValue)) {\n+                                return mValue[0];\n+                        }\n+                        return defaultValue;\n+                }\n+\n+                private int[] mValue;\n+                // Subclasses can adjust these values:\n+                protected int mRedSize;\n+                protected int mGreenSize;\n+                protected int mBlueSize;\n+                protected int mAlphaSize;\n+                protected int mDepthSize;\n+                protected int mStencilSize;\n+        }\n+\n+        /**\n+         * This class will choose a supported surface as close to RGB565 as possible, with or without a depth buffer.\n+         *\n+         */\n+        public static class SimpleEGLConfigChooser extends ComponentSizeChooser {\n+                public SimpleEGLConfigChooser(boolean withDepthBuffer, int eglContextClientVersion) {\n+                        super(4, 4, 4, 0, withDepthBuffer ? 16 : 0, 0, eglContextClientVersion);\n+                        // Adjust target values. This way we'll accept a 4444 or\n+                        // 555 buffer if there's no 565 buffer available.\n+                        mRedSize = 5;\n+                        mGreenSize = 6;\n+                        mBlueSize = 5;\n+                }\n+        }\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/net/rbgrn/android/glwallpaperservice/GLWallpaperService.java",
            "additions": 859,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,859 @@\n+/*\n+ * Copyright (C) 2008 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.rbgrn.android.glwallpaperservice;\n+\n+import java.io.Writer;\n+import java.util.ArrayList;\n+\n+import javax.microedition.khronos.egl.EGL10;\n+import javax.microedition.khronos.egl.EGL11;\n+import javax.microedition.khronos.egl.EGLConfig;\n+import javax.microedition.khronos.egl.EGLContext;\n+import javax.microedition.khronos.egl.EGLDisplay;\n+import javax.microedition.khronos.egl.EGLSurface;\n+import javax.microedition.khronos.opengles.GL;\n+import javax.microedition.khronos.opengles.GL10;\n+\n+import net.rbgrn.android.glwallpaperservice.BaseConfigChooser.ComponentSizeChooser;\n+import net.rbgrn.android.glwallpaperservice.BaseConfigChooser.SimpleEGLConfigChooser;\n+import android.opengl.GLSurfaceView;\n+import android.service.wallpaper.WallpaperService;\n+import android.util.Log;\n+import android.view.SurfaceHolder;\n+\n+// Original code provided by Robert Green\n+// http://www.rbgrn.net/content/354-glsurfaceview-adapted-3d-live-wallpapers\n+public class GLWallpaperService extends WallpaperService {\n+        private static final String TAG = \"GLWallpaperService\";\n+\n+        @Override\n+        public Engine onCreateEngine() {\n+                return new GLEngine();\n+        }\n+\n+        public class GLEngine extends Engine {\n+                public final static int RENDERMODE_WHEN_DIRTY = 0;\n+                public final static int RENDERMODE_CONTINUOUSLY = 1;\n+\n+                private GLThread mGLThread;\n+                private GLSurfaceView.EGLConfigChooser mEGLConfigChooser;\n+                private GLSurfaceView.EGLContextFactory mEGLContextFactory;\n+                private GLSurfaceView.EGLWindowSurfaceFactory mEGLWindowSurfaceFactory;\n+                private GLSurfaceView.GLWrapper mGLWrapper;\n+                private int mDebugFlags;\n+                private int mEGLContextClientVersion;\n+\n+                public GLEngine() {\n+                        super();\n+                }\n+\n+                @Override\n+                public void onVisibilityChanged(boolean visible) {\n+                        if (visible) {\n+                                onResume();\n+                        } else {\n+                                onPause();\n+                        }\n+                        super.onVisibilityChanged(visible);\n+                }\n+\n+                @Override\n+                public void onCreate(SurfaceHolder surfaceHolder) {\n+                        super.onCreate(surfaceHolder);\n+                        // Log.d(TAG, \"GLEngine.onCreate()\");\n+                }\n+\n+                @Override\n+                public void onDestroy() {\n+                        super.onDestroy();\n+                        // Log.d(TAG, \"GLEngine.onDestroy()\");\n+                        mGLThread.requestExitAndWait();\n+                }\n+\n+                @Override\n+                public void onSurfaceChanged(SurfaceHolder holder, int format, int width, int height) {\n+                        // Log.d(TAG, \"onSurfaceChanged()\");\n+                        mGLThread.onWindowResize(width, height);\n+                        super.onSurfaceChanged(holder, format, width, height);\n+                }\n+\n+                @Override\n+                public void onSurfaceCreated(SurfaceHolder holder) {\n+                        Log.d(TAG, \"onSurfaceCreated()\");\n+                        mGLThread.surfaceCreated(holder);\n+                        super.onSurfaceCreated(holder);\n+                }\n+\n+                @Override\n+                public void onSurfaceDestroyed(SurfaceHolder holder) {\n+                        Log.d(TAG, \"onSurfaceDestroyed()\");\n+                        mGLThread.surfaceDestroyed();\n+                        super.onSurfaceDestroyed(holder);\n+                }\n+\n+                /**\n+                 * An EGL helper class.\n+                 */\n+                public void setGLWrapper(GLSurfaceView.GLWrapper glWrapper) {\n+                        mGLWrapper = glWrapper;\n+                }\n+\n+                public void setDebugFlags(int debugFlags) {\n+                        mDebugFlags = debugFlags;\n+                }\n+\n+                public int getDebugFlags() {\n+                        return mDebugFlags;\n+                }\n+\n+                public void setRenderer(GLSurfaceView.Renderer renderer) {\n+                        checkRenderThreadState();\n+                        if (mEGLConfigChooser == null) {\n+                                mEGLConfigChooser = new SimpleEGLConfigChooser(true, mEGLContextClientVersion);\n+                        }\n+                        if (mEGLContextFactory == null) {\n+                                mEGLContextFactory = new DefaultContextFactory(mEGLContextClientVersion);\n+                        }\n+                        if (mEGLWindowSurfaceFactory == null) {\n+                                mEGLWindowSurfaceFactory = new DefaultWindowSurfaceFactory();\n+                        }\n+                        mGLThread = new GLThread(renderer, mEGLConfigChooser, mEGLContextFactory, mEGLWindowSurfaceFactory, mGLWrapper);\n+                        mGLThread.start();\n+                }\n+\n+                public void setEGLContextFactory(GLSurfaceView.EGLContextFactory factory) {\n+                        checkRenderThreadState();\n+                        mEGLContextFactory = factory;\n+                }\n+\n+                public void setEGLWindowSurfaceFactory(GLSurfaceView.EGLWindowSurfaceFactory factory) {\n+                        checkRenderThreadState();\n+                        mEGLWindowSurfaceFactory = factory;\n+                }\n+\n+                public void setEGLConfigChooser(GLSurfaceView.EGLConfigChooser configChooser) {\n+                        checkRenderThreadState();\n+                        mEGLConfigChooser = configChooser;\n+                }\n+\n+                public void setEGLConfigChooser(boolean needDepth) {\n+                        setEGLConfigChooser(new SimpleEGLConfigChooser(needDepth, mEGLContextClientVersion));\n+                }\n+\n+                public void setEGLConfigChooser(int redSize, int greenSize, int blueSize, int alphaSize, int depthSize,\n+                                int stencilSize) {\n+                        setEGLConfigChooser(\n+                                new ComponentSizeChooser(redSize, greenSize, blueSize, alphaSize,\n+                                        depthSize,\n+                                        stencilSize, mEGLContextClientVersion));\n+                }\n+\n+                public void setEGLContextClientVersion(int version) {\n+                    checkRenderThreadState();\n+                    mEGLContextClientVersion = version;\n+                }\n+\n+                public void setRenderMode(int renderMode) {\n+                        mGLThread.setRenderMode(renderMode);\n+                }\n+\n+                public int getRenderMode() {\n+                        return mGLThread.getRenderMode();\n+                }\n+\n+                public void requestRender() {\n+                        mGLThread.requestRender();\n+                }\n+\n+                public void onPause() {\n+                        mGLThread.onPause();\n+                }\n+\n+                public void onResume() {\n+                        mGLThread.onResume();\n+                }\n+\n+                public void queueEvent(Runnable r) {\n+                        mGLThread.queueEvent(r);\n+                }\n+\n+                private void checkRenderThreadState() {\n+                        if (mGLThread != null) {\n+                                throw new IllegalStateException(\"setRenderer has already been called for this instance.\");\n+                        }\n+                }\n+        }\n+\n+        /**\n+         * Empty wrapper for {@link GLSurfaceView.Renderer}.\n+         *\n+         * @deprecated Use {@link GLSurfaceView.Renderer} instead.\n+         */\n+        @Deprecated\n+        public interface Renderer extends GLSurfaceView.Renderer {\n+        }\n+}\n+\n+class LogWriter extends Writer {\n+        private StringBuilder mBuilder = new StringBuilder();\n+\n+        @Override\n+        public void close() {\n+                flushBuilder();\n+        }\n+\n+        @Override\n+        public void flush() {\n+                flushBuilder();\n+        }\n+\n+        @Override\n+        public void write(char[] buf, int offset, int count) {\n+                for (int i = 0; i < count; i++) {\n+                        char c = buf[offset + i];\n+                        if (c == '\\n') {\n+                                flushBuilder();\n+                        } else {\n+                                mBuilder.append(c);\n+                        }\n+                }\n+        }\n+\n+        private void flushBuilder() {\n+                if (mBuilder.length() > 0) {\n+                        Log.v(\"GLSurfaceView\", mBuilder.toString());\n+                        mBuilder.delete(0, mBuilder.length());\n+                }\n+        }\n+}\n+\n+// ----------------------------------------------------------------------\n+\n+/**\n+ * Empty wrapper for {@link GLSurfaceView.EGLContextFactory}.\n+ *\n+ * @deprecated Use {@link GLSurfaceView.EGLContextFactory} instead.\n+ */\n+@Deprecated\n+interface EGLContextFactory extends GLSurfaceView.EGLContextFactory {\n+}\n+\n+class DefaultContextFactory implements GLSurfaceView.EGLContextFactory {\n+        private static final int EGL_CONTEXT_CLIENT_VERSION = 0x3098;\n+        private int eglContextClientVersion;\n+\n+        DefaultContextFactory(int eglContextClientVersion) {\n+                this.eglContextClientVersion = eglContextClientVersion;\n+        }\n+\n+        public EGLContext createContext(EGL10 egl, EGLDisplay display, EGLConfig config) {\n+                int[] attrib_list = {EGL_CONTEXT_CLIENT_VERSION, eglContextClientVersion,\n+                EGL10.EGL_NONE };\n+                return egl.eglCreateContext(display, config, EGL10.EGL_NO_CONTEXT,\n+                                eglContextClientVersion != 0 ? attrib_list : null);\n+        }\n+\n+        public void destroyContext(EGL10 egl, EGLDisplay display, EGLContext context) {\n+                egl.eglDestroyContext(display, context);\n+        }\n+}\n+\n+/**\n+ * Empty wrapper for {@link GLSurfaceView.EGLWindowSurfaceFactory}.\n+ *\n+ * @deprecated Use {@link GLSurfaceView.EGLWindowSurfaceFactory} instead.\n+ */\n+@Deprecated\n+interface EGLWindowSurfaceFactory extends GLSurfaceView.EGLWindowSurfaceFactory {\n+}\n+\n+class DefaultWindowSurfaceFactory implements GLSurfaceView.EGLWindowSurfaceFactory {\n+\n+        public EGLSurface createWindowSurface(EGL10 egl, EGLDisplay\n+                        display, EGLConfig config, Object nativeWindow) {\n+                // this is a bit of a hack to work around Droid init problems - if you don't have this, it'll get hung up on orientation changes\n+                EGLSurface eglSurface = null;\n+                while (eglSurface == null) {\n+                        try {\n+                                eglSurface = egl.eglCreateWindowSurface(display,\n+                                                config, nativeWindow, null);\n+                        } catch (Throwable t) {\n+                        } finally {\n+                                if (eglSurface == null) {\n+                                        try {\n+                                                Thread.sleep(10);\n+                                        } catch (InterruptedException t) {\n+                                        }\n+                                }\n+                        }\n+                }\n+                return eglSurface;\n+        }\n+\n+        public void destroySurface(EGL10 egl, EGLDisplay display, EGLSurface surface) {\n+                egl.eglDestroySurface(display, surface);\n+        }\n+}\n+\n+/**\n+ * Empty wrapper for {@link GLSurfaceView.GLWrapper}.\n+ *\n+ * @deprecated Use {@link GLSurfaceView.GLWrapper} instead.\n+ */\n+@Deprecated\n+interface GLWrapper extends GLSurfaceView.GLWrapper {\n+}\n+\n+class EglHelper {\n+\n+        private EGL10 mEgl;\n+        private EGLDisplay mEglDisplay;\n+        private EGLSurface mEglSurface;\n+        private EGLContext mEglContext;\n+        EGLConfig mEglConfig;\n+\n+        private GLSurfaceView.EGLConfigChooser mEGLConfigChooser;\n+        private GLSurfaceView.EGLContextFactory mEGLContextFactory;\n+        private GLSurfaceView.EGLWindowSurfaceFactory mEGLWindowSurfaceFactory;\n+        private GLSurfaceView.GLWrapper mGLWrapper;\n+\n+        public EglHelper(GLSurfaceView.EGLConfigChooser chooser, GLSurfaceView.EGLContextFactory contextFactory,\n+                        GLSurfaceView.EGLWindowSurfaceFactory surfaceFactory, GLSurfaceView.GLWrapper wrapper) {\n+                this.mEGLConfigChooser = chooser;\n+                this.mEGLContextFactory = contextFactory;\n+                this.mEGLWindowSurfaceFactory = surfaceFactory;\n+                this.mGLWrapper = wrapper;\n+        }\n+\n+        /**\n+         * Initialize EGL for a given configuration spec.\n+         *\n+         * @param configSpec\n+         */\n+        public void start() {\n+                // Log.d(\"EglHelper\" + instanceId, \"start()\");\n+                if (mEgl == null) {\n+                        // Log.d(\"EglHelper\" + instanceId, \"getting new EGL\");\n+                        /*\n+                         * Get an EGL instance\n+                         */\n+                        mEgl = (EGL10) EGLContext.getEGL();\n+                } else {\n+                        // Log.d(\"EglHelper\" + instanceId, \"reusing EGL\");\n+                }\n+\n+                if (mEglDisplay == null) {\n+                        // Log.d(\"EglHelper\" + instanceId, \"getting new display\");\n+                        /*\n+                         * Get to the default display.\n+                         */\n+                        mEglDisplay = mEgl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);\n+                } else {\n+                        // Log.d(\"EglHelper\" + instanceId, \"reusing display\");\n+                }\n+\n+                if (mEglConfig == null) {\n+                        // Log.d(\"EglHelper\" + instanceId, \"getting new config\");\n+                        /*\n+                         * We can now initialize EGL for that display\n+                         */\n+                        int[] version = new int[2];\n+                        mEgl.eglInitialize(mEglDisplay, version);\n+                        mEglConfig = mEGLConfigChooser.chooseConfig(mEgl, mEglDisplay);\n+                } else {\n+                        // Log.d(\"EglHelper\" + instanceId, \"reusing config\");\n+                }\n+\n+                if (mEglContext == null) {\n+                        // Log.d(\"EglHelper\" + instanceId, \"creating new context\");\n+                        /*\n+                         * Create an OpenGL ES context. This must be done only once, an OpenGL context is a somewhat heavy object.\n+                         */\n+                        mEglContext = mEGLContextFactory.createContext(mEgl, mEglDisplay, mEglConfig);\n+                        if (mEglContext == null || mEglContext == EGL10.EGL_NO_CONTEXT) {\n+                                throw new RuntimeException(\"createContext failed\");\n+                        }\n+                } else {\n+                        // Log.d(\"EglHelper\" + instanceId, \"reusing context\");\n+                }\n+\n+                mEglSurface = null;\n+        }\n+\n+        /*\n+         * React to the creation of a new surface by creating and returning an OpenGL interface that renders to that\n+         * surface.\n+         */\n+        public GL createSurface(SurfaceHolder holder) {\n+                /*\n+                 * The window size has changed, so we need to create a new surface.\n+                 */\n+                if (mEglSurface != null && mEglSurface != EGL10.EGL_NO_SURFACE) {\n+\n+                        /*\n+                         * Unbind and destroy the old EGL surface, if there is one.\n+                         */\n+                        mEgl.eglMakeCurrent(mEglDisplay, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);\n+                        mEGLWindowSurfaceFactory.destroySurface(mEgl, mEglDisplay, mEglSurface);\n+                }\n+\n+                /*\n+                 * Create an EGL surface we can render into.\n+                 */\n+                mEglSurface = mEGLWindowSurfaceFactory.createWindowSurface(mEgl, mEglDisplay, mEglConfig, holder);\n+\n+                if (mEglSurface == null || mEglSurface == EGL10.EGL_NO_SURFACE) {\n+                        throw new RuntimeException(\"createWindowSurface failed\");\n+                }\n+\n+                /*\n+                 * Before we can issue GL commands, we need to make sure the context is current and bound to a surface.\n+                 */\n+                if (!mEgl.eglMakeCurrent(mEglDisplay, mEglSurface, mEglSurface, mEglContext)) {\n+                        throw new RuntimeException(\"eglMakeCurrent failed.\");\n+                }\n+\n+                GL gl = mEglContext.getGL();\n+                if (mGLWrapper != null) {\n+                        gl = mGLWrapper.wrap(gl);\n+                }\n+\n+                /*\n+                 * if ((mDebugFlags & (DEBUG_CHECK_GL_ERROR | DEBUG_LOG_GL_CALLS))!= 0) { int configFlags = 0; Writer log =\n+                 * null; if ((mDebugFlags & DEBUG_CHECK_GL_ERROR) != 0) { configFlags |= GLDebugHelper.CONFIG_CHECK_GL_ERROR; }\n+                 * if ((mDebugFlags & DEBUG_LOG_GL_CALLS) != 0) { log = new LogWriter(); } gl = GLDebugHelper.wrap(gl,\n+                 * configFlags, log); }\n+                 */\n+                return gl;\n+        }\n+\n+        /**\n+         * Display the current render surface.\n+         *\n+         * @return false if the context has been lost.\n+         */\n+        public boolean swap() {\n+                mEgl.eglSwapBuffers(mEglDisplay, mEglSurface);\n+\n+                /*\n+                 * Always check for EGL_CONTEXT_LOST, which means the context and all associated data were lost (For instance\n+                 * because the device went to sleep). We need to sleep until we get a new surface.\n+                 */\n+                return mEgl.eglGetError() != EGL11.EGL_CONTEXT_LOST;\n+        }\n+\n+        public void destroySurface() {\n+                if (mEglSurface != null && mEglSurface != EGL10.EGL_NO_SURFACE) {\n+                        mEgl.eglMakeCurrent(mEglDisplay, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);\n+                        mEGLWindowSurfaceFactory.destroySurface(mEgl, mEglDisplay, mEglSurface);\n+                        mEglSurface = null;\n+                }\n+        }\n+\n+        public void finish() {\n+                if (mEglContext != null) {\n+                        mEGLContextFactory.destroyContext(mEgl, mEglDisplay, mEglContext);\n+                        mEglContext = null;\n+                }\n+                if (mEglDisplay != null) {\n+                        mEgl.eglTerminate(mEglDisplay);\n+                        mEglDisplay = null;\n+                }\n+        }\n+}\n+\n+class GLThread extends Thread {\n+        private final static boolean LOG_THREADS = false;\n+        public final static int DEBUG_CHECK_GL_ERROR = 1;\n+        public final static int DEBUG_LOG_GL_CALLS = 2;\n+\n+        private final GLThreadManager sGLThreadManager = new GLThreadManager();\n+        private GLThread mEglOwner;\n+\n+        private GLSurfaceView.EGLConfigChooser mEGLConfigChooser;\n+        private GLSurfaceView.EGLContextFactory mEGLContextFactory;\n+        private GLSurfaceView.EGLWindowSurfaceFactory mEGLWindowSurfaceFactory;\n+        private GLSurfaceView.GLWrapper mGLWrapper;\n+\n+        public SurfaceHolder mHolder;\n+        private boolean mSizeChanged = true;\n+\n+        // Once the thread is started, all accesses to the following member\n+        // variables are protected by the sGLThreadManager monitor\n+        public boolean mDone;\n+        private boolean mPaused;\n+        private boolean mHasSurface;\n+        private boolean mWaitingForSurface;\n+        private boolean mHaveEgl;\n+        private int mWidth;\n+        private int mHeight;\n+        private int mRenderMode;\n+        private boolean mRequestRender;\n+        private boolean mEventsWaiting;\n+        // End of member variables protected by the sGLThreadManager monitor.\n+\n+        private GLSurfaceView.Renderer mRenderer;\n+        private ArrayList<Runnable> mEventQueue = new ArrayList<Runnable>();\n+        private EglHelper mEglHelper;\n+\n+        GLThread(GLSurfaceView.Renderer renderer, GLSurfaceView.EGLConfigChooser chooser, GLSurfaceView.EGLContextFactory contextFactory,\n+                        GLSurfaceView.EGLWindowSurfaceFactory surfaceFactory, GLSurfaceView.GLWrapper wrapper) {\n+                super();\n+                mDone = false;\n+                mWidth = 0;\n+                mHeight = 0;\n+                mRequestRender = true;\n+                mRenderMode = GLWallpaperService.GLEngine.RENDERMODE_CONTINUOUSLY;\n+                mRenderer = renderer;\n+                this.mEGLConfigChooser = chooser;\n+                this.mEGLContextFactory = contextFactory;\n+                this.mEGLWindowSurfaceFactory = surfaceFactory;\n+                this.mGLWrapper = wrapper;\n+        }\n+\n+        @Override\n+        public void run() {\n+                setName(\"GLThread \" + getId());\n+                if (LOG_THREADS) {\n+                        Log.i(\"GLThread\", \"starting tid=\" + getId());\n+                }\n+\n+                try {\n+                        guardedRun();\n+                } catch (InterruptedException e) {\n+                        // fall thru and exit normally\n+                } finally {\n+                        sGLThreadManager.threadExiting(this);\n+                }\n+        }\n+\n+        /*\n+         * This private method should only be called inside a synchronized(sGLThreadManager) block.\n+         */\n+        private void stopEglLocked() {\n+                if (mHaveEgl) {\n+                        mHaveEgl = false;\n+                        mEglHelper.destroySurface();\n+                        sGLThreadManager.releaseEglSurface(this);\n+                }\n+        }\n+\n+        private void guardedRun() throws InterruptedException {\n+                mEglHelper = new EglHelper(mEGLConfigChooser, mEGLContextFactory, mEGLWindowSurfaceFactory, mGLWrapper);\n+                try {\n+                        GL10 gl = null;\n+                        boolean tellRendererSurfaceCreated = true;\n+                        boolean tellRendererSurfaceChanged = true;\n+\n+                        /*\n+                         * This is our main activity thread's loop, we go until asked to quit.\n+                         */\n+                        while (!isDone()) {\n+                                /*\n+                                 * Update the asynchronous state (window size)\n+                                 */\n+                                int w = 0;\n+                                int h = 0;\n+                                boolean changed = false;\n+                                boolean needStart = false;\n+                                boolean eventsWaiting = false;\n+\n+                                synchronized (sGLThreadManager) {\n+                                        while (true) {\n+                                                // Manage acquiring and releasing the SurfaceView\n+                                                // surface and the EGL surface.\n+                                                if (mPaused) {\n+                                                        stopEglLocked();\n+                                                }\n+                                                if (!mHasSurface) {\n+                                                        if (!mWaitingForSurface) {\n+                                                                stopEglLocked();\n+                                                                mWaitingForSurface = true;\n+                                                                sGLThreadManager.notifyAll();\n+                                                        }\n+                                                } else {\n+                                                        if (!mHaveEgl) {\n+                                                                if (sGLThreadManager.tryAcquireEglSurface(this)) {\n+                                                                        mHaveEgl = true;\n+                                                                        mEglHelper.start();\n+                                                                        mRequestRender = true;\n+                                                                        needStart = true;\n+                                                                }\n+                                                        }\n+                                                }\n+\n+                                                // Check if we need to wait. If not, update any state\n+                                                // that needs to be updated, copy any state that\n+                                                // needs to be copied, and use \"break\" to exit the\n+                                                // wait loop.\n+\n+                                                if (mDone) {\n+                                                        return;\n+                                                }\n+\n+                                                if (mEventsWaiting) {\n+                                                        eventsWaiting = true;\n+                                                        mEventsWaiting = false;\n+                                                        break;\n+                                                }\n+\n+                                                if ((!mPaused) && mHasSurface && mHaveEgl && (mWidth > 0) && (mHeight > 0)\n+                                                                && (mRequestRender || (mRenderMode == GLWallpaperService.GLEngine.RENDERMODE_CONTINUOUSLY))) {\n+                                                        changed = mSizeChanged;\n+                                                        w = mWidth;\n+                                                        h = mHeight;\n+                                                        mSizeChanged = false;\n+                                                        mRequestRender = false;\n+                                                        if (mHasSurface && mWaitingForSurface) {\n+                                                                changed = true;\n+                                                                mWaitingForSurface = false;\n+                                                                sGLThreadManager.notifyAll();\n+                                                        }\n+                                                        break;\n+                                                }\n+\n+                                                // By design, this is the only place where we wait().\n+\n+                                                if (LOG_THREADS) {\n+                                                        Log.i(\"GLThread\", \"waiting tid=\" + getId());\n+                                                }\n+                                                sGLThreadManager.wait();\n+                                        }\n+                                } // end of synchronized(sGLThreadManager)\n+\n+                                /*\n+                                 * Handle queued events\n+                                 */\n+                                if (eventsWaiting) {\n+                                        Runnable r;\n+                                        while ((r = getEvent()) != null) {\n+                                                r.run();\n+                                                if (isDone()) {\n+                                                        return;\n+                                                }\n+                                        }\n+                                        // Go back and see if we need to wait to render.\n+                                        continue;\n+                                }\n+\n+                                if (needStart) {\n+                                        tellRendererSurfaceCreated = true;\n+                                        changed = true;\n+                                }\n+                                if (changed) {\n+                                        gl = (GL10) mEglHelper.createSurface(mHolder);\n+                                        tellRendererSurfaceChanged = true;\n+                                }\n+                                if (tellRendererSurfaceCreated) {\n+                                        mRenderer.onSurfaceCreated(gl, mEglHelper.mEglConfig);\n+                                        tellRendererSurfaceCreated = false;\n+                                }\n+                                if (tellRendererSurfaceChanged) {\n+                                        mRenderer.onSurfaceChanged(gl, w, h);\n+                                        tellRendererSurfaceChanged = false;\n+                                }\n+                                if ((w > 0) && (h > 0)) {\n+                                        /* draw a frame here */\n+                                        mRenderer.onDrawFrame(gl);\n+\n+                                        /*\n+                                         * Once we're done with GL, we need to call swapBuffers() to instruct the system to display the\n+                                         * rendered frame\n+                                         */\n+                                        mEglHelper.swap();\n+                                        Thread.sleep(10);\n+                                }\n+                        }\n+                } finally {\n+                        /*\n+                         * clean-up everything...\n+                         */\n+                        synchronized (sGLThreadManager) {\n+                                stopEglLocked();\n+                                mEglHelper.finish();\n+                        }\n+                }\n+        }\n+\n+        private boolean isDone() {\n+                synchronized (sGLThreadManager) {\n+                        return mDone;\n+                }\n+        }\n+\n+        public void setRenderMode(int renderMode) {\n+                if (!((GLWallpaperService.GLEngine.RENDERMODE_WHEN_DIRTY <= renderMode) && (renderMode <= GLWallpaperService.GLEngine.RENDERMODE_CONTINUOUSLY))) {\n+                        throw new IllegalArgumentException(\"renderMode\");\n+                }\n+                synchronized (sGLThreadManager) {\n+                        mRenderMode = renderMode;\n+                        if (renderMode == GLWallpaperService.GLEngine.RENDERMODE_CONTINUOUSLY) {\n+                                sGLThreadManager.notifyAll();\n+                        }\n+                }\n+        }\n+\n+        public int getRenderMode() {\n+                synchronized (sGLThreadManager) {\n+                        return mRenderMode;\n+                }\n+        }\n+\n+        public void requestRender() {\n+                synchronized (sGLThreadManager) {\n+                        mRequestRender = true;\n+                        sGLThreadManager.notifyAll();\n+                }\n+        }\n+\n+        public void surfaceCreated(SurfaceHolder holder) {\n+                mHolder = holder;\n+                synchronized (sGLThreadManager) {\n+                        if (LOG_THREADS) {\n+                                Log.i(\"GLThread\", \"surfaceCreated tid=\" + getId());\n+                        }\n+                        mHasSurface = true;\n+                        sGLThreadManager.notifyAll();\n+                }\n+        }\n+\n+        public void surfaceDestroyed() {\n+                synchronized (sGLThreadManager) {\n+                        if (LOG_THREADS) {\n+                                Log.i(\"GLThread\", \"surfaceDestroyed tid=\" + getId());\n+                        }\n+                        mHasSurface = false;\n+                        sGLThreadManager.notifyAll();\n+                        while (!mWaitingForSurface && isAlive() && !mDone) {\n+                                try {\n+                                        sGLThreadManager.wait();\n+                                } catch (InterruptedException e) {\n+                                        Thread.currentThread().interrupt();\n+                                }\n+                        }\n+                }\n+        }\n+\n+        public void onPause() {\n+                synchronized (sGLThreadManager) {\n+                        mPaused = true;\n+                        sGLThreadManager.notifyAll();\n+                }\n+        }\n+\n+        public void onResume() {\n+                synchronized (sGLThreadManager) {\n+                        mPaused = false;\n+                        mRequestRender = true;\n+                        sGLThreadManager.notifyAll();\n+                }\n+        }\n+\n+        public void onWindowResize(int w, int h) {\n+                synchronized (sGLThreadManager) {\n+                        mWidth = w;\n+                        mHeight = h;\n+                        mSizeChanged = true;\n+                        sGLThreadManager.notifyAll();\n+                }\n+        }\n+\n+        public void requestExitAndWait() {\n+                // don't call this from GLThread thread or it is a guaranteed\n+                // deadlock!\n+                synchronized (sGLThreadManager) {\n+                        mDone = true;\n+                        sGLThreadManager.notifyAll();\n+                }\n+                try {\n+                        join();\n+                } catch (InterruptedException ex) {\n+                        Thread.currentThread().interrupt();\n+                }\n+        }\n+\n+        /**\n+         * Queue an \"event\" to be run on the GL rendering thread.\n+         *\n+         * @param r\n+         * the runnable to be run on the GL rendering thread.\n+         */\n+        public void queueEvent(Runnable r) {\n+                synchronized (this) {\n+                        mEventQueue.add(r);\n+                        synchronized (sGLThreadManager) {\n+                                mEventsWaiting = true;\n+                                sGLThreadManager.notifyAll();\n+                        }\n+                }\n+        }\n+\n+        private Runnable getEvent() {\n+                synchronized (this) {\n+                        if (mEventQueue.size() > 0) {\n+                                return mEventQueue.remove(0);\n+                        }\n+\n+                }\n+                return null;\n+        }\n+\n+        private class GLThreadManager {\n+\n+                public synchronized void threadExiting(GLThread thread) {\n+                        if (LOG_THREADS) {\n+                                Log.i(\"GLThread\", \"exiting tid=\" + thread.getId());\n+                        }\n+                        thread.mDone = true;\n+                        if (mEglOwner == thread) {\n+                                mEglOwner = null;\n+                        }\n+                        notifyAll();\n+                }\n+\n+                /*\n+                 * Tries once to acquire the right to use an EGL surface. Does not block.\n+                 *\n+                 * @return true if the right to use an EGL surface was acquired.\n+                 */\n+                public synchronized boolean tryAcquireEglSurface(GLThread thread) {\n+                        if (mEglOwner == thread || mEglOwner == null) {\n+                                mEglOwner = thread;\n+                                notifyAll();\n+                                return true;\n+                        }\n+                        return false;\n+                }\n+\n+                public synchronized void releaseEglSurface(GLThread thread) {\n+                        if (mEglOwner == thread) {\n+                                mEglOwner = null;\n+                        }\n+                        notifyAll();\n+                }\n+        }\n+}\n+\n+/**\n+ * Empty wrapper for {@link GLSurfaceView.EGLConfigChooser}.\n+ *\n+ * @deprecated Use {@link GLSurfaceView.EGLConfigChooser} instead.\n+ */\n+@Deprecated\n+interface EGLConfigChooser extends GLSurfaceView.EGLConfigChooser {\n+}\n+\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/uk/co/halfninja/wallpaper/parallax/gl/BitmapUtils.java",
            "additions": 43,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,43 @@\n+package uk.co.halfninja.wallpaper.parallax.gl;\n+\n+import android.graphics.Bitmap;\n+import android.graphics.Bitmap.Config;\n+import android.graphics.Canvas;\n+import android.util.Log;\n+\n+public class BitmapUtils {\n+\n+\tprivate static final String TAG = BitmapUtils.class.getName();\n+\n+\tpublic static Bitmap createPowerOfTwoBitmap(Bitmap bitmap) {\n+\t\tint w = bitmap.getWidth();\n+\t\tint h = bitmap.getHeight();\n+\t\tint w2 = getNextPowerOfTwo(w);\n+\t\tint h2 = getNextPowerOfTwo(h);\n+\t\tif(w == w2 && h == h2) {\n+\t\t\t// What luck, it's already compatible.\n+\t\t\treturn bitmap;\n+\t\t} else {\n+\t\t\tBitmap biggerBitmap = Bitmap.createBitmap(w2, h2, Config.ARGB_8888);\n+\t\t\tCanvas canvas = new Canvas(biggerBitmap);\n+\t\t\tcanvas.drawBitmap(bitmap, 0, 0, null);\n+\t\t\treturn biggerBitmap;\n+\t\t}\n+\t}\n+\t\n+\t/**\n+\t * Returns the next power of two that is greater than or\n+\t * equal to the given value. If the given number is already\n+\t * a power of two, that number is returned.\n+\t */\n+\tpublic static int getNextPowerOfTwo(int value) {\n+\t\tint result = 1;\n+\t\tvalue--;\n+\t\twhile (value > 0) {\n+\t\t\tresult = result << 1;\n+\t\t\tvalue = value >> 1;\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/uk/co/halfninja/wallpaper/parallax/gl/Capabilities.java",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+package uk.co.halfninja.wallpaper.parallax.gl;\n+\n+import javax.microedition.khronos.opengles.GL10;\n+\n+import android.util.Log;\n+\n+/**\n+ * Calculates various capabilities of your OpenGL implementation and/or\n+ * your hardware.\n+ */\n+public class Capabilities {\n+\tprivate boolean nonPowerOfTwoTextures;\n+\n+\tpublic Capabilities() {}\n+\t\n+\tpublic Capabilities(GL10 gl) {\n+\t\treload(gl);\n+\t}\n+\t\n+\tpublic void reload(GL10 gl) {\n+\t\tString extensions = gl.glGetString(GL10.GL_EXTENSIONS);\n+\t\t\n+\t\tLog.d(\"GLCapabilities\", extensions);\n+\t\t\n+\t\tnonPowerOfTwoTextures = extensions.contains(\"ARB_texture_non_power_of_two\");\n+\t}\n+\t\n+\tpublic boolean supportsNonPowerOfTwoTextures() {\n+\t\treturn nonPowerOfTwoTextures;\n+\t}\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/uk/co/halfninja/wallpaper/parallax/gl/Quad.java",
            "additions": 137,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,137 @@\n+package uk.co.halfninja.wallpaper.parallax.gl;\n+\n+import static javax.microedition.khronos.opengles.GL10.GL_FLOAT;\n+import static javax.microedition.khronos.opengles.GL10.GL_MODELVIEW;\n+import static javax.microedition.khronos.opengles.GL10.GL_TEXTURE_COORD_ARRAY;\n+import static javax.microedition.khronos.opengles.GL10.GL_TRIANGLE_STRIP;\n+import static javax.microedition.khronos.opengles.GL10.GL_VERTEX_ARRAY;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.nio.FloatBuffer;\n+import java.nio.ShortBuffer;\n+\n+import javax.microedition.khronos.opengles.GL10;\n+\n+/**\n+ * Rectangle for OpenGL. Maintains static buffers, so\n+ * multiple quads will share a buffer.\n+ */\n+public class Quad {\n+\tprivate static final int SIZEOF_FLOAT = 4;\n+\tprivate static final int SIZEOF_SHORT = 2;\n+\tprivate static FloatBuffer vertexBuffer;\n+\tprivate static ShortBuffer indexBuffer;\n+\tprivate static FloatBuffer defaultTexBuffer;\t// buffer holding the texture coordinates\n+\t\n+\tstatic {\n+\t\tfloat vertices[] = {\n+\t\t      0f,  0f,  // 0, Top Left\n+\t\t      0f, 1f,  // 1, Bottom Left\n+\t\t      1f,  0f,  // 3, Top Right\n+\t\t      1f, 1f,  // 2, Bottom Right\n+\t\t};\n+\t\tByteBuffer byteBuffer = ByteBuffer.allocateDirect(vertices.length * SIZEOF_FLOAT);\n+\t\tbyteBuffer.order(ByteOrder.nativeOrder());\n+\t\tvertexBuffer = byteBuffer.asFloatBuffer();\n+\t\tvertexBuffer.put(vertices);\n+\t\tvertexBuffer.position(0);\n+\t\t\n+\t\tdefaultTexBuffer = allocateTextureBuffer(1f, 1f);\n+\t}\n+\t\n+\t/**\n+\t * Allocate a texture buffer with the given values replacing 1.\n+\t * e.g. if x is 0.5, then the texture will be twice the normal width.\n+\t */\n+\tprivate static FloatBuffer allocateTextureBuffer(float u, float v) {\n+\t\tfloat texturepoints[] = {\n+\t\t\t0f, 0f, \n+\t\t\t0f, v, \n+\t\t\tu, 0, \n+\t\t\tu, v,\n+\t\t};\n+\t\tByteBuffer byteBuffer = ByteBuffer.allocateDirect(texturepoints.length * SIZEOF_FLOAT);\n+\t\tbyteBuffer.order(ByteOrder.nativeOrder());\n+\t\tFloatBuffer texBuffer = byteBuffer.asFloatBuffer();\n+\t\ttexBuffer.put(texturepoints);\n+\t\ttexBuffer.position(0);\n+\t\treturn texBuffer;\n+\t}\n+\t\n+\tprivate FloatBuffer textureBuffer = defaultTexBuffer;\n+\tprivate Texture texture;\n+\tprivate float x;\n+\tprivate float y;\n+\tprivate float width;\n+\tprivate float height;\n+\t\n+\tpublic void draw(GL10 gl) {\n+\t\tgl.glMatrixMode( GL_MODELVIEW );\n+        gl.glLoadIdentity();\n+        gl.glTranslatef(x, y, 0f);\n+        gl.glScalef(width,height,1f);        \n+\t\t\n+\t\tgl.glEnableClientState(GL_VERTEX_ARRAY);\n+\t\tgl.glEnable(GL10.GL_TEXTURE_2D);\n+\t\tgl.glVertexPointer(2, GL_FLOAT, 0, vertexBuffer);\n+\t\tif (texture != null) {\n+\t\t\tgl.glEnableClientState(GL_TEXTURE_COORD_ARRAY);\n+\t\t\ttexture.bind(gl);\n+\t\t\tgl.glTexCoordPointer(2, GL_FLOAT, 0, textureBuffer);\n+\t\t}\n+\t\tgl.glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);\n+\t\t//gl.glDrawElements(GL10.GL_TRIANGLE_STRIP, 4, GL10.GL_UNSIGNED_SHORT, indexBuffer);\n+\t\tgl.glDisableClientState(GL_VERTEX_ARRAY);\n+\t\tif (texture != null) {\n+\t\t\tgl.glDisableClientState(GL_TEXTURE_COORD_ARRAY);\n+\t\t}\n+\t}\n+\t\n+\tpublic float getX() {\n+\t\treturn x;\n+\t}\n+\n+\tpublic void setX(float x) {\n+\t\tthis.x = x;\n+\t}\n+\n+\tpublic float getY() {\n+\t\treturn y;\n+\t}\n+\n+\tpublic void setY(float y) {\n+\t\tthis.y = y;\n+\t}\n+\n+\tpublic float getWidth() {\n+\t\treturn width;\n+\t}\n+\n+\tpublic void setWidth(float width) {\n+\t\tthis.width = width;\n+\t}\n+\n+\tpublic float getHeight() {\n+\t\treturn height;\n+\t}\n+\n+\tpublic void setHeight(float height) {\n+\t\tthis.height = height;\n+\t}\n+\n+\tpublic Texture getTexture() {\n+\t\treturn texture;\n+\t}\n+\n+\tpublic void setTexture(Texture texture) {\n+\t\tthis.texture = texture;\n+\t\tif (!texture.isMatchesDimensions()) {\n+\t\t\ttextureBuffer = allocateTextureBuffer(texture.getU(), texture.getV());\n+\t\t} else {\n+\t\t\ttextureBuffer = defaultTexBuffer;\n+\t\t}\n+\t\tthis.width = texture.getBitmapWidth();\n+\t\tthis.height = texture.getBitmapHeight();\n+\t}\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/uk/co/halfninja/wallpaper/parallax/gl/Texture.java",
            "additions": 56,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,56 @@\n+package uk.co.halfninja.wallpaper.parallax.gl;\n+\n+import javax.microedition.khronos.opengles.GL10;\n+\n+public class Texture {\n+\tpublic final int id;\n+\tprivate int texWidth, texHeight, bitmapWidth, bitmapHeight;\n+\tprivate boolean matchesDimensions;\n+\tpublic Texture(int id) {\n+\t\tthis.id = id;\n+\t}\n+\tpublic void bind(GL10 gl) {\n+\t\tgl.glBindTexture(GL10.GL_TEXTURE_2D, id);\n+\t}\n+\tpublic int getTexWidth() {\n+\t\treturn texWidth;\n+\t}\n+\tpublic void setTexWidth(int texWidth) {\n+\t\tthis.texWidth = texWidth;\n+\t}\n+\tpublic int getTexHeight() {\n+\t\treturn texHeight;\n+\t}\n+\tpublic void setTexHeight(int texHeight) {\n+\t\tthis.texHeight = texHeight;\n+\t}\n+\tpublic int getBitmapWidth() {\n+\t\treturn bitmapWidth;\n+\t}\n+\tpublic void setBitmapWidth(int bitmapWidth) {\n+\t\tthis.bitmapWidth = bitmapWidth;\n+\t}\n+\tpublic int getBitmapHeight() {\n+\t\treturn bitmapHeight;\n+\t}\n+\tpublic void setBitmapHeight(int bitmapHeight) {\n+\t\tthis.bitmapHeight = bitmapHeight;\n+\t}\n+\tpublic boolean isMatchesDimensions() {\n+\t\treturn bitmapHeight==texHeight && bitmapWidth==texWidth;\n+\t}\n+\tpublic float getU() {\n+\t\tif (bitmapWidth==texWidth) return 1f;\n+\t\treturn ((float)bitmapWidth/texWidth);\n+\t}\n+\tpublic float getV() {\n+\t\tif (bitmapHeight==texHeight) return 1f;\n+\t\treturn ((float)bitmapHeight/texHeight);\n+\t}\n+\tpublic String toString() {\n+\t\treturn String.format(\"Texture[id=%d,size=(%d,%d),bitmapsize=(%d,%d)\",\n+\t\t\t\tid, texWidth, texHeight, bitmapWidth, bitmapHeight\n+\t\t\t\t);\n+\t\t\t\t\n+\t}\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/uk/co/halfninja/wallpaper/parallax/gl/TextureLoader.java",
            "additions": 108,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,108 @@\n+package uk.co.halfninja.wallpaper.parallax.gl;\n+\n+import android.content.res.AssetManager;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.opengl.GLUtils;\n+import android.util.Log;\n+\n+import javax.microedition.khronos.opengles.GL10;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import static javax.microedition.khronos.opengles.GL10.GL_INVALID_VALUE;\n+import static com.novoda.snowyvillagewallpaper.ParallaxWallpaper.TAG;\n+\n+public class TextureLoader {\n+    public static final int MAX_TEXTURES = 16;\n+\n+    private final Capabilities capabilities;\n+    private final AssetManager assetManager;\n+\n+    public TextureLoader(Capabilities capabilities, AssetManager assetManager) {\n+        super();\n+        this.capabilities = capabilities;\n+        this.assetManager = assetManager;\n+    }\n+\n+    private int[] textures = new int[MAX_TEXTURES];\n+    private int nextSlot = 0;\n+\n+    public boolean slotsAvailable() {\n+        return nextSlot < MAX_TEXTURES - 1;\n+    }\n+\n+    public Texture loadTextureFromFile(GL10 gl, String filename) throws IOException {\n+        Bitmap originalBitmap, bitmap;\n+\n+        InputStream inputStream = assetManager.open(filename);\n+        originalBitmap = bitmap = BitmapFactory.decodeStream(inputStream);\n+        if (bitmap == null) {\n+            throw new IOException(\"Couldn't load bitmap \" + filename);\n+        }\n+\n+        Log.d(TAG, \"Loaded bitmap: (\" + bitmap.getWidth() + \",\" + bitmap.getHeight() + \")\");\n+\n+        if (!capabilities.supportsNonPowerOfTwoTextures()) {\n+            bitmap = BitmapUtils.createPowerOfTwoBitmap(bitmap);\n+        }\n+\n+        Texture t = loadTexture(gl, bitmap);\n+        // in case we expanded the bitmap to fit the canvas,\n+        t.setBitmapWidth(originalBitmap.getWidth());\n+        t.setBitmapHeight(originalBitmap.getHeight());\n+        Log.d(TAG, \"Loaded texture from file: \" + t.toString());\n+        bitmap.recycle();\n+        originalBitmap.recycle();\n+        return t;\n+    }\n+\n+    private Texture loadTexture(GL10 gl, Bitmap bitmap) {\n+        // generate one texture pointer\n+        gl.glGenTextures(1, textures, nextSlot);\n+        // ...and bind it to our array\n+        int id = textures[nextSlot];\n+        gl.glBindTexture(GL10.GL_TEXTURE_2D, id);\n+\n+        // create nearest filtered texture\n+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);\n+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);\n+\n+        // Use Android GLUtils to specify a two-dimensional texture image from our bitmap\n+        GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap, 0);\n+\n+        int error = gl.glGetError();\n+        if (error != 0) {\n+            Log.e(TAG, \"Error loading GL texture. OpenGL code: \" + error);\n+        }\n+\n+        // Clean up\n+        nextSlot++;\n+        Texture t = new Texture(id);\n+        t.setTexWidth(bitmap.getWidth());\n+        t.setBitmapWidth(bitmap.getWidth());\n+        t.setTexHeight(bitmap.getHeight());\n+        t.setBitmapHeight(bitmap.getHeight());\n+        bitmap.recycle();\n+        return t;\n+    }\n+\n+    void logError(GL10 gl) {\n+        int error = gl.glGetError();\n+        String msg;\n+        switch (error) {\n+            case GL_INVALID_VALUE:\n+                msg = \"invalid value\";\n+                break;\n+            default:\n+                msg = \"\" + error;\n+                break;\n+        }\n+        Log.d(TAG, \"gl error \" + msg);\n+    }\n+\n+    public void clear(GL10 gl) {\n+        gl.glDeleteTextures(MAX_TEXTURES, textures, 0);\n+        nextSlot = 0;\n+    }\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/java/uk/co/halfninja/wallpaper/parallax/gl/Utils.java",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+package uk.co.halfninja.wallpaper.parallax.gl;\n+\n+import javax.microedition.khronos.opengles.GL10;\n+\n+import static javax.microedition.khronos.opengles.GL10.GL_PROJECTION;\n+\n+/**\n+ * Ah yes, the classic GL utility class.\n+ */\n+public final class Utils {\n+\t\n+\t/**\n+\t * Sets an orthographic projection with dimensions matching\n+\t * the regular screen pixel coordinates. [0,0] is in the top left\n+\t * and [w,h] is in the bottom right of the screen, rather than\n+\t * the regular OpenGL convention of the origin being in the\n+\t * bottom left.\n+\t */\n+\tpublic static void pixelProjection(GL10 gl, int w, int h) {\n+\t\tgl.glViewport(0, 0, w, h);\n+\t\tgl.glMatrixMode(GL_PROJECTION);\n+\t\tgl.glLoadIdentity();\n+\t\tgl.glOrthof(0, w, h, 0, -100, 100);\n+\t}\n+\t\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/res/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/res/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/res/drawable-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/res/drawable-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/res/drawable-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/res/drawable-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/res/drawable-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/res/drawable/thumbnail.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/app/src/main/res/drawable/thumbnail.png differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/res/values/strings.xml",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\n+  <string name=\"app_name\">Snowy village wallpaper</string>\n+  <string name=\"wallpaper_description\">A festive snowy village, design by Qi Qu</string>\n+  <string name=\"wallpaper_author\">Daniele Bonaldo</string>\n+\n+</resources>\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/main/res/xml/wallpaper.xml",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?><!--\n+/**\n+ * Copyright (c) 2009, The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \n+ * you may not use this file except in compliance with the License. \n+ * You may obtain a copy of the License at \n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0 \n+ *\n+ * Unless required by applicable law or agreed to in writing, software \n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n+ * See the License for the specific language governing permissions and \n+ * limitations under the License.\n+ */\n+-->\n+\n+<!-- The attributes in this XML file provide configuration information -->\n+\n+<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  android:author=\"@string/wallpaper_author\"\n+  android:description=\"@string/wallpaper_description\"\n+  android:thumbnail=\"@drawable/thumbnail\" />\n+\n+ \n+\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/app/src/test/java/com/novoda/snowyvillagewallpaper/santa/SantaScheduleTest.java",
            "additions": 66,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,66 @@\n+package com.novoda.snowyvillagewallpaper.santa;\n+\n+import java.util.Calendar;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+\n+import static org.fest.assertions.api.Assertions.assertThat;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.MockitoAnnotations.initMocks;\n+\n+public class SantaScheduleTest {\n+\n+    @Mock\n+    private Clock mockClock;\n+\n+    @Mock\n+    private RoundDelay mockRoundDelay;\n+\n+    private SantaSchedule santaSchedule;\n+\n+    @Before\n+    public void setUp() {\n+        initMocks(this);\n+        when(mockRoundDelay.getNextRoundDelay()).thenReturn(0);\n+        santaSchedule = new SantaSchedule(mockClock, mockRoundDelay);\n+    }\n+\n+    @Test\n+    public void givenCurrentTimeIsBeforeChristmas_WhenCheckingIfSantaIsInTown_ThenReturnFalse() {\n+        givenTheCurrentDateIs(2015, Calendar.DECEMBER, 23);\n+        santaSchedule.calculateNextVisitTime();\n+\n+        boolean isSantaInTown = santaSchedule.isSantaInTown();\n+\n+        assertThat(isSantaInTown).isFalse();\n+    }\n+\n+    @Test\n+    public void givenCurrentTimeIsDuringChristmas_WhenCheckingIfSantaIsInTown_ThenReturnTrue() {\n+        givenTheCurrentDateIs(2015, Calendar.DECEMBER, 25);\n+        santaSchedule.calculateNextVisitTime();\n+\n+        boolean isSantaInTown = santaSchedule.isSantaInTown();\n+\n+        assertThat(isSantaInTown).isTrue();\n+    }\n+\n+    @Test\n+    public void givenCurrentTimeIsAfterChristmas_WhenCheckingIfSantaIsInTown_ThenReturnFalse() {\n+        givenTheCurrentDateIs(2015, Calendar.DECEMBER, 26);\n+        santaSchedule.calculateNextVisitTime();\n+\n+        boolean isSantaInTown = santaSchedule.isSantaInTown();\n+\n+        assertThat(isSantaInTown).isFalse();\n+    }\n+\n+    private void givenTheCurrentDateIs(int year, int month, int day) {\n+        Calendar daysBeforeChristmas = Calendar.getInstance();\n+        daysBeforeChristmas.set(year, month, day);\n+        when(mockClock.getCurrentTime()).thenReturn(daysBeforeChristmas.getTimeInMillis());\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:2.1.2'\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        jcenter()\n+    }\n+}\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/snowy-village-wallpaper/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Thu Jun 30 14:44:01 BST 2016\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/gradlew",
            "additions": 160,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/gradlew.bat",
            "additions": 90,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,90 @@\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:init\r\n+@rem Get command-line arguments, handling Windowz variants\r\n+\r\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n+if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n+\r\n+:win9xME_args\r\n+@rem Slurp the command line arguments.\r\n+set CMD_LINE_ARGS=\r\n+set _SKIP=2\r\n+\r\n+:win9xME_args_slurp\r\n+if \"x%~1\" == \"x\" goto execute\r\n+\r\n+set CMD_LINE_ARGS=%*\r\n+goto execute\r\n+\r\n+:4NT_args\r\n+@rem Get arguments from the 4NT Shell from JP Software\r\n+set CMD_LINE_ARGS=%$\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\n"
    },
    {
        "commit hash": "a6429fe11dd1e96a10d3965ffefa35553245f613",
        "previous commit hash": "fc10d3829037b2950ce6ab8368bcdeb35d94b9ff",
        "diff stats": {
            "file_path": "snowy-village-wallpaper/settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+include ':app'\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "CarouselFragment/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo CarouselFragment\n+# Demo CarouselFragment\n \n The CarouselFragment demonstrates how to select content using the (deprecated) Gallery widget on TV.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "CompassExample/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo CompassExample\n+# Demo CompassExample\n \n Demonstrates use of the deprecated Novocation library. The app works only for pre-jellybean devices.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "ContactSelector/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo ContactSelector\n+# Demo ContactSelector\n \n ContactSelector demonstrates the use of the pick action for contacts.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "Cookbook/add_native_express_adverts.md",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -52,13 +52,13 @@ There is a table in the documentation summarising available sizes\n \n The process is the same as loading a regular ad:\n \n-####1. In the activity, initialise `MobileAds`:\n+#### 1. In the activity, initialise `MobileAds`:\n \n ```\n MobileAds.initialize(getApplicationContext(), getString(R.string.ad_app_id));\n ```\n \n-####2. Load the view and build a request:\n+#### 2. Load the view and build a request:\n \n ```\n NativeExpressAdView mAdView = (NativeExpressAdView) findViewById(R.id.adViewExpress);\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "CustomActivityTransition/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo CustomActivityTransition\n+# Demo CustomActivityTransition\n \n CustomActivityTransition demonstrates how to define animations in the application theme.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "DynamicListItems/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n-#Demo DynamicListItems\n+# Demo DynamicListItems\n \n DynamicListItems shows how to add items to a listview at runtime.\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "EditTextChips/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo EditTextChips\n+# Demo EditTextChips\n \n EditTextChips shows different libraries to display 'chips' in an EditText (usually used to show tags, email addresses, etc.).\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo FixedSizeTextColumns\n+# Demo FixedSizeTextColumns\n \n FixedSizeTextColumns shows how WebView behaves with different font sizes.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "Fragments/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo Fragments\n+# Demo Fragments\n \n Fragments demonstrates how to use activities and fragments for basic master/detail layout.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "GsonJsonWebservice/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo GsonJsonWebservice\n+# Demo GsonJsonWebservice\n \n GsonJsonWebservice demonstrates how to make a request to twitter.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo LeftNavBarExample/Example\n+# Demo LeftNavBarExample/Example\n \n Example show how to use the left navigation bar for TV.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,2 +1,2 @@\n-#Demo LeftNavBarExample/LeftNavBarLibrary\n+# Demo LeftNavBarExample/LeftNavBarLibrary\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "ListStyles/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n-#Demo ListStyles\n+# Demo ListStyles\n \n ListStyles demonstrates how to programmatically defined list item layouts.\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo Livewallpaper/switch_animation\n+# Demo Livewallpaper/switch_animation\n \n switch_animation demonstrates how to live wall papers with animations\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo Livewallpaper/switch_leftright\n+# Demo Livewallpaper/switch_leftright\n \n switch_leftright demonstrates how to live wall papers with animations\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "MultipleContacts/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo MultipleContacts\n+# Demo MultipleContacts\n \n MultipleContacts demonstrates multi-auto-completion with contacts.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "OptionalDependencies/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo OptionalDependencies [![](https://raw.githubusercontent.com/novoda/novoda/master/assets/btn_apache_lisence.png)](LICENSE.txt)\n+# Demo OptionalDependencies [![](https://raw.githubusercontent.com/novoda/novoda/master/assets/btn_apache_lisence.png)](LICENSE.txt)\n \n OptionalDependencies shows how to create two product flavours that have different implementations of one method.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "PinchZoomDetector/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n-#Demo PinchZoomDetector\n+# Demo PinchZoomDetector\n \n PinchZoomDetector demonstrates how to add pinch to zoom gesture to an activity.\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "README.md",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Android Demos [![](https://raw.githubusercontent.com/novoda/novoda/master/assets/btn_apache_lisence.png)](LICENSE.txt)\n+# Android Demos [![](https://raw.githubusercontent.com/novoda/novoda/master/assets/btn_apache_lisence.png)](LICENSE.txt)\n \n This is a collection of basic android examples created by Novoda.\n \n@@ -26,7 +26,7 @@ This is a collection of basic android examples created by Novoda.\n * [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n * [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n \n-#Demos of Novoda Open Source (NOS) libraries and projects\n+# Demos of Novoda Open Source (NOS) libraries and projects\n \n * [Simple Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-simple)\n * [Extended Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-extended)\n@@ -37,9 +37,9 @@ This is a collection of basic android examples created by Novoda.\n * [Demo for Merlin (network connectivity)](https://github.com/novoda/merlin/tree/master/demo)\n * [Demo for simple XML parsing](https://github.com/novoda/simple-easy-xml-parser/tree/master/demoAndroid)\n \n-#Further NOS work\n+# Further NOS work\n \n-##All NOS libraries\n+## All NOS libraries\n \n * [Download Manager](https://github.com/novoda/download-manager)\n * [Merlin - Connectivity Checker](https://github.com/novoda/merlin)\n@@ -49,7 +49,7 @@ This is a collection of basic android examples created by Novoda.\n * [Simple XML Parser](https://github.com/novoda/simple-easy-xml-parser)\n * [RxPresso](https://github.com/novoda/rxpresso)\n \n-##All NOS gradle plugins\n+## All NOS gradle plugins\n \n * [Bintray Release](https://github.com/novoda/bintray-release)\n * [Sqlite Analyzer](https://github.com/novoda/sqlite-analyzer)\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "Sandbox/README.MD",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -14,7 +14,7 @@ Anyone of:\n  - Sikuli\n  \n \n-####Current Acceptance Criteria:\n+#### Current Acceptance Criteria:\n  \n  Main screen:\n  \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "TabHostExample/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n-#Demo TabHostExample\n+# Demo TabHostExample\n \n TabHostExample shows how to use the TabHost class.\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n-#Demo TabHostSelfContainedTabBrowsing\n+# Demo TabHostSelfContainedTabBrowsing\n \n TabHostSelfContainedTabBrowsing demonstrates a simple use of `TabHost` class with navigation between tabs.\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "WearBuildConfig/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo WearBuildConfig\n+# Demo WearBuildConfig\n \n WearBuildConfig demonstrates how to integrate Android Wear with a real-world mobile project with the following requirements:\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "encryption/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,3 @@\n-#Demo encryption\n+# Demo encryption\n \n Encyption demonstrates how to use javax.crypto in Activities.\n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "simperAudioStreamer/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo simperAudioStreamer\n+# Demo simperAudioStreamer\n \n simperAudioStreamer demonstrates how to provide a simple audio stream service.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "sms/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo sms\n+# Demo sms\n \n sms demonstrates how to send SMS using the `SmsManager`.\n \n"
    },
    {
        "commit hash": "3c9606e102228459c43850a9b9c7df2526f88f43",
        "previous commit hash": "36f4f29458fc01db90930defd8c808109aa4135a",
        "diff stats": {
            "file_path": "wizard/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Demo wizard\n+# Demo wizard\n \n wizard shows how to click through several activities in a wizzard like manner.\n \n"
    },
    {
        "commit hash": "a88d47c9d553dd84f481b24ae3e1cb5d5e45af41",
        "previous commit hash": "5f3b7f9b709acdf44d94cf8487f0e93cf64355ce",
        "diff stats": {
            "file_path": "encryption/src/main/java/com/novoda/Encrypt.java",
            "additions": 42,
            "deletions": 46
        },
        "diff content": "@@ -42,32 +42,28 @@ public class Encrypt extends Activity {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.main);\n         \n-        String hash = getAsHash(SECRET_PASSWORD_TO_ENCRYPT);\n+        String hash = transform(SECRET_PASSWORD_TO_ENCRYPT, Cipher.ENCRYPT_MODE);\n         \n         ((TextView)findViewById(R.id.txt_encrypted)).setText(hash);\n-        ((TextView)findViewById(R.id.txt_unencrypted)).setText(getUnhashed(hash));\n+        ((TextView)findViewById(R.id.txt_unencrypted)).setText(transform(hash, Cipher.DECRYPT_MODE));\n     }\n-    public String getAsHash(String var) {\n-        String passwordHashed;\n-        try {\n-            passwordHashed = crypt(Cipher.ENCRYPT_MODE, var);\n-        } catch (CryptException e) {\n-        \tLog.e(TAG, \"Problem encrypting string\" ,e);\n-            passwordHashed = \"you should not see this\";\n-\t\t}\n-    \treturn passwordHashed;\n-    }\n-    \n-    String getUnhashed(String hashed){\n+\n+    String transform(String var, int transformationType) {\n+        String passwordHashed = \"\";\n         try {\n-        \thashed = crypt(Cipher.DECRYPT_MODE, hashed);\n+            passwordHashed = crypt(transformationType, var);\n         } catch (CryptException e) {\n-        \tLog.e(TAG, \"A problem decrypting string has occurred: \" ,e);\n+            if (transformationType == Cipher.ENCRYPT_MODE) {\n+                Log.e(TAG, \"A problem during the encryption has occurred\", e);\n+                passwordHashed = \"\";\n+            }\n+            if (transformationType == Cipher.DECRYPT_MODE) {\n+                Log.e(TAG, \"A problem during the decryption has occurred:\", e);\n+            }\n         }\n-        return hashed;\n+        return passwordHashed;\n     }\n-    \n-    \n+\n     public String crypt(int mode, String encryption_subject) throws CryptException {\n \n         final PBEParameterSpec ps = new javax.crypto.spec.PBEParameterSpec(SALT, 20);\n@@ -91,75 +87,75 @@ public class Encrypt extends Activity {\n         return result;\n     }\n \n-    private String encode(String encryption_subject, Cipher crypter) throws CryptException {\n+    private SecretKeyFactory getSecretKeyFactory() throws CryptException {\n \n         try {\n-            return Base64.encode(finishTransformation(crypter, encryption_subject.getBytes(CHARSET)));\n-        } catch (UnsupportedEncodingException e) {\n+            return SecretKeyFactory.getInstance(ALGORITHM);\n+        } catch (NoSuchAlgorithmException e) {\n             throw new CryptException(e);\n         }\n-\n     }\n \n-    private byte[] finishTransformation(Cipher crypter, byte[] bytes) throws CryptException {\n+    private SecretKey getSecretKey(SecretKeyFactory kf) throws CryptException {\n \n         try {\n-            return crypter.doFinal(bytes);\n-        } catch (IllegalBlockSizeException | BadPaddingException e) {\n+            return kf.generateSecret(new javax.crypto.spec.PBEKeySpec(SECRET_KEY.toCharArray()));\n+        } catch (InvalidKeySpecException e) {\n             throw new CryptException(e);\n         }\n     }\n \n-    private byte[] getDecode(String encryption_subject) throws CryptException {\n+    private Cipher getCipherInstance() throws CryptException {\n \n         try {\n-            return Base64.decode(encryption_subject);\n-        } catch (Base64DecoderException e) {\n+            return Cipher.getInstance(CIPHER_TYPE);\n+        } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {\n             throw new CryptException(e);\n         }\n     }\n \n-    private SecretKeyFactory getSecretKeyFactory() throws CryptException {\n-\n+    private void initialise(PBEParameterSpec ps, SecretKey k, Cipher crypter, int decryptMode) throws CryptException {\n         try {\n-            return SecretKeyFactory.getInstance(ALGORITHM);\n-        } catch (NoSuchAlgorithmException e) {\n+            crypter.init(decryptMode, k, ps);\n+        } catch (InvalidKeyException | InvalidAlgorithmParameterException e) {\n             throw new CryptException(e);\n         }\n     }\n \n-    private SecretKey getSecretKey(SecretKeyFactory kf) throws CryptException {\n+    private String getString(String encryption_subject, Cipher crypter) throws CryptException {\n+\n \n         try {\n-            return kf.generateSecret(new javax.crypto.spec.PBEKeySpec(SECRET_KEY.toCharArray()));\n-        } catch (InvalidKeySpecException e) {\n+            return new String(finishTransformation(crypter, getDecode(encryption_subject)), CHARSET);\n+        } catch (UnsupportedEncodingException e) {\n             throw new CryptException(e);\n         }\n     }\n \n-    private Cipher getCipherInstance() throws CryptException {\n+    private String encode(String encryption_subject, Cipher crypter) throws CryptException {\n \n         try {\n-            return Cipher.getInstance(CIPHER_TYPE);\n-        } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {\n+            return Base64.encode(finishTransformation(crypter, encryption_subject.getBytes(CHARSET)));\n+        } catch (UnsupportedEncodingException e) {\n             throw new CryptException(e);\n         }\n+\n     }\n \n-    private void initialise(PBEParameterSpec ps, SecretKey k, Cipher crypter, int decryptMode) throws CryptException {\n+    private byte[] finishTransformation(Cipher crypter, byte[] bytes) throws CryptException {\n+\n         try {\n-            crypter.init(decryptMode, k, ps);\n-        } catch (InvalidKeyException | InvalidAlgorithmParameterException e) {\n+            return crypter.doFinal(bytes);\n+        } catch (IllegalBlockSizeException | BadPaddingException e) {\n             throw new CryptException(e);\n         }\n     }\n \n-    private String getString(String encryption_subject, Cipher crypter) throws CryptException {\n-\n+    private byte[] getDecode(String encryption_subject) throws CryptException {\n \n         try {\n-            return new String(finishTransformation(crypter, getDecode(encryption_subject)), CHARSET);\n-        } catch (UnsupportedEncodingException e) {\n+            return Base64.decode(encryption_subject);\n+        } catch (Base64DecoderException e) {\n             throw new CryptException(e);\n         }\n     }\n"
    },
    {
        "commit hash": "5f3b7f9b709acdf44d94cf8487f0e93cf64355ce",
        "previous commit hash": "088ebca5472aa02ac3d65c60b78665e4a659e39d",
        "diff stats": {
            "file_path": "encryption/src/main/java/com/novoda/CryptException.java",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda;\n+\n+public class CryptException extends Exception {\n+    CryptException(Throwable cause) {\n+        super(cause);\n+    }\n+}\n"
    },
    {
        "commit hash": "5f3b7f9b709acdf44d94cf8487f0e93cf64355ce",
        "previous commit hash": "088ebca5472aa02ac3d65c60b78665e4a659e39d",
        "diff stats": {
            "file_path": "encryption/src/main/java/com/novoda/Encrypt.java",
            "additions": 96,
            "deletions": 25
        },
        "diff content": "@@ -1,10 +1,9 @@\n package com.novoda;\n \n-import java.io.UnsupportedEncodingException;\n-import java.security.InvalidAlgorithmParameterException;\n-import java.security.InvalidKeyException;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.spec.InvalidKeySpecException;\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.widget.TextView;\n \n import javax.crypto.BadPaddingException;\n import javax.crypto.Cipher;\n@@ -13,11 +12,11 @@ import javax.crypto.NoSuchPaddingException;\n import javax.crypto.SecretKey;\n import javax.crypto.SecretKeyFactory;\n import javax.crypto.spec.PBEParameterSpec;\n-\n-import android.app.Activity;\n-import android.os.Bundle;\n-import android.util.Log;\n-import android.widget.TextView;\n+import java.io.UnsupportedEncodingException;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.spec.InvalidKeySpecException;\n \n public class Encrypt extends Activity {\n \n@@ -48,48 +47,120 @@ public class Encrypt extends Activity {\n         ((TextView)findViewById(R.id.txt_encrypted)).setText(hash);\n         ((TextView)findViewById(R.id.txt_unencrypted)).setText(getUnhashed(hash));\n     }\n-    \n     public String getAsHash(String var) {\n         String passwordHashed;\n         try {\n             passwordHashed = crypt(Cipher.ENCRYPT_MODE, var);\n-        } catch (Exception e) {\n+        } catch (CryptException e) {\n         \tLog.e(TAG, \"Problem encrypting string\" ,e);\n             passwordHashed = \"you should not see this\";\n \t\t}\n     \treturn passwordHashed;\n     }\n     \n-    public String getUnhashed(String hashed){\n+    String getUnhashed(String hashed){\n         try {\n         \thashed = crypt(Cipher.DECRYPT_MODE, hashed);\n-        } catch (Exception e) {\n-        \tLog.e(TAG, \"Problem decrypting string\" ,e);\n-        }     \n+        } catch (CryptException e) {\n+        \tLog.e(TAG, \"A problem decrypting string has occurred: \" ,e);\n+        }\n         return hashed;\n     }\n     \n     \n-    public String crypt(int mode, String encryption_subject) throws Base64DecoderException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,  InvalidAlgorithmParameterException, InvalidKeyException, InvalidKeySpecException, NoSuchPaddingException,  BadPaddingException, UnsupportedEncodingException, IllegalBlockSizeException {\n+    public String crypt(int mode, String encryption_subject) throws CryptException {\n \n         final PBEParameterSpec ps = new javax.crypto.spec.PBEParameterSpec(SALT, 20);\n-\t\tfinal SecretKeyFactory kf = SecretKeyFactory.getInstance(ALGORITHM);\n-\t\tfinal SecretKey k = kf.generateSecret(new javax.crypto.spec.PBEKeySpec(SECRET_KEY.toCharArray()));\n-        final Cipher crypter = Cipher.getInstance(CIPHER_TYPE);\n+\t\tfinal SecretKeyFactory kf = getSecretKeyFactory();\n+\t\tfinal SecretKey k = getSecretKey(kf);\n+        final Cipher crypter = getCipherInstance();\n         \n         String result;\n         \n \t\tswitch(mode){\n \t        case Cipher.DECRYPT_MODE:\n-\t        \tcrypter.init(Cipher.DECRYPT_MODE, k, ps);\n-\t            result = new String(crypter.doFinal(Base64.decode(encryption_subject)), CHARSET);\n+                initialise(ps, k, crypter, Cipher.DECRYPT_MODE);\n+                result = getString(encryption_subject, crypter);\n \t        \tbreak;\n \t        case Cipher.ENCRYPT_MODE:\n \t        default:\n-\t        \tcrypter.init(Cipher.ENCRYPT_MODE, k, ps);\n-\t            result = Base64.encode(crypter.doFinal(encryption_subject.getBytes(CHARSET)));\n+                initialise(ps, k, crypter, Cipher.ENCRYPT_MODE);\n+                result = encode(encryption_subject, crypter);\n         }\n         \n         return result;\n     }\n-}\n\\ No newline at end of file\n+\n+    private String encode(String encryption_subject, Cipher crypter) throws CryptException {\n+\n+        try {\n+            return Base64.encode(finishTransformation(crypter, encryption_subject.getBytes(CHARSET)));\n+        } catch (UnsupportedEncodingException e) {\n+            throw new CryptException(e);\n+        }\n+\n+    }\n+\n+    private byte[] finishTransformation(Cipher crypter, byte[] bytes) throws CryptException {\n+\n+        try {\n+            return crypter.doFinal(bytes);\n+        } catch (IllegalBlockSizeException | BadPaddingException e) {\n+            throw new CryptException(e);\n+        }\n+    }\n+\n+    private byte[] getDecode(String encryption_subject) throws CryptException {\n+\n+        try {\n+            return Base64.decode(encryption_subject);\n+        } catch (Base64DecoderException e) {\n+            throw new CryptException(e);\n+        }\n+    }\n+\n+    private SecretKeyFactory getSecretKeyFactory() throws CryptException {\n+\n+        try {\n+            return SecretKeyFactory.getInstance(ALGORITHM);\n+        } catch (NoSuchAlgorithmException e) {\n+            throw new CryptException(e);\n+        }\n+    }\n+\n+    private SecretKey getSecretKey(SecretKeyFactory kf) throws CryptException {\n+\n+        try {\n+            return kf.generateSecret(new javax.crypto.spec.PBEKeySpec(SECRET_KEY.toCharArray()));\n+        } catch (InvalidKeySpecException e) {\n+            throw new CryptException(e);\n+        }\n+    }\n+\n+    private Cipher getCipherInstance() throws CryptException {\n+\n+        try {\n+            return Cipher.getInstance(CIPHER_TYPE);\n+        } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {\n+            throw new CryptException(e);\n+        }\n+    }\n+\n+    private void initialise(PBEParameterSpec ps, SecretKey k, Cipher crypter, int decryptMode) throws CryptException {\n+        try {\n+            crypter.init(decryptMode, k, ps);\n+        } catch (InvalidKeyException | InvalidAlgorithmParameterException e) {\n+            throw new CryptException(e);\n+        }\n+    }\n+\n+    private String getString(String encryption_subject, Cipher crypter) throws CryptException {\n+\n+\n+        try {\n+            return new String(finishTransformation(crypter, getDecode(encryption_subject)), CHARSET);\n+        } catch (UnsupportedEncodingException e) {\n+            throw new CryptException(e);\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "088ebca5472aa02ac3d65c60b78665e4a659e39d",
        "previous commit hash": "16d950a3f3869c253b01ea2593ff4ccdf4ccea75",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/java/novoda/demo/GalleryAdapter.java",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -16,6 +16,7 @@ import java.io.InputStream;\n class GalleryAdapter extends BaseAdapter {\n \n     private static final String TAG = \"GalleryAdapter\";\n+    private static final String PLACEHOLDER_FILE = \"placeholder.png\";\n     private final Context mContext;\n \n     public GalleryAdapter(Context c) {\n@@ -48,10 +49,10 @@ class GalleryAdapter extends BaseAdapter {\n \n         Bitmap image = null;\n         try {\n-            InputStream bitmap = mContext.getAssets().open(\"placeholder.png\");\n+            InputStream bitmap = mContext.getAssets().open(PLACEHOLDER_FILE);\n             image = BitmapFactory.decodeStream(bitmap);\n         } catch (IOException exception) {\n-            Log.e(TAG, \"Something happen when you have tried to open the file placeholder.png\", exception);\n+            Log.e(TAG, \"An error occurred when you have tried to open the file: \"+ PLACEHOLDER_FILE, exception);\n         }\n \n         imageView.setImageBitmap(image);\n"
    },
    {
        "commit hash": "088ebca5472aa02ac3d65c60b78665e4a659e39d",
        "previous commit hash": "16d950a3f3869c253b01ea2593ff4ccdf4ccea75",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/java/com/novoda/activity/JsonRequest.java",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -71,17 +71,17 @@ public class JsonRequest extends Activity {\n            final int statusCode = getResponse.getStatusLine().getStatusCode();\n            \n            if (statusCode != HttpStatus.SC_OK) { \n-              Log.w(getClass().getSimpleName(), \"Error \" + statusCode + \" for URL \" + url); \n+              Log.w(getClass().getSimpleName(), \"An error occurred with this URL: \" + url + \"  Http status code: \" + statusCode);\n               return null;\n            }\n \n            HttpEntity getResponseEntity = getResponse.getEntity();\n            return getResponseEntity.getContent();\n            \n-        } \n+        }\n         catch (IOException e) {\n            getRequest.abort();\n-           Log.e(TAG, \"Error for URL \" + url, e);\n+           Log.e(TAG, \"An error occurred with this URL: \" + url, e);\n         }\n         return null;\n      }\n"
    },
    {
        "commit hash": "16d950a3f3869c253b01ea2593ff4ccdf4ccea75",
        "previous commit hash": "4de26123f75ebbab54d97b88a8b78146810fb226",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/java/com/novoda/activity/JsonRequest.java",
            "additions": 16,
            "deletions": 17
        },
        "diff content": "@@ -1,11 +1,23 @@\n package com.novoda.activity;\n \n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListView;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import com.google.gson.Gson;\n+import com.novoda.R;\n+import com.novoda.model.Result;\n+import com.novoda.model.SearchResponse;\n+\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n import java.io.Reader;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Iterator;\n import java.util.List;\n \n@@ -15,23 +27,10 @@ import org.apache.http.HttpStatus;\n import org.apache.http.client.methods.HttpGet;\n import org.apache.http.impl.client.DefaultHttpClient;\n \n-import android.app.Activity;\n-import android.os.Bundle;\n-import android.util.Log;\n-import android.widget.ArrayAdapter;\n-import android.widget.ListView;\n-import android.widget.SimpleAdapter;\n-import android.widget.TextView;\n-import android.widget.Toast;\n-\n-import com.google.gson.Gson;\n-import com.novoda.R;\n-import com.novoda.model.Result;\n-import com.novoda.model.SearchResponse;\n-\n public class JsonRequest extends Activity {\n \t\n \tprivate static final String SEARCH = \"Droidcon\";\n+    private static final String TAG = \"JsonRequest.class\";\n \tString url = \"http://search.twitter.com/search.json?q=\" + SEARCH;\n \t\n     @Override\n@@ -82,8 +81,8 @@ public class JsonRequest extends Activity {\n         } \n         catch (IOException e) {\n            getRequest.abort();\n-           Log.w(getClass().getSimpleName(), \"Error for URL \" + url, e);\n+           Log.e(TAG, \"Error for URL \" + url, e);\n         }\n         return null;\n      }\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "4de26123f75ebbab54d97b88a8b78146810fb226",
        "previous commit hash": "d683906ad137944d9294d17f8289024fc63b84e5",
        "diff stats": {
            "file_path": "DynamicListItems/src/main/java/com/novoda/DynamicListItems.java",
            "additions": 6,
            "deletions": 5
        },
        "diff content": "@@ -1,8 +1,5 @@\n package com.novoda;\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n-\n import android.app.ListActivity;\n import android.os.Bundle;\n import android.util.Log;\n@@ -12,8 +9,12 @@ import android.widget.EditText;\n import android.widget.ImageButton;\n import android.widget.SimpleAdapter;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n+\n public class DynamicListItems extends ListActivity {\n \tprivate static final String\t\t\tITEM_KEY\t= \"key\";\n+\tprivate static final String \t\tTAG = \"DynamicListItems.class\";\n \tArrayList<HashMap<String, String>>\tlist\t\t= new ArrayList<HashMap<String, String>>();\n \tprivate SimpleAdapter\t\t\t\tadapter;\n \tprivate EditText\t\t\t\t\tnewValue;\n@@ -37,9 +38,9 @@ public class DynamicListItems extends ListActivity {\n \t\t\t\t\tlist.add(item);\n \t\t\t\t\tadapter.notifyDataSetChanged();\n \t\t\t\t} catch (NullPointerException e) {\n-\t\t\t\t\tLog.i(\"[Dynamic Items]\", \"Tried to add null value\");\n+\t\t\t\t\tLog.e(TAG, \"You have tried to add item values to the list \", e);\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t}\n-}\n\\ No newline at end of file\n+}\n"
    },
    {
        "commit hash": "d683906ad137944d9294d17f8289024fc63b84e5",
        "previous commit hash": "4ed92aa9043ac803615443afe5b908dfa48174df",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/MainActivity.java",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -16,6 +16,7 @@ import java.util.Date;\n import java.util.List;\n \n public class MainActivity extends AppCompatActivity {\n+    private static String TAG = \"MainActivity.class\"\n     SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n     private TaskRepository taskRepository;\n     private EditText taskEditTitle;\n@@ -60,6 +61,7 @@ public class MainActivity extends AppCompatActivity {\n             date = dateFormat.parse(strDate);\n         } catch (ParseException ex) {\n             date = null;\n+            Log.e(TAG, \"A problem occur during the parsing of the string strDate: \"+ strDate, ex);\n         }\n \n         return new Task(taskEditTitle.getText().toString(), date);\n"
    },
    {
        "commit hash": "4ed92aa9043ac803615443afe5b908dfa48174df",
        "previous commit hash": "fee5a22b3cbafa818102fc7324d9a5d3bcc95dc1",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 11,
            "deletions": 11
        },
        "diff content": "@@ -1,15 +1,5 @@\n package com.novoda.example.compass.activities;\n \n-import java.util.concurrent.atomic.AtomicBoolean;\n-\n-import com.actionbarsherlock.app.SherlockFragmentActivity;\n-import com.novoda.example.compass.NovoCompass;\n-import com.novoda.example.compass.utils.CompassUtils;\n-import com.novoda.example.compass.utils.LowPassFilter;\n-import com.novoda.location.exception.NoProviderAvailable;\n-\n-import android.hardware.SensorManager;\n-\n import android.content.BroadcastReceiver;\n import android.content.Context;\n import android.content.Intent;\n@@ -18,10 +8,19 @@ import android.hardware.GeomagneticField;\n import android.hardware.Sensor;\n import android.hardware.SensorEvent;\n import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.location.Location;\n import android.os.Bundle;\n import android.util.Log;\n \n+import com.actionbarsherlock.app.SherlockFragmentActivity;\n+import com.novoda.example.compass.NovoCompass;\n+import com.novoda.example.compass.utils.CompassUtils;\n+import com.novoda.example.compass.utils.LowPassFilter;\n+import com.novoda.location.exception.NoProviderAvailable;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n public abstract class BasicSensorActivity extends SherlockFragmentActivity implements SensorEventListener {\n \n     private static final int FIRST_SENSOR_ITEM = 0;\n@@ -30,7 +29,8 @@ public abstract class BasicSensorActivity extends SherlockFragmentActivity imple\n     private static final float grav[] = new float[3]; \n     private static final float mag[] = new float[3]; \n     private static final float rotation[] = new float[9]; \n-    private static final float orientation[] = new float[3]; \n+    private static final float orientation[] = new float[3];\n+    private static final String TAG = \"BasicSensorActivity\";\n     private static float smoothed[] = new float[3];\n \n     private Location location;\n"
    },
    {
        "commit hash": "fee5a22b3cbafa818102fc7324d9a5d3bcc95dc1",
        "previous commit hash": "c8bbc4ca2b2de193a6e77ad7f92610719220109c",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -20,6 +20,7 @@ import android.hardware.SensorEvent;\n import android.hardware.SensorEventListener;\n import android.location.Location;\n import android.os.Bundle;\n+import android.util.Log;\n \n public abstract class BasicSensorActivity extends SherlockFragmentActivity implements SensorEventListener {\n \n@@ -103,7 +104,7 @@ public abstract class BasicSensorActivity extends SherlockFragmentActivity imple\n         try {\n             NovoCompass.getLocator().startLocationUpdates();\n         } catch (NoProviderAvailable np) {\n-            // TODO add implementation\n+            Log.e(TAG, \"There is no provider available\", np);\n         }\n     }\n \n"
    },
    {
        "commit hash": "c8bbc4ca2b2de193a6e77ad7f92610719220109c",
        "previous commit hash": "898d093beeefdd2e05e9adb379b666bf5f226d37",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/java/novoda/demo/GalleryAdapter.java",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -15,6 +15,7 @@ import java.io.InputStream;\n \n class GalleryAdapter extends BaseAdapter {\n \n+    private static final String TAG = \"GalleryAdapter\";\n     private final Context mContext;\n \n     public GalleryAdapter(Context c) {\n@@ -42,6 +43,7 @@ class GalleryAdapter extends BaseAdapter {\n         } else {\n             view = convertView;\n         }\n+\n         final ImageView imageView = (ImageView) view.findViewById(R.id.image);\n \n         Bitmap image = null;\n@@ -49,11 +51,10 @@ class GalleryAdapter extends BaseAdapter {\n             InputStream bitmap = mContext.getAssets().open(\"placeholder.png\");\n             image = BitmapFactory.decodeStream(bitmap);\n         } catch (IOException exception) {\n-            Log.e(\"GalleryAdapter.class\", \"Something happen when you have tried to open the file placeholder.png\", exception);\n+            Log.e(TAG, \"Something happen when you have tried to open the file placeholder.png\", exception);\n         }\n \n         imageView.setImageBitmap(image);\n         return view;\n     }\n-\n }\n"
    },
    {
        "commit hash": "898d093beeefdd2e05e9adb379b666bf5f226d37",
        "previous commit hash": "ac07b1a73b42e4083ea66422c80f3ae62d027fcf",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/java/novoda/demo/GalleryAdapter.java",
            "additions": 11,
            "deletions": 9
        },
        "diff content": "@@ -1,17 +1,18 @@\n package novoda.demo;\n \n-import java.io.IOException;\n-import java.io.InputStream;\n-\n import android.content.Context;\n import android.graphics.Bitmap;\n import android.graphics.BitmapFactory;\n+import android.util.Log;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n import android.widget.BaseAdapter;\n import android.widget.ImageView;\n \n+import java.io.IOException;\n+import java.io.InputStream;\n+\n class GalleryAdapter extends BaseAdapter {\n \n     private final Context mContext;\n@@ -42,16 +43,17 @@ class GalleryAdapter extends BaseAdapter {\n             view = convertView;\n         }\n         final ImageView imageView = (ImageView) view.findViewById(R.id.image);\n-        \n+\n         Bitmap image = null;\n         try {\n-            InputStream bitmap=mContext.getAssets().open(\"placeholder.png\");\n-            image=BitmapFactory.decodeStream(bitmap);\n-        } catch (IOException e1) {\n-            e1.printStackTrace();\n+            InputStream bitmap = mContext.getAssets().open(\"placeholder.png\");\n+            image = BitmapFactory.decodeStream(bitmap);\n+        } catch (IOException exception) {\n+            Log.e(\"GalleryAdapter.class\", \"Something happen when you have tried to open the file placeholder.png\", exception);\n         }\n-        \n+\n         imageView.setImageBitmap(image);\n         return view;\n     }\n+\n }\n"
    },
    {
        "commit hash": "ac07b1a73b42e4083ea66422c80f3ae62d027fcf",
        "previous commit hash": "547f9e72989a5064feaa51931967e0cfb7aa0133",
        "diff stats": {
            "file_path": "TestingPersistence/README.md",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+# Testing persistence\n+\n+This is a basic TODO app to demonstrate how to test persistence on Android\n+\n+![](https://www.novoda.com/blog/content/images/2017/01/screenshot_small.png)\n+\n+A general overview of its persistence layer can be found on the diagram below\n+\n+![](https://www.novoda.com/blog/content/images/2017/01/TDD-Persistence.png)\n+\n+\n+\n+## Test\n+\n+* `PersistabilityTest`: Validates that every entity of the domain model can be persisted correctly.\n+* `TaskRepositoryTest`: Validates that the app persistence logic works correctly.\n+\n+\n+\n+## Blogpost\n+\n+This sample app is part of a [blogpost about persistence in Android ecosystem](https://www.novoda.com/blog/testing-persistence-in-the-android-ecosystem/).\n+\n+\n+\n+ \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "547f9e72989a5064feaa51931967e0cfb7aa0133",
        "previous commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/MainActivity.java",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -16,7 +16,7 @@ import java.util.Date;\n import java.util.List;\n \n public class MainActivity extends AppCompatActivity {\n-\n+    SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n     private TaskRepository taskRepository;\n     private EditText taskEditTitle;\n     private EditText taskEditDate;\n@@ -55,7 +55,6 @@ public class MainActivity extends AppCompatActivity {\n     private Task createTask() {\n         String strDate = taskEditDate.getText().toString();\n \n-        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n         Date date;\n         try {\n             date = dateFormat.parse(strDate);\n@@ -83,7 +82,7 @@ public class MainActivity extends AppCompatActivity {\n             TextView taskDate = (TextView) taskLayout.findViewById(R.id.task_date);\n \n             taskTitle.setText(task.getName());\n-            taskDate.setText(task.getExpiration().toString());\n+            taskDate.setText(dateFormat.format(task.getExpiration()));\n \n             tasksList.addView(taskLayout);\n         }\n"
    },
    {
        "commit hash": "547f9e72989a5064feaa51931967e0cfb7aa0133",
        "previous commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/layout/activity_main.xml",
            "additions": 3,
            "deletions": 4
        },
        "diff content": "@@ -1,6 +1,5 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    xmlns:tools=\"http://schemas.android.com/tools\"\n     android:id=\"@+id/activity_main\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n@@ -8,8 +7,7 @@\n     android:paddingBottom=\"@dimen/activity_vertical_margin\"\n     android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n     android:paddingRight=\"@dimen/activity_horizontal_margin\"\n-    android:paddingTop=\"@dimen/activity_vertical_margin\"\n-    tools:context=\"xyz.lgvalle.tddpersistence.com.novoda.demo.tddpersistence.MainActivity\">\n+    android:paddingTop=\"@dimen/activity_vertical_margin\">\n \n     <EditText\n         android:id=\"@+id/task_edit_title\"\n@@ -32,7 +30,8 @@\n \n     <ScrollView\n         android:layout_width=\"match_parent\"\n-        android:layout_height=\"match_parent\">\n+        android:layout_height=\"match_parent\"\n+        android:layout_marginTop=\"16dp\">\n \n         <LinearLayout\n             android:id=\"@+id/task_list\"\n"
    },
    {
        "commit hash": "547f9e72989a5064feaa51931967e0cfb7aa0133",
        "previous commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/layout/task.xml",
            "additions": 13,
            "deletions": 5
        },
        "diff content": "@@ -4,19 +4,27 @@\n     android:id=\"@+id/activity_main\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n-    android:orientation=\"vertical\"\n-    tools:context=\"xyz.lgvalle.tddpersistence.com.novoda.demo.tddpersistence.MainActivity\">\n-\n+    android:layout_marginTop=\"16dp\"\n+    android:orientation=\"vertical\">\n \n     <TextView\n         android:id=\"@+id/task_title\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"wrap_content\"\n-        android:textStyle=\"bold\" />\n+        android:textSize=\"22dp\"\n+        android:textStyle=\"bold\"\n+        tools:text=\"Walk Nova\" />\n \n     <TextView\n         android:id=\"@+id/task_date\"\n         android:layout_width=\"match_parent\"\n-        android:layout_height=\"wrap_content\" />\n+        android:layout_height=\"wrap_content\"\n+        tools:text=\"2017-01-01\" />\n+\n+    <View\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"1dp\"\n+        android:layout_marginTop=\"8dp\"\n+        android:background=\"@android:color/darker_gray\" />\n \n </LinearLayout>\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/.gitignore",
            "additions": 42,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,42 @@\n+# java dumps during errors\n+*.hprof\n+\n+/.idea/\n+/.idea/workspace.xml\n+/.idea/libraries\n+*.iml\n+.DS_Store\n+\n+# Built application files\n+*.apk\n+*.ap_\n+\n+# Files for the Dalvik VM\n+*.dex\n+\n+# Java class files\n+*.class\n+\n+# Generated files\n+bin/\n+gen/\n+\n+# Gradle files\n+.gradle/\n+build/\n+\n+# Local configuration file (sdk path, etc)\n+local.properties\n+\n+# Proguard folder generated by Eclipse\n+proguard/\n+\n+# Log Files\n+*.log\n+\n+# Generated during build\n+com_crashlytics_export_strings.xml\n+crashlytics.properties\n+\n+# memory dumps\n+captures/\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/build.gradle",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 25\n+    buildToolsVersion \"25.0.2\"\n+    defaultConfig {\n+        applicationId \"xyz.lgvalle.tddpersistence\"\n+        minSdkVersion 15\n+        targetSdkVersion 25\n+        versionCode 1\n+        versionName \"1.0\"\n+        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n+    }\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+}\n+\n+dependencies {\n+    compile fileTree(dir: 'libs', include: ['*.jar'])\n+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n+        exclude group: 'com.android.support', module: 'support-annotations'\n+    })\n+    compile 'com.android.support:appcompat-v7:25.1.0'\n+    testCompile 'junit:junit:4.12'\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/proguard-rules.pro",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+# Add project specific ProGuard rules here.\n+# By default, the flags in this file are appended to flags specified\n+# in /Users/lgvalle/Developer/android-sdk/tools/proguard/proguard-android.txt\n+# You can edit the include path and order by changing the proguardFiles\n+# directive in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# Add any project specific keep options here:\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/DatabaseCleaner.java",
            "additions": 33,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,33 @@\n+package xyz.lgvalle.tddpersistence;\n+\n+import android.database.sqlite.SQLiteDatabase;\n+\n+import java.sql.SQLException;\n+\n+import xyz.lgvalle.tddpersistence.db.TaskReaderDbHelper;\n+\n+import static xyz.lgvalle.tddpersistence.db.TaskReaderContract.*;\n+\n+public class DatabaseCleaner {\n+\n+    private static final String[] TABLES = {\n+            // Add tables to delete here\n+            TaskEntry.TABLE_NAME\n+    };\n+\n+    private final TaskReaderDbHelper dbHelper;\n+\n+    public DatabaseCleaner(TaskReaderDbHelper dbHelper) {\n+        this.dbHelper = dbHelper;\n+    }\n+\n+    public void clean() throws SQLException {\n+        SQLiteDatabase sqLiteDatabase = dbHelper.getWritableDatabase();\n+\n+        for (String table : TABLES) {\n+            sqLiteDatabase.delete(table, null, null);\n+        }\n+\n+        dbHelper.close();\n+    }\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/PersistabilityTest.java",
            "additions": 72,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,72 @@\n+package xyz.lgvalle.tddpersistence;\n+\n+import android.content.Context;\n+import android.support.test.InstrumentationRegistry;\n+import android.support.test.runner.AndroidJUnit4;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import xyz.lgvalle.tddpersistence.db.TaskReaderDbHelper;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static xyz.lgvalle.tddpersistence.TaskRepositoryTest.TaskBuilder.aTask;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class PersistabilityTest {\n+    private TaskRepository taskRepository;\n+\n+    List<TestBuilder<Task>> persistentObjectBuilders = Arrays.<TestBuilder<Task>>asList(\n+            aTask().withName(\"A task\").withExpirationDate(\"2017-03-16\"),\n+            aTask().withName(\"A task (with date in the past)\").withExpirationDate(\"2017-01-01\")\n+\n+    );\n+    private TaskDBStorage storage;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        Context appContext = InstrumentationRegistry.getTargetContext();\n+\n+        TaskReaderDbHelper dbHelper = new TaskReaderDbHelper(appContext);\n+        storage = new TaskDBStorage(dbHelper);\n+        TaskMapper mapper = new TaskMapper();\n+\n+        taskRepository = new TaskRepository(mapper, storage);\n+\n+        DatabaseCleaner cleaner = new DatabaseCleaner(dbHelper);\n+        cleaner.clean();\n+\n+    }\n+\n+    @Test\n+    public void roundTripsPersistentObjects() {\n+        for (TestBuilder builder : persistentObjectBuilders) {\n+            assertCanBePersisted(builder);\n+        }\n+    }\n+\n+    private void assertCanBePersisted(TestBuilder<Task> builder) {\n+        assertReloadsWithSameStateAs(persistedObjectFrom(builder));\n+    }\n+\n+    private void assertReloadsWithSameStateAs(Task original) {\n+        Task savedTask = taskRepository.taskWithName(original.getName());\n+\n+        // Without reflection this can fail:\n+        // If a new field is added to the object without including it on the equals method and it is wrongly mapped this matcher won't pick it up.\n+        assertThat(savedTask, equalTo(original));\n+    }\n+\n+    private Task persistedObjectFrom(TestBuilder<Task> builder) {\n+        Task original = builder.build();\n+\n+        taskRepository.persistTask(original);\n+        return original;\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/TaskNamedMatcher.java",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+package xyz.lgvalle.tddpersistence;\n+\n+import org.hamcrest.Description;\n+import org.hamcrest.TypeSafeMatcher;\n+\n+public class TaskNamedMatcher extends TypeSafeMatcher<Task> {\n+\n+    private String expectedName;\n+\n+    public TaskNamedMatcher(String expectedName) {\n+        this.expectedName = expectedName;\n+    }\n+\n+    @Override\n+    protected boolean matchesSafely(Task actualTask) {\n+        return actualTask.getName().equals(expectedName);\n+    }\n+\n+    @Override\n+    public void describeTo(Description description) {\n+        description\n+                .appendText(\"a task named \")\n+                .appendValue(expectedName);\n+    }\n+\n+    public static TaskNamedMatcher aTaskNamed(String expectedName) {\n+        return new TaskNamedMatcher(expectedName);\n+    }\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/TaskRepositoryTest.java",
            "additions": 106,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,106 @@\n+package xyz.lgvalle.tddpersistence;\n+\n+import android.content.Context;\n+import android.support.test.InstrumentationRegistry;\n+import android.support.test.runner.AndroidJUnit4;\n+\n+import org.hamcrest.Matcher;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import xyz.lgvalle.tddpersistence.db.TaskReaderDbHelper;\n+\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n+import static org.junit.Assert.assertThat;\n+import static xyz.lgvalle.tddpersistence.TaskNamedMatcher.aTaskNamed;\n+import static xyz.lgvalle.tddpersistence.TaskRepositoryTest.TaskBuilder.aTask;\n+\n+\n+@RunWith(AndroidJUnit4.class)\n+public class TaskRepositoryTest {\n+    private static SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n+    private TaskRepository taskRepository;\n+\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        Context appContext = InstrumentationRegistry.getTargetContext();\n+\n+        TaskReaderDbHelper dbHelper = new TaskReaderDbHelper(appContext);\n+        TaskDBStorage storage = new TaskDBStorage(dbHelper);\n+        TaskMapper mapper = new TaskMapper();\n+\n+        taskRepository = new TaskRepository(mapper, storage);\n+\n+        DatabaseCleaner cleaner = new DatabaseCleaner(dbHelper);\n+        cleaner.clean();\n+    }\n+\n+    @Test\n+    public void findsExpiredTasks() throws Exception {\n+        String deadline = \"2017-01-14\";\n+\n+        addTasks(\n+                aTask().withName(\"Task 1 (-Valid-)\").withExpirationDate(\"2017-01-31\"),\n+                aTask().withName(\"Task 2 (Expired)\").withExpirationDate(\"2017-01-01\"),\n+                aTask().withName(\"Task 3 (-Valid-)\").withExpirationDate(\"2017-02-11\"),\n+                aTask().withName(\"Task 4 (-Valid-)\").withExpirationDate(\"2017-02-14\"),\n+                aTask().withName(\"Task 5 (Expired)\").withExpirationDate(\"2017-01-13\")\n+        );\n+\n+        assertTasksExpiringOn(deadline,\n+                containsInAnyOrder(\n+                        aTaskNamed(\"Task 2 (Expired)\"),\n+                        aTaskNamed(\"Task 5 (Expired)\"))\n+        );\n+    }\n+\n+    private void addTasks(final TaskBuilder... tasks) throws Exception {\n+        for (TaskBuilder task : tasks) {\n+            taskRepository.persistTask(task.build());\n+        }\n+    }\n+\n+    private void assertTasksExpiringOn(String deadline, Matcher<Iterable<? extends Task>> taskMatcher) throws ParseException {\n+        Date date = dateFormat.parse(deadline);\n+        assertThat(taskRepository.tasksExpiredBy(date), taskMatcher);\n+    }\n+\n+    public static class TaskBuilder implements TestBuilder<Task> {\n+\n+        private String name;\n+        private Date date;\n+\n+        public static TaskBuilder aTask() {\n+            return new TaskBuilder();\n+        }\n+\n+        public TaskBuilder withName(String name) {\n+            this.name = name;\n+            return this;\n+        }\n+\n+        public TaskBuilder withExpirationDate(String strDate) {\n+\n+            try {\n+                date = dateFormat.parse(strDate);\n+            } catch (ParseException ex) {\n+                date = null;\n+            }\n+\n+            return this;\n+        }\n+\n+        @Override\n+        public Task build() {\n+            return new Task(name, date);\n+        }\n+\n+\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/androidTest/java/com/novoda/demo/tddpersistence/TestBuilder.java",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+package com.novoda.demo.tddpersistence;\n+\n+\n+public interface TestBuilder<T> {\n+\n+    T build();\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/AndroidManifest.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.novoda.demo.tddpersistence\">\n+\n+    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n+\n+    <application\n+        android:allowBackup=\"true\"\n+        android:icon=\"@mipmap/ic_launcher\"\n+        android:label=\"@string/app_name\"\n+        android:supportsRtl=\"true\"\n+        android:theme=\"@style/AppTheme\">\n+        <activity android:name=\"com.novoda.demo.tddpersistence.MainActivity\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/MainActivity.java",
            "additions": 99,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,99 @@\n+package com.novoda.demo.tddpersistence;\n+\n+import android.os.Bundle;\n+import android.support.v7.app.AppCompatActivity;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.widget.EditText;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import com.novoda.demo.tddpersistence.db.TaskReaderDbHelper;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.List;\n+\n+public class MainActivity extends AppCompatActivity {\n+\n+    private TaskRepository taskRepository;\n+    private EditText taskEditTitle;\n+    private EditText taskEditDate;\n+    private LinearLayout tasksList;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+\n+        taskRepository = getRepository();\n+        initLayout();\n+    }\n+\n+    private void initLayout() {\n+        findViewById(R.id.task_add).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                onAddTask();\n+                refreshUI();\n+            }\n+        });\n+\n+        taskEditTitle = ((EditText) findViewById(R.id.task_edit_title));\n+        taskEditDate = ((EditText) findViewById(R.id.task_edit_date));\n+        tasksList = (LinearLayout) findViewById(R.id.task_list);\n+\n+        updateTaskList();\n+    }\n+\n+    private void onAddTask() {\n+        Task task = createTask();\n+        taskRepository.persistTask(task);\n+    }\n+\n+    private Task createTask() {\n+        String strDate = taskEditDate.getText().toString();\n+\n+        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n+        Date date;\n+        try {\n+            date = dateFormat.parse(strDate);\n+        } catch (ParseException ex) {\n+            date = null;\n+        }\n+\n+        return new Task(taskEditTitle.getText().toString(), date);\n+    }\n+\n+    private void refreshUI() {\n+        updateTaskList();\n+        taskEditTitle.setText(\"\");\n+        taskEditDate.setText(\"\");\n+    }\n+\n+    private void updateTaskList() {\n+        tasksList.removeAllViews();\n+\n+        List<Task> tasks = taskRepository.allTasks();\n+        for (Task task : tasks) {\n+\n+            View taskLayout = LayoutInflater.from(this).inflate(R.layout.task, null);\n+            TextView taskTitle = (TextView) taskLayout.findViewById(R.id.task_title);\n+            TextView taskDate = (TextView) taskLayout.findViewById(R.id.task_date);\n+\n+            taskTitle.setText(task.getName());\n+            taskDate.setText(task.getExpiration().toString());\n+\n+            tasksList.addView(taskLayout);\n+        }\n+    }\n+\n+    private TaskRepository getRepository() {\n+        TaskReaderDbHelper taskReaderDbHelper = new TaskReaderDbHelper(this);\n+        TaskStorage taskStorage = new TaskDBStorage(taskReaderDbHelper);\n+        TaskMapper taskMapper = new TaskMapper();\n+\n+        return new TaskRepository(taskMapper, taskStorage);\n+    }\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/MainActivityPresenter.java",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+package com.novoda.demo.tddpersistence;\n+\n+\n+public class MainActivityPresenter {\n+\n+    private final TaskRepository taskRepository;\n+\n+    public MainActivityPresenter(TaskRepository taskRepository) {\n+        this.taskRepository = taskRepository;\n+    }\n+\n+    public void save(Task task) {\n+        taskRepository.persistTask(task);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/Task.java",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+package com.novoda.demo.tddpersistence;\n+\n+import java.util.Date;\n+\n+public class Task {\n+    private String name;\n+    private Date expiration;\n+\n+    public Task(String name, Date expiration) {\n+        this.name = name;\n+        this.expiration = expiration;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public Date getExpiration() {\n+        return expiration;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+\n+        Task task = (Task) o;\n+\n+        if (name != null ? !name.equals(task.name) : task.name != null) return false;\n+        return expiration != null ? expiration.equals(task.expiration) : task.expiration == null;\n+\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = name != null ? name.hashCode() : 0;\n+        result = 31 * result + (expiration != null ? expiration.hashCode() : 0);\n+        return result;\n+    }\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/TaskDBModel.java",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+package com.novoda.demo.tddpersistence;\n+\n+public class TaskDBModel {\n+\n+    private final String name;\n+    private final long expiration;\n+\n+    public TaskDBModel(String name, long expiration) {\n+        this.name = name;\n+        this.expiration = expiration;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public long getExpiration() {\n+        return expiration;\n+    }\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/TaskDBStorage.java",
            "additions": 149,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,149 @@\n+package com.novoda.demo.tddpersistence;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.support.annotation.NonNull;\n+\n+import com.novoda.demo.tddpersistence.db.TaskReaderDbHelper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static com.novoda.demo.tddpersistence.db.TaskReaderContract.TaskEntry.*;\n+\n+\n+public class TaskDBStorage implements TaskStorage {\n+\n+\n+    private final TaskReaderDbHelper taskReaderDbHelper;\n+\n+    public TaskDBStorage(TaskReaderDbHelper taskReaderDbHelper) {\n+        this.taskReaderDbHelper = taskReaderDbHelper;\n+    }\n+\n+    private SQLiteDatabase openDB() {\n+        return taskReaderDbHelper.getWritableDatabase();\n+    }\n+\n+    @Override\n+    public void insert(TaskDBModel taskDBModel) {\n+        SQLiteDatabase db = openDB();\n+\n+        ContentValues values = toContentValues(taskDBModel);\n+\n+        db.insertOrThrow(TABLE_NAME, null, values);\n+\n+        closeDB();\n+    }\n+\n+    @Override\n+    public void delete(TaskDBModel taskDBModel) {\n+        SQLiteDatabase db = openDB();\n+\n+        String selection = COLUMN_TASK_NAME + \" LIKE ?\";\n+        String[] selectionArgs = {taskDBModel.getName()};\n+        db.delete(TABLE_NAME, selection, selectionArgs);\n+\n+        closeDB();\n+    }\n+\n+    private void closeDB() {\n+        taskReaderDbHelper.close();\n+    }\n+\n+    @NonNull\n+    private ContentValues toContentValues(TaskDBModel taskDBModel) {\n+        ContentValues values = new ContentValues();\n+        values.put(COLUMN_TASK_NAME, taskDBModel.getName());\n+        values.put(COLUMN_TASK_EXPIRATION, taskDBModel.getExpiration());\n+        return values;\n+    }\n+\n+    @Override\n+    public List<TaskDBModel> findAllExpiredBy(long expirationDate) {\n+        SQLiteDatabase db = openDB();\n+\n+        String selection = COLUMN_TASK_EXPIRATION + \" < ?\";\n+        String[] selectionArgs = {String.valueOf(expirationDate)};\n+\n+\n+        Cursor cursor = db.query(\n+                TABLE_NAME,                     // The table to query\n+                dbProjection(),                               // The columns to return\n+                selection,                                // The columns for the WHERE clause\n+                selectionArgs,                            // The values for the WHERE clause\n+                null,                                     // don't group the rows\n+                null,                                     // don't filter by row groups\n+                null\n+        );\n+\n+        return toTaskDBModels(cursor);\n+    }\n+\n+    private String[] dbProjection() {\n+        return new String[]{\n+                COLUMN_TASK_NAME,\n+                COLUMN_TASK_EXPIRATION\n+        };\n+    }\n+\n+    private List<TaskDBModel> toTaskDBModels(Cursor cursor) {\n+        List<TaskDBModel> tasks = new ArrayList<>();\n+        while (cursor.moveToNext()) {\n+            String name = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_TASK_NAME));\n+            long expiration = cursor.getLong(cursor.getColumnIndexOrThrow(COLUMN_TASK_EXPIRATION));\n+            tasks.add(new TaskDBModel(name, expiration));\n+        }\n+        cursor.close();\n+        closeDB();\n+        return tasks;\n+    }\n+\n+    @Override\n+    public List<TaskDBModel> findAll() {\n+        SQLiteDatabase db = openDB();\n+\n+        Cursor cursor = db.query(\n+                TABLE_NAME,                     // The table to query\n+                dbProjection(),                               // The columns to return\n+                null,                                // The columns for the WHERE clause\n+                null,                            // The values for the WHERE clause\n+                null,                                     // don't group the rows\n+                null,                                     // don't filter by row groups\n+                null\n+        );\n+\n+        return toTaskDBModels(cursor);\n+    }\n+\n+    @Override\n+    public TaskDBModel findByName(String taskName) {\n+        SQLiteDatabase db = openDB();\n+\n+        String selection = COLUMN_TASK_NAME + \" == ?\";\n+        String[] selectionArgs = {taskName};\n+\n+\n+        Cursor cursor = db.query(\n+                TABLE_NAME,                     // The table to query\n+                dbProjection(),                               // The columns to return\n+                selection,                                // The columns for the WHERE clause\n+                selectionArgs,                            // The values for the WHERE clause\n+                null,                                     // don't group the rows\n+                null,                                     // don't filter by row groups\n+                null\n+        );\n+\n+        TaskDBModel task = null;\n+        while (cursor.moveToNext()) {\n+            String name = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_TASK_NAME));\n+            long expiration = cursor.getLong(cursor.getColumnIndexOrThrow(COLUMN_TASK_EXPIRATION));\n+            task = new TaskDBModel(name, expiration);\n+        }\n+        cursor.close();\n+        closeDB();\n+\n+        return task;\n+    }\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/TaskMapper.java",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+package com.novoda.demo.tddpersistence;\n+\n+import java.util.Date;\n+\n+\n+public class TaskMapper {\n+\n+    public TaskDBModel fromDomain(Task task) {\n+        Date expiration = task.getExpiration();\n+        if (expiration == null) {\n+            expiration = new Date();\n+        }\n+        return new TaskDBModel(\n+                task.getName(),\n+                expiration.getTime()\n+        );\n+    }\n+\n+    public Task toDomain(TaskDBModel taskDBModel) {\n+        return new Task(\n+                taskDBModel.getName(),\n+                new Date(taskDBModel.getExpiration())\n+        );\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/TaskRepository.java",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+package com.novoda.demo.tddpersistence;\n+\n+import android.support.annotation.NonNull;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+public class TaskRepository {\n+    private final TaskMapper taskMapper;\n+    private final TaskStorage taskDBStorage;\n+\n+    public TaskRepository(TaskMapper taskMapper, TaskStorage taskDBStorage) {\n+        this.taskMapper = taskMapper;\n+        this.taskDBStorage = taskDBStorage;\n+    }\n+\n+    public void persistTask(Task task) {\n+        TaskDBModel taskDBModel = taskMapper.fromDomain(task);\n+        taskDBStorage.insert(taskDBModel);\n+    }\n+\n+    public List<Task> tasksExpiredBy(Date date) {\n+        long expirationDate = date.getTime();\n+        return dbTasksToDomain(taskDBStorage.findAllExpiredBy(expirationDate));\n+    }\n+\n+    public Task taskWithName(String taskName) {\n+        TaskDBModel taskDBModel = taskDBStorage.findByName(taskName);\n+        return taskMapper.toDomain(taskDBModel);\n+    }\n+\n+    public List<Task> allTasks() {\n+        return dbTasksToDomain(taskDBStorage.findAll());\n+    }\n+\n+    @NonNull\n+    private List<Task> dbTasksToDomain(List<TaskDBModel> allExpiredBy) {\n+        List<Task> tasks = new ArrayList<>();\n+        for (TaskDBModel taskDBModel : allExpiredBy) {\n+            tasks.add(taskMapper.toDomain(taskDBModel));\n+        }\n+        return tasks;\n+    }\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/TaskStorage.java",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+package com.novoda.demo.tddpersistence;\n+\n+import java.util.List;\n+\n+/**\n+ * Created by lgvalle on 08/01/2017.\n+ */\n+public interface TaskStorage {\n+    void insert(TaskDBModel taskDBModel);\n+\n+    void delete(TaskDBModel taskDBModel);\n+\n+    List<TaskDBModel> findAllExpiredBy(long expirationDate);\n+    \n+    List<TaskDBModel> findAll();\n+\n+    TaskDBModel findByName(String taskName);\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/db/AndroidTransactor.java",
            "additions": 37,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,37 @@\n+package com.novoda.demo.tddpersistence.db;\n+\n+import android.database.sqlite.SQLiteDatabase;\n+import android.util.Log;\n+\n+\n+public class AndroidTransactor {\n+\n+    private static final String TAG = AndroidTransactor.class.getSimpleName();\n+\n+    public interface UnitOfWork {\n+        void work(SQLiteDatabase db) throws Exception;\n+    }\n+\n+\n+    private final TaskReaderDbHelper dbHelper;\n+\n+    public AndroidTransactor(TaskReaderDbHelper dbHelper) {\n+        this.dbHelper = dbHelper;\n+    }\n+\n+    public void perform(UnitOfWork unitOfWork)  {\n+        SQLiteDatabase db = dbHelper.getWritableDatabase();\n+\n+        db.beginTransaction();\n+        try {\n+            unitOfWork.work(db);\n+            db.setTransactionSuccessful();\n+        } catch (Exception e) {\n+            Log.d(TAG, e.getMessage());\n+        } finally {\n+            db.endTransaction();\n+        }\n+        db.close();\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/db/TaskReaderContract.java",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+package com.novoda.demo.tddpersistence.db;\n+\n+import android.provider.BaseColumns;\n+\n+public final class TaskReaderContract {\n+    // To prevent someone from accidentally instantiating the contract class,\n+    // make the constructor private.\n+    private TaskReaderContract() {\n+    }\n+\n+    /* Inner class that defines the table contents */\n+    public static class TaskEntry implements BaseColumns {\n+        public static final String TABLE_NAME = \"tasks\";\n+        public static final String COLUMN_TASK_NAME = \"name\";\n+        public static final String COLUMN_TASK_EXPIRATION = \"expiration\";\n+    }\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/java/com/novoda/demo/tddpersistence/db/TaskReaderDbHelper.java",
            "additions": 42,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,42 @@\n+package com.novoda.demo.tddpersistence.db;\n+\n+import android.content.Context;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+\n+import static com.novoda.demo.tddpersistence.db.TaskReaderContract.*;\n+\n+\n+public class TaskReaderDbHelper extends SQLiteOpenHelper {\n+    // If you change the database schema, you must increment the database version.\n+    public static final int DATABASE_VERSION = 1;\n+    public static final String DATABASE_NAME = \"Tasks.db\";\n+\n+    private static final String SQL_CREATE_ENTRIES =\n+            \"CREATE TABLE \" + TaskEntry.TABLE_NAME + \" (\" +\n+                    TaskEntry._ID + \" INTEGER PRIMARY KEY,\" +\n+                    TaskEntry.COLUMN_TASK_NAME + \" TEXT,\" +\n+                    TaskEntry.COLUMN_TASK_EXPIRATION + \" INTEGER)\";\n+\n+    private static final String SQL_DELETE_ENTRIES =\n+            \"DROP TABLE IF EXISTS \" + TaskEntry.TABLE_NAME;\n+\n+    public TaskReaderDbHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(SQL_CREATE_ENTRIES);\n+    }\n+\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        // This database is only a cache for online data, so its upgrade policy is\n+        // to simply to discard the data and start over\n+        db.execSQL(SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        onUpgrade(db, oldVersion, newVersion);\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/layout/activity_main.xml",
            "additions": 47,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,47 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:id=\"@+id/activity_main\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n+    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n+    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n+    android:paddingTop=\"@dimen/activity_vertical_margin\"\n+    tools:context=\"xyz.lgvalle.tddpersistence.com.novoda.demo.tddpersistence.MainActivity\">\n+\n+    <EditText\n+        android:id=\"@+id/task_edit_title\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:hint=\"Task title\" />\n+\n+    <EditText\n+        android:id=\"@+id/task_edit_date\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:hint=\"Expiration date\"\n+        android:inputType=\"date\" />\n+\n+    <Button\n+        android:id=\"@+id/task_add\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"Add\" />\n+\n+    <ScrollView\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <LinearLayout\n+            android:id=\"@+id/task_list\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:animateLayoutChanges=\"true\"\n+            android:orientation=\"vertical\" />\n+\n+    </ScrollView>\n+\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/layout/task.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:id=\"@+id/activity_main\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\"\n+    tools:context=\"xyz.lgvalle.tddpersistence.com.novoda.demo.tddpersistence.MainActivity\">\n+\n+\n+    <TextView\n+        android:id=\"@+id/task_title\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:textStyle=\"bold\" />\n+\n+    <TextView\n+        android:id=\"@+id/task_date\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\" />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/TestingPersistence/app/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/TestingPersistence/app/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/TestingPersistence/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/TestingPersistence/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/TestingPersistence/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/values-w820dp/dimens.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<resources>\n+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml\n+         (such as screen margins) for screens with more than 820dp of available width. This\n+         would include 7\" and 10\" devices in landscape (~960dp and ~1280dp respectively). -->\n+    <dimen name=\"activity_horizontal_margin\">64dp</dimen>\n+</resources>\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/values/colors.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <color name=\"colorPrimary\">#3F51B5</color>\n+    <color name=\"colorPrimaryDark\">#303F9F</color>\n+    <color name=\"colorAccent\">#FF4081</color>\n+</resources>\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/values/dimens.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<resources>\n+    <!-- Default screen margins, per the Android Design guidelines. -->\n+    <dimen name=\"activity_horizontal_margin\">16dp</dimen>\n+    <dimen name=\"activity_vertical_margin\">16dp</dimen>\n+</resources>\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/values/strings.xml",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+<resources>\n+    <string name=\"app_name\">TDDPersistence</string>\n+</resources>\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/app/src/main/res/values/styles.xml",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+<resources>\n+\n+    <!-- Base application theme. -->\n+    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n+        <!-- Customize your theme here. -->\n+        <item name=\"colorPrimary\">@color/colorPrimary</item>\n+        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n+        <item name=\"colorAccent\">@color/colorAccent</item>\n+    </style>\n+\n+</resources>\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/build.gradle",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:2.2.2'\n+\n+        // NOTE: Do not place your application dependencies here; they belong\n+        // in the individual module build.gradle files\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        jcenter()\n+    }\n+}\n+\n+task clean(type: Delete) {\n+    delete rootProject.buildDir\n+}\n"
    },
    {
        "commit hash": "8f246d38ad03aa22eee1e8671b5c21f2850bbcb5",
        "previous commit hash": "591de4a1c76cde87a40c0121c683eb6f20f1d76a",
        "diff stats": {
            "file_path": "TestingPersistence/settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+include ':app'\n"
    },
    {
        "commit hash": "446a3b2c707a73a927eb9290df63a7770d0cf976",
        "previous commit hash": "9e485c866e1fac644105b2043c1d9cc3a8bf1868",
        "diff stats": {
            "file_path": "Cookbook/change_device_locale_recipe.md",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -5,7 +5,7 @@ Internationalisation can be hard on Android so you might end up writing automate\n \n To avoid code duplication you can use this `TestRule`, which changes the `Locale` of a device to a given one before a test runs and afterwards back to the original one.\n \n-```\n+``` java\n class LocaleTestRule implements TestRule {\n \n     private final Locale locale;\n@@ -52,7 +52,7 @@ class LocaleTestRule implements TestRule {\n \n You can use this rule together with the `ActivityTestRule` in your instrumentation test.\n \n-```\n+``` java\n @RunWith(AndroidJUnit4.class)\n public class MainActivityTest {\n \n"
    },
    {
        "commit hash": "3da83b8f16f944e71db12529e2182bdabc5208b8",
        "previous commit hash": "5f81b00f8407dd46a5e687c08b0238f0e57db257",
        "diff stats": {
            "file_path": "Cookbook/README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -8,3 +8,4 @@ A series of common coding recipes that will help you building great apps.\n \n [Change the Device Locale for Instrumentation Tests ](change_device_locale_recipe.md)\n \n+[Create and add a Native Ad Express](add_native_express_adverts.md)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "5f81b00f8407dd46a5e687c08b0238f0e57db257",
        "previous commit hash": "74dcf572c17a7366e148f78d51344cca7976946d",
        "diff stats": {
            "file_path": "Cookbook/add_native_express_adverts.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -52,7 +52,7 @@ There is a table in the documentation summarising available sizes\n \n The process is the same as loading a regular ad:\n \n-####1. In the activity, initialise MobileAds:\n+####1. In the activity, initialise `MobileAds`:\n \n ```\n MobileAds.initialize(getApplicationContext(), getString(R.string.ad_app_id));\n"
    },
    {
        "commit hash": "74dcf572c17a7366e148f78d51344cca7976946d",
        "previous commit hash": "963b36fff1344c09700db9e303724735c563be2c",
        "diff stats": {
            "file_path": "Cookbook/add_native_express_adverts.md",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -52,13 +52,13 @@ There is a table in the documentation summarising available sizes\n \n The process is the same as loading a regular ad:\n \n-1. In the activity, initialise MobileAds:\n+####1. In the activity, initialise MobileAds:\n \n ```\n MobileAds.initialize(getApplicationContext(), getString(R.string.ad_app_id));\n ```\n \n-2. Load the view and build a request:\n+####2. Load the view and build a request:\n \n ```\n NativeExpressAdView mAdView = (NativeExpressAdView) findViewById(R.id.adViewExpress);\n"
    },
    {
        "commit hash": "563ab8d7ba9b8079ce372bc9afb56a2392b4cfa2",
        "previous commit hash": "7340b84502bd1f3373f2d7d25abc93060d08fff8",
        "diff stats": {
            "file_path": "Cookbook/README.md",
            "additions": 4,
            "deletions": 4
        },
        "diff content": "@@ -1,10 +1,10 @@\n-#Description\n-===================\n+Description\n+===========\n \n A series of common coding recipes that will help you building great apps.\n \n-##Android\n-===================\n+Android\n+-------\n \n [Change the Device Locale for Instrumentation Tests ](change_device_locale_recipe.md)\n \n"
    },
    {
        "commit hash": "963b36fff1344c09700db9e303724735c563be2c",
        "previous commit hash": "7340b84502bd1f3373f2d7d25abc93060d08fff8",
        "diff stats": {
            "file_path": "Cookbook/add_native_express_adverts.md",
            "additions": 77,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,77 @@\n+# Native Ads Express\n+\n+[Native Ad Express](https://firebase.google.com/docs/admob/android/native-express) are similar to regular ads in the way you add them to your layout, but you can customise the look & feel using CSS in the [AdMob console](https://apps.admob.com)\n+\n+![screen shot 2017-01-05 at 15 20 35](images/native_ads_express_1.png)\n+\n+## 1. Creating the ad unit in admob.com\n+\n+First step is to create an ad unit in your admob console.\n+\n+![screen shot 2017-01-05 at 15 26 31](images/native_ads_express_2.png)\n+\n+Select native ads and choose a size template: small, medium or large.\n+![screen shot 2017-01-05 at 15 27 59](images/native_ads_express_3.png)\n+\n+\n+## 2. Adding a native express add:\n+\n+In your layout, just add:\n+\n+```xml\n+<com.google.android.gms.ads.NativeExpressAdView\n+    android:id=\"@+id/adView\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"\n+    ads:adUnitId=\"ca-app-123123123123/123123123\"\n+    ads:adSize=\"320x150\">\n+</com.google.android.gms.ads.NativeExpressAdView>\n+```\n+\n+* `adUnitId`: You get this ID from your AdMob console\n+* `adSize`: This is tricky. You can't specify `BANNER_SMART` to make it automatically adjust like in regular ads. Instead you need to provide a fixed size. Although is possible to make the width dynamic using `FULL_WIDTH`\n+\n+```xml\n+ads:adSize=\"FULL_WIDTHx150\"\n+```\n+\n+It is possible to preview how the ad would look given a size in the admob console. But you *can't* specify the sizes you'd like to work with. That is given when you select the native ad template in the first step.\n+\n+![aaa](images/native_ads_express_4.png)\n+\n+There is a table in the documentation summarising available sizes\n+\n+> A publisher who wants to display a medium template size can use widths between 280 and 1200 dp and heights from 132 to 1200 dp. That means that 300 by 200, 450 by 150, and 613 by 572 are all valid for the medium template size. Bear in mind, though, that not all sizes are likely to make for a good presentation. While it's technically possible to request a small template with a size of 1200 by 80, it's probably not the best choice! Also, be sure to consider the screen dimensions of the device on which you're displaying the ad. Larger sizes should generally be reserved for presentation on tablets.\n+\n+\n+\n+![screen shot 2017-01-05 at 15 31 37](images/native_ads_express_5.png)\n+\n+\n+## 3. Loading  a native express add:\n+\n+The process is the same as loading a regular ad:\n+\n+1. In the activity, initialise MobileAds:\n+\n+```\n+MobileAds.initialize(getApplicationContext(), getString(R.string.ad_app_id));\n+```\n+\n+2. Load the view and build a request:\n+\n+```\n+NativeExpressAdView mAdView = (NativeExpressAdView) findViewById(R.id.adViewExpress);\n+AdRequest adRequest = new AdRequest.Builder().build();\n+mAdView.loadAd(adRequest);\n+```\n+\n+To test on the emulator or local device you need to build the request specifying a test device id (you will see an error on the logs with your device id if you don't do it)\n+\n+```\n+AdRequest adRequest = new AdRequest.Builder()\n+        .addTestDevice(\"8618D8DA6DCD4458BB73B2E86F071849\")\n+        .addTestDevice(\"08F56DB244F8E9BFC78FA1DD9D427A5A\")\n+        .build();\n+mAdView.loadAd(adRequest);\n+```\n"
    },
    {
        "commit hash": "963b36fff1344c09700db9e303724735c563be2c",
        "previous commit hash": "7340b84502bd1f3373f2d7d25abc93060d08fff8",
        "diff stats": {
            "file_path": "Cookbook/images/native_ads_express_1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Cookbook/images/native_ads_express_1.png differ\n"
    },
    {
        "commit hash": "963b36fff1344c09700db9e303724735c563be2c",
        "previous commit hash": "7340b84502bd1f3373f2d7d25abc93060d08fff8",
        "diff stats": {
            "file_path": "Cookbook/images/native_ads_express_2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Cookbook/images/native_ads_express_2.png differ\n"
    },
    {
        "commit hash": "963b36fff1344c09700db9e303724735c563be2c",
        "previous commit hash": "7340b84502bd1f3373f2d7d25abc93060d08fff8",
        "diff stats": {
            "file_path": "Cookbook/images/native_ads_express_3.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Cookbook/images/native_ads_express_3.png differ\n"
    },
    {
        "commit hash": "963b36fff1344c09700db9e303724735c563be2c",
        "previous commit hash": "7340b84502bd1f3373f2d7d25abc93060d08fff8",
        "diff stats": {
            "file_path": "Cookbook/images/native_ads_express_4.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Cookbook/images/native_ads_express_4.png differ\n"
    },
    {
        "commit hash": "963b36fff1344c09700db9e303724735c563be2c",
        "previous commit hash": "7340b84502bd1f3373f2d7d25abc93060d08fff8",
        "diff stats": {
            "file_path": "Cookbook/images/native_ads_express_5.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Cookbook/images/native_ads_express_5.png differ\n"
    },
    {
        "commit hash": "f10d8645f02d9ec8d1df75d3509b1703a784f3d6",
        "previous commit hash": "23f7d1c7fcb37658541696b4aa2b12caf9a2990c",
        "diff stats": {
            "file_path": "Cookbook/README.md",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+#Description\n+===================\n+\n+A series of common coding recipes that will help you building great apps.\n+\n+##Android\n+===================\n+\n+[Change the Device Locale for Instrumentation Tests ](change_device_locale_recipe.md)\n+\n"
    },
    {
        "commit hash": "23f7d1c7fcb37658541696b4aa2b12caf9a2990c",
        "previous commit hash": "8877b8434525bdf7bd51b216b398e981849f8006",
        "diff stats": {
            "file_path": "Cookbook/change_device_locale_recipe.md",
            "additions": 8,
            "deletions": 4
        },
        "diff content": "@@ -19,10 +19,14 @@ class LocaleTestRule implements TestRule {\n         return new Statement() {\n             @Override\n             public void evaluate() throws Throwable {\n-                Locale defaultLocale = Locale.getDefault();\n-                changeLocaleTo(locale);\n-                base.evaluate();\n-                changeLocaleTo(defaultLocale);\n+               Locale defaultLocale = Locale.getDefault();\n+               try {\n+                   changeLocaleTo(locale);\n+                   base.evaluate();\n+\n+               } finally {\n+                   changeLocaleTo(defaultLocale);\n+               }\n             }\n \n             private void changeLocaleTo(Locale locale) {\n"
    },
    {
        "commit hash": "8877b8434525bdf7bd51b216b398e981849f8006",
        "previous commit hash": "34e77965759729076bf06dce9392a6e6ba41359a",
        "diff stats": {
            "file_path": "Cookbook/change_device_locale_recipe.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-Change the device local for instrumentation tests\n+Change the Device Locale for Instrumentation Tests\n ===================\n \n Internationalisation can be hard on Android so you might end up writing automated tests that should run on a `Device` with a specific `Locale`.\n"
    },
    {
        "commit hash": "34e77965759729076bf06dce9392a6e6ba41359a",
        "previous commit hash": "6b55290ce95feba0f65352aec533ca9dbac97369",
        "diff stats": {
            "file_path": "Cookbook/change_device_locale_recipe.md",
            "additions": 65,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,65 @@\n+Change the device local for instrumentation tests\n+===================\n+\n+Internationalisation can be hard on Android so you might end up writing automated tests that should run on a `Device` with a specific `Locale`.\n+\n+To avoid code duplication you can use this `TestRule`, which changes the `Locale` of a device to a given one before a test runs and afterwards back to the original one.\n+\n+```\n+class LocaleTestRule implements TestRule {\n+\n+    private final Locale locale;\n+\n+    LocaleTestRule(Locale locale) {\n+        this.locale = locale;\n+    }\n+\n+    @Override\n+    public Statement apply(final Statement base, Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                Locale defaultLocale = Locale.getDefault();\n+                changeLocaleTo(locale);\n+                base.evaluate();\n+                changeLocaleTo(defaultLocale);\n+            }\n+\n+            private void changeLocaleTo(Locale locale) {\n+                Locale.setDefault(locale);\n+\n+                Resources resources = getResources();\n+                Configuration configuration = resources.getConfiguration();\n+                configuration.setLocale(locale);\n+                resources.updateConfiguration(configuration, resources.getDisplayMetrics());\n+            }\n+        };\n+    }\n+\n+    private Resources getResources() {\n+        return InstrumentationRegistry.getInstrumentation()\n+                .getTargetContext()\n+                .getApplicationContext().getResources();\n+    }\n+}\n+```\n+\n+[JUnit TestRules](http://junit.org/junit4/javadoc/4.12/org/junit/rules/TestRule.html) were introduced with JUnit4 and allow you to perform necessary setup or cleanup for tests and can be easily shared between test classes.\n+\n+You can use this rule together with the `ActivityTestRule` in your instrumentation test.\n+\n+```\n+@RunWith(AndroidJUnit4.class)\n+public class MainActivityTest {\n+\n+    @Rule\n+    public RuleChain chain = RuleChain\n+            .outerRule(new LocaleTestRule(Locale.GERMAN))\n+            .around(new ActivityTestRule<>(MainActivity.class));\n+\n+    @Test\n+    public void test() throws Exception {\n+        // test your locale specific code here\n+    }\n+}\n+```\n"
    },
    {
        "commit hash": "964a805b81f9e450ecf93be8935d3d7da1f5a340",
        "previous commit hash": "4fe9e8b6b1ea1b6b92e7318994101aecf46bdfbb",
        "diff stats": {
            "file_path": "WearBuildConfig/README.md",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+#Demo WearBuildConfig\n+\n+WearBuildConfig demonstrates how to integrate Android Wear with a real-world mobile project with the following requirements:\n+\n+\n+* multi-dimensions flavours (`development` and `production` environments, with or without Play Services)\n+* `debug`, `release` and `QA` builds\n+* different signing keys for different build types\n+\n+The Wear APK is bundled in the mobile main APK assets only for `release` and `QA` builds, and only for builds including Play Services\n"
    },
    {
        "commit hash": "4fe9e8b6b1ea1b6b92e7318994101aecf46bdfbb",
        "previous commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "diff stats": {
            "file_path": "WearBuildConfig/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:2.2.1'\n+        classpath 'com.android.tools.build:gradle:2.2.2'\n     }\n }\n \n"
    },
    {
        "commit hash": "4fe9e8b6b1ea1b6b92e7318994101aecf46bdfbb",
        "previous commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "diff stats": {
            "file_path": "WearBuildConfig/gradle/wrapper/gradle-wrapper.properties",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.14.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-3.0-all.zip\n"
    },
    {
        "commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "previous commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "diff stats": {
            "file_path": "WearBuildConfig/build.gradle",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:2.2.1'\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        jcenter()\n+    }\n+}\n"
    },
    {
        "commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "previous commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "diff stats": {
            "file_path": "WearBuildConfig/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/WearBuildConfig/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "previous commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "diff stats": {
            "file_path": "WearBuildConfig/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Tue Dec 06 15:30:18 CET 2016\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.14.1-all.zip\n"
    },
    {
        "commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "previous commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/build.gradle",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +1,5 @@\n apply plugin: 'com.android.application'\n-apply from: rootProject.file('WearBuildConfig/shared-config/android-signing.gradle')\n+apply from: rootProject.file('shared-config/android-signing.gradle')\n \n \n android {\n@@ -64,8 +64,8 @@ configurations {\n }\n \n dependencies {\n-    developmentPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'developmentRelease')\n-    productionPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'productionRelease')\n-    developmentPlayServicesQaWearApp project(path: ':WearBuildConfigWear', configuration: 'developmentQa')\n-    productionPlayServicesQaWearApp project(path: ':WearBuildConfigWear', configuration: 'productionQa')\n+    developmentPlayServicesReleaseWearApp project(path: ':wear', configuration: 'developmentRelease')\n+    productionPlayServicesReleaseWearApp project(path: ':wear', configuration: 'productionRelease')\n+    developmentPlayServicesQaWearApp project(path: ':wear', configuration: 'developmentQa')\n+    productionPlayServicesQaWearApp project(path: ':wear', configuration: 'productionQa')\n }\n"
    },
    {
        "commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "previous commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "diff stats": {
            "file_path": "WearBuildConfig/settings.gradle",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+include ':mobile'\n+include ':wear'\n"
    },
    {
        "commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "previous commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "diff stats": {
            "file_path": "WearBuildConfig/shared-config/android-signing.gradle",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -2,19 +2,19 @@ android {\n \n     signingConfigs {\n         debug {\n-            storeFile file(\"$rootProject.projectDir/WearBuildConfig/shared-config/demo.keystore\")\n+            storeFile rootProject.file('shared-config/demo.keystore')\n             storePassword 'demo1234'\n             keyAlias 'debugkey'\n             keyPassword 'debug1234'\n         }\n         qa {\n-            storeFile file(\"$rootProject.projectDir/WearBuildConfig/shared-config/demo.keystore\")\n+            storeFile rootProject.file('shared-config/demo.keystore')\n             storePassword 'demo1234'\n             keyAlias 'qakey'\n             keyPassword 'qa1234'\n         }\n         release {\n-            storeFile file(\"$rootProject.projectDir/WearBuildConfig/shared-config/demo.keystore\")\n+            storeFile rootProject.file('shared-config/demo.keystore')\n             storePassword 'demo1234'\n             keyAlias 'releasekey'\n             keyPassword 'release1234'\n"
    },
    {
        "commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "previous commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,5 +1,5 @@\n apply plugin: 'com.android.application'\n-apply from: rootProject.file('WearBuildConfig/shared-config/android-signing.gradle')\n+apply from: rootProject.file('shared-config/android-signing.gradle')\n \n android {\n     compileSdkVersion 25\n"
    },
    {
        "commit hash": "dec78a29bfe68f851b7a63c06d1dc7fece30a882",
        "previous commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 0,
            "deletions": 4
        },
        "diff content": "@@ -26,7 +26,3 @@ include 'TabHostExample'\n include 'TabHostSelfContainedTabBrowsing'\n include 'wizard'\n include 'EditTextChips'\n-include 'WearBuildConfigMobile'\n-project(':WearBuildConfigMobile').projectDir = new File('WearBuildConfig/mobile')\n-include 'WearBuildConfigWear'\n-project(':WearBuildConfigWear').projectDir = new File('WearBuildConfig/wear')\n"
    },
    {
        "commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "previous commit hash": "6f52498c8dd6198a2f37512127f7425f7ba05397",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,5 +1,5 @@\n apply plugin: 'com.android.application'\n-apply from: \"$rootProject.projectDir/WearBuildConfig/shared-config/android-signing.gradle\"\n+apply from: rootProject.file('WearBuildConfig/shared-config/android-signing.gradle')\n \n \n android {\n"
    },
    {
        "commit hash": "3f4cf8d1d9feeb9fbc0481f72c3a28034efae44d",
        "previous commit hash": "6f52498c8dd6198a2f37512127f7425f7ba05397",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,5 +1,5 @@\n apply plugin: 'com.android.application'\n-apply from: \"$rootProject.projectDir/WearBuildConfig/shared-config/android-signing.gradle\"\n+apply from: rootProject.file('WearBuildConfig/shared-config/android-signing.gradle')\n \n android {\n     compileSdkVersion 25\n"
    },
    {
        "commit hash": "6f52498c8dd6198a2f37512127f7425f7ba05397",
        "previous commit hash": "042ae781186e2a90e089d0e5c5bf943d7af140d0",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/build.gradle",
            "additions": 6,
            "deletions": 6
        },
        "diff content": "@@ -25,8 +25,8 @@ android {\n             signingConfig signingConfigs.release\n         }\n \n-        qaRelease.initWith(buildTypes.release)\n-        qaRelease {\n+        qa.initWith(buildTypes.release)\n+        qa {\n             signingConfig signingConfigs.qa\n         }\n     }\n@@ -59,13 +59,13 @@ android {\n configurations {\n     developmentPlayServicesReleaseWearApp\n     productionPlayServicesReleaseWearApp\n-    developmentPlayServicesQaReleaseWearApp\n-    productionPlayServicesQaReleaseWearApp\n+    developmentPlayServicesQaWearApp\n+    productionPlayServicesQaWearApp\n }\n \n dependencies {\n     developmentPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'developmentRelease')\n     productionPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'productionRelease')\n-    developmentPlayServicesQaReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'developmentQaRelease')\n-    productionPlayServicesQaReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'productionQaRelease')\n+    developmentPlayServicesQaWearApp project(path: ':WearBuildConfigWear', configuration: 'developmentQa')\n+    productionPlayServicesQaWearApp project(path: ':WearBuildConfigWear', configuration: 'productionQa')\n }\n"
    },
    {
        "commit hash": "6f52498c8dd6198a2f37512127f7425f7ba05397",
        "previous commit hash": "042ae781186e2a90e089d0e5c5bf943d7af140d0",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -24,8 +24,8 @@ android {\n             signingConfig signingConfigs.release\n         }\n \n-        qaRelease.initWith(buildTypes.release)\n-        qaRelease {\n+        qa.initWith(buildTypes.release)\n+        qa {\n             signingConfig signingConfigs.qa\n         }\n     }\n"
    },
    {
        "commit hash": "042ae781186e2a90e089d0e5c5bf943d7af140d0",
        "previous commit hash": "4bb043c0500d6d7511eea468433cbb4aa348000d",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/build.gradle",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -46,7 +46,7 @@ android {\n             //uses default PLAY_SERVICES value\n         }\n \n-        preProduction {\n+        development {\n             dimension 'environment'\n         }\n \n@@ -57,15 +57,15 @@ android {\n }\n \n configurations {\n+    developmentPlayServicesReleaseWearApp\n     productionPlayServicesReleaseWearApp\n-    preProductionPlayServicesReleaseWearApp\n+    developmentPlayServicesQaReleaseWearApp\n     productionPlayServicesQaReleaseWearApp\n-    preProductionPlayServicesQaReleaseWearApp\n }\n \n dependencies {\n+    developmentPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'developmentRelease')\n     productionPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'productionRelease')\n-    preProductionPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'preProductionRelease')\n+    developmentPlayServicesQaReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'developmentQaRelease')\n     productionPlayServicesQaReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'productionQaRelease')\n-    preProductionPlayServicesQaReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'preProductionQaRelease')\n }\n"
    },
    {
        "commit hash": "042ae781186e2a90e089d0e5c5bf943d7af140d0",
        "previous commit hash": "4bb043c0500d6d7511eea468433cbb4aa348000d",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -31,7 +31,7 @@ android {\n     }\n \n     productFlavors {\n-        preProduction\n+        development\n         production\n     }\n }\n"
    },
    {
        "commit hash": "4bb043c0500d6d7511eea468433cbb4aa348000d",
        "previous commit hash": "4fb1e7a406d483546dfbe190b6d083ce3d99b026",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,6 +3,6 @@\n   package=\"com.novoda.demo.wearbuildconfig\">\n \n   <application\n-    android:label=\"Mobile application\" />\n+    android:label=\"@string/app_name\" />\n \n </manifest>\n"
    },
    {
        "commit hash": "4bb043c0500d6d7511eea468433cbb4aa348000d",
        "previous commit hash": "4fb1e7a406d483546dfbe190b6d083ce3d99b026",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/src/main/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<resources>\n+\n+  <string name=\"app_name\">Mobile Demo application</string>\n+\n+</resources>\n"
    },
    {
        "commit hash": "4bb043c0500d6d7511eea468433cbb4aa348000d",
        "previous commit hash": "4fb1e7a406d483546dfbe190b6d083ce3d99b026",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/src/main/AndroidManifest.xml",
            "additions": 11,
            "deletions": 2
        },
        "diff content": "@@ -5,8 +5,17 @@\n   <uses-feature android:name=\"android.hardware.type.watch\" />\n \n   <application\n-    android:theme=\"@android:style/Theme.DeviceDefault\"\n-    android:label=\"Watch application\">\n+    android:label=\"@string/app_name\"\n+    android:theme=\"@android:style/Theme.DeviceDefault\">\n+\n+    <activity\n+      android:name=\".DemoActivity\"\n+      android:label=\"@string/title_activity_demo\">\n+      <intent-filter>\n+        <action android:name=\"android.intent.action.MAIN\" />\n+        <category android:name=\"android.intent.category.LAUNCHER\" />\n+      </intent-filter>\n+    </activity>\n \n   </application>\n \n"
    },
    {
        "commit hash": "4bb043c0500d6d7511eea468433cbb4aa348000d",
        "previous commit hash": "4fb1e7a406d483546dfbe190b6d083ce3d99b026",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/src/main/java/com/novoda/demo/wearbuildconfig/DemoActivity.java",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+package com.novoda.demo.wearbuildconfig;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+\n+public class DemoActivity extends Activity {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_demo);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "4bb043c0500d6d7511eea468433cbb4aa348000d",
        "previous commit hash": "4fb1e7a406d483546dfbe190b6d083ce3d99b026",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/src/main/res/layout/activity_demo.xml",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:tools=\"http://schemas.android.com/tools\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  android:orientation=\"vertical\"\n+  tools:context=\"com.novoda.demo.wearbuildconfig.DemoActivity\"\n+  tools:deviceIds=\"wear_round\">\n+\n+  <TextView\n+    android:id=\"@+id/text\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"\n+    android:layout_gravity=\"center\"\n+    android:text=\"@string/hello_world\" />\n+\n+</FrameLayout>\n"
    },
    {
        "commit hash": "4bb043c0500d6d7511eea468433cbb4aa348000d",
        "previous commit hash": "4fb1e7a406d483546dfbe190b6d083ce3d99b026",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/src/main/res/values/strings.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<resources>\n+\n+  <string name=\"app_name\">Watch Demo application</string>\n+  <string name=\"title_activity_demo\">Demo Activity</string>\n+  <string name=\"hello_world\">Hello Watch World!</string>\n+\n+</resources>\n"
    },
    {
        "commit hash": "4fb1e7a406d483546dfbe190b6d083ce3d99b026",
        "previous commit hash": "50683b0ecdf6c04620ca0c693fb7f8c4b0ba661b",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/build.gradle",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -59,9 +59,13 @@ android {\n configurations {\n     productionPlayServicesReleaseWearApp\n     preProductionPlayServicesReleaseWearApp\n+    productionPlayServicesQaReleaseWearApp\n+    preProductionPlayServicesQaReleaseWearApp\n }\n \n dependencies {\n     productionPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'productionRelease')\n     preProductionPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'preProductionRelease')\n+    productionPlayServicesQaReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'productionQaRelease')\n+    preProductionPlayServicesQaReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'preProductionQaRelease')\n }\n"
    },
    {
        "commit hash": "50683b0ecdf6c04620ca0c693fb7f8c4b0ba661b",
        "previous commit hash": "77ae77ef5cbbc413396dece152daf1f2ad3ee5a0",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/build.gradle",
            "additions": 15,
            "deletions": 2
        },
        "diff content": "@@ -1,4 +1,7 @@\n apply plugin: 'com.android.application'\n+apply from: \"$rootProject.projectDir/WearBuildConfig/shared-config/android-signing.gradle\"\n+\n+\n android {\n     compileSdkVersion 25\n     buildToolsVersion \"25.0.0\"\n@@ -14,8 +17,18 @@ android {\n     }\n \n     buildTypes {\n-        debug\n-        release\n+        debug {\n+            signingConfig signingConfigs.debug\n+        }\n+\n+        release {\n+            signingConfig signingConfigs.release\n+        }\n+\n+        qaRelease.initWith(buildTypes.release)\n+        qaRelease {\n+            signingConfig signingConfigs.qa\n+        }\n     }\n \n     productFlavors {\n"
    },
    {
        "commit hash": "50683b0ecdf6c04620ca0c693fb7f8c4b0ba661b",
        "previous commit hash": "77ae77ef5cbbc413396dece152daf1f2ad3ee5a0",
        "diff stats": {
            "file_path": "WearBuildConfig/shared-config/android-signing.gradle",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+android {\n+\n+    signingConfigs {\n+        debug {\n+            storeFile file(\"$rootProject.projectDir/WearBuildConfig/shared-config/demo.keystore\")\n+            storePassword 'demo1234'\n+            keyAlias 'debugkey'\n+            keyPassword 'debug1234'\n+        }\n+        qa {\n+            storeFile file(\"$rootProject.projectDir/WearBuildConfig/shared-config/demo.keystore\")\n+            storePassword 'demo1234'\n+            keyAlias 'qakey'\n+            keyPassword 'qa1234'\n+        }\n+        release {\n+            storeFile file(\"$rootProject.projectDir/WearBuildConfig/shared-config/demo.keystore\")\n+            storePassword 'demo1234'\n+            keyAlias 'releasekey'\n+            keyPassword 'release1234'\n+        }\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "50683b0ecdf6c04620ca0c693fb7f8c4b0ba661b",
        "previous commit hash": "77ae77ef5cbbc413396dece152daf1f2ad3ee5a0",
        "diff stats": {
            "file_path": "WearBuildConfig/shared-config/demo.keystore",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/WearBuildConfig/shared-config/demo.keystore differ\n"
    },
    {
        "commit hash": "50683b0ecdf6c04620ca0c693fb7f8c4b0ba661b",
        "previous commit hash": "77ae77ef5cbbc413396dece152daf1f2ad3ee5a0",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/build.gradle",
            "additions": 14,
            "deletions": 2
        },
        "diff content": "@@ -1,4 +1,6 @@\n apply plugin: 'com.android.application'\n+apply from: \"$rootProject.projectDir/WearBuildConfig/shared-config/android-signing.gradle\"\n+\n android {\n     compileSdkVersion 25\n     buildToolsVersion \"25.0.0\"\n@@ -14,8 +16,18 @@ android {\n     }\n \n     buildTypes {\n-        debug\n-        release\n+        debug {\n+            signingConfig signingConfigs.debug\n+        }\n+\n+        release {\n+            signingConfig signingConfigs.release\n+        }\n+\n+        qaRelease.initWith(buildTypes.release)\n+        qaRelease {\n+            signingConfig signingConfigs.qa\n+        }\n     }\n \n     productFlavors {\n"
    },
    {
        "commit hash": "77ae77ef5cbbc413396dece152daf1f2ad3ee5a0",
        "previous commit hash": "aeb420e725eecf8be19ecac6a42be612baa37561",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/build.gradle",
            "additions": 38,
            "deletions": 1
        },
        "diff content": "@@ -9,9 +9,46 @@ android {\n         targetSdkVersion 25\n         versionCode 1\n         versionName \"1.0\"\n+\n+        buildConfigField 'boolean', 'PLAY_SERVICES', \"true\"\n+    }\n+\n+    buildTypes {\n+        debug\n+        release\n     }\n+\n+    productFlavors {\n+\n+        flavorDimensions 'environment', 'playServices'\n+\n+        noPlayServices {\n+            dimension 'playServices'\n+\n+            buildConfigField 'boolean', 'PLAY_SERVICES', 'false'\n+        }\n+\n+        playServices {\n+            dimension 'playServices'\n+            //uses default PLAY_SERVICES value\n+        }\n+\n+        preProduction {\n+            dimension 'environment'\n+        }\n+\n+        production {\n+            dimension 'environment'\n+        }\n+    }\n+}\n+\n+configurations {\n+    productionPlayServicesReleaseWearApp\n+    preProductionPlayServicesReleaseWearApp\n }\n \n dependencies {\n-    wearApp project(':WearBuildConfigWear')\n+    productionPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'productionRelease')\n+    preProductionPlayServicesReleaseWearApp project(path: ':WearBuildConfigWear', configuration: 'preProductionRelease')\n }\n"
    },
    {
        "commit hash": "77ae77ef5cbbc413396dece152daf1f2ad3ee5a0",
        "previous commit hash": "aeb420e725eecf8be19ecac6a42be612baa37561",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/build.gradle",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -3,6 +3,8 @@ android {\n     compileSdkVersion 25\n     buildToolsVersion \"25.0.0\"\n \n+    publishNonDefault true\n+\n     defaultConfig {\n         applicationId \"com.novoda.demo.wearbuildconfig\"\n         minSdkVersion 21\n@@ -10,5 +12,15 @@ android {\n         versionCode 1\n         versionName \"1.0\"\n     }\n+\n+    buildTypes {\n+        debug\n+        release\n+    }\n+\n+    productFlavors {\n+        preProduction\n+        production\n+    }\n }\n \n"
    },
    {
        "commit hash": "aeb420e725eecf8be19ecac6a42be612baa37561",
        "previous commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/build.gradle",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+apply plugin: 'com.android.application'\n+android {\n+    compileSdkVersion 25\n+    buildToolsVersion \"25.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.demo.wearbuildconfig\"\n+        minSdkVersion 16\n+        targetSdkVersion 25\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n+dependencies {\n+    wearApp project(':WearBuildConfigWear')\n+}\n"
    },
    {
        "commit hash": "aeb420e725eecf8be19ecac6a42be612baa37561",
        "previous commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "diff stats": {
            "file_path": "WearBuildConfig/mobile/src/main/AndroidManifest.xml",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  package=\"com.novoda.demo.wearbuildconfig\">\n+\n+  <application\n+    android:label=\"Mobile application\" />\n+\n+</manifest>\n"
    },
    {
        "commit hash": "aeb420e725eecf8be19ecac6a42be612baa37561",
        "previous commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/build.gradle",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+apply plugin: 'com.android.application'\n+android {\n+    compileSdkVersion 25\n+    buildToolsVersion \"25.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.demo.wearbuildconfig\"\n+        minSdkVersion 21\n+        targetSdkVersion 25\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n"
    },
    {
        "commit hash": "aeb420e725eecf8be19ecac6a42be612baa37561",
        "previous commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "diff stats": {
            "file_path": "WearBuildConfig/wear/src/main/AndroidManifest.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  package=\"com.novoda.demo.wearbuildconfig\">\n+\n+  <uses-feature android:name=\"android.hardware.type.watch\" />\n+\n+  <application\n+    android:theme=\"@android:style/Theme.DeviceDefault\"\n+    android:label=\"Watch application\">\n+\n+  </application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "aeb420e725eecf8be19ecac6a42be612baa37561",
        "previous commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -26,3 +26,7 @@ include 'TabHostExample'\n include 'TabHostSelfContainedTabBrowsing'\n include 'wizard'\n include 'EditTextChips'\n+include 'WearBuildConfigMobile'\n+project(':WearBuildConfigMobile').projectDir = new File('WearBuildConfig/mobile')\n+include 'WearBuildConfigWear'\n+project(':WearBuildConfigWear').projectDir = new File('WearBuildConfig/wear')\n"
    },
    {
        "commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "previous commit hash": "6109f9b4394f306771382c52faf3422b3e390df1",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:1.0.0'\n+        classpath 'com.android.tools.build:gradle:2.2.1'\n     }\n }\n \n"
    },
    {
        "commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "previous commit hash": "6109f9b4394f306771382c52faf3422b3e390df1",
        "diff stats": {
            "file_path": "Sandbox/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -5,7 +5,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:2.0.0'\n+        classpath 'com.android.tools.build:gradle:2.2.1'\n \n         // NOTE: Do not place your application dependencies here; they belong\n         // in the individual module build.gradle files\n"
    },
    {
        "commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "previous commit hash": "6109f9b4394f306771382c52faf3422b3e390df1",
        "diff stats": {
            "file_path": "build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:2.2.0-alpha6'\n+        classpath 'com.android.tools.build:gradle:2.2.1'\n     }\n }\n \n"
    },
    {
        "commit hash": "3c289313961558e02b4375a005ff8594dc931254",
        "previous commit hash": "6109f9b4394f306771382c52faf3422b3e390df1",
        "diff stats": {
            "file_path": "gradle/wrapper/gradle-wrapper.properties",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,6 +1,6 @@\n-#Tue Jan 06 15:56:11 GMT 2015\n+#Tue Dec 06 15:30:18 CET 2016\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.14-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.14.1-all.zip\n"
    },
    {
        "commit hash": "b82e416c4bc921a34dd1a0872c7eaa0016b27111",
        "previous commit hash": "fbbad87694ba48ede0c523ffb53c30171b5702eb",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/HintSafeTextWatcher.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -8,7 +8,7 @@ public abstract class HintSafeTextWatcher implements TextWatcher {\n     private boolean selfUpdateInProgress;\n \n     /**\n-     * According to the documentation it's modifying the text from this method is an error so we don't need to worry.\n+     * According to the documentation modifying the text from this method is an error so we don't need to worry.\n      */\n     @Override\n     public final void beforeTextChanged(CharSequence text, int start, int count, int after) {\n@@ -16,7 +16,7 @@ public abstract class HintSafeTextWatcher implements TextWatcher {\n     }\n \n     /**\n-     * According to the documentation it's modifying the text from this method is an error so we don't need to worry.\n+     * According to the documentation modifying the text from this method is an error so we don't need to worry.\n      */\n     @Override\n     public final void onTextChanged(CharSequence text, int start, int before, int count) {\n"
    },
    {
        "commit hash": "fbbad87694ba48ede0c523ffb53c30171b5702eb",
        "previous commit hash": "3fb5423dc57fc6c2a87c9c8731437eedefdc7a03",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/TagsView.java",
            "additions": 7,
            "deletions": 3
        },
        "diff content": "@@ -63,8 +63,8 @@ public class TagsView extends TokenCompleteTextView<Tag> {\n     protected void onSelectionChanged(int selStart, int selEnd) {\n         super.onSelectionChanged(selStart, selEnd);\n         if (isHintVisible() && isSelectingHint(selStart)) {\n-            //Don't let users select the hint\n-            setSelection(getText().length() - suffixHint.length());\n+            // Don't let users select the hint\n+            setSelection(hintStartPosition());\n         }\n     }\n \n@@ -73,7 +73,11 @@ public class TagsView extends TokenCompleteTextView<Tag> {\n     }\n \n     private boolean isSelectingHint(int selStart) {\n-        return selStart >= getText().length() - suffixHint.length();\n+        return selStart >= hintStartPosition();\n+    }\n+\n+    private int hintStartPosition() {\n+        return getText().length() - suffixHint.length();\n     }\n \n }\n"
    },
    {
        "commit hash": "3fb5423dc57fc6c2a87c9c8731437eedefdc7a03",
        "previous commit hash": "8046c8108d8667e8d44cffae94f4bcb7e86b5d00",
        "diff stats": {
            "file_path": "EditTextChips/build.gradle",
            "additions": 0,
            "deletions": 6
        },
        "diff content": "@@ -1,11 +1,5 @@\n apply plugin: 'com.android.application'\n \n-repositories {\n-    maven {\n-      url 'http://dl.bintray.com/novoda/maven'\n-    }\n-}\n-\n dependencies {\n   compile 'com.eyeem.chips:library:0.9.0@aar'\n   compile 'com.android.support:appcompat-v7:24.1.1'\n"
    },
    {
        "commit hash": "8046c8108d8667e8d44cffae94f4bcb7e86b5d00",
        "previous commit hash": "6b9ad5f3741b6ff8c049c4a83373bbfe2a970e38",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/HintTextWatcher.java",
            "additions": 28,
            "deletions": 18
        },
        "diff content": "@@ -21,44 +21,54 @@ class HintTextWatcher extends HintSafeTextWatcher {\n     @Override\n     protected void onTextChanged(Editable text) {\n         String rawText = text.toString();\n-        if (!textContainsHint(text) && (rawText.isEmpty() || containsSpansOnly(rawText))) {\n+        if (!textContainsHint(text) && isNotCurrentlyTyping(rawText)) {\n             addHint(text);\n-        } else if (doesNotContainJustSpansAndHint(text)) {\n+        } else if (textContainsHint(text) && isCurrentlyTyping(text)) {\n             removeHint(text);\n         }\n     }\n \n-    private boolean containsSpansOnly(String rawText) {\n-        return rawText.matches(\"(( )*,, )*\");\n-    }\n-\n     boolean textContainsHint(Editable text) {\n         if (text.length() < suffixHint.length()) {\n             return false;\n         }\n-        return text.getSpans(text.length() - suffixHint.length(), text.length(), HintSpan.class).length > 0;\n+        return text.getSpans(hintStartPosition(text), text.length(), HintSpan.class).length > 0;\n     }\n \n+    private int hintStartPosition(Editable text) {\n+        return text.length() - suffixHint.length();\n+    }\n \n-    private boolean doesNotContainJustSpansAndHint(Editable text) {\n-        if (textContainsHint(text)) {\n-            String rawText = text.toString();\n-            String rawTextWithoutHint = rawText.substring(0, rawText.length() - suffixHint.length());\n-            return !containsSpansOnly(rawTextWithoutHint);\n-        } else {\n-            return false;\n-        }\n+    private boolean isNotCurrentlyTyping(String rawText) {\n+        // means either the text is empty or we have only tokens (no half-written stuff)\n+        return rawText.isEmpty() || containsSpansOnly(rawText);\n+    }\n+\n+    private boolean containsSpansOnly(String rawText) {\n+        // doesn't take into account the hint, just tokens\n+        return rawText.matches(\"(( )*,, )*\");\n+    }\n+\n+    private boolean isCurrentlyTyping(Editable text) {\n+        // in the middle of typing (there's text that isn't a token yet)\n+        return doesNotContainJustSpans(text);\n+    }\n+\n+    private boolean doesNotContainJustSpans(Editable text) {\n+        String rawText = text.toString();\n+        String rawTextWithoutHint = rawText.substring(0, rawText.length() - suffixHint.length());\n+        return !containsSpansOnly(rawTextWithoutHint);\n     }\n \n     void addHint(Editable text) {\n         text.insert(text.length(), suffixHint);\n-        text.setSpan(suffixHintSpannable, text.length() - suffixHint.length(), text.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n-        tagsView.setSelection(text.length() - suffixHint.length());\n+        text.setSpan(suffixHintSpannable, hintStartPosition(text), text.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n+        tagsView.setSelection(hintStartPosition(text));\n     }\n \n     private void removeHint(Editable text) {\n         text.removeSpan(suffixHintSpannable);\n-        text.replace(text.length() - suffixHint.length(), text.length(), \"\");\n+        text.replace(hintStartPosition(text), text.length(), \"\");\n     }\n \n     boolean isHintVisible(Editable text) {\n"
    },
    {
        "commit hash": "6b9ad5f3741b6ff8c049c4a83373bbfe2a970e38",
        "previous commit hash": "d44e76ec07d40bc41e64b02f0a6678c0d1ccc85c",
        "diff stats": {
            "file_path": "EditTextChips/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,6 @@\n <manifest package=\"com.novoda.demo.edittextchips\"\n     xmlns:android=\"http://schemas.android.com/apk/res/android\">\n \n-    <uses-permission android:name=\"android.permission.READ_CONTACTS\" />\n     <application\n         android:icon=\"@drawable/icon\"\n         android:label=\"@string/app_name\"\n"
    },
    {
        "commit hash": "d44e76ec07d40bc41e64b02f0a6678c0d1ccc85c",
        "previous commit hash": "d3b70eed4faf894fc4feaaf8188bfc1974cd5cae",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/eyeem/EyeemActivity.java",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -15,7 +15,7 @@ import java.util.ArrayList;\n \n public class EyeemActivity extends Activity {\n \n-    private static final ArrayList<String> YOLO_SUGGESTIONS = new ArrayList<String>() {{\n+    private static final ArrayList<String> TAG_SUGGESTIONS = new ArrayList<String>() {{\n         add(\"tagWeir\");\n         add(\"tagSmith\");\n         add(\"tagJordan\");\n@@ -50,12 +50,12 @@ public class EyeemActivity extends Activity {\n         return new ChipsEditText.AutocompleteResolver() {\n             @Override\n             public ArrayList<String> getSuggestions(String query) throws Exception {\n-                return YOLO_SUGGESTIONS;\n+                return TAG_SUGGESTIONS;\n             }\n \n             @Override\n             public ArrayList<String> getDefaultSuggestions() {\n-                return YOLO_SUGGESTIONS;\n+                return TAG_SUGGESTIONS;\n             }\n         };\n     }\n"
    },
    {
        "commit hash": "d3b70eed4faf894fc4feaaf8188bfc1974cd5cae",
        "previous commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/HintTextWatcher.java",
            "additions": 5,
            "deletions": 5
        },
        "diff content": "@@ -6,14 +6,14 @@ import com.tokenautocomplete.HintSpan;\n import android.text.Editable;\n import android.text.Spanned;\n \n-class SplitwiseHintTextWatcher extends HintSafeTextWatcher {\n+class HintTextWatcher extends HintSafeTextWatcher {\n \n-    private SplitwiseTagsView splitwiseTagsView;\n+    private final TagsView tagsView;\n     private final CharSequence suffixHint;\n     private final HintSpan suffixHintSpannable;\n \n-    SplitwiseHintTextWatcher(SplitwiseTagsView splitwiseTagsView, CharSequence suffixHint, HintSpan suffixHintSpannable) {\n-        this.splitwiseTagsView = splitwiseTagsView;\n+    HintTextWatcher(TagsView tagsView, CharSequence suffixHint, HintSpan suffixHintSpannable) {\n+        this.tagsView = tagsView;\n         this.suffixHint = suffixHint;\n         this.suffixHintSpannable = suffixHintSpannable;\n     }\n@@ -53,7 +53,7 @@ class SplitwiseHintTextWatcher extends HintSafeTextWatcher {\n     void addHint(Editable text) {\n         text.insert(text.length(), suffixHint);\n         text.setSpan(suffixHintSpannable, text.length() - suffixHint.length(), text.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n-        splitwiseTagsView.setSelection(text.length() - suffixHint.length());\n+        tagsView.setSelection(text.length() - suffixHint.length());\n     }\n \n     private void removeHint(Editable text) {\n"
    },
    {
        "commit hash": "d3b70eed4faf894fc4feaaf8188bfc1974cd5cae",
        "previous commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/SplitwiseActivity.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -29,7 +29,7 @@ public class SplitwiseActivity extends Activity {\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_splitwise);\n-        SplitwiseTagsView tagsView = (SplitwiseTagsView) findViewById(R.id.tags);\n+        TagsView tagsView = (TagsView) findViewById(R.id.tags);\n \n         tagsView.setTokenClickStyle(TokenCompleteTextView.TokenClickStyle.SelectDeselect);\n         tagsView.setDeletionStyle(TokenCompleteTextView.TokenDeleteStyle.SelectThenDelete);\n"
    },
    {
        "commit hash": "d3b70eed4faf894fc4feaaf8188bfc1974cd5cae",
        "previous commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/TagViewAdapter.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -9,11 +9,11 @@ import android.view.View;\n import android.view.ViewGroup;\n import android.view.inputmethod.InputMethodManager;\n \n-class SplitwiseTagViewAdapter {\n+class TagViewAdapter {\n \n     private final Context context;\n \n-    SplitwiseTagViewAdapter(Context context) {\n+    TagViewAdapter(Context context) {\n         this.context = context;\n     }\n \n"
    },
    {
        "commit hash": "d3b70eed4faf894fc4feaaf8188bfc1974cd5cae",
        "previous commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/TagsView.java",
            "additions": 6,
            "deletions": 6
        },
        "diff content": "@@ -9,23 +9,23 @@ import android.util.AttributeSet;\n import android.view.View;\n import android.view.ViewGroup;\n \n-public class SplitwiseTagsView extends TokenCompleteTextView<Tag> {\n+public class TagsView extends TokenCompleteTextView<Tag> {\n \n     private final CharSequence suffixHint;\n-    private final SplitwiseHintTextWatcher hintTextWatcher;\n-    private final SplitwiseTagViewAdapter adapter;\n+    private final HintTextWatcher hintTextWatcher;\n+    private final TagViewAdapter adapter;\n \n-    public SplitwiseTagsView(Context context, AttributeSet attrs) {\n+    public TagsView(Context context, AttributeSet attrs) {\n         super(context, attrs);\n         suffixHint = getHint();\n         HintSpan suffixHintSpannable = new HintSpan(null, hintStyle(), (int) getTextSize(), getHintTextColors(), getHintTextColors());\n-        hintTextWatcher = new SplitwiseHintTextWatcher(this, suffixHint, suffixHintSpannable);\n+        hintTextWatcher = new HintTextWatcher(this, suffixHint, suffixHintSpannable);\n \n         hintTextWatcher.addHint(getText());\n         addTextChangedListener(hintTextWatcher);\n         setHint(\"\");\n \n-        adapter = new SplitwiseTagViewAdapter(context);\n+        adapter = new TagViewAdapter(context);\n     }\n \n     private int hintStyle() {\n"
    },
    {
        "commit hash": "d3b70eed4faf894fc4feaaf8188bfc1974cd5cae",
        "previous commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/activity_splitwise.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -5,7 +5,7 @@\n     android:gravity=\"bottom\"\n     android:orientation=\"vertical\">\n \n-    <com.novoda.demo.edittextchips.splitwise.SplitwiseTagsView\n+    <com.novoda.demo.edittextchips.splitwise.TagsView\n         android:id=\"@+id/tags\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"wrap_content\"\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/AndroidManifest.xml",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -18,11 +18,11 @@\n         </activity>\n \n         <activity\n-            android:name=\"com.novoda.demo.edittextchips.EyeemActivity\"\n+            android:name=\"com.novoda.demo.edittextchips.eyeem.EyeemActivity\"\n             android:label=\"@string/eyeem\" />\n \n         <activity\n-            android:name=\"com.novoda.demo.edittextchips.SplitwiseActivity\"\n+            android:name=\"com.novoda.demo.edittextchips.splitwise.SplitwiseActivity\"\n             android:label=\"@string/splitwise\" />\n \n     </application>\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/HintSafeTextWatcher.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -3,7 +3,7 @@ package com.novoda.demo.edittextchips;\n import android.text.Editable;\n import android.text.TextWatcher;\n \n-abstract class HintSafeTextWatcher implements TextWatcher {\n+public abstract class HintSafeTextWatcher implements TextWatcher {\n \n     private boolean selfUpdateInProgress;\n \n@@ -36,6 +36,6 @@ abstract class HintSafeTextWatcher implements TextWatcher {\n         selfUpdateInProgress = false;\n     }\n \n-    abstract void onTextChanged(Editable text);\n+    protected abstract void onTextChanged(Editable text);\n \n }\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/MainActivity.java",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,5 +1,8 @@\n package com.novoda.demo.edittextchips;\n \n+import com.novoda.demo.edittextchips.eyeem.EyeemActivity;\n+import com.novoda.demo.edittextchips.splitwise.SplitwiseActivity;\n+\n import android.app.Activity;\n import android.content.Intent;\n import android.os.Bundle;\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/eyeem/EyeemActivity.java",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -1,7 +1,8 @@\n-package com.novoda.demo.edittextchips;\n+package com.novoda.demo.edittextchips.eyeem;\n \n import com.eyeem.chips.AutocompletePopover;\n import com.eyeem.chips.ChipsEditText;\n+import com.novoda.demo.edittextchips.R;\n \n import android.app.Activity;\n import android.content.Context;\n@@ -26,7 +27,7 @@ public class EyeemActivity extends Activity {\n     private ChipsEditText chips;\n     private AutocompletePopover popover;\n \n-    static Intent intent(Context context) {\n+    public static Intent intent(Context context) {\n         return new Intent(context, EyeemActivity.class);\n     }\n \n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/SplitwiseActivity.java",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -1,5 +1,6 @@\n-package com.novoda.demo.edittextchips;\n+package com.novoda.demo.edittextchips.splitwise;\n \n+import com.novoda.demo.edittextchips.R;\n import com.tokenautocomplete.FilteredArrayAdapter;\n import com.tokenautocomplete.TokenCompleteTextView;\n \n@@ -20,7 +21,7 @@ public class SplitwiseActivity extends Activity {\n     };\n     private static final char[] SPLIT_CHARS = new char[]{',', ';', '\\n'};\n \n-    static Intent intent(Context context) {\n+    public static Intent intent(Context context) {\n         return new Intent(context, SplitwiseActivity.class);\n     }\n \n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/SplitwiseHintTextWatcher.java",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -1,5 +1,6 @@\n-package com.novoda.demo.edittextchips;\n+package com.novoda.demo.edittextchips.splitwise;\n \n+import com.novoda.demo.edittextchips.HintSafeTextWatcher;\n import com.tokenautocomplete.HintSpan;\n \n import android.text.Editable;\n@@ -18,7 +19,7 @@ class SplitwiseHintTextWatcher extends HintSafeTextWatcher {\n     }\n \n     @Override\n-    void onTextChanged(Editable text) {\n+    protected void onTextChanged(Editable text) {\n         String rawText = text.toString();\n         if (!textContainsHint(text) && (rawText.isEmpty() || containsSpansOnly(rawText))) {\n             addHint(text);\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/SplitwiseTagViewAdapter.java",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,6 @@\n-package com.novoda.demo.edittextchips;\n+package com.novoda.demo.edittextchips.splitwise;\n+\n+import com.novoda.demo.edittextchips.R;\n \n import android.app.Activity;\n import android.content.Context;\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/SplitwiseTagsView.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-package com.novoda.demo.edittextchips;\n+package com.novoda.demo.edittextchips.splitwise;\n \n import com.tokenautocomplete.HintSpan;\n import com.tokenautocomplete.TokenCompleteTextView;\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/Tag.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-package com.novoda.demo.edittextchips;\n+package com.novoda.demo.edittextchips.splitwise;\n \n import java.io.Serializable;\n \n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/splitwise/TagView.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-package com.novoda.demo.edittextchips;\n+package com.novoda.demo.edittextchips.splitwise;\n \n import android.content.Context;\n import android.util.AttributeSet;\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/activity_splitwise.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -5,7 +5,7 @@\n     android:gravity=\"bottom\"\n     android:orientation=\"vertical\">\n \n-    <com.novoda.demo.edittextchips.SplitwiseTagsView\n+    <com.novoda.demo.edittextchips.splitwise.SplitwiseTagsView\n         android:id=\"@+id/tags\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"wrap_content\"\n"
    },
    {
        "commit hash": "19c78e76f143d7aadb26b956db396e15b1d9fe40",
        "previous commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/item_view_tag.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<com.novoda.demo.edittextchips.TagView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+<com.novoda.demo.edittextchips.splitwise.TagView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     android:id=\"@+id/name\"\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n"
    },
    {
        "commit hash": "203db0d601d7a93515a324d998c1e2e73c646bec",
        "previous commit hash": "d24149c6398809ef7d7a4c7392b9afcdd84843e8",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseHintTextWatcher.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -28,7 +28,7 @@ class SplitwiseHintTextWatcher extends HintSafeTextWatcher {\n     }\n \n     private boolean containsSpansOnly(String rawText) {\n-        return rawText.matches(\"( )*(,, )*\");\n+        return rawText.matches(\"(( )*,, )*\");\n     }\n \n     boolean textContainsHint(Editable text) {\n"
    },
    {
        "commit hash": "d24149c6398809ef7d7a4c7392b9afcdd84843e8",
        "previous commit hash": "fd1a112d4958b5b6e516547d8b2114a0f6581fc8",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseActivity.java",
            "additions": 1,
            "deletions": 23
        },
        "diff content": "@@ -8,8 +8,6 @@ import android.content.Context;\n import android.content.Intent;\n import android.os.Bundle;\n \n-import java.io.Serializable;\n-\n public class SplitwiseActivity extends Activity {\n \n     private static final Tag[] TAGS = new Tag[]{\n@@ -33,33 +31,13 @@ public class SplitwiseActivity extends Activity {\n         SplitwiseTagsView tagsView = (SplitwiseTagsView) findViewById(R.id.tags);\n \n         tagsView.setTokenClickStyle(TokenCompleteTextView.TokenClickStyle.SelectDeselect);\n-        tagsView.setDeletionStyle(TokenCompleteTextView.TokenDeleteStyle.Clear); // TODO: fix this\n+        tagsView.setDeletionStyle(TokenCompleteTextView.TokenDeleteStyle.SelectThenDelete);\n         tagsView.setSplitChar(SPLIT_CHARS);\n \n         tagsView.setAdapter(new TagAdapter(this, android.R.layout.simple_list_item_1, TAGS));\n         tagsView.allowDuplicates(false);\n     }\n \n-    // If your objects cannot be made Serializable, please look at\n-    // https://github.com/splitwise/TokenAutoComplete#restoring-the-view-state\n-    static class Tag implements Serializable {\n-\n-        private final String name;\n-\n-        Tag(String name) {\n-            this.name = name;\n-        }\n-\n-        String getName() {\n-            return name;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return \"#\" + getName();\n-        }\n-    }\n-\n     private static class TagAdapter extends FilteredArrayAdapter<Tag> {\n \n         TagAdapter(Context context, int resource, Tag[] objects) {\n"
    },
    {
        "commit hash": "d24149c6398809ef7d7a4c7392b9afcdd84843e8",
        "previous commit hash": "fd1a112d4958b5b6e516547d8b2114a0f6581fc8",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagViewAdapter.java",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.inputmethod.InputMethodManager;\n+\n+class SplitwiseTagViewAdapter {\n+\n+    private final Context context;\n+\n+    SplitwiseTagViewAdapter(Context context) {\n+        this.context = context;\n+    }\n+\n+    View getView(Tag tag, final ViewGroup container) {\n+        LayoutInflater l = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\n+        TagView view = (TagView) l.inflate(R.layout.item_view_tag, container, false);\n+        view.setText(tag.toString());\n+        view.setOnSelectedListener(new TagView.OnSelectedListener() {\n+            @Override\n+            public void onSelected() {\n+                showKeyboard(container);\n+            }\n+        });\n+        return view;\n+    }\n+\n+    private void showKeyboard(ViewGroup container) {\n+        InputMethodManager imm = ((InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE));\n+        imm.showSoftInput(container.findViewById(R.id.tags), 0);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "d24149c6398809ef7d7a4c7392b9afcdd84843e8",
        "previous commit hash": "fd1a112d4958b5b6e516547d8b2114a0f6581fc8",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagsView.java",
            "additions": 26,
            "deletions": 29
        },
        "diff content": "@@ -3,19 +3,17 @@ package com.novoda.demo.edittextchips;\n import com.tokenautocomplete.HintSpan;\n import com.tokenautocomplete.TokenCompleteTextView;\n \n-import android.app.Activity;\n import android.content.Context;\n import android.graphics.Typeface;\n import android.util.AttributeSet;\n-import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n-import android.widget.TextView;\n \n-public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.Tag> {\n+public class SplitwiseTagsView extends TokenCompleteTextView<Tag> {\n \n     private final CharSequence suffixHint;\n     private final SplitwiseHintTextWatcher hintTextWatcher;\n+    private final SplitwiseTagViewAdapter adapter;\n \n     public SplitwiseTagsView(Context context, AttributeSet attrs) {\n         super(context, attrs);\n@@ -26,6 +24,8 @@ public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.T\n         hintTextWatcher.addHint(getText());\n         addTextChangedListener(hintTextWatcher);\n         setHint(\"\");\n+\n+        adapter = new SplitwiseTagViewAdapter(context);\n     }\n \n     private int hintStyle() {\n@@ -38,36 +38,16 @@ public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.T\n     }\n \n     @Override\n-    protected void onSelectionChanged(int selStart, int selEnd) {\n-        super.onSelectionChanged(selStart, selEnd);\n-        if (isHintVisible() && isSelectingHint(selStart)) {\n-            //Don't let users select the hint\n-            setSelection(getText().length() - suffixHint.length());\n-        }\n-    }\n-\n-    private boolean isHintVisible() {\n-        return hintTextWatcher != null && hintTextWatcher.isHintVisible(getText());\n-    }\n-\n-    private boolean isSelectingHint(int selStart) {\n-        return selStart >= getText().length() - suffixHint.length();\n-    }\n-\n-    @Override\n-    protected View getViewForObject(SplitwiseActivity.Tag tag) {\n-        LayoutInflater l = (LayoutInflater) getContext().getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\n-        TextView view = (TextView) l.inflate(R.layout.item_view_tag, (ViewGroup) getParent(), false);\n-        view.setText(tag.toString());\n-        return view;\n+    protected View getViewForObject(Tag tag) {\n+        return adapter.getView(tag, (ViewGroup) getParent());\n     }\n \n     @Override\n-    protected SplitwiseActivity.Tag defaultObject(String completionText) {\n+    protected Tag defaultObject(String completionText) {\n         if (completionText.startsWith(\"#\")) {\n-            return new SplitwiseActivity.Tag(completionText.replaceFirst(\"#\", \"\"));\n+            return new Tag(completionText.replaceFirst(\"#\", \"\"));\n         } else {\n-            return new SplitwiseActivity.Tag(completionText);\n+            return new Tag(completionText);\n         }\n     }\n \n@@ -79,4 +59,21 @@ public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.T\n         return super.enoughToFilter();\n     }\n \n+    @Override\n+    protected void onSelectionChanged(int selStart, int selEnd) {\n+        super.onSelectionChanged(selStart, selEnd);\n+        if (isHintVisible() && isSelectingHint(selStart)) {\n+            //Don't let users select the hint\n+            setSelection(getText().length() - suffixHint.length());\n+        }\n+    }\n+\n+    private boolean isHintVisible() {\n+        return hintTextWatcher != null && hintTextWatcher.isHintVisible(getText());\n+    }\n+\n+    private boolean isSelectingHint(int selStart) {\n+        return selStart >= getText().length() - suffixHint.length();\n+    }\n+\n }\n"
    },
    {
        "commit hash": "d24149c6398809ef7d7a4c7392b9afcdd84843e8",
        "previous commit hash": "fd1a112d4958b5b6e516547d8b2114a0f6581fc8",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/Tag.java",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+package com.novoda.demo.edittextchips;\n+\n+import java.io.Serializable;\n+\n+// If your objects cannot be made Serializable, please look at\n+// https://github.com/splitwise/TokenAutoComplete#restoring-the-view-state\n+class Tag implements Serializable {\n+\n+    private final String name;\n+\n+    Tag(String name) {\n+        this.name = name;\n+    }\n+\n+    String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"#\" + getName();\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "d24149c6398809ef7d7a4c7392b9afcdd84843e8",
        "previous commit hash": "fd1a112d4958b5b6e516547d8b2114a0f6581fc8",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/TagView.java",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.widget.TextView;\n+\n+public class TagView extends TextView {\n+\n+    private OnSelectedListener listener;\n+\n+    public TagView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    @Override\n+    public void setSelected(boolean selected) {\n+        super.setSelected(selected);\n+        if (selected && listener != null) {\n+            listener.onSelected();\n+        }\n+    }\n+\n+    void setOnSelectedListener(OnSelectedListener listener) {\n+        this.listener = listener;\n+    }\n+\n+    interface OnSelectedListener {\n+        void onSelected();\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "d24149c6398809ef7d7a4c7392b9afcdd84843e8",
        "previous commit hash": "fd1a112d4958b5b6e516547d8b2114a0f6581fc8",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/item_view_tag.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<TextView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+<com.novoda.demo.edittextchips.TagView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     android:id=\"@+id/name\"\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n"
    },
    {
        "commit hash": "fd1a112d4958b5b6e516547d8b2114a0f6581fc8",
        "previous commit hash": "a5108ed5be659d128805ae577563fc6a9dad35f8",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagsView.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -51,7 +51,7 @@ public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.T\n     }\n \n     private boolean isSelectingHint(int selStart) {\n-        return selStart > getText().length() - suffixHint.length();\n+        return selStart >= getText().length() - suffixHint.length();\n     }\n \n     @Override\n"
    },
    {
        "commit hash": "a5108ed5be659d128805ae577563fc6a9dad35f8",
        "previous commit hash": "f7fe17835c02fef4fad6d440179fdacc7b544049",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseHintTextWatcher.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -28,7 +28,7 @@ class SplitwiseHintTextWatcher extends HintSafeTextWatcher {\n     }\n \n     private boolean containsSpansOnly(String rawText) {\n-        return rawText.matches(\"(,, )*\");\n+        return rawText.matches(\"( )*(,, )*\");\n     }\n \n     boolean textContainsHint(Editable text) {\n@@ -43,7 +43,7 @@ class SplitwiseHintTextWatcher extends HintSafeTextWatcher {\n         if (textContainsHint(text)) {\n             String rawText = text.toString();\n             String rawTextWithoutHint = rawText.substring(0, rawText.length() - suffixHint.length());\n-            return !rawTextWithoutHint.matches(\"(,, )*\");\n+            return !containsSpansOnly(rawTextWithoutHint);\n         } else {\n             return false;\n         }\n"
    },
    {
        "commit hash": "f7fe17835c02fef4fad6d440179fdacc7b544049",
        "previous commit hash": "f8032e72a030a9a9cc9edc5d6cd330b335fdb4b3",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/EyeemActivity.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -63,7 +63,7 @@ public class EyeemActivity extends Activity {\n         return new TextWatcher() {\n             @Override\n             public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n-\n+                // no-op\n             }\n \n             @Override\n@@ -75,7 +75,7 @@ public class EyeemActivity extends Activity {\n \n             @Override\n             public void afterTextChanged(Editable s) {\n-\n+                // no-op\n             }\n         };\n     }\n"
    },
    {
        "commit hash": "f8032e72a030a9a9cc9edc5d6cd330b335fdb4b3",
        "previous commit hash": "2f4bcfcef0baf6c85432eb29f1d06e931b705fa7",
        "diff stats": {
            "file_path": "EditTextChips/build.gradle",
            "additions": 5,
            "deletions": 8
        },
        "diff content": "@@ -1,18 +1,15 @@\n apply plugin: 'com.android.application'\n \n repositories {\n-  maven {\n-    url 'https://oss.sonatype.org/content/repositories/snapshots/'\n-  }\n-  maven {\n-    url \"https://jitpack.io\"\n-  }\n+    maven {\n+      url 'http://dl.bintray.com/novoda/maven'\n+    }\n }\n \n dependencies {\n   compile 'com.eyeem.chips:library:0.9.0@aar'\n-  compile 'com.github.Plumillon:ChipView:1.2.0'\n-  compile \"com.splitwise:tokenautocomplete:2.0.7@aar\"\n+  compile 'com.android.support:appcompat-v7:24.1.1'\n+  compile \"com.novoda:tokenautocomplete:0.0.1@aar\"\n }\n \n android {\n"
    },
    {
        "commit hash": "f8032e72a030a9a9cc9edc5d6cd330b335fdb4b3",
        "previous commit hash": "2f4bcfcef0baf6c85432eb29f1d06e931b705fa7",
        "diff stats": {
            "file_path": "gradle/wrapper/gradle-wrapper.properties",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.14-all.zip\n"
    },
    {
        "commit hash": "2f4bcfcef0baf6c85432eb29f1d06e931b705fa7",
        "previous commit hash": "65e74d07c48b1253ef622eacdf7c3a259ab9cf51",
        "diff stats": {
            "file_path": "README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -7,6 +7,7 @@ This is a collection of basic android examples created by Novoda.\n * [ContactSelector](http://github.com/novoda/android-demos/tree/master/ContactSelector)\n * [CustomActivityTransition](http://github.com/novoda/android-demos/tree/master/CustomActivityTransition)\n * [DynamicListItems](http://github.com/novoda/android-demos/tree/master/DynamicListItems)\n+* [EditTextChips](https://github.com/novoda/android-demos/tree/master/EditTextChips)\n * [encryption](http://github.com/novoda/android-demos/tree/master/encryption)\n * [FixedSizeTextColumns](http://github.com/novoda/android-demos/tree/master/FixedSizeTextColumns)\n * [Fragments](http://github.com/novoda/android-demos/tree/master/Fragments)\n"
    },
    {
        "commit hash": "65e74d07c48b1253ef622eacdf7c3a259ab9cf51",
        "previous commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseActivity.java",
            "additions": 29,
            "deletions": 17
        },
        "diff content": "@@ -1,17 +1,27 @@\n package com.novoda.demo.edittextchips;\n \n import com.tokenautocomplete.FilteredArrayAdapter;\n+import com.tokenautocomplete.TokenCompleteTextView;\n \n import android.app.Activity;\n import android.content.Context;\n import android.content.Intent;\n import android.os.Bundle;\n-import android.widget.ArrayAdapter;\n \n import java.io.Serializable;\n \n public class SplitwiseActivity extends Activity {\n \n+    private static final Tag[] TAGS = new Tag[]{\n+            new Tag(\"tagWeir\"),\n+            new Tag(\"tagSmith\"),\n+            new Tag(\"tagJordan\"),\n+            new Tag(\"tagPeterson\"),\n+            new Tag(\"tagJohnson\"),\n+            new Tag(\"tagAnderson\")\n+    };\n+    private static final char[] SPLIT_CHARS = new char[]{',', ';', '\\n'};\n+\n     static Intent intent(Context context) {\n         return new Intent(context, SplitwiseActivity.class);\n     }\n@@ -20,23 +30,13 @@ public class SplitwiseActivity extends Activity {\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_splitwise);\n-        Tag[] tags = new Tag[]{\n-                new Tag(\"tagWeir\"),\n-                new Tag(\"tagSmith\"),\n-                new Tag(\"tagJordan\"),\n-                new Tag(\"tagPeterson\"),\n-                new Tag(\"tagJohnson\"),\n-                new Tag(\"tagAnderson\")\n-        };\n-\n-        ArrayAdapter<Tag> adapter = new FilteredArrayAdapter<Tag>(this, android.R.layout.simple_list_item_1, tags) {\n-            @Override\n-            protected boolean keepObject(Tag tag, String mask) {\n-                return tag.getName().startsWith(mask.replaceFirst(\"#\", \"\"));\n-            }\n-        };\n         SplitwiseTagsView tagsView = (SplitwiseTagsView) findViewById(R.id.tags);\n-        tagsView.setAdapter(adapter);\n+\n+        tagsView.setTokenClickStyle(TokenCompleteTextView.TokenClickStyle.SelectDeselect);\n+        tagsView.setDeletionStyle(TokenCompleteTextView.TokenDeleteStyle.Clear); // TODO: fix this\n+        tagsView.setSplitChar(SPLIT_CHARS);\n+\n+        tagsView.setAdapter(new TagAdapter(this, android.R.layout.simple_list_item_1, TAGS));\n         tagsView.allowDuplicates(false);\n     }\n \n@@ -60,4 +60,16 @@ public class SplitwiseActivity extends Activity {\n         }\n     }\n \n+    private static class TagAdapter extends FilteredArrayAdapter<Tag> {\n+\n+        TagAdapter(Context context, int resource, Tag[] objects) {\n+            super(context, resource, objects);\n+        }\n+\n+        @Override\n+        protected boolean keepObject(Tag tag, String mask) {\n+            return tag.getName().startsWith(mask.replaceFirst(\"#\", \"\"));\n+        }\n+    }\n+\n }\n"
    },
    {
        "commit hash": "65e74d07c48b1253ef622eacdf7c3a259ab9cf51",
        "previous commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/drawable/tag_view_background.xml",
            "additions": 4,
            "deletions": 4
        },
        "diff content": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<shape xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <solid android:color=\"#ffafafaf\" />\n-    <corners android:radius=\"5dp\" />\n-</shape>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:drawable=\"@drawable/tag_view_background_selected\" android:state_selected=\"true\" />\n+    <item android:drawable=\"@drawable/tag_view_background_default\" />\n+</selector>\n"
    },
    {
        "commit hash": "65e74d07c48b1253ef622eacdf7c3a259ab9cf51",
        "previous commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/drawable/tag_view_background_default.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<shape xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <solid android:color=\"#ffafafaf\" />\n+    <corners android:radius=\"5dp\" />\n+</shape>\n"
    },
    {
        "commit hash": "65e74d07c48b1253ef622eacdf7c3a259ab9cf51",
        "previous commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/drawable/tag_view_background_selected.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<shape xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <solid android:color=\"#0FACE0\" />\n+    <corners android:radius=\"5dp\" />\n+</shape>\n"
    },
    {
        "commit hash": "65e74d07c48b1253ef622eacdf7c3a259ab9cf51",
        "previous commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/activity_splitwise.xml",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -9,6 +9,7 @@\n         android:id=\"@+id/tags\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"wrap_content\"\n-        android:hint=\"@string/add_tags\" />\n+        android:hint=\"@string/add_tags\"\n+        android:imeOptions=\"actionNone\"/>\n \n </LinearLayout>\n"
    },
    {
        "commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "previous commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/HintSafeTextWatcher.java",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+\n+abstract class HintSafeTextWatcher implements TextWatcher {\n+\n+    private boolean selfUpdateInProgress;\n+\n+    /**\n+     * According to the documentation it's modifying the text from this method is an error so we don't need to worry.\n+     */\n+    @Override\n+    public final void beforeTextChanged(CharSequence text, int start, int count, int after) {\n+        // no-op\n+    }\n+\n+    /**\n+     * According to the documentation it's modifying the text from this method is an error so we don't need to worry.\n+     */\n+    @Override\n+    public final void onTextChanged(CharSequence text, int start, int before, int count) {\n+        // no-op\n+    }\n+\n+    /**\n+     * Prevents text changes from becoming recursive by using a boolean flag.\n+     */\n+    @Override\n+    public final void afterTextChanged(Editable text) {\n+        if (selfUpdateInProgress) {\n+            return;\n+        }\n+        selfUpdateInProgress = true;\n+        onTextChanged(text);\n+        selfUpdateInProgress = false;\n+    }\n+\n+    abstract void onTextChanged(Editable text);\n+\n+}\n"
    },
    {
        "commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "previous commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseActivity.java",
            "additions": 0,
            "deletions": 19
        },
        "diff content": "@@ -37,7 +37,6 @@ public class SplitwiseActivity extends Activity {\n         };\n         SplitwiseTagsView tagsView = (SplitwiseTagsView) findViewById(R.id.tags);\n         tagsView.setAdapter(adapter);\n-        tagsView.setPrefix(\"Your bestest friends: \"); // Doesn't seem to allow suffix.\n         tagsView.allowDuplicates(false);\n     }\n \n@@ -55,24 +54,6 @@ public class SplitwiseActivity extends Activity {\n             return name;\n         }\n \n-        @Override\n-        public boolean equals(Object o) {\n-            if (this == o) {\n-                return true;\n-            }\n-            if (o == null || getClass() != o.getClass()) {\n-                return false;\n-            }\n-            Tag tag = (Tag) o;\n-            return name.equals(tag.name);\n-\n-        }\n-\n-        @Override\n-        public int hashCode() {\n-            return name != null ? name.hashCode() : 0;\n-        }\n-\n         @Override\n         public String toString() {\n             return \"#\" + getName();\n"
    },
    {
        "commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "previous commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseHintTextWatcher.java",
            "additions": 67,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,67 @@\n+package com.novoda.demo.edittextchips;\n+\n+import com.tokenautocomplete.HintSpan;\n+\n+import android.text.Editable;\n+import android.text.Spanned;\n+\n+class SplitwiseHintTextWatcher extends HintSafeTextWatcher {\n+\n+    private SplitwiseTagsView splitwiseTagsView;\n+    private final CharSequence suffixHint;\n+    private final HintSpan suffixHintSpannable;\n+\n+    SplitwiseHintTextWatcher(SplitwiseTagsView splitwiseTagsView, CharSequence suffixHint, HintSpan suffixHintSpannable) {\n+        this.splitwiseTagsView = splitwiseTagsView;\n+        this.suffixHint = suffixHint;\n+        this.suffixHintSpannable = suffixHintSpannable;\n+    }\n+\n+    @Override\n+    void onTextChanged(Editable text) {\n+        String rawText = text.toString();\n+        if (!textContainsHint(text) && (rawText.isEmpty() || containsSpansOnly(rawText))) {\n+            addHint(text);\n+        } else if (doesNotContainJustSpansAndHint(text)) {\n+            removeHint(text);\n+        }\n+    }\n+\n+    private boolean containsSpansOnly(String rawText) {\n+        return rawText.matches(\"(,, )*\");\n+    }\n+\n+    boolean textContainsHint(Editable text) {\n+        if (text.length() < suffixHint.length()) {\n+            return false;\n+        }\n+        return text.getSpans(text.length() - suffixHint.length(), text.length(), HintSpan.class).length > 0;\n+    }\n+\n+\n+    private boolean doesNotContainJustSpansAndHint(Editable text) {\n+        if (textContainsHint(text)) {\n+            String rawText = text.toString();\n+            String rawTextWithoutHint = rawText.substring(0, rawText.length() - suffixHint.length());\n+            return !rawTextWithoutHint.matches(\"(,, )*\");\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    void addHint(Editable text) {\n+        text.insert(text.length(), suffixHint);\n+        text.setSpan(suffixHintSpannable, text.length() - suffixHint.length(), text.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n+        splitwiseTagsView.setSelection(text.length() - suffixHint.length());\n+    }\n+\n+    private void removeHint(Editable text) {\n+        text.removeSpan(suffixHintSpannable);\n+        text.replace(text.length() - suffixHint.length(), text.length(), \"\");\n+    }\n+\n+    boolean isHintVisible(Editable text) {\n+        return textContainsHint(text);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "previous commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagsView.java",
            "additions": 46,
            "deletions": 0
        },
        "diff content": "@@ -1,9 +1,11 @@\n package com.novoda.demo.edittextchips;\n \n+import com.tokenautocomplete.HintSpan;\n import com.tokenautocomplete.TokenCompleteTextView;\n \n import android.app.Activity;\n import android.content.Context;\n+import android.graphics.Typeface;\n import android.util.AttributeSet;\n import android.view.LayoutInflater;\n import android.view.View;\n@@ -12,8 +14,44 @@ import android.widget.TextView;\n \n public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.Tag> {\n \n+    private final CharSequence suffixHint;\n+    private final SplitwiseHintTextWatcher hintTextWatcher;\n+\n     public SplitwiseTagsView(Context context, AttributeSet attrs) {\n         super(context, attrs);\n+        suffixHint = getHint();\n+        HintSpan suffixHintSpannable = new HintSpan(null, hintStyle(), (int) getTextSize(), getHintTextColors(), getHintTextColors());\n+        hintTextWatcher = new SplitwiseHintTextWatcher(this, suffixHint, suffixHintSpannable);\n+\n+        hintTextWatcher.addHint(getText());\n+        addTextChangedListener(hintTextWatcher);\n+        setHint(\"\");\n+    }\n+\n+    private int hintStyle() {\n+        Typeface tf = getTypeface();\n+        int style = Typeface.NORMAL;\n+        if (tf != null) {\n+            style = tf.getStyle();\n+        }\n+        return style;\n+    }\n+\n+    @Override\n+    protected void onSelectionChanged(int selStart, int selEnd) {\n+        super.onSelectionChanged(selStart, selEnd);\n+        if (isHintVisible() && isSelectingHint(selStart)) {\n+            //Don't let users select the hint\n+            setSelection(getText().length() - suffixHint.length());\n+        }\n+    }\n+\n+    private boolean isHintVisible() {\n+        return hintTextWatcher != null && hintTextWatcher.isHintVisible(getText());\n+    }\n+\n+    private boolean isSelectingHint(int selStart) {\n+        return selStart > getText().length() - suffixHint.length();\n     }\n \n     @Override\n@@ -33,4 +71,12 @@ public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.T\n         }\n     }\n \n+    @Override\n+    public boolean enoughToFilter() {\n+        if (hintTextWatcher.textContainsHint(getText())) {\n+            return false;\n+        }\n+        return super.enoughToFilter();\n+    }\n+\n }\n"
    },
    {
        "commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "previous commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/activity_splitwise.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -2,6 +2,7 @@\n <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n+    android:gravity=\"bottom\"\n     android:orientation=\"vertical\">\n \n     <com.novoda.demo.edittextchips.SplitwiseTagsView\n"
    },
    {
        "commit hash": "a38ac448c0681db6944b8d82a61c16cceabbe7ca",
        "previous commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/values/strings.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -5,5 +5,5 @@\n     <string name=\"eyeem\">Chips library [eyeem]</string>\n     <string name=\"splitwise\">TokenAutoComplete [splitwise]</string>\n \n-    <string name=\"add_tags\">Add tags</string>\n+    <string name=\"add_tags\">Add&#160;tags</string>\n </resources>\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/README.md",
            "additions": 4,
            "deletions": 1
        },
        "diff content": "@@ -2,4 +2,7 @@\n \n EditTextChips shows different libraries to display 'chips' in an EditText (usually used to show tags, email addresses, etc.).\n \n-// TODO explain what libraries we use\n+The libraries demoed are:\n+\n+ - [Chips library from EyeEm](https://github.com/eyeem/chips-android)\n+ - [Splitwise TokenAutoComplete](https://github.com/splitwise/TokenAutoComplete)\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/build.gradle",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -11,8 +11,6 @@ repositories {\n \n dependencies {\n   compile 'com.eyeem.chips:library:0.9.0@aar'\n-  compile 'com.klinkerapps:android-chips:1.0.1@aar'\n-  compile 'com.doodle.android:android-material-chips:1.1.0'\n   compile 'com.github.Plumillon:ChipView:1.2.0'\n   compile \"com.splitwise:tokenautocomplete:2.0.7@aar\"\n }\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 12
        },
        "diff content": "@@ -2,6 +2,7 @@\n <manifest package=\"com.novoda.demo.edittextchips\"\n     xmlns:android=\"http://schemas.android.com/apk/res/android\">\n \n+    <uses-permission android:name=\"android.permission.READ_CONTACTS\" />\n     <application\n         android:icon=\"@drawable/icon\"\n         android:label=\"@string/app_name\"\n@@ -20,18 +21,6 @@\n             android:name=\"com.novoda.demo.edittextchips.EyeemActivity\"\n             android:label=\"@string/eyeem\" />\n \n-        <activity\n-            android:name=\"com.novoda.demo.edittextchips.KlinkerActivity\"\n-            android:label=\"@string/klinker\" />\n-\n-        <activity\n-            android:name=\"com.novoda.demo.edittextchips.DoodleActivity\"\n-            android:label=\"@string/doodle\" />\n-\n-        <activity\n-            android:name=\"com.novoda.demo.edittextchips.PlumillionActivity\"\n-            android:label=\"@string/plumillon\" />\n-\n         <activity\n             android:name=\"com.novoda.demo.edittextchips.SplitwiseActivity\"\n             android:label=\"@string/splitwise\" />\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/DoodleActivity.java",
            "additions": 0,
            "deletions": 19
        },
        "diff content": "@@ -1,19 +0,0 @@\n-package com.novoda.demo.edittextchips;\n-\n-import android.app.Activity;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.os.Bundle;\n-\n-public class DoodleActivity extends Activity {\n-\n-    static Intent intent(Context context) {\n-        return new Intent(context, DoodleActivity.class);\n-    }\n-\n-    @Override\n-    protected void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/EyeemActivity.java",
            "additions": 74,
            "deletions": 0
        },
        "diff content": "@@ -1,12 +1,31 @@\n package com.novoda.demo.edittextchips;\n \n+import com.eyeem.chips.AutocompletePopover;\n+import com.eyeem.chips.ChipsEditText;\n+\n import android.app.Activity;\n import android.content.Context;\n import android.content.Intent;\n import android.os.Bundle;\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+\n+import java.util.ArrayList;\n \n public class EyeemActivity extends Activity {\n \n+    private static final ArrayList<String> YOLO_SUGGESTIONS = new ArrayList<String>() {{\n+        add(\"tagWeir\");\n+        add(\"tagSmith\");\n+        add(\"tagJordan\");\n+        add(\"tagPeterson\");\n+        add(\"tagJohnson\");\n+        add(\"tagAnderson\");\n+    }};\n+\n+    private ChipsEditText chips;\n+    private AutocompletePopover popover;\n+\n     static Intent intent(Context context) {\n         return new Intent(context, EyeemActivity.class);\n     }\n@@ -14,6 +33,61 @@ public class EyeemActivity extends Activity {\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_eyeem);\n+        chips = (ChipsEditText) findViewById(R.id.chips);\n+        popover = (AutocompletePopover) findViewById(R.id.popover);\n+\n+        chips.setAutocompleteResolver(demoResolver());\n+        chips.setAutocomplePopover(popover);\n+        chips.addTextChangedListener(textWatcher());\n+        popover.setChipsEditText(chips);\n+\n+        showSuggestions(chips, popover);\n+    }\n+\n+    private ChipsEditText.AutocompleteResolver demoResolver() {\n+        return new ChipsEditText.AutocompleteResolver() {\n+            @Override\n+            public ArrayList<String> getSuggestions(String query) throws Exception {\n+                return YOLO_SUGGESTIONS;\n+            }\n+\n+            @Override\n+            public ArrayList<String> getDefaultSuggestions() {\n+                return YOLO_SUGGESTIONS;\n+            }\n+        };\n+    }\n+\n+    private TextWatcher textWatcher() {\n+        return new TextWatcher() {\n+            @Override\n+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n+\n+            }\n+\n+            @Override\n+            public void onTextChanged(CharSequence s, int start, int before, int count) {\n+                if (lastCharacterIsSeparator(s)) {\n+                    showSuggestions(chips, popover);\n+                }\n+            }\n+\n+            @Override\n+            public void afterTextChanged(Editable s) {\n+\n+            }\n+        };\n+    }\n+\n+    private boolean lastCharacterIsSeparator(CharSequence s) {\n+        int lastIndex = s.toString().length() - 1;\n+        return s.toString().lastIndexOf(',') == lastIndex;\n+    }\n+\n+    private void showSuggestions(ChipsEditText chips, AutocompletePopover popover) {\n+        chips.startManualMode();\n+        popover.show();\n     }\n \n }\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/KlinkerActivity.java",
            "additions": 0,
            "deletions": 19
        },
        "diff content": "@@ -1,19 +0,0 @@\n-package com.novoda.demo.edittextchips;\n-\n-import android.app.Activity;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.os.Bundle;\n-\n-public class KlinkerActivity extends Activity {\n-\n-    static Intent intent(Context context) {\n-        return new Intent(context, KlinkerActivity.class);\n-    }\n-\n-    @Override\n-    protected void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/MainActivity.java",
            "additions": 0,
            "deletions": 15
        },
        "diff content": "@@ -13,9 +13,6 @@ public class MainActivity extends Activity {\n         setContentView(R.layout.activity_main);\n \n         eyeem().setOnClickListener(listenerWith(EyeemActivity.intent(this)));\n-        klinter().setOnClickListener(listenerWith(KlinkerActivity.intent(this)));\n-        doodle().setOnClickListener(listenerWith(DoodleActivity.intent(this)));\n-        plumillon().setOnClickListener(listenerWith(PlumillionActivity.intent(this)));\n         splitwise().setOnClickListener(listenerWith(SplitwiseActivity.intent(this)));\n     }\n \n@@ -23,18 +20,6 @@ public class MainActivity extends Activity {\n         return findViewById(R.id.eyeem);\n     }\n \n-    private View klinter() {\n-        return findViewById(R.id.klinker);\n-    }\n-\n-    private View doodle() {\n-        return findViewById(R.id.doodle);\n-    }\n-\n-    private View plumillon() {\n-        return findViewById(R.id.plumillon);\n-    }\n-\n     private View splitwise() {\n         return findViewById(R.id.splitwise);\n     }\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/PlumillionActivity.java",
            "additions": 0,
            "deletions": 19
        },
        "diff content": "@@ -1,19 +0,0 @@\n-package com.novoda.demo.edittextchips;\n-\n-import android.app.Activity;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.os.Bundle;\n-\n-public class PlumillionActivity extends Activity {\n-\n-    static Intent intent(Context context) {\n-        return new Intent(context, PlumillionActivity.class);\n-    }\n-\n-    @Override\n-    protected void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseActivity.java",
            "additions": 63,
            "deletions": 0
        },
        "diff content": "@@ -1,9 +1,14 @@\n package com.novoda.demo.edittextchips;\n \n+import com.tokenautocomplete.FilteredArrayAdapter;\n+\n import android.app.Activity;\n import android.content.Context;\n import android.content.Intent;\n import android.os.Bundle;\n+import android.widget.ArrayAdapter;\n+\n+import java.io.Serializable;\n \n public class SplitwiseActivity extends Activity {\n \n@@ -14,6 +19,64 @@ public class SplitwiseActivity extends Activity {\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_splitwise);\n+        Tag[] tags = new Tag[]{\n+                new Tag(\"tagWeir\"),\n+                new Tag(\"tagSmith\"),\n+                new Tag(\"tagJordan\"),\n+                new Tag(\"tagPeterson\"),\n+                new Tag(\"tagJohnson\"),\n+                new Tag(\"tagAnderson\")\n+        };\n+\n+        ArrayAdapter<Tag> adapter = new FilteredArrayAdapter<Tag>(this, android.R.layout.simple_list_item_1, tags) {\n+            @Override\n+            protected boolean keepObject(Tag tag, String mask) {\n+                return tag.getName().startsWith(mask.replaceFirst(\"#\", \"\"));\n+            }\n+        };\n+        SplitwiseTagsView tagsView = (SplitwiseTagsView) findViewById(R.id.tags);\n+        tagsView.setAdapter(adapter);\n+        tagsView.setPrefix(\"Your bestest friends: \"); // Doesn't seem to allow suffix.\n+        tagsView.allowDuplicates(false);\n+    }\n+\n+    // If your objects cannot be made Serializable, please look at\n+    // https://github.com/splitwise/TokenAutoComplete#restoring-the-view-state\n+    static class Tag implements Serializable {\n+\n+        private final String name;\n+\n+        Tag(String name) {\n+            this.name = name;\n+        }\n+\n+        String getName() {\n+            return name;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) {\n+                return true;\n+            }\n+            if (o == null || getClass() != o.getClass()) {\n+                return false;\n+            }\n+            Tag tag = (Tag) o;\n+            return name.equals(tag.name);\n+\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return name != null ? name.hashCode() : 0;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"#\" + getName();\n+        }\n     }\n \n }\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagsView.java",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+package com.novoda.demo.edittextchips;\n+\n+import com.tokenautocomplete.TokenCompleteTextView;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.TextView;\n+\n+public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.Tag> {\n+\n+    public SplitwiseTagsView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    @Override\n+    protected View getViewForObject(SplitwiseActivity.Tag tag) {\n+        LayoutInflater l = (LayoutInflater) getContext().getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\n+        TextView view = (TextView) l.inflate(R.layout.item_view_tag, (ViewGroup) getParent(), false);\n+        view.setText(tag.toString());\n+        return view;\n+    }\n+\n+    @Override\n+    protected SplitwiseActivity.Tag defaultObject(String completionText) {\n+        if (completionText.startsWith(\"#\")) {\n+            return new SplitwiseActivity.Tag(completionText.replaceFirst(\"#\", \"\"));\n+        } else {\n+            return new SplitwiseActivity.Tag(completionText);\n+        }\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/drawable/tag_view_background.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<shape xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <solid android:color=\"#ffafafaf\" />\n+    <corners android:radius=\"5dp\" />\n+</shape>\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/activity_eyeem.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\">\n+    <!-- RelativeLayout Required by the library -->\n+\n+    <com.eyeem.chips.ChipsEditText\n+        android:id=\"@+id/chips\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:hint=\"@string/add_tags\" />\n+\n+    <com.eyeem.chips.AutocompletePopover\n+        android:id=\"@+id/popover\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/activity_main.xml",
            "additions": 0,
            "deletions": 21
        },
        "diff content": "@@ -14,27 +14,6 @@\n         android:layout_height=\"wrap_content\"\n         android:text=\"@string/eyeem\" />\n \n-    <Button\n-        android:id=\"@+id/klinker\"\n-        style=\"?android:attr/buttonBarButtonStyle\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"wrap_content\"\n-        android:text=\"@string/klinker\" />\n-\n-    <Button\n-        android:id=\"@+id/doodle\"\n-        style=\"?android:attr/buttonBarButtonStyle\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"wrap_content\"\n-        android:text=\"@string/doodle\" />\n-\n-    <Button\n-        android:id=\"@+id/plumillon\"\n-        style=\"?android:attr/buttonBarButtonStyle\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"wrap_content\"\n-        android:text=\"@string/plumillon\" />\n-\n     <Button\n         android:id=\"@+id/splitwise\"\n         style=\"?android:attr/buttonBarButtonStyle\"\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/activity_splitwise.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\">\n+\n+    <com.novoda.demo.edittextchips.SplitwiseTagsView\n+        android:id=\"@+id/tags\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:hint=\"@string/add_tags\" />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/item_view_tag.xml",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<TextView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/name\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"\n+    android:background=\"@drawable/tag_view_background\"\n+    android:padding=\"5dp\"\n+    android:textColor=\"@android:color/white\"\n+    android:textSize=\"18sp\" />\n"
    },
    {
        "commit hash": "212479bbfd79214dbdf70751cb35edd35af3c413",
        "previous commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/values/strings.xml",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <resources>\n     <string name=\"app_name\">EditText Chips</string>\n+\n     <string name=\"eyeem\">Chips library [eyeem]</string>\n-    <string name=\"klinker\">Android Chips Edit Text [klinker41]</string>\n-    <string name=\"doodle\">Android Material Chips [doodle]</string>\n-    <string name=\"plumillon\">ChipView [plumillon]</string>\n     <string name=\"splitwise\">TokenAutoComplete [splitwise]</string>\n+\n+    <string name=\"add_tags\">Add tags</string>\n </resources>\n"
    },
    {
        "commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "previous commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "diff stats": {
            "file_path": "EditTextChips/src/main/AndroidManifest.xml",
            "additions": 23,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,9 @@\n \n     <application\n         android:icon=\"@drawable/icon\"\n-        android:label=\"@string/app_name\">\n+        android:label=\"@string/app_name\"\n+        android:theme=\"@style/Theme.AppCompat.Light\">\n+\n         <activity\n             android:name=\"com.novoda.demo.edittextchips.MainActivity\"\n             android:label=\"@string/app_name\">\n@@ -14,5 +16,25 @@\n             </intent-filter>\n         </activity>\n \n+        <activity\n+            android:name=\"com.novoda.demo.edittextchips.EyeemActivity\"\n+            android:label=\"@string/eyeem\" />\n+\n+        <activity\n+            android:name=\"com.novoda.demo.edittextchips.KlinkerActivity\"\n+            android:label=\"@string/klinker\" />\n+\n+        <activity\n+            android:name=\"com.novoda.demo.edittextchips.DoodleActivity\"\n+            android:label=\"@string/doodle\" />\n+\n+        <activity\n+            android:name=\"com.novoda.demo.edittextchips.PlumillionActivity\"\n+            android:label=\"@string/plumillon\" />\n+\n+        <activity\n+            android:name=\"com.novoda.demo.edittextchips.SplitwiseActivity\"\n+            android:label=\"@string/splitwise\" />\n+\n     </application>\n </manifest> \n"
    },
    {
        "commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "previous commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/DoodleActivity.java",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Bundle;\n+\n+public class DoodleActivity extends Activity {\n+\n+    static Intent intent(Context context) {\n+        return new Intent(context, DoodleActivity.class);\n+    }\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "previous commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/EyeemActivity.java",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Bundle;\n+\n+public class EyeemActivity extends Activity {\n+\n+    static Intent intent(Context context) {\n+        return new Intent(context, EyeemActivity.class);\n+    }\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "previous commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/KlinkerActivity.java",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Bundle;\n+\n+public class KlinkerActivity extends Activity {\n+\n+    static Intent intent(Context context) {\n+        return new Intent(context, KlinkerActivity.class);\n+    }\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "previous commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/MainActivity.java",
            "additions": 29,
            "deletions": 27
        },
        "diff content": "@@ -1,6 +1,7 @@\n package com.novoda.demo.edittextchips;\n \n import android.app.Activity;\n+import android.content.Intent;\n import android.os.Bundle;\n import android.view.View;\n \n@@ -10,40 +11,41 @@ public class MainActivity extends Activity {\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_main);\n-        findViewById(R.id.eyeem).setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                // TODO\n-            }\n-        });\n \n-        findViewById(R.id.klinker).setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                // TODO\n-            }\n-        });\n+        eyeem().setOnClickListener(listenerWith(EyeemActivity.intent(this)));\n+        klinter().setOnClickListener(listenerWith(KlinkerActivity.intent(this)));\n+        doodle().setOnClickListener(listenerWith(DoodleActivity.intent(this)));\n+        plumillon().setOnClickListener(listenerWith(PlumillionActivity.intent(this)));\n+        splitwise().setOnClickListener(listenerWith(SplitwiseActivity.intent(this)));\n+    }\n \n-        findViewById(R.id.doodle).setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                // TODO\n-            }\n-        });\n+    private View eyeem() {\n+        return findViewById(R.id.eyeem);\n+    }\n \n-        findViewById(R.id.plumillon).setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                // TODO\n-            }\n-        });\n+    private View klinter() {\n+        return findViewById(R.id.klinker);\n+    }\n+\n+    private View doodle() {\n+        return findViewById(R.id.doodle);\n+    }\n+\n+    private View plumillon() {\n+        return findViewById(R.id.plumillon);\n+    }\n+\n+    private View splitwise() {\n+        return findViewById(R.id.splitwise);\n+    }\n \n-        findViewById(R.id.splitwise).setOnClickListener(new View.OnClickListener() {\n+    private View.OnClickListener listenerWith(final Intent intent) {\n+        return new View.OnClickListener() {\n             @Override\n             public void onClick(View v) {\n-                // TODO\n+                startActivity(intent);\n             }\n-        });\n+        };\n     }\n \n }\n"
    },
    {
        "commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "previous commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/PlumillionActivity.java",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Bundle;\n+\n+public class PlumillionActivity extends Activity {\n+\n+    static Intent intent(Context context) {\n+        return new Intent(context, PlumillionActivity.class);\n+    }\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "18bd99df19abfdaabebea48afe9a6482ad43ca01",
        "previous commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseActivity.java",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Bundle;\n+\n+public class SplitwiseActivity extends Activity {\n+\n+    static Intent intent(Context context) {\n+        return new Intent(context, SplitwiseActivity.class);\n+    }\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/README.md",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+#Demo EditTextChips\n+\n+EditTextChips shows different libraries to display 'chips' in an EditText (usually used to show tags, email addresses, etc.).\n+\n+// TODO explain what libraries we use\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/build.gradle",
            "additions": 32,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,32 @@\n+apply plugin: 'com.android.application'\n+\n+repositories {\n+  maven {\n+    url 'https://oss.sonatype.org/content/repositories/snapshots/'\n+  }\n+  maven {\n+    url \"https://jitpack.io\"\n+  }\n+}\n+\n+dependencies {\n+  compile 'com.eyeem.chips:library:0.9.0@aar'\n+  compile 'com.klinkerapps:android-chips:1.0.1@aar'\n+  compile 'com.doodle.android:android-material-chips:1.1.0'\n+  compile 'com.github.Plumillon:ChipView:1.2.0'\n+  compile \"com.splitwise:tokenautocomplete:2.0.7@aar\"\n+}\n+\n+android {\n+  compileSdkVersion 23\n+  buildToolsVersion \"23.0.3\"\n+\n+  defaultConfig {\n+    applicationId \"com.novoda.demo.edittextchips\"\n+    minSdkVersion 16\n+    targetSdkVersion 23\n+    versionCode 1\n+    versionName \"1.0\"\n+  }\n+}\n+\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/src/main/AndroidManifest.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest package=\"com.novoda.demo.edittextchips\"\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <application\n+        android:icon=\"@drawable/icon\"\n+        android:label=\"@string/app_name\">\n+        <activity\n+            android:name=\"com.novoda.demo.edittextchips.MainActivity\"\n+            android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+\n+    </application>\n+</manifest> \n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/src/main/java/com/novoda/demo/edittextchips/MainActivity.java",
            "additions": 49,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,49 @@\n+package com.novoda.demo.edittextchips;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.view.View;\n+\n+public class MainActivity extends Activity {\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+        findViewById(R.id.eyeem).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                // TODO\n+            }\n+        });\n+\n+        findViewById(R.id.klinker).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                // TODO\n+            }\n+        });\n+\n+        findViewById(R.id.doodle).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                // TODO\n+            }\n+        });\n+\n+        findViewById(R.id.plumillon).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                // TODO\n+            }\n+        });\n+\n+        findViewById(R.id.splitwise).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                // TODO\n+            }\n+        });\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/EditTextChips/src/main/res/drawable-hdpi/icon.png differ\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/EditTextChips/src/main/res/drawable-ldpi/icon.png differ\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/EditTextChips/src/main/res/drawable-mdpi/icon.png differ\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/layout/activity_main.xml",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout android:id=\"@+id/container_main\"\n+    style=\"?android:attr/buttonBarStyle\"\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    android:gravity=\"center_vertical\"\n+    android:orientation=\"vertical\">\n+\n+    <Button\n+        android:id=\"@+id/eyeem\"\n+        style=\"?android:attr/buttonBarButtonStyle\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/eyeem\" />\n+\n+    <Button\n+        android:id=\"@+id/klinker\"\n+        style=\"?android:attr/buttonBarButtonStyle\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/klinker\" />\n+\n+    <Button\n+        android:id=\"@+id/doodle\"\n+        style=\"?android:attr/buttonBarButtonStyle\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/doodle\" />\n+\n+    <Button\n+        android:id=\"@+id/plumillon\"\n+        style=\"?android:attr/buttonBarButtonStyle\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/plumillon\" />\n+\n+    <Button\n+        android:id=\"@+id/splitwise\"\n+        style=\"?android:attr/buttonBarButtonStyle\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/splitwise\" />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "EditTextChips/src/main/res/values/strings.xml",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"app_name\">EditText Chips</string>\n+    <string name=\"eyeem\">Chips library [eyeem]</string>\n+    <string name=\"klinker\">Android Chips Edit Text [klinker41]</string>\n+    <string name=\"doodle\">Android Material Chips [doodle]</string>\n+    <string name=\"plumillon\">ChipView [plumillon]</string>\n+    <string name=\"splitwise\">TokenAutoComplete [splitwise]</string>\n+</resources>\n"
    },
    {
        "commit hash": "39e37bc7ab68b7bea69a612cbf0eadc793cf69c4",
        "previous commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -25,3 +25,4 @@ include 'sms'\n include 'TabHostExample'\n include 'TabHostSelfContainedTabBrowsing'\n include 'wizard'\n+include 'EditTextChips'\n"
    },
    {
        "commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "previous commit hash": "783808ff0b62fa74d5ea3a2342ccc3242b8c6761",
        "diff stats": {
            "file_path": "build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:1.2.3'\n+        classpath 'com.android.tools.build:gradle:2.2.0-alpha6'\n     }\n }\n \n"
    },
    {
        "commit hash": "4a2597b1daee6b4af4e0ce09ae50a14775c6f753",
        "previous commit hash": "783808ff0b62fa74d5ea3a2342ccc3242b8c6761",
        "diff stats": {
            "file_path": "gradle/wrapper/gradle-wrapper.properties",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip\n"
    },
    {
        "commit hash": "a161b59b7ebeb8c40589d7ebfd3e8382e68c2a19",
        "previous commit hash": "e077505e93ca187091cc82928cc31e78444c5432",
        "diff stats": {
            "file_path": "Sandbox/README.MD",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -36,6 +36,18 @@ Anyone of:\n  Then I go to the apps details\n  ```\n  \n+ ```\n+ Given I am signed in\n+ When I click sign out button\n+ Then I sign out \n+ ```\n+ \n+  ```\n+ Given I am signed out\n+ When I click sign in button\n+ Then I go to the sign in page \n+ ```\n+ \n  Sign in:\n  \n  ```\n"
    },
    {
        "commit hash": "e077505e93ca187091cc82928cc31e78444c5432",
        "previous commit hash": "218daeba04fcddff1f9d383d6ab74ae52b415b23",
        "diff stats": {
            "file_path": "Sandbox/README.MD",
            "additions": 47,
            "deletions": 3
        },
        "diff content": "@@ -16,8 +16,52 @@ Anyone of:\n \n ####Current Acceptance Criteria:\n  \n- Given\n- When\n- Then\n+ Main screen:\n+ \n+ ```\n+ Given I am viewing the apps\n+ When I am signed out\n+ Then only one app is visible\n+ ```\n+ \n+ ```\n+ Given I am viewing the apps\n+ When I am signed in\n+ Then a full list of apps is visible\n+ ```\n+ \n+ ```\n+ Given I am viewing the apps (signed in or out)\n+ When I click an app\n+ Then I go to the apps details\n+ ```\n+ \n+ Sign in:\n+ \n+ ```\n+ Given I try and click submit\n+ When I have not entered a username or password\n+ Then the submit button is not clickable\n+ ```\n+ \n+ ```\n+ Given I try and click submit\n+ When I have entered a username or password\n+ Then the submit button is clickable\n+ ```\n+ \n+ ```\n+ Given I try and click submit\n+ When the username is less than 4 characters\n+ Then I am not allowed to sign in\n+```\n+\n+ Details screen:\n+ \n+ ```\n+ Given I am viewing the details\n+ When I click launch application\n+ Then the 3rd party app is opened\n+ ```\n  \n  *There may also be other non-documented features / acceptance criteria / bugs *\n"
    },
    {
        "commit hash": "218daeba04fcddff1f9d383d6ab74ae52b415b23",
        "previous commit hash": "6411be9a995cbad68df185d860b444bb08ee4667",
        "diff stats": {
            "file_path": "Sandbox/README.MD",
            "additions": 4,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,5 @@\n+#### Overview\n+\n A simple application with three screens:\n  - Main screen\n  - Details screen\n@@ -11,7 +13,8 @@ Anyone of:\n  - Kalabash\n  - Sikuli\n  \n- Current Acceptance Criteria:\n+\n+####Current Acceptance Criteria:\n  \n  Given\n  When\n"
    },
    {
        "commit hash": "6411be9a995cbad68df185d860b444bb08ee4667",
        "previous commit hash": "d1001ebb59513a1def614ab7ac898d180b7b7270",
        "diff stats": {
            "file_path": "Sandbox/README.MD",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+A simple application with three screens:\n+ - Main screen\n+ - Details screen\n+ - Sign in screen\n+ \n+A sandbox freestyle application that you can add a testing framework to.\n+Anyone of:\n+ - UI Automator\n+ - Appium\n+ - Espresso\n+ - Kalabash\n+ - Sikuli\n+ \n+ Current Acceptance Criteria:\n+ \n+ Given\n+ When\n+ Then\n+ \n+ *There may also be other non-documented features / acceptance criteria / bugs *\n"
    },
    {
        "commit hash": "febee02ac4befa357ac555d68226a9a43ba7719a",
        "previous commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/AndroidManifest.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -24,6 +24,13 @@\n       </intent-filter>\n     </activity>\n \n+    <activity android:name=\".DetailsActivity\">\n+      <intent-filter>\n+        <action android:name=\"${applicationId}.DETAILS\" />\n+        <category android:name=\"android.intent.category.DEFAULT\" />\n+      </intent-filter>\n+    </activity>\n+\n   </application>\n \n </manifest>\n"
    },
    {
        "commit hash": "febee02ac4befa357ac555d68226a9a43ba7719a",
        "previous commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/java/novoda/com/sandbox/DetailsActivity.java",
            "additions": 65,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,65 @@\n+package novoda.com.sandbox;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.content.pm.ApplicationInfo;\n+import android.content.pm.PackageManager;\n+import android.graphics.drawable.Drawable;\n+import android.os.Bundle;\n+import android.support.annotation.IdRes;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+public class DetailsActivity extends Activity {\n+\n+    private static final String ACTION = BuildConfig.APPLICATION_ID + \".DETAILS\";\n+    private static final String EXTRA_PACKAGE_NAME = \"extra_package_name\";\n+\n+    public static Intent createIntent(String packageName) {\n+        return new Intent(ACTION)\n+                .putExtra(EXTRA_PACKAGE_NAME, packageName);\n+    }\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_details);\n+\n+        final String packageName = getIntent().getStringExtra(EXTRA_PACKAGE_NAME);\n+\n+        try {\n+            ApplicationInfo applicationInfo = getPackageManager().getApplicationInfo(packageName, PackageManager.GET_META_DATA);\n+            Drawable drawable = applicationInfo.loadIcon(getPackageManager());\n+\n+            ImageView logoView = (ImageView) findViewById(R.id.details_activity_application_logo);\n+            logoView.setImageDrawable(drawable);\n+\n+            setItem(\"Name\", applicationInfo.name, R.id.details_activity_application_name);\n+            setItem(\"Data dir\", applicationInfo.dataDir, R.id.details_activity_data_directory);\n+            setItem(\"Package\", applicationInfo.packageName, R.id.details_activity_package_name);\n+            setItem(\"Target Sdk\", String.valueOf(applicationInfo.targetSdkVersion), R.id.details_activity_target_sdk);\n+\n+            findViewById(R.id.details_activity_launch_application).setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View v) {\n+                    Intent launchIntentForPackage = getPackageManager().getLaunchIntentForPackage(packageName);\n+                    if (launchIntentForPackage == null) {\n+                        Toast.makeText(DetailsActivity.this, \"Uh oh, can't open this package!\", Toast.LENGTH_SHORT).show();\n+                    } else {\n+                        startActivity(launchIntentForPackage);\n+                    }\n+                }\n+            });\n+\n+        } catch (PackageManager.NameNotFoundException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    private void setItem(String keyName, String value, @IdRes int id) {\n+        TextView name = (TextView) findViewById(id);\n+        name.setText(keyName + \" : \" + value);\n+    }\n+}\n"
    },
    {
        "commit hash": "febee02ac4befa357ac555d68226a9a43ba7719a",
        "previous commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/java/novoda/com/sandbox/MainActivity.java",
            "additions": 23,
            "deletions": 17
        },
        "diff content": "@@ -25,28 +25,14 @@ public class MainActivity extends AppCompatActivity {\n         resetSignInStateOnRotation(savedInstanceState);\n \n         signInButton = (Button) findViewById(R.id.main_activity_sign_in_button);\n-        signInButton.setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                if (Application.isSignedIn()) {\n-                    Application.setSignedOut();\n-                    refreshUi();\n-                } else {\n-                    startActivity(SignInActivity.createIntent());\n-                }\n-            }\n-        });\n+        signInButton.setOnClickListener(onSignInOutClicked);\n \n         adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1) {\n             @Override\n             public View getView(final int position, View convertView, ViewGroup parent) {\n                 View view = super.getView(position, convertView, parent);\n-                view.setOnClickListener(new View.OnClickListener() {\n-                    @Override\n-                    public void onClick(View v) {\n-                        startActivity(getPackageManager().getLaunchIntentForPackage(adapter.getItem(position)));\n-                    }\n-                });\n+                view.setOnClickListener(onItemClicked);\n+                view.setTag(position);\n                 return view;\n             }\n         };\n@@ -61,6 +47,26 @@ public class MainActivity extends AppCompatActivity {\n         }\n     }\n \n+    private final View.OnClickListener onSignInOutClicked = new View.OnClickListener() {\n+        @Override\n+        public void onClick(View v) {\n+            if (Application.isSignedIn()) {\n+                Application.setSignedOut();\n+                refreshUi();\n+            } else {\n+                startActivity(SignInActivity.createIntent());\n+            }\n+        }\n+    };\n+\n+    private final View.OnClickListener onItemClicked = new View.OnClickListener() {\n+        @Override\n+        public void onClick(View v) {\n+            String packageName = adapter.getItem((Integer) v.getTag());\n+            startActivity(DetailsActivity.createIntent(packageName));\n+        }\n+    };\n+\n     @Override\n     protected void onResume() {\n         super.onResume();\n"
    },
    {
        "commit hash": "febee02ac4befa357ac555d68226a9a43ba7719a",
        "previous commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/layout/activity_details.xml",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:tools=\"http://schemas.android.com/tools\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  android:orientation=\"vertical\"\n+  android:paddingBottom=\"@dimen/activity_vertical_margin\"\n+  android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n+  android:paddingRight=\"@dimen/activity_horizontal_margin\"\n+  android:paddingTop=\"@dimen/activity_vertical_margin\"\n+  tools:context=\"novoda.com.sandbox.DetailsActivity\">\n+\n+  <ImageView\n+    android:id=\"@+id/details_activity_application_logo\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\" />\n+\n+  <TextView\n+    android:id=\"@+id/details_activity_application_name\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"/>\n+\n+  <TextView\n+    android:id=\"@+id/details_activity_package_name\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\" />\n+\n+  <TextView\n+    android:id=\"@+id/details_activity_data_directory\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\" />\n+\n+  <TextView\n+    android:id=\"@+id/details_activity_target_sdk\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\" />\n+\n+  <Button\n+    android:id=\"@+id/details_activity_launch_application\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:text=\"Launch application\"/>\n+\n+</LinearLayout>\n+\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/.gitignore",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+*.iml\n+.gradle\n+/local.properties\n+/.idea/workspace.xml\n+/.idea/libraries\n+.DS_Store\n+/build\n+/captures\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/.gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+/build\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/build.gradle",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 23\n+    buildToolsVersion \"23.0.3\"\n+\n+    defaultConfig {\n+        applicationId \"novoda.com.sandbox\"\n+        minSdkVersion 16\n+        targetSdkVersion 23\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+}\n+\n+dependencies {\n+    compile fileTree(dir: 'libs', include: ['*.jar'])\n+    testCompile 'junit:junit:4.12'\n+    compile 'com.android.support:appcompat-v7:23.3.0'\n+}\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/proguard-rules.pro",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+# Add project specific ProGuard rules here.\n+# By default, the flags in this file are appended to flags specified\n+# in /opt/android-sdk/tools/proguard/proguard-android.txt\n+# You can edit the include path and order by changing the proguardFiles\n+# directive in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# Add any project specific keep options here:\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/AndroidManifest.xml",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  package=\"novoda.com.sandbox\">\n+\n+  <application\n+    android:name=\".Application\"\n+    android:allowBackup=\"true\"\n+    android:icon=\"@mipmap/ic_launcher\"\n+    android:label=\"@string/app_name\"\n+    android:supportsRtl=\"true\"\n+    android:theme=\"@style/AppTheme\">\n+\n+    <activity android:name=\".MainActivity\">\n+      <intent-filter>\n+        <action android:name=\"android.intent.action.MAIN\" />\n+        <category android:name=\"android.intent.category.LAUNCHER\" />\n+      </intent-filter>\n+    </activity>\n+\n+    <activity android:name=\".SignInActivity\">\n+      <intent-filter>\n+        <action android:name=\"${applicationId}.SIGN_IN\" />\n+        <category android:name=\"android.intent.category.DEFAULT\" />\n+      </intent-filter>\n+    </activity>\n+\n+  </application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/java/novoda/com/sandbox/Application.java",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+package novoda.com.sandbox;\n+\n+public class Application extends android.app.Application {\n+\n+    private static boolean signedIn = false;\n+\n+    public static void setSignedIn() {\n+        signedIn = true;\n+    }\n+\n+    public static void setSignedOut() {\n+        signedIn = false;\n+    }\n+\n+    public static boolean isSignedIn() {\n+        return signedIn;\n+    }\n+}\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/java/novoda/com/sandbox/MainActivity.java",
            "additions": 90,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,90 @@\n+package novoda.com.sandbox;\n+\n+import android.content.pm.ApplicationInfo;\n+import android.content.pm.PackageManager;\n+import android.os.Bundle;\n+import android.support.v7.app.AppCompatActivity;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+import android.widget.Button;\n+import android.widget.ListView;\n+\n+import java.util.List;\n+\n+public class MainActivity extends AppCompatActivity {\n+\n+    private ArrayAdapter<String> adapter;\n+    private Button signInButton;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+\n+        resetSignInStateOnRotation(savedInstanceState);\n+\n+        signInButton = (Button) findViewById(R.id.main_activity_sign_in_button);\n+        signInButton.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (Application.isSignedIn()) {\n+                    Application.setSignedOut();\n+                    refreshUi();\n+                } else {\n+                    startActivity(SignInActivity.createIntent());\n+                }\n+            }\n+        });\n+\n+        adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1) {\n+            @Override\n+            public View getView(final int position, View convertView, ViewGroup parent) {\n+                View view = super.getView(position, convertView, parent);\n+                view.setOnClickListener(new View.OnClickListener() {\n+                    @Override\n+                    public void onClick(View v) {\n+                        startActivity(getPackageManager().getLaunchIntentForPackage(adapter.getItem(position)));\n+                    }\n+                });\n+                return view;\n+            }\n+        };\n+\n+        ListView listView = (ListView) findViewById(R.id.main_activity_random_numbers_passwords);\n+        listView.setAdapter(adapter);\n+    }\n+\n+    private void resetSignInStateOnRotation(Bundle savedInstanceState) {\n+        if (savedInstanceState != null) {\n+            Application.setSignedOut();\n+        }\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        super.onResume();\n+        refreshUi();\n+    }\n+\n+    private void refreshUi() {\n+        updateSignInState();\n+        showData();\n+    }\n+\n+    private void updateSignInState() {\n+        signInButton.setText(Application.isSignedIn() ? \"Sign out\" : \"Sign in\");\n+    }\n+\n+    private void showData() {\n+        adapter.clear();\n+        List<ApplicationInfo> installedApplications = getPackageManager().getInstalledApplications(PackageManager.GET_META_DATA);\n+        if (Application.isSignedIn()) {\n+            for (ApplicationInfo application : installedApplications) {\n+                adapter.add(application.packageName);\n+            }\n+        } else {\n+            adapter.add(installedApplications.get(0).packageName);\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/java/novoda/com/sandbox/SignInActivity.java",
            "additions": 77,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,77 @@\n+package novoda.com.sandbox;\n+\n+import android.app.*;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+import android.view.View;\n+import android.widget.EditText;\n+\n+public class SignInActivity extends Activity {\n+\n+    private static final String ACTION = BuildConfig.APPLICATION_ID + \".SIGN_IN\";\n+    private static final int MINIMUM_INPUT_LENGTH = 4;\n+\n+    private EditText userNameEditText;\n+    private EditText passwordEditText;\n+    private View submitButton;\n+    private AlertDialog invalidCredentialsDialog;\n+\n+    public static Intent createIntent() {\n+        return new Intent(ACTION);\n+    }\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_sign_in);\n+\n+        userNameEditText = (EditText) findViewById(R.id.sign_in_activity_username_field);\n+        passwordEditText = (EditText) findViewById(R.id.sign_in_activity_password_field);\n+\n+        userNameEditText.addTextChangedListener(signInEnablingSubmitTextWatcher);\n+        passwordEditText.addTextChangedListener(signInEnablingSubmitTextWatcher);\n+\n+        invalidCredentialsDialog = new AlertDialog.Builder(SignInActivity.this).setMessage(\"Oops something went wrong, is your username and password more than 4 characters?\")\n+                .setNeutralButton(\"ok\", null)\n+                .create();\n+\n+        submitButton = findViewById(R.id.sign_in_activity_submit_button);\n+        submitButton.setEnabled(false);\n+        submitButton.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (credentialsAreInvalid()) {\n+                    invalidCredentialsDialog.show();\n+                } else {\n+                    Application.setSignedIn();\n+                    finish();\n+                }\n+            }\n+        });\n+\n+    }\n+\n+    private boolean credentialsAreInvalid() {\n+        return userNameEditText.getText().toString().length() < MINIMUM_INPUT_LENGTH\n+                || passwordEditText.getText().toString().length() < MINIMUM_INPUT_LENGTH;\n+    }\n+\n+    private TextWatcher signInEnablingSubmitTextWatcher = new TextWatcher() {\n+        @Override\n+        public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n+            // do nothing\n+        }\n+\n+        @Override\n+        public void onTextChanged(CharSequence s, int start, int before, int count) {\n+            submitButton.setEnabled(userNameEditText.getText().length() > 0 && passwordEditText.getText().length() > 0);\n+        }\n+\n+        @Override\n+        public void afterTextChanged(Editable s) {\n+            // do nothing\n+        }\n+    };\n+}\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/layout/activity_main.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:tools=\"http://schemas.android.com/tools\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  android:orientation=\"vertical\"\n+  android:paddingBottom=\"@dimen/activity_vertical_margin\"\n+  android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n+  android:paddingRight=\"@dimen/activity_horizontal_margin\"\n+  android:paddingTop=\"@dimen/activity_vertical_margin\"\n+  tools:context=\"novoda.com.sandbox.MainActivity\">\n+\n+  <Button\n+    android:id=\"@+id/main_activity_sign_in_button\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"/>\n+\n+  <ListView\n+    android:id=\"@+id/main_activity_random_numbers_passwords\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"/>\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/layout/activity_sign_in.xml",
            "additions": 32,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:tools=\"http://schemas.android.com/tools\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  android:orientation=\"vertical\"\n+  android:paddingBottom=\"@dimen/activity_vertical_margin\"\n+  android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n+  android:paddingRight=\"@dimen/activity_horizontal_margin\"\n+  android:paddingTop=\"@dimen/activity_vertical_margin\"\n+  tools:context=\"novoda.com.sandbox.SignInActivity\">\n+\n+  <EditText\n+    android:id=\"@+id/sign_in_activity_username_field\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:hint=\"User name\"/>\n+\n+  <EditText\n+    android:id=\"@+id/sign_in_activity_password_field\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:hint=\"Password\"\n+    android:inputType=\"textPassword\"/>\n+\n+  <Button\n+    android:id=\"@+id/sign_in_activity_submit_button\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:text=\"Submit\"/>\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/mipmap-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Sandbox/app/src/main/res/mipmap-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/mipmap-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Sandbox/app/src/main/res/mipmap-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Sandbox/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Sandbox/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Sandbox/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/values-w820dp/dimens.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<resources>\n+  <!-- Example customization of dimensions originally defined in res/values/dimens.xml\n+         (such as screen margins) for screens with more than 820dp of available width. This\n+         would include 7\" and 10\" devices in landscape (~960dp and ~1280dp respectively). -->\n+  <dimen name=\"activity_horizontal_margin\">64dp</dimen>\n+</resources>\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/values/colors.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+  <color name=\"colorPrimary\">#3F51B5</color>\n+  <color name=\"colorPrimaryDark\">#303F9F</color>\n+  <color name=\"colorAccent\">#FF4081</color>\n+</resources>\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/values/dimens.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<resources>\n+  <!-- Default screen margins, per the Android Design guidelines. -->\n+  <dimen name=\"activity_horizontal_margin\">16dp</dimen>\n+  <dimen name=\"activity_vertical_margin\">16dp</dimen>\n+</resources>\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/values/strings.xml",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+<resources>\n+  <string name=\"app_name\">Sandbox</string>\n+</resources>\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/app/src/main/res/values/styles.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<resources>\n+\n+  <!-- Base application theme. -->\n+  <style name=\"AppTheme\"\n+    parent=\"Theme.AppCompat.Light.DarkActionBar\">\n+    <!-- Customize your theme here. -->\n+    <item name=\"colorPrimary\">@color/colorPrimary</item>\n+    <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n+    <item name=\"colorAccent\">@color/colorAccent</item>\n+  </style>\n+\n+</resources>\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/build.gradle",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:2.0.0'\n+\n+        // NOTE: Do not place your application dependencies here; they belong\n+        // in the individual module build.gradle files\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        jcenter()\n+    }\n+}\n+\n+task clean(type: Delete) {\n+    delete rootProject.buildDir\n+}\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/gradle.properties",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+# Project-wide Gradle settings.\n+\n+# IDE (e.g. Android Studio) users:\n+# Gradle settings configured through the IDE *will override*\n+# any settings specified in this file.\n+\n+# For more details on how to configure your build environment visit\n+# http://www.gradle.org/docs/current/userguide/build_environment.html\n+\n+# Specifies the JVM arguments used for the daemon process.\n+# The setting is particularly useful for tweaking memory settings.\n+# Default value: -Xmx10248m -XX:MaxPermSize=256m\n+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n+\n+# When configured, Gradle will run in incubating parallel mode.\n+# This option should only be used with decoupled projects. More details, visit\n+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n+# org.gradle.parallel=true\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Sandbox/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Mon Dec 28 10:00:20 PST 2015\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/gradlew",
            "additions": 160,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/gradlew.bat",
            "additions": 90,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,90 @@\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:init\r\n+@rem Get command-line arguments, handling Windowz variants\r\n+\r\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n+if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n+\r\n+:win9xME_args\r\n+@rem Slurp the command line arguments.\r\n+set CMD_LINE_ARGS=\r\n+set _SKIP=2\r\n+\r\n+:win9xME_args_slurp\r\n+if \"x%~1\" == \"x\" goto execute\r\n+\r\n+set CMD_LINE_ARGS=%*\r\n+goto execute\r\n+\r\n+:4NT_args\r\n+@rem Get arguments from the 4NT Shell from JP Software\r\n+set CMD_LINE_ARGS=%$\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\n"
    },
    {
        "commit hash": "512d102353b868953af061f128ad3d9e177208f8",
        "previous commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "diff stats": {
            "file_path": "Sandbox/settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+include ':app'\n"
    },
    {
        "commit hash": "9cb3bf2ec70add4185361cbb78c51c8562a442e5",
        "previous commit hash": "783808ff0b62fa74d5ea3a2342ccc3242b8c6761",
        "diff stats": {
            "file_path": "README.md",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -24,7 +24,9 @@ This is a collection of basic android examples created by Novoda.\n * [TabHostExample](http://github.com/novoda/android-demos/tree/master/TabHostExample)\n * [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n * [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n+\n #Demos of Novoda Open Source (NOS) libraries and projects\n+\n * [Simple Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-simple)\n * [Extended Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-extended)\n * [Demo for Reactive Espresso Testing](https://github.com/novoda/rxpresso/tree/master/demo)\n@@ -33,8 +35,11 @@ This is a collection of basic android examples created by Novoda.\n * [Demo for image based palettes](https://github.com/novoda/material-painter)\n * [Demo for Merlin (network connectivity)](https://github.com/novoda/merlin/tree/master/demo)\n * [Demo for simple XML parsing](https://github.com/novoda/simple-easy-xml-parser/tree/master/demoAndroid)\n+\n #Further NOS work\n+\n ##All NOS libraries\n+\n * [Download Manager](https://github.com/novoda/download-manager)\n * [Merlin - Connectivity Checker](https://github.com/novoda/merlin)\n * [Landing Strip](https://github.com/novoda/landing-strip)\n@@ -42,7 +47,9 @@ This is a collection of basic android examples created by Novoda.\n * [Notils](https://github.com/novoda/notils)\n * [Simple XML Parser](https://github.com/novoda/simple-easy-xml-parser)\n * [RxPresso](https://github.com/novoda/rxpresso)\n+\n ##All NOS gradle plugins\n+\n * [Bintray Release](https://github.com/novoda/bintray-release)\n * [Sqlite Analyzer](https://github.com/novoda/sqlite-analyzer)\n * [Android Command Plugin](https://github.com/novoda/gradle-android-command-plugin)\n"
    },
    {
        "commit hash": "1a7b4eeabe9319c604b5a986d30c0da8a2637550",
        "previous commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "diff stats": {
            "file_path": "OptionalDependencies/README.md",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+#Demo OptionalDependencies [![](https://raw.githubusercontent.com/novoda/novoda/master/assets/btn_apache_lisence.png)](LICENSE.txt)\n+\n+OptionalDependencies shows how to create two product flavours that have different implementations of one method.\n+\n+The demo uses a base class `BaseOptionalDependencies` that provides no-op methods and is used in the different flavours.\n+Each flavour only has to overwrite relevant methods for their flavour. This ensures that the main class `OptionalDependencies`\n+has the same signature in all flavours.\n"
    },
    {
        "commit hash": "1a7b4eeabe9319c604b5a986d30c0da8a2637550",
        "previous commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "diff stats": {
            "file_path": "README.md",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -19,6 +19,7 @@ This is a collection of basic android examples created by Novoda.\n * [MapApiV2Demo](http://github.com/novoda/android-demos/tree/master/MapApiV2Demo)\n * [MultipleContacts](http://github.com/novoda/android-demos/tree/master/MultipleContacts)\n * [MultpileActivityTabHost](http://github.com/novoda/android-demos/tree/master/MultpileActivityTabHost)\n+* [OptionalDependencies](http://github.com/novoda/android-demos/tree/master/OptionalDependencies)\n * [PinchZoomDetector](http://github.com/novoda/android-demos/tree/master/PinchZoomDetector)\n * [PushNotifications/c2dm_urban_airship](http://github.com/novoda/android-demos/tree/master/PushNotifications/c2dm_urban_airship)\n * [simperAudioStreamer](http://github.com/novoda/android-demos/tree/master/simperAudioStreamer)\n@@ -28,7 +29,6 @@ This is a collection of basic android examples created by Novoda.\n * [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n * [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n #Demos of Novoda Open Source (NOS) libraries and projects\n-\n * [Simple Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-simple)\n * [Extended Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-extended)\n * [Demo for Reactive Espresso Testing](https://github.com/novoda/rxpresso/tree/master/demo)\n@@ -38,7 +38,6 @@ This is a collection of basic android examples created by Novoda.\n * [Demo for Merlin (network connectivity)](https://github.com/novoda/merlin/tree/master/demo)\n * [Demo for simple XML parsing](https://github.com/novoda/simple-easy-xml-parser/tree/master/demoAndroid)\n #Further NOS work\n-\n ##All NOS libraries\n * [Download Manager](https://github.com/novoda/download-manager)\n * [Merlin - Connectivity Checker](https://github.com/novoda/merlin)\n@@ -47,7 +46,7 @@ This is a collection of basic android examples created by Novoda.\n * [Notils](https://github.com/novoda/notils)\n * [Simple XML Parser](https://github.com/novoda/simple-easy-xml-parser)\n * [RxPresso](https://github.com/novoda/rxpresso)\n-##Gradle plugins\n+##All NOS gradle plugins\n * [Bintray Release](https://github.com/novoda/bintray-release)\n * [Sqlite Analyzer](https://github.com/novoda/sqlite-analyzer)\n * [Android Command Plugin](https://github.com/novoda/gradle-android-command-plugin)\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/build.gradle",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 22\n+    buildToolsVersion \"22.0.1\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.demo.optionaldependencies\"\n+        minSdkVersion 4\n+        targetSdkVersion 22\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+\n+    productFlavors {\n+        free {\n+        }\n+\n+        paid {\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/free/java/com/novoda/demo/optionaldependencies/OptionalDependencies.java",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,4 @@\n+package com.novoda.demo.optionaldependencies;\n+\n+public class OptionalDependencies extends BaseOptionalDependencies {\n+}\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/main/AndroidManifest.xml",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.novoda.demo.optionaldependencies\" >\n+\n+    <application\n+        android:allowBackup=\"true\"\n+        android:icon=\"@mipmap/ic_launcher\"\n+        android:label=\"@string/app_name\" >\n+        <activity\n+            android:name=\"com.novoda.demo.optionaldependencies.optionaldependencies.MainActivity\">\n+        </activity>\n+    </application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/main/java/com/novoda/demo/optionaldependencies/BaseOptionalDependencies.java",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+package com.novoda.demo.optionaldependencies;\n+\n+import android.widget.TextView;\n+\n+public class BaseOptionalDependencies {\n+    public void updatePaidContent(TextView textView) {\n+        // no-op\n+    }\n+}\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/main/java/com/novoda/demo/optionaldependencies/MainActivity.java",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.demo.optionaldependencies;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+public class MainActivity extends Activity {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+\n+        OptionalDependencies optionalDependencies = ((OptionalDependencyApplication) getApplication()).getOptionalDependencies();\n+\n+        TextView paidContent = (TextView) findViewById(R.id.paid_content);\n+        optionalDependencies.updatePaidContent(paidContent);\n+    }\n+}\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/main/java/com/novoda/demo/optionaldependencies/OptionalDependencyApplication.java",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+package com.novoda.demo.optionaldependencies;\n+\n+import android.app.Application;\n+\n+import com.novoda.demo.optionaldependencies.OptionalDependencies;\n+\n+public class OptionalDependencyApplication extends Application {\n+    private OptionalDependencies optionalDependencies;\n+\n+    @Override\n+    public void onCreate() {\n+        super.onCreate();\n+        optionalDependencies = new OptionalDependencies();\n+    }\n+\n+    public OptionalDependencies getOptionalDependencies() {\n+        return optionalDependencies;\n+    }\n+}\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/main/res/layout/activity_main.xml",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:tools=\"http://schemas.android.com/tools\"\n+  android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\"\n+  tools:context=\"com.novoda.demo.optionaldependencies.optionaldependencies.MainActivity\">\n+\n+  <TextView\n+    android:id=\"@+id/free_content\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"\n+    android:text=\"@string/free_content\" />\n+\n+  <TextView\n+    android:id=\"@+id/paid_content\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"/>\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/main/res/mipmap-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/OptionalDependencies/src/main/res/mipmap-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/main/res/values/strings.xml",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,4 @@\n+<resources>\n+  <string name=\"app_name\">Optional Dependencies</string>\n+  <string name=\"free_content\">Free content</string>\n+</resources>\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/paid/java/com/novoda/demo/optionaldependencies/OptionalDependencies.java",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.demo.optionaldependencies;\n+\n+import android.widget.TextView;\n+\n+public class OptionalDependencies extends BaseOptionalDependencies {\n+    @Override\n+    public void updatePaidContent(TextView textView) {\n+        textView.setText(R.string.paid_content);\n+    }\n+}\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "OptionalDependencies/src/paid/res/values/strings.xml",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,3 @@\n+<resources>\n+  <string name=\"paid_content\">Paid content</string>\n+</resources>\n"
    },
    {
        "commit hash": "ecb9bf70c20c811168f1eefbee0bdedd7fc7843e",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -20,6 +20,7 @@ project(':LivewallpaperSwitchLeftRight').projectDir = new File('Livewallpaper/sw\n include 'MapApiV2Demo'\n include 'MultipleContacts'\n include 'MultpileActivityTabHost'\n+include 'OptionalDependencies'\n include 'PinchZoomDetector'\n include 'PushNotifications'\n project(':PushNotifications').projectDir = new File('PushNotifications/c2dm_urban_airship')\n"
    },
    {
        "commit hash": "514524f4d86e406636c8b7c39a1cc540ca98268c",
        "previous commit hash": "51b2098bb81009b296a3aec826d1223185815182",
        "diff stats": {
            "file_path": "README.md",
            "additions": 1,
            "deletions": 6
        },
        "diff content": "@@ -6,7 +6,6 @@ This is a collection of basic android examples created by Novoda.\n * [CompassExample](http://github.com/novoda/android-demos/tree/master/CompassExample)\n * [ContactSelector](http://github.com/novoda/android-demos/tree/master/ContactSelector)\n * [CustomActivityTransition](http://github.com/novoda/android-demos/tree/master/CustomActivityTransition)\n-* [CustomTabsHack](http://github.com/novoda/android-demos/tree/master/CustomTabsHack)\n * [DynamicListItems](http://github.com/novoda/android-demos/tree/master/DynamicListItems)\n * [encryption](http://github.com/novoda/android-demos/tree/master/encryption)\n * [FixedSizeTextColumns](http://github.com/novoda/android-demos/tree/master/FixedSizeTextColumns)\n@@ -18,17 +17,14 @@ This is a collection of basic android examples created by Novoda.\n * [Livewallpaper/switch_leftright](http://github.com/novoda/android-demos/tree/master/Livewallpaper/switch_leftright)\n * [MapApiV2Demo](http://github.com/novoda/android-demos/tree/master/MapApiV2Demo)\n * [MultipleContacts](http://github.com/novoda/android-demos/tree/master/MultipleContacts)\n-* [MultpileActivityTabHost](http://github.com/novoda/android-demos/tree/master/MultpileActivityTabHost)\n * [PinchZoomDetector](http://github.com/novoda/android-demos/tree/master/PinchZoomDetector)\n * [PushNotifications/c2dm_urban_airship](http://github.com/novoda/android-demos/tree/master/PushNotifications/c2dm_urban_airship)\n * [simperAudioStreamer](http://github.com/novoda/android-demos/tree/master/simperAudioStreamer)\n * [sms](http://github.com/novoda/android-demos/tree/master/sms)\n * [TabHostExample](http://github.com/novoda/android-demos/tree/master/TabHostExample)\n-* [TabHostMultipleActivityBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostMultipleActivityBrowsing)\n * [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n * [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n #Demos of Novoda Open Source (NOS) libraries and projects\n-\n * [Simple Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-simple)\n * [Extended Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-extended)\n * [Demo for Reactive Espresso Testing](https://github.com/novoda/rxpresso/tree/master/demo)\n@@ -38,7 +34,6 @@ This is a collection of basic android examples created by Novoda.\n * [Demo for Merlin (network connectivity)](https://github.com/novoda/merlin/tree/master/demo)\n * [Demo for simple XML parsing](https://github.com/novoda/simple-easy-xml-parser/tree/master/demoAndroid)\n #Further NOS work\n-\n ##All NOS libraries\n * [Download Manager](https://github.com/novoda/download-manager)\n * [Merlin - Connectivity Checker](https://github.com/novoda/merlin)\n@@ -47,7 +42,7 @@ This is a collection of basic android examples created by Novoda.\n * [Notils](https://github.com/novoda/notils)\n * [Simple XML Parser](https://github.com/novoda/simple-easy-xml-parser)\n * [RxPresso](https://github.com/novoda/rxpresso)\n-##Gradle plugins\n+##All NOS gradle plugins\n * [Bintray Release](https://github.com/novoda/bintray-release)\n * [Sqlite Analyzer](https://github.com/novoda/sqlite-analyzer)\n * [Android Command Plugin](https://github.com/novoda/gradle-android-command-plugin)\n"
    },
    {
        "commit hash": "87641e562f9010476d8f8d8ea2527325fcfc298d",
        "previous commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "diff stats": {
            "file_path": "README.md",
            "additions": 1,
            "deletions": 4
        },
        "diff content": "@@ -20,7 +20,6 @@ This is a collection of basic android examples created by Novoda.\n * [MultipleContacts](http://github.com/novoda/android-demos/tree/master/MultipleContacts)\n * [MultpileActivityTabHost](http://github.com/novoda/android-demos/tree/master/MultpileActivityTabHost)\n * [PinchZoomDetector](http://github.com/novoda/android-demos/tree/master/PinchZoomDetector)\n-* [PushNotifications/c2dm_urban_airship](http://github.com/novoda/android-demos/tree/master/PushNotifications/c2dm_urban_airship)\n * [simperAudioStreamer](http://github.com/novoda/android-demos/tree/master/simperAudioStreamer)\n * [sms](http://github.com/novoda/android-demos/tree/master/sms)\n * [TabHostExample](http://github.com/novoda/android-demos/tree/master/TabHostExample)\n@@ -28,7 +27,6 @@ This is a collection of basic android examples created by Novoda.\n * [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n * [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n #Demos of Novoda Open Source (NOS) libraries and projects\n-\n * [Simple Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-simple)\n * [Extended Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-extended)\n * [Demo for Reactive Espresso Testing](https://github.com/novoda/rxpresso/tree/master/demo)\n@@ -38,7 +36,6 @@ This is a collection of basic android examples created by Novoda.\n * [Demo for Merlin (network connectivity)](https://github.com/novoda/merlin/tree/master/demo)\n * [Demo for simple XML parsing](https://github.com/novoda/simple-easy-xml-parser/tree/master/demoAndroid)\n #Further NOS work\n-\n ##All NOS libraries\n * [Download Manager](https://github.com/novoda/download-manager)\n * [Merlin - Connectivity Checker](https://github.com/novoda/merlin)\n@@ -47,7 +44,7 @@ This is a collection of basic android examples created by Novoda.\n * [Notils](https://github.com/novoda/notils)\n * [Simple XML Parser](https://github.com/novoda/simple-easy-xml-parser)\n * [RxPresso](https://github.com/novoda/rxpresso)\n-##Gradle plugins\n+##All NOS gradle plugins\n * [Bintray Release](https://github.com/novoda/bintray-release)\n * [Sqlite Analyzer](https://github.com/novoda/sqlite-analyzer)\n * [Android Command Plugin](https://github.com/novoda/gradle-android-command-plugin)\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/README",
            "additions": 0,
            "deletions": 66
        },
        "diff content": "@@ -1,66 +0,0 @@\n-Step 1:\n-\n-Urban Airship for Android uses C2DM for push notifications. In order to begin you first need to register an email id with Google\u2019s C2DM framework which can be found here: \n-\n-http://code.google.com/android/c2dm/signup.html\n-\n-you will also be required to register the application\u2019s package name.\n-\n-Step 2:\n-\n-Register with Urban Airship on : http://urbanairship.com/ and wait for the confirmation mail from Google.\n-\n-Step 3:\n-\n-Once you have the confirmation mail from Google informing you that your account can now successfully send push notifications you need to create a new application on Urban Airship. Log into Urban Airship and then create a new application. During creation make sure that you have Push Notification Support enabled and you register the same package name you registered with Google\u2019s servers.\n-\n-Step 4:\n-\n-In order to get the C2DM authorisation token you need to execute a curl command\n-\n-curl https://www.google.com/accounts/ClientLogin -d Email=your_user -d \"Passwd=your_password\" -d accountType=GOOGLE -d source=Google-cURL-Example -d service=ac2dm\n-\n-Enter your password and email in the required fields. The response will resemble this\n-\n-SID=DQAAAPMAAACMY6LUPhXt_co8ESnZa9_bX17MJJZj2AGlDr4gcNIXxq7OJBMPFiT8ry756bE_0rmx\n-RfH6wLP4fwUO53qJzN6XlXufColJYUlqsT-vTMiZEPEDE_j_dTQcWRnSk2jMyQOTHLve0sSrthqMVPwT\n-kBZJn2pb8gsRsBUMHQbZRgCjEnMO8Ci_fkgKvgUYsX3xjlNO7O8znPWcxwK1KQjJZMGcYs8iM02s4u5g\n-ujij2hejb2Jg-F92t9XUmp51Dea-6FPw2OiOuIOobjh7lQdoO63Rp_qc040hICXl_8mx-DgWyCeUX1bh\n-s1EZb4c3qNiK-wRuSIi2ioA3VnpDBL231C35\n-LSID=DQAAAPUAAADaz7cSh--p87KoL0qT3eyLvA76QdMLtNaTYNMdOBMcH09_AEV9g3a3Js_7Lwgnw-N\n-sTRwVH719WITJKkzkuRwEhD6PJ92XXrpNxco4hZecnpsL07RxRHaWY3RqwJDUba-Le4UWeALr7ybdrz4\n-SEJy8Jlw9yGr8hctxK6wWAWToGQF3Bw9K9DiAx-E7ZyfWaZt98Y_ygPLg86hEUbBodIQD6UBZ75vDAbJ\n-YxhIP6yOBFCOCuP7NjDJ2ET1_IBDTEoCkXvVgky57w6N5Z8fO7QUoI6FUfGV9sY8y68G27PzwaeQcLv9\n-UuL6UGFRYOEfOxsKhK9Z99UoySuPzGcOgo7Sr\n-Auth=DGAAAPYAAAA7M1KQj2uTozkpD3p0J-X32eVRbK2a7oXPtNkZ3Uon6Kw8RySEds7ygjgB95tC0c5\n-Y3CzEUpHHIytC1KuF4s7majdRZFtqCRKwuTmLDALvyGGU8dv4FUUvMC4i016Epuk8jpq0QKTccmv2yCi\n-RgoIr7oMWkX5NuuYAmLO-m8i52AqDcVg3cyRatVHmNZnpfmhs8bXKjjvFAzP8r4oaH5Z33ibQRljCXeR\n-e71lFjBsIQGvmwnV3bzTJTza4aKkmlfGTA9Zk5p4QlgXHlpvmgWznbmm_gp7t5Q4yXyR9AlMj1W6mvfk\n-_PzzjcGh_8AW-5f9iFSFUjxwDrRJKDAXKc0ko\n-Extract the \u201cAuth\u201d portion of it i.e. \n-\n-DGAAAPYAAAA7M1KQj2uTozkpD3p0J-X32eVRbK2a7oXPtNkZ3Uon6Kw8RySEds7ygjgB95tC0c5\n-Y3CzEUpHHIytC1KuF4s7majdRZFtqCRKwuTmLDALvyGGU8dv4FUUvMC4i016Epuk8jpq0QKTccmv2yCi\n-RgoIr7oMWkX5NuuYAmLO-m8i52AqDcVg3cyRatVHmNZnpfmhs8bXKjjvFAzP8r4oaH5Z33ibQRljCXeR\n-e71lFjBsIQGvmwnV3bzTJTza4aKkmlfGTA9Zk5p4QlgXHlpvmgWznbmm_gp7t5Q4yXyR9AlMj1W6mvfk\n-_PzzjcGh_8AW-5f9iFSFUjxwDrRJKDAXKc0ko\n-\n-And enter it into the urban airship application field which requests for the C2DM authorisation token. And finally create the Urban Airship app.\n-\n-Step 5:\n-\n-Create android project as per the example posted on github at: \n-\n-https://github.com/novoda/UrbanAirshipDemo\n-\n-Step 6:\n-\n-Once the code is compiled in order to test the push notifications log into your urban airship account and goto the Test Push Notifications, here you need your device token in order to test the notification.\n-\n-You can get the Token ID from the logs, search for a Log that resembles:\n-\n-01-04 15:17:58.746: D/Push Sample - UALib(9606): Updating APID: 17b3c59d-8338-4dd8-b6de-410a693e742a\n-\n-OR\n-\n-you can test by sending a broadcast\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/README.md",
            "additions": 0,
            "deletions": 68
        },
        "diff content": "@@ -1,68 +0,0 @@\n-#Demo PushNotifications/c2dm_urban_airship\n-\n-##Step 1:\n-\n-Urban Airship for Android uses C2DM for push notifications. In order to begin you first need to register an email id with Google\u2019s C2DM framework which can be found here:\n-\n-http://code.google.com/android/c2dm/signup.html\n-\n-you will also be required to register the application\u2019s package name.\n-\n-##Step 2:\n-\n-Register with Urban Airship on : http://urbanairship.com/ and wait for the confirmation mail from Google.\n-\n-##Step 3:\n-\n-Once you have the confirmation mail from Google informing you that your account can now successfully send push notifications you need to create a new application on Urban Airship. Log into Urban Airship and then create a new application. During creation make sure that you have Push Notification Support enabled and you register the same package name you registered with Google\u2019s servers.\n-\n-##Step 4:\n-\n-In order to get the C2DM authorisation token you need to execute a curl command\n-\n-curl https://www.google.com/accounts/ClientLogin -d Email=your_user -d \"Passwd=your_password\" -d accountType=GOOGLE -d source=Google-cURL-Example -d service=ac2dm\n-\n-Enter your password and email in the required fields. The response will resemble this\n-\n-SID=DQAAAPMAAACMY6LUPhXt_co8ESnZa9_bX17MJJZj2AGlDr4gcNIXxq7OJBMPFiT8ry756bE_0rmx\n-RfH6wLP4fwUO53qJzN6XlXufColJYUlqsT-vTMiZEPEDE_j_dTQcWRnSk2jMyQOTHLve0sSrthqMVPwT\n-kBZJn2pb8gsRsBUMHQbZRgCjEnMO8Ci_fkgKvgUYsX3xjlNO7O8znPWcxwK1KQjJZMGcYs8iM02s4u5g\n-ujij2hejb2Jg-F92t9XUmp51Dea-6FPw2OiOuIOobjh7lQdoO63Rp_qc040hICXl_8mx-DgWyCeUX1bh\n-s1EZb4c3qNiK-wRuSIi2ioA3VnpDBL231C35\n-LSID=DQAAAPUAAADaz7cSh--p87KoL0qT3eyLvA76QdMLtNaTYNMdOBMcH09_AEV9g3a3Js_7Lwgnw-N\n-sTRwVH719WITJKkzkuRwEhD6PJ92XXrpNxco4hZecnpsL07RxRHaWY3RqwJDUba-Le4UWeALr7ybdrz4\n-SEJy8Jlw9yGr8hctxK6wWAWToGQF3Bw9K9DiAx-E7ZyfWaZt98Y_ygPLg86hEUbBodIQD6UBZ75vDAbJ\n-YxhIP6yOBFCOCuP7NjDJ2ET1_IBDTEoCkXvVgky57w6N5Z8fO7QUoI6FUfGV9sY8y68G27PzwaeQcLv9\n-UuL6UGFRYOEfOxsKhK9Z99UoySuPzGcOgo7Sr\n-Auth=DGAAAPYAAAA7M1KQj2uTozkpD3p0J-X32eVRbK2a7oXPtNkZ3Uon6Kw8RySEds7ygjgB95tC0c5\n-Y3CzEUpHHIytC1KuF4s7majdRZFtqCRKwuTmLDALvyGGU8dv4FUUvMC4i016Epuk8jpq0QKTccmv2yCi\n-RgoIr7oMWkX5NuuYAmLO-m8i52AqDcVg3cyRatVHmNZnpfmhs8bXKjjvFAzP8r4oaH5Z33ibQRljCXeR\n-e71lFjBsIQGvmwnV3bzTJTza4aKkmlfGTA9Zk5p4QlgXHlpvmgWznbmm_gp7t5Q4yXyR9AlMj1W6mvfk\n-_PzzjcGh_8AW-5f9iFSFUjxwDrRJKDAXKc0ko\n-Extract the \u201cAuth\u201d portion of it i.e.\n-\n-DGAAAPYAAAA7M1KQj2uTozkpD3p0J-X32eVRbK2a7oXPtNkZ3Uon6Kw8RySEds7ygjgB95tC0c5\n-Y3CzEUpHHIytC1KuF4s7majdRZFtqCRKwuTmLDALvyGGU8dv4FUUvMC4i016Epuk8jpq0QKTccmv2yCi\n-RgoIr7oMWkX5NuuYAmLO-m8i52AqDcVg3cyRatVHmNZnpfmhs8bXKjjvFAzP8r4oaH5Z33ibQRljCXeR\n-e71lFjBsIQGvmwnV3bzTJTza4aKkmlfGTA9Zk5p4QlgXHlpvmgWznbmm_gp7t5Q4yXyR9AlMj1W6mvfk\n-_PzzjcGh_8AW-5f9iFSFUjxwDrRJKDAXKc0ko\n-\n-And enter it into the urban airship application field which requests for the C2DM authorisation token. And finally create the Urban Airship app.\n-\n-##Step 5:\n-\n-Create android project as per the example posted on github at:\n-\n-https://github.com/novoda/UrbanAirshipDemo\n-\n-##Step 6:\n-\n-Once the code is compiled in order to test the push notifications log into your urban airship account and goto the Test Push Notifications, here you need your device token in order to test the notification.\n-\n-You can get the Token ID from the logs, search for a Log that resembles:\n-\n-01-04 15:17:58.746: D/Push Sample - UALib(9606): Updating APID: 17b3c59d-8338-4dd8-b6de-410a693e742a\n-\n-OR\n-\n-you can test by sending a broadcast\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/build.gradle",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,23 +0,0 @@\n-apply plugin: 'com.android.application'\n-\n-\n-android {\n-    //'Google Inc.:Google APIs:21'\n-    compileSdkVersion 21\n-    buildToolsVersion \"21.1.2\"\n-\n-    defaultConfig {\n-        applicationId \"com.novoda.demo.pushnotifications.c2dmurbanairship\"\n-        minSdkVersion 14\n-        targetSdkVersion 21\n-        versionCode 1\n-        versionName \"1.0\"\n-    }\n-}\n-\n-dependencies {\n-    compile files('libs/urbanairship-lib-1.0.7.jar')\n-    //compile 'com.android.support:support-v4:21.0.3'\n-    //compile 'com.google.android.gms:play-services:6.5.87'\n-}\n-\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 71
        },
        "diff content": "@@ -1,71 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    package=\"com.novoda.urbanairship.demo\"\n-    android:versionCode=\"1\"\n-    android:versionName=\"1.0\" >\n-\n-    <uses-sdk android:minSdkVersion=\"14\" />\n-\n-    <!-- REQUIRED -->\n-    <uses-permission android:name=\"android.permission.INTERNET\" />\n-    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n-    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n-    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\n-    <uses-permission android:name=\"android.permission.VIBRATE\" />\n-    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n-\n-    <permission\n-        android:name=\"com.novoda.urbanairship.demo.permission.C2D_MESSAGE\"\n-        android:protectionLevel=\"signature\" />\n-\n-    <uses-permission android:name=\"com.novoda.urbanairship.demo.permission.C2D_MESSAGE\" />\n-    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\n-\n-    <application\n-        android:name=\"com.novoda.urbanairship.demo.UADemoApplication\"\n-        android:allowClearUserData=\"true\"\n-        android:enabled=\"true\"\n-        android:icon=\"@drawable/icon\"\n-        android:label=\"@string/app_name\" >\n-        \n-        <activity android:name=\"com.novoda.urbanairship.demo.MainActivity\"\n-                  android:label=\"@string/app_name\">\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity>\n-        \n-        <activity android:name=\"com.novoda.urbanairship.demo.PushPreferencesActivity\" />\n-\n-        <receiver android:name=\"com.urbanairship.CoreReceiver\" >\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n-                <action android:name=\"android.intent.action.ACTION_SHUTDOWN\" />\n-            </intent-filter>\n-        </receiver>\n-\n-        <receiver\n-            android:name=\"com.urbanairship.push.c2dm.C2DMPushReceiver\"\n-            android:permission=\"com.google.android.c2dm.permission.SEND\" >\n-\n-            <!-- Receive the actual message -->\n-            <intent-filter>\n-                <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\n-                <category android:name=\"com.novoda.urbanairship.demo\" />\n-            </intent-filter>\n-            <!-- Receive the registration id -->\n-            <intent-filter>\n-                <action android:name=\"com.google.android.c2dm.intent.REGISTRATION\" />\n-                <category android:name=\"com.novoda.urbanairship.demo\" />\n-            </intent-filter>\n-        </receiver>\n-\n-        <service\n-            android:name=\"com.urbanairship.push.PushService\"\n-            android:process=\":com.urbanairship.push.process\" />\n-\n-        <receiver android:name=\"com.novoda.urbanairship.demo.IntentReceiver\" />\n-    </application>\n-\n-</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/assets/airshipconfig.properties",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/java/com/novoda/urbanairship/demo/IntentReceiver.java",
            "additions": 0,
            "deletions": 100
        },
        "diff content": "@@ -1,100 +0,0 @@\n-/*\n-Copyright 2009-2011 Urban Airship Inc. All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-1. Redistributions of source code must retain the above copyright notice, this\n-list of conditions and the following disclaimer.\n-\n-2. Redistributions in binary form must reproduce the above copyright notice,\n-this list of conditions and the following disclaimer in the documentation\n-and/or other materials provided with the distribution.\n-\n-THIS SOFTWARE IS PROVIDED BY THE URBAN AIRSHIP INC ``AS IS'' AND ANY EXPRESS OR\n-IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n-EVENT SHALL URBAN AIRSHIP INC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n-INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n-OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n-ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-package com.novoda.urbanairship.demo;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Set;\n-\n-import android.content.BroadcastReceiver;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.util.Log;\n-\n-import com.urbanairship.UAirship;\n-import com.urbanairship.push.PushManager;\n-\n-public class IntentReceiver extends BroadcastReceiver {\n-\n-\tprivate static final String logTag = \"PushSample\";\n-\t\n-\t@Override\n-\tpublic void onReceive(Context context, Intent intent) {\n-\t\tLog.i(logTag, \"Received intent: \" + intent.toString());\n-\t\tString action = intent.getAction();\n-\n-\t\tif (action.equals(PushManager.ACTION_PUSH_RECEIVED)) {\n-\n-\t\t    int id = intent.getIntExtra(PushManager.EXTRA_NOTIFICATION_ID, 0);\n-\n-\t\t    Log.i(logTag, \"Received push notification. Alert: \" \n-\t\t            + intent.getStringExtra(PushManager.EXTRA_ALERT)\n-\t\t            + \" [NotificationID=\"+id+\"]\");\n-\n-\t\t    logPushExtras(intent);\n-\n-\t\t} else if (action.equals(PushManager.ACTION_NOTIFICATION_OPENED)) {\n-\n-\t\t\tLog.i(logTag, \"User clicked notification. Message: \" + intent.getStringExtra(PushManager.EXTRA_ALERT));\n-\n-\t\t\tlogPushExtras(intent);\n-\n-            Intent launch = new Intent(Intent.ACTION_MAIN);\n-\t\t\tlaunch.setClass(UAirship.shared().getApplicationContext(), MainActivity.class);\n-\t\t\tlaunch.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n-\t\t\t\n-            UAirship.shared().getApplicationContext().startActivity(launch);\n-\n-\t\t} else if (action.equals(PushManager.ACTION_REGISTRATION_FINISHED)) {\n-            Log.i(logTag, \"Registration complete. APID:\" + intent.getStringExtra(PushManager.EXTRA_APID)\n-                    + \". Valid: \" + intent.getBooleanExtra(PushManager.EXTRA_REGISTRATION_VALID, false));\n-\t\t}\n-\n-\t}\n-\n-\t/**\n-\t * Log the values sent in the payload's \"extra\" dictionary.\n-\t * \n-\t * @param intent A PushManager.ACTION_NOTIFICATION_OPENED or ACTION_PUSH_RECEIVED intent.\n-\t */\n-\tprivate void logPushExtras(Intent intent) {\n-        Set<String> keys = intent.getExtras().keySet();\n-        for (String key : keys) {\n-\n-            //ignore standard C2DM extra keys\n-            List<String> ignoredKeys = (List<String>)Arrays.asList(\n-                    \"collapse_key\",//c2dm collapse key\n-                    \"from\",//c2dm sender\n-                    PushManager.EXTRA_NOTIFICATION_ID,//int id of generated notification (ACTION_PUSH_RECEIVED only)\n-                    PushManager.EXTRA_PUSH_ID,//internal UA push id\n-                    PushManager.EXTRA_ALERT);//ignore alert\n-            if (ignoredKeys.contains(key)) {\n-                continue;\n-            }\n-            Log.i(logTag, \"Push Notification Extra: [\"+key+\" : \" + intent.getStringExtra(key) + \"]\");\n-        }\n-\t}\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/java/com/novoda/urbanairship/demo/MainActivity.java",
            "additions": 0,
            "deletions": 55
        },
        "diff content": "@@ -1,55 +0,0 @@\n-/*\n-Copyright 2009-2011 Urban Airship Inc. All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-1. Redistributions of source code must retain the above copyright notice, this\n-list of conditions and the following disclaimer.\n-\n-2. Redistributions in binary form must reproduce the above copyright notice,\n-this list of conditions and the following disclaimer in the documentation\n-and/or other materials provided with the distribution.\n-\n-THIS SOFTWARE IS PROVIDED BY THE URBAN AIRSHIP INC ``AS IS'' AND ANY EXPRESS OR\n-IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n-EVENT SHALL URBAN AIRSHIP INC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n-INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n-OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n-ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-package com.novoda.urbanairship.demo;\n-\n-import android.content.Intent;\n-import android.os.Bundle;\n-import android.view.View;\n-import android.view.View.OnClickListener;\n-import android.widget.Button;\n-\n-import com.urbanairship.analytics.InstrumentedActivity;\n-\n-public class MainActivity extends InstrumentedActivity {\n-    \n-\n-    @Override\n-    public void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-        setContentView(R.layout.main);\n-        \n-        Button launchButton = (Button) findViewById(R.id.push_preferences_button);\n-        \n-        launchButton.setOnClickListener(new OnClickListener() {\n-        \t\n-            public void onClick(View v) {\n-                Intent intent = new Intent(getBaseContext(), PushPreferencesActivity.class);\n-                startActivity(intent);\n-            }\n-        });\n-\n-    }\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/java/com/novoda/urbanairship/demo/PushPreferencesActivity.java",
            "additions": 0,
            "deletions": 179
        },
        "diff content": "@@ -1,179 +0,0 @@\n-/*\n-Copyright 2009-2011 Urban Airship Inc. All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-1. Redistributions of source code must retain the above copyright notice, this\n-list of conditions and the following disclaimer.\n-\n-2. Redistributions in binary form must reproduce the above copyright notice,\n-this list of conditions and the following disclaimer in the documentation\n-and/or other materials provided with the distribution.\n-\n-THIS SOFTWARE IS PROVIDED BY THE URBAN AIRSHIP INC ``AS IS'' AND ANY EXPRESS OR\n-IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n-EVENT SHALL URBAN AIRSHIP INC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n-INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n-OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n-ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-package com.novoda.urbanairship.demo;\n-\n-import java.util.Calendar;\n-import java.util.Date;\n-\n-import android.content.res.Configuration;\n-import android.os.Bundle;\n-import android.text.format.DateFormat;\n-import android.view.View;\n-import android.view.View.OnClickListener;\n-import android.view.Window;\n-import android.widget.CheckBox;\n-import android.widget.TimePicker;\n-\n-import com.urbanairship.analytics.InstrumentedActivity;\n-import com.urbanairship.push.PushManager;\n-import com.urbanairship.push.PushPreferences;\n-\n-// This class represents the UI and implementation of the activity enabling users\n-// to set Quiet Time preferences.\n-\n-public class PushPreferencesActivity extends InstrumentedActivity {\n-\t\n-    CheckBox pushEnabled;\n-    CheckBox soundEnabled;\n-    CheckBox vibrateEnabled;\n-    CheckBox quietTimeEnabled;\n-    \n-    TimePicker startTime;\n-    TimePicker endTime;\n-    \n-    PushPreferences prefs = PushManager.shared().getPreferences();\n-\n-    \n-    private void pushSettingsActive(boolean b) {\n-    \tsoundEnabled.setEnabled(b);\n-    \tvibrateEnabled.setEnabled(b);\n-    }\n-    \n-    private void quietTimeSettingsActive(boolean b) {\n-    \tstartTime.setEnabled(b);\n-    \tendTime.setEnabled(b);\n-    }\n-    \n-    @Override\n-    public void onCreate(Bundle icicle) {\n-        super.onCreate(icicle);\n-\n-        Window w = getWindow();\n-        w.requestFeature(Window.FEATURE_LEFT_ICON);\n-        setContentView(R.layout.push_preferences_dialog);\n-        \n-        pushEnabled = (CheckBox) findViewById(R.id.push_enabled);\n-        soundEnabled = (CheckBox) findViewById(R.id.sound_enabled);\n-        vibrateEnabled = (CheckBox) findViewById(R.id.vibrate_enabled);\n-        quietTimeEnabled = (CheckBox) findViewById(R.id.quiet_time_enabled);\n-        \n-        startTime = (TimePicker) findViewById(R.id.start_time);\n-        endTime = (TimePicker) findViewById(R.id.end_time);\n-\n-        startTime.setIs24HourView(DateFormat.is24HourFormat(this));\n-        endTime.setIs24HourView(DateFormat.is24HourFormat(this));\n-        \n-        pushEnabled.setOnClickListener(new OnClickListener() {\n-\n-\t\t\t@Override\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tpushSettingsActive(((CheckBox)v).isChecked());\n-\t\t\t}\n-        \t\n-        });\n-        \n-        quietTimeEnabled.setOnClickListener(new OnClickListener(){\n-\n-\t\t\t@Override\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tquietTimeSettingsActive(((CheckBox)v).isChecked());\n-\t\t\t}\n-        });\n-        \n-    }\n-\n-    // When the activity starts, we need to fetch and display the user's current\n-    // Push preferences in the view, if applicable.\n-    @Override\n-    public void onStart() {\n-        super.onStart();\n-        \n-        boolean isPushEnabled = prefs.isPushEnabled();\n-        pushEnabled.setChecked(isPushEnabled);\n-        soundEnabled.setChecked(prefs.isSoundEnabled());\n-        vibrateEnabled.setChecked(prefs.isVibrateEnabled());\n-        pushSettingsActive(isPushEnabled);\n-        \n-        boolean isQuietTimeEnabled = prefs.isQuietTimeEnabled();\n-        quietTimeEnabled.setChecked(isQuietTimeEnabled);\n-        quietTimeSettingsActive(isQuietTimeEnabled);\n-        \n-        //this will be null if a quiet time interval hasn't been set\n-        Date[] interval = prefs.getQuietTimeInterval();\n-        if(interval != null) {\n-\t        startTime.setCurrentHour(interval[0].getHours());\n-\t        startTime.setCurrentMinute(interval[0].getMinutes());\n-\t        endTime.setCurrentHour(interval[1].getHours());\n-\t        endTime.setCurrentMinute(interval[1].getMinutes());\n-        }\n-    }\n-\n-    // When the activity is closed, save the user's Push preferences\n-    @Override\n-    public void onStop() {\n-        super.onStop();\n-        \n-        boolean isPushEnabledInActivity = pushEnabled.isChecked();\n-        boolean isQuietTimeEnabledInActivity = quietTimeEnabled.isChecked();\n-        \n-        if(isPushEnabledInActivity) {\n-        \tPushManager.enablePush();\n-        }\n-        else {\n-        \tPushManager.disablePush();\n-        }\n-       \n-        prefs.setSoundEnabled(soundEnabled.isChecked());\n-        prefs.setVibrateEnabled(vibrateEnabled.isChecked());\n-              \n-        prefs.setQuietTimeEnabled(isQuietTimeEnabledInActivity);\n-        \n-        if(isQuietTimeEnabledInActivity) {\n-        \n-\t        // Grab the start date.\n-\t        Calendar cal = Calendar.getInstance();\n-\t        cal.set(Calendar.HOUR_OF_DAY, startTime.getCurrentHour());\n-\t        cal.set(Calendar.MINUTE, startTime.getCurrentMinute());\n-\t        Date startDate = cal.getTime();\n-\t\n-\t        // Prepare the end date.\n-\t        cal = Calendar.getInstance();\n-\t        cal.set(Calendar.HOUR_OF_DAY, endTime.getCurrentHour());\n-\t        cal.set(Calendar.MINUTE, endTime.getCurrentMinute());\n-\t        Date endDate = cal.getTime();\n-\t        \n-\t        prefs.setQuietTimeInterval(startDate, endDate);\n-        }\n-    }\n-\n-    @Override\n-    public void onConfigurationChanged(Configuration newConfig) {\n-        super.onConfigurationChanged(newConfig);\n-        // DO NOT REMOVE, just having it here seems to fix a weird issue with\n-        // Time picker where the fields would go blank on rotation.\n-    }\n-\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/java/com/novoda/urbanairship/demo/UADemoApplication.java",
            "additions": 0,
            "deletions": 76
        },
        "diff content": "@@ -1,76 +0,0 @@\n-/*\n-Copyright 2009-2011 Urban Airship Inc. All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-1. Redistributions of source code must retain the above copyright notice, this\n-list of conditions and the following disclaimer.\n-\n-2. Redistributions in binary form must reproduce the above copyright notice,\n-this list of conditions and the following disclaimer in the documentation\n-and/or other materials provided with the distribution.\n-\n-THIS SOFTWARE IS PROVIDED BY THE URBAN AIRSHIP INC ``AS IS'' AND ANY EXPRESS OR\n-IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n-EVENT SHALL URBAN AIRSHIP INC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n-INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n-OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n-ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-package com.novoda.urbanairship.demo;\n-\n-import android.app.Application;\n-import android.util.Log;\n-\n-import com.urbanairship.AirshipConfigOptions;\n-import com.urbanairship.Logger;\n-import com.urbanairship.UAirship;\n-import com.urbanairship.push.CustomPushNotificationBuilder;\n-import com.urbanairship.push.PushManager;\n-\n-public class UADemoApplication extends Application {\n-    \n-    @Override\n-    public void onCreate() {\n-        \n-        super.onCreate();\n-        \n-        AirshipConfigOptions options = AirshipConfigOptions.loadDefaultOptions(this);\n-\n-        // Optionally, customize your config at runtime:\n-        //\n-         options.inProduction = false;\n-         options.developmentAppKey = \"eYhRyqBFT8GckDWywDgqzQ\";\n-         options.developmentAppSecret = \"kSFFVVBgQjaNUCUjjNu7tw\";\n-         options.transport = \"hybrid\";//\"helium\";\n-         options.c2dmSender = \"akshaydashrath@gmail.com\";\n-         options.analyticsEnabled = false;\n-                \n-\n-        UAirship.takeOff(this, options);\n-        Logger.logLevel = Log.VERBOSE;\n-        \n-        //use CustomPushNotificationBuilder to specify a custom layout\n-        CustomPushNotificationBuilder nb = new CustomPushNotificationBuilder();\n-\n-        nb.statusBarIconDrawableId = R.drawable.icon_small;//custom status bar icon\n-\n-        nb.layout = R.layout.notification;\n-        nb.layoutIconDrawableId = R.drawable.icon;//custom layout icon\n-        nb.layoutIconId = R.id.icon;\n-        nb.layoutSubjectId = R.id.subject;\n-        nb.layoutMessageId = R.id.message;\n-\n-        // customize the sound played when a push is received\n-        //nb.soundUri = Uri.parse(\"android.resource://\"+this.getPackageName()+\"/\" +R.raw.cat);\n-\n-        PushManager.shared().setNotificationBuilder(nb);\n-        PushManager.shared().setIntentReceiver(IntentReceiver.class);\n-    }\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/color/black.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n-    <item android:state_enabled=\"false\" android:color=\"#50000000\" />\n-    <item android:color=\"#FF000000\" />\n-</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/color/gray.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n-    <item android:state_enabled=\"false\" android:color=\"#80999999\" />\n-    <item android:color=\"#999999\" />\n-</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/color/white.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n-    <item android:state_enabled=\"false\" android:color=\"#80FFFFFF\" />\n-    <item android:color=\"#FFFFFF\" />\n-</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/c2dm_urban_airship/src/main/res/drawable-hdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/c2dm_urban_airship/src/main/res/drawable-ldpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/c2dm_urban_airship/src/main/res/drawable-mdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/c2dm_urban_airship/src/main/res/drawable/icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable/icon_small.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/c2dm_urban_airship/src/main/res/drawable/icon_small.png and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable/stripes.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/c2dm_urban_airship/src/main/res/drawable/stripes.png and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable/tiledstripes.xml",
            "additions": 0,
            "deletions": 4
        },
        "diff content": "@@ -1,4 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<bitmap xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:src=\"@drawable/stripes\" \n-    android:tileMode=\"repeat\" />\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout-v9/notification.xml",
            "additions": 0,
            "deletions": 36
        },
        "diff content": "@@ -1,36 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<RelativeLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:orientation=\"vertical\"\n-    android:layout_alignParentTop=\"true\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <ImageView android:id=\"@+id/icon\"\n-      android:src=\"@drawable/icon\"\n-      android:layout_marginRight=\"10px\"\n-      android:layout_marginLeft=\"0px\"\n-      android:layout_width=\"65dip\"\n-      android:layout_height=\"65dip\" />\n-      \n-  <TextView android:id=\"@+id/subject\"\n-      android:text=\"Subject\"\n-      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n-      android:layout_alignTop=\"@+id/icon\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_width=\"wrap_content\"\n-      android:maxLines=\"1\" />\n-\n-  <TextView android:id=\"@+id/message\"\n-      android:textSize=\"14dip\"\n-      android:text=\"Message\"\n-      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent\"\n-      android:maxLines=\"1\"\n-      android:layout_marginTop=\"3dip\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_below=\"@+id/subject\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_width=\"wrap_content\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout-v9/notification_large.xml",
            "additions": 0,
            "deletions": 43
        },
        "diff content": "@@ -1,43 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-\n-<RelativeLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:orientation=\"vertical\"\n-    android:paddingTop=\"0dip\"\n-    android:layout_alignParentTop=\"true\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <ImageView android:id=\"@+id/icon\" \n-      android:src=\"@drawable/icon\"\n-      android:layout_width=\"65dip\"\n-      android:layout_height=\"65dip\" \n-      android:layout_margin=\"0dip\"/>\n-  \n-  <!-- The custom notification requires a subject field.\n-  To maximize space in this layout this\n-  field is hidden. Visibility is set to gone. -->\n-  <TextView android:id=\"@+id/subject\"\n-      android:text=\"Subject\"\n-      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n-      android:layout_alignTop=\"@+id/icon\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_width=\"wrap_content\"\n-      android:maxLines=\"1\" android:visibility=\"gone\"/> \n-      \n-  <!-- The message block. Standard text size is 14dip\n-  but is increased here to maximize impact. -->\n-  <TextView android:id=\"@+id/message\"\n-      android:textSize=\"48dip\"\n-      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n-      android:text=\"Message\"\n-      android:maxLines=\"4\"\n-      android:layout_marginTop=\"0dip\"\n-      android:layout_marginRight=\"2dip\"\n-      android:layout_marginLeft=\"10dip\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_width=\"wrap_content\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout-v9/notification_multi_line.xml",
            "additions": 0,
            "deletions": 44
        },
        "diff content": "@@ -1,44 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-\n-<RelativeLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:orientation=\"vertical\"\n-    android:paddingTop=\"0dip\"\n-    android:layout_alignParentTop=\"true\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <ImageView android:id=\"@+id/icon\"\n-      android:src=\"@drawable/icon\"\n-      android:layout_marginRight=\"10dip\"\n-      android:layout_marginLeft=\"0dip\"\n-      android:layout_width=\"65dip\"\n-      android:layout_height=\"65dip\" />\n-      \n-  <!-- The custom notification requires a subject field.\n-  To accommodate multiple lines in this layout this\n-  field is hidden. Visibility is set to gone. -->\n-  <TextView android:id=\"@+id/subject\"\n-      android:text=\"Subject\"\n-      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n-      android:layout_alignTop=\"@+id/icon\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_width=\"wrap_content\"\n-      android:maxLines=\"1\" android:visibility=\"gone\"/> \n-\n-  <!-- The message block. Standard text size is 14dip\n-  but is reduced here to maximize content. -->\n-  <TextView android:id=\"@+id/message\"\n-      android:textSize=\"12dip\" \n-      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent\"\n-      android:text=\"Message\"\n-      android:maxLines=\"4\"\n-      android:layout_marginTop=\"0dip\"\n-      android:layout_marginRight=\"2dip\"\n-      android:layout_marginLeft=\"0dip\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_width=\"wrap_content\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout-v9/notification_three_lines.xml",
            "additions": 0,
            "deletions": 38
        },
        "diff content": "@@ -1,38 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<RelativeLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:orientation=\"vertical\"\n-    android:paddingTop=\"0px\"\n-    android:layout_alignParentTop=\"true\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <ImageView android:id=\"@+id/icon\"\n-      android:src=\"@drawable/icon\"\n-      android:layout_marginRight=\"10px\"\n-      android:layout_marginLeft=\"0px\"\n-      android:layout_width=\"65dip\"\n-      android:layout_height=\"65dip\" />\n-      \n-  <TextView android:id=\"@+id/subject\"\n-      android:text=\"Subject\"\n-      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n-      android:layout_alignTop=\"@+id/icon\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_width=\"wrap_content\"\n-      android:maxLines=\"1\" android:visibility=\"gone\"/>\n-\n-  <TextView android:id=\"@+id/message\"\n-      android:textSize=\"14dip\"\n-      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent\"\n-      android:text=\"Message\"\n-      android:maxLines=\"3\"\n-      android:layout_marginTop=\"3dip\"\n-      android:layout_marginRight=\"6px\"\n-      android:layout_marginLeft=\"2px\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_width=\"wrap_content\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 14
        },
        "diff content": "@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-      android:background=\"@drawable/tiledstripes\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <Button\n-        android:id=\"@+id/push_preferences_button\"\n-        android:layout_width=\"fill_parent\"\n-        android:layout_height=\"wrap_content\"\n-        android:text=\"Preferences\" />\n-        \n-</LinearLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/notification.xml",
            "additions": 0,
            "deletions": 38
        },
        "diff content": "@@ -1,38 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<RelativeLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:orientation=\"vertical\"\n-    android:paddingTop=\"8px\"\n-    android:layout_alignParentTop=\"true\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <ImageView android:id=\"@+id/icon\"\n-      android:src=\"@drawable/icon\"\n-      android:layout_marginRight=\"10px\"\n-      android:layout_marginLeft=\"10px\"\n-      android:layout_width=\"24dip\"\n-      android:layout_height=\"24dip\" />\n-      \n-  <TextView android:id=\"@+id/subject\"\n-      android:text=\"Subject\"\n-      style=\"@style/dark_bold_header\"\n-      android:layout_alignTop=\"@+id/icon\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_width=\"wrap_content\"\n-      android:maxLines=\"1\" />\n-\n-  <TextView android:id=\"@+id/message\"\n-      android:textSize=\"14dip\"\n-      android:textColor=\"#FF000000\"\n-      android:text=\"Message\"\n-      android:maxLines=\"1\"\n-      android:layout_marginTop=\"3dip\"\n-      android:layout_marginRight=\"10px\"\n-      android:layout_marginLeft=\"10px\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_below=\"@+id/subject\"\n-      android:layout_width=\"wrap_content\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/notification_large.xml",
            "additions": 0,
            "deletions": 44
        },
        "diff content": "@@ -1,44 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-\n-<RelativeLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:orientation=\"vertical\"\n-    android:paddingTop=\"2dip\"\n-    android:layout_alignParentTop=\"true\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <ImageView android:id=\"@+id/icon\"\n-      android:src=\"@drawable/icon\"\n-      android:layout_marginRight=\"4dip\"\n-      android:layout_marginLeft=\"5dip\"\n-      android:layout_width=\"100dip\"\n-      android:layout_height=\"100dip\" />\n-      \n-  <!-- The custom notification requires a subject field.\n-  To maximize space in this layout this\n-  field is hidden. Visibility is set to gone. -->\n-  <TextView android:id=\"@+id/subject\"\n-      android:text=\"Subject\"\n-      style=\"@style/dark_bold_header\"\n-      android:layout_alignTop=\"@+id/icon\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_width=\"wrap_content\"\n-      android:maxLines=\"1\" android:visibility=\"gone\"/> \n-\n-  <!-- The message block. Standard text size is 14dip\n-  but is increased here to maximize impact. -->\n-  <TextView android:id=\"@+id/message\"\n-      android:textSize=\"48dip\" \n-      android:textColor=\"#FF000000\"\n-      android:text=\"Message\"\n-      android:maxLines=\"4\"\n-      android:layout_marginTop=\"0dip\"\n-      android:layout_marginRight=\"2dip\"\n-      android:layout_marginLeft=\"0dip\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_width=\"wrap_content\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/notification_multi_line.xml",
            "additions": 0,
            "deletions": 48
        },
        "diff content": "@@ -1,48 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-\n-<!--  A sample notification layout that\n-      fits 160 chars on a Nexus S display in\n-      portrait orientation -->\n-\n-<RelativeLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:orientation=\"vertical\"\n-    android:paddingTop=\"2dip\"\n-    android:layout_alignParentTop=\"true\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <ImageView android:id=\"@+id/icon\"\n-      android:src=\"@drawable/icon\"\n-      android:layout_marginRight=\"4dip\"\n-      android:layout_marginLeft=\"5dip\"\n-      android:layout_width=\"24dip\"\n-      android:layout_height=\"24dip\" />\n-      \n-  <!-- The custom notification requires a subject field.\n-  To accommodate multiple lines in this layout this\n-  field is hidden. Visibility is set to gone. -->\n-  <TextView android:id=\"@+id/subject\"\n-      android:text=\"Subject\"\n-      style=\"@style/dark_bold_header\"\n-      android:layout_alignTop=\"@+id/icon\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_width=\"wrap_content\"\n-      android:maxLines=\"1\" android:visibility=\"gone\"/> \n-\n-  <!-- The message block. Standard text size is 14dip\n-  but is reduced here to maximize content. -->\n-  <TextView android:id=\"@+id/message\"\n-      android:textSize=\"12dip\" \n-      android:textColor=\"#FF000000\"\n-      android:text=\"Message\"\n-      android:maxLines=\"4\"\n-      android:layout_marginTop=\"0dip\"\n-      android:layout_marginRight=\"2dip\"\n-      android:layout_marginLeft=\"0dip\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_width=\"wrap_content\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/notification_three_lines.xml",
            "additions": 0,
            "deletions": 38
        },
        "diff content": "@@ -1,38 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<RelativeLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:orientation=\"vertical\"\n-    android:paddingTop=\"6px\"\n-    android:layout_alignParentTop=\"true\"\n-    android:layout_height=\"fill_parent\">\n-    \n-  <ImageView android:id=\"@+id/icon\"\n-      android:src=\"@drawable/icon\"\n-      android:layout_marginRight=\"8px\"\n-      android:layout_marginLeft=\"10px\"\n-      android:layout_width=\"24dip\"\n-      android:layout_height=\"24dip\" />\n-      \n-  <TextView android:id=\"@+id/subject\"\n-      android:text=\"Subject\"\n-      style=\"@style/dark_bold_header\"\n-      android:layout_alignTop=\"@+id/icon\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_width=\"wrap_content\"\n-      android:maxLines=\"1\" android:visibility=\"gone\"/>\n-\n-  <TextView android:id=\"@+id/message\"\n-      android:textSize=\"14dip\"\n-      android:textColor=\"#FF000000\"\n-      android:text=\"Message\"\n-      android:maxLines=\"3\"\n-      android:layout_marginTop=\"3dip\"\n-      android:layout_marginRight=\"6px\"\n-      android:layout_marginLeft=\"2px\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_toRightOf=\"@+id/icon\"\n-      android:layout_width=\"wrap_content\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/push_preferences_dialog.xml",
            "additions": 0,
            "deletions": 100
        },
        "diff content": "@@ -1,100 +0,0 @@\n-<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-              android:id=\"@+id/layout_root\"\n-              android:layout_width=\"fill_parent\"\n-              android:layout_height=\"fill_parent\">\n-\n-<LinearLayout android:orientation=\"vertical\"\n-              android:layout_width=\"fill_parent\"\n-              android:layout_height=\"fill_parent\"\n-              android:padding=\"20dip\">\n-\n-\t<LinearLayout android:orientation=\"horizontal\"\n-                  android:layout_width=\"fill_parent\"\n-                  android:layout_height=\"fill_parent\">\n-\n-        <CheckBox android:id=\"@+id/push_enabled\"\n-            android:layout_height=\"wrap_content\"\n-            android:checked=\"true\"\n-            android:layout_width=\"wrap_content\"/>\n-\n-        <TextView android:text=\"Push Enabled\"\n-            android:layout_height=\"wrap_content\"\n-            android:layout_width=\"wrap_content\"\n-            android:textSize=\"16dip\"/>\n-\n-\t</LinearLayout>\n-\t\n-\t<LinearLayout android:orientation=\"horizontal\"\n-                  android:layout_width=\"fill_parent\"\n-                  android:layout_height=\"fill_parent\">\n-\n-        <CheckBox android:id=\"@+id/sound_enabled\"\n-            android:layout_height=\"wrap_content\"\n-            android:checked=\"true\"\n-            android:layout_width=\"wrap_content\"/>\n-\n-        <TextView android:text=\"Sound Enabled\"\n-            android:layout_height=\"wrap_content\"\n-            android:layout_width=\"wrap_content\"\n-            android:textSize=\"16dip\"/>\n-\n-\t</LinearLayout>\n-\t\n-\t\t<LinearLayout android:orientation=\"horizontal\"\n-                  android:layout_width=\"fill_parent\"\n-                  android:layout_height=\"fill_parent\">\n-\n-        <CheckBox android:id=\"@+id/vibrate_enabled\"\n-            android:layout_height=\"wrap_content\"\n-            android:checked=\"true\"\n-            android:layout_width=\"wrap_content\"/>\n-\n-        <TextView android:text=\"Vibrate Enabled\"\n-            android:layout_height=\"wrap_content\"\n-            android:layout_width=\"wrap_content\"\n-            android:textSize=\"16dip\"/>\n-\n-\t</LinearLayout>\n-\t\n-\t\t<LinearLayout android:orientation=\"horizontal\"\n-                  android:layout_width=\"fill_parent\"\n-                  android:layout_height=\"fill_parent\">\n-\n-        <CheckBox android:id=\"@+id/quiet_time_enabled\"\n-            android:layout_height=\"wrap_content\"\n-            android:checked=\"true\"\n-            android:layout_width=\"wrap_content\"/>\n-\n-        <TextView android:text=\"Quiet Time Enabled\"\n-            android:layout_height=\"wrap_content\"\n-            android:layout_width=\"wrap_content\"\n-            android:textSize=\"16dip\"/>\n-\n-\t</LinearLayout>\n-              \n-<TextView\n-    android:text=\"Start Time\"\n-    android:layout_height=\"wrap_content\"\n-    android:layout_width=\"wrap_content\"\n-    android:textSize=\"16dip\"/>\n-            \n-<TimePicker\n-    android:enabled=\"false\"\n-    android:id=\"@+id/start_time\"\n-    android:layout_width=\"wrap_content\"\n-    android:layout_height=\"wrap_content\"/>\n-\n-<TextView\n-    android:paddingTop=\"10dip\"\n-    android:text=\"End Time\"\n-    android:layout_height=\"wrap_content\"\n-    android:layout_width=\"wrap_content\"\n-    android:textSize=\"16dip\"/>\n-    \n-<TimePicker\n-    android:id=\"@+id/end_time\"\n-    android:layout_width=\"wrap_content\"\n-    android:layout_height=\"wrap_content\"/>\n-    \n-</LinearLayout>\n-</ScrollView>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/raw/cat.wav",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/c2dm_urban_airship/src/main/res/raw/cat.wav and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 9
        },
        "diff content": "@@ -1,9 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-  <string name=\"app_name\">Push Sample</string>\n-  <string name=\"short_app_name\">PushSample</string>\n-\n-  <string name=\"app_description\">\n-      \u00a9 2011 Urban Airship, Inc. All Rights Reserved.\\n\\n\n-  </string>\n-</resources>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/values/text_styles.xml",
            "additions": 0,
            "deletions": 20
        },
        "diff content": "@@ -1,20 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-    <style name=\"header_base\">\n-        <item name=\"android:textColor\">@color/black</item>\n-    </style>\n-    <style name=\"dark_header_base\">\n-        <item name=\"android:textColor\">@color/black</item>\n-    </style>    \n-    <style name=\"header\" parent=\"header_base\">\n-        <item name=\"android:textSize\">22dip</item>\n-    </style>\n-    <style name=\"bold_header\" parent=\"header_base\">\n-        <item name=\"android:textSize\">18dip</item>\n-        <item name=\"android:textStyle\">bold</item>\n-    </style>\n-    <style name=\"dark_bold_header\" parent=\"dark_header_base\">\n-        <item name=\"android:textSize\">18dip</item>\n-        <item name=\"android:textStyle\">bold</item>\n-    </style>    \n-</resources>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/README",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,13 +0,0 @@\n-GCM demo App Engine server\n----------------------------\n-\n-1.To run the server in your local App Engine server, run:\n-\n-  ant -Dsdk.dir=PATH_TO_APP_ENGINE_JAVA_SDK runserver\n-\n-\n- If the compilation fails because of missing classes from the com.google.android.gcm.server package, check if the WebContent/WEB-INF/lib directory contains the gcm-server.jar file. If it doesn't, then run:\n-\n-  ant -f ../../gcm-server/build.xml update-demo\n-\n- Then run the runserver task again.\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/build.xml",
            "additions": 0,
            "deletions": 112
        },
        "diff content": "@@ -1,113 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  - Copyright 2012 Google Inc.\n-  -\n-  - Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n-  - use this file except in compliance with the License. You may obtain a copy\n-  - of the License at\n-  -\n-  - http://www.apache.org/licenses/LICENSE-2.0\n-  -\n-  - Unless required by applicable law or agreed to in writing, software\n-  - distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n-  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n-  - License for the specific language governing permissions and limitations\n-  - under the License.\n--->\n-<project name=\"judo-merchants-demo-appengine\" default=\"dist\">\n-\n-  <!-- Set the Google App Engine SDK location below or using -Dsdk.dir -->\n-  <!--\n-  <property name=\"sdk.dir\" location=\"/opt/google/appengine-java-sdk\" />\n-  -->\n-  <!-- Also set the property below to your server's host name or ip address -->\n-  <property name=\"server.host\" value=\"localhost\"/>\n-  <property name=\"server.port\" value=\"8080\"/>\n-\n-  <import file=\"${sdk.dir}/config/user/ant-macros.xml\" />\n-\n-  <property name=\"src\" location=\"src\"/>\n-  <property name=\"lib\" location=\"lib\"/>\n-  <property name=\"build\" location=\"build\"/>\n-  <property name=\"dist\" location=\"dist\"/>\n-  <property name=\"war\" value=\"${dist}/gcm-demo.war\"/>\n-  <property name=\"web-src\" value=\"WebContent\"/>\n-  <property name=\"web-inf\" value=\"${web-src}/WEB-INF\"/>\n-  <property name=\"web-lib\" value=\"${web-inf}/lib\"/>\n-  <property name=\"classes\" location=\"${web-inf}/classes\"/>\n-\n-  <path id=\"compile.classpath\">\n-    <fileset dir=\"${lib}\">\n-      <include name=\"*.jar\"/>\n-    </fileset>\n-    <fileset dir=\"${web-lib}\">\n-      <include name=\"*.jar\"/>\n-    </fileset>\n-  </path>\n-\n-  <target name=\"clean\" description=\"Clean all artifacts except the dist files.\">\n-    <delete dir=\"${build}\"/>\n-    <delete dir=\"${classes}\"/>\n-    <delete>\n-      <fileset dir=\"${web-lib}\" excludes=\"gcm-server.jar,json_simple*.jar\"/>\n-    </delete>\n-  </target>\n-\n-  <target name=\"full-clean\" depends=\"clean\" description=\"Clean all artifacts including the dist files.\">\n-    <delete dir=\"${dist}\"/>\n-    <delete file=\"${web-lib}/gcm-server.jar\"/>\n-  </target>\n-\n-  <target name=\"init\">\n-    <mkdir dir=\"${classes}\"/>\n-    <mkdir dir=\"${dist}\"/>\n-  </target>\n-\n-  <target name=\"copyjars\" depends=\"init\" description=\"Copies the App Engine JARs to the WAR.\" if=\"sdk.dir\">\n-    <copy todir=\"${web-lib}\" flatten=\"true\">\n-      <fileset dir=\"${sdk.dir}/lib/user\">\n-        <include name=\"**/*.jar\" />\n-      </fileset>\n-    </copy>\n-  </target>\n-\n-  <target name=\"compile\" depends=\"copyjars\" description=\"Compile the Java classes.\">\n-    <javac destdir=\"${classes}\" debug=\"true\" srcdir=\"${src}\" target=\"1.5\"\n-      includeantruntime=\"false\">\n-      <classpath refid=\"compile.classpath\"/>\n-    </javac>\n-  </target>\n-\n-  <target name=\"datanucleusenhance\" depends=\"compile\" description=\"Performs JDO enhancement on compiled data classes.\">\n-    <enhance_war war=\"${web-src}\" />\n-  </target>\n-\n-\n-  <target name=\"war\" depends=\"datanucleusenhance\" description=\"Generate the WAR file.\">\n-    <war destfile=\"${war}\" webxml=\"${web-src}/WEB-INF/web.xml\">\n-      <fileset dir=\"${web-src}\"/>\n-      <classes dir=\"${classes}\"/>\n-    </war>\n-  </target>\n-\n-  <target name=\"dist\" depends=\"war\" description=\"Generate all artifacts.\"/>\n-\n-  <target name=\"runserver\" depends=\"datanucleusenhance\" description=\"Starts the development server.\">\n-    <dev_appserver war=\"${web-src}\" port=\"${server.port}\" address=\"${server.host}\"/>\n-  </target>\n-\n-  <!-- You can give the development server arguments using attributes and an <options> element.\n-       For example, the following target starts the server using the port 8888,\n-       and enables remote Java debugging on port 9999:\n-  -->\n-  <target name=\"debugserver\" depends=\"datanucleusenhance\" description=\"Starts the development server on debug mode.\">\n-    <dev_appserver war=\"${web-src}\" port=\"${server.port}\" address=\"${server.host}\">\n-      <options>\n-        <arg value=\"--jvm_flag=-Xdebug\"/>\n-        <arg value=\"--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9999\"/>\n-      </options>\n-    </dev_appserver>\n-  </target>\n-\n-</project>\n-\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/lib/gcm-server.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/lib/gcm-server.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/lib/servlet-api-2.5.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/lib/servlet-api-2.5.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/ApiKeyInitializer.java",
            "additions": 0,
            "deletions": 70
        },
        "diff content": "@@ -1,70 +0,0 @@\n-/*\n- * Copyright 2012 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.judo.android.gcm.demo.server;\n-\n-import com.google.appengine.api.datastore.DatastoreService;\n-import com.google.appengine.api.datastore.DatastoreServiceFactory;\n-import com.google.appengine.api.datastore.Entity;\n-import com.google.appengine.api.datastore.EntityNotFoundException;\n-import com.google.appengine.api.datastore.Key;\n-import com.google.appengine.api.datastore.KeyFactory;\n-\n-import java.util.logging.Logger;\n-\n-import javax.servlet.ServletContextEvent;\n-import javax.servlet.ServletContextListener;\n-\n-/**\n- * Context initializer that loads the API key from the App Engine datastore.\n- */\n-public class ApiKeyInitializer implements ServletContextListener {\n-\n-  static final String ATTRIBUTE_ACCESS_KEY = \"apiKey\";\n-\n-  private static final String ENTITY_KIND = \"Settings\";\n-  private static final String ENTITY_KEY = \"MyKey\";\n-  private static final String ACCESS_KEY_FIELD = \"ApiKey\";\n-\n-  private final Logger logger = Logger.getLogger(getClass().getName());\n-\n-  public void contextInitialized(ServletContextEvent event) {\n-    DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();\n-    Key key = KeyFactory.createKey(ENTITY_KIND, ENTITY_KEY);\n-\n-    Entity entity;\n-    try {\n-      entity = datastore.get(key);\n-    } catch (EntityNotFoundException e) {\n-      entity = new Entity(key);\n-      // NOTE: it's not possible to change entities in the local server, so\n-      // it will be necessary to hardcode the API key below if you are running\n-      // it locally.\n-      entity.setProperty(ACCESS_KEY_FIELD,\n-          \"AIzaSyBytNqJYH89Wku8Xq_fTYG01bOdApTVmIE\");\n-      datastore.put(entity);\n-      logger.severe(\"Created fake key. Please go to App Engine admin \"\n-          + \"console, change its value to your API Key (the entity \"\n-          + \"type is '\" + ENTITY_KIND + \"' and its field to be changed is '\"\n-          + ACCESS_KEY_FIELD + \"'), then restart the server!\");\n-    }\n-    String accessKey = (String) entity.getProperty(ACCESS_KEY_FIELD);\n-    event.getServletContext().setAttribute(ATTRIBUTE_ACCESS_KEY, accessKey);\n-  }\n-\n-  public void contextDestroyed(ServletContextEvent event) {\n-  }\n-\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/BaseServlet.java",
            "additions": 0,
            "deletions": 91
        },
        "diff content": "@@ -1,91 +0,0 @@\n-/*\n- * Copyright 2012 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.judo.android.gcm.demo.server;\n-\n-import java.io.IOException;\n-import java.util.Enumeration;\n-import java.util.logging.Logger;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-\n-/**\n- * Skeleton class for all servlets in this package.\n- */\n-@SuppressWarnings(\"serial\")\n-abstract class BaseServlet extends HttpServlet {\n-\n-  // change to true to allow GET calls\n-  static final boolean DEBUG = true;\n-\n-  protected final Logger logger = Logger.getLogger(getClass().getName());\n-\n-  @Override\n-  protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n-      throws IOException, ServletException {\n-    if (DEBUG) {\n-      doPost(req, resp);\n-    } else {\n-      super.doGet(req, resp);\n-    }\n-  }\n-\n-  protected String getParameter(HttpServletRequest req, String parameter)\n-      throws ServletException {\n-    String value = req.getParameter(parameter);\n-    if (isEmptyOrNull(value)) {\n-      if (DEBUG) {\n-        StringBuilder parameters = new StringBuilder();\n-        @SuppressWarnings(\"unchecked\")\n-        Enumeration<String> names = req.getParameterNames();\n-        while (names.hasMoreElements()) {\n-          String name = names.nextElement();\n-          String param = req.getParameter(name);\n-          parameters.append(name).append(\"=\").append(param).append(\"\\n\");\n-        }\n-        logger.fine(\"parameters: \" + parameters);\n-      }\n-      throw new ServletException(\"Parameter \" + parameter + \" not found\");\n-    }\n-    return value.trim();\n-  }\n-\n-  protected String getParameter(HttpServletRequest req, String parameter,\n-      String defaultValue) {\n-    String value = req.getParameter(parameter);\n-    if (isEmptyOrNull(value)) {\n-      value = defaultValue;\n-    }\n-    return value.trim();\n-  }\n-\n-  protected void setSuccess(HttpServletResponse resp) {\n-    setSuccess(resp, 0);\n-  }\n-\n-  protected void setSuccess(HttpServletResponse resp, int size) {\n-    resp.setStatus(HttpServletResponse.SC_OK);\n-    resp.setContentType(\"text/plain\");\n-    resp.setContentLength(size);\n-  }\n-\n-  protected boolean isEmptyOrNull(String value) {\n-    return value == null || value.trim().length() == 0;\n-  }\n-\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/Datastore.java",
            "additions": 0,
            "deletions": 401
        },
        "diff content": "@@ -1,401 +0,0 @@\n-/*\n- * Copyright 2012 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.judo.android.gcm.demo.server;\n-\n-import com.google.appengine.api.datastore.DatastoreService;\n-import com.google.appengine.api.datastore.DatastoreServiceFactory;\n-import com.google.appengine.api.datastore.Entity;\n-import com.google.appengine.api.datastore.EntityNotFoundException;\n-import com.google.appengine.api.datastore.FetchOptions;\n-import com.google.appengine.api.datastore.Key;\n-import com.google.appengine.api.datastore.KeyFactory;\n-import com.google.appengine.api.datastore.PreparedQuery;\n-import com.google.appengine.api.datastore.Query;\n-import com.google.appengine.api.datastore.Query.FilterOperator;\n-import com.google.appengine.api.datastore.Transaction;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.logging.Logger;\n-\n-/**\n- * Simple implementation of a data store using standard Java collections.\n- * <p>\n- * This class is neither persistent (it will lost the data when the app is\n- * restarted) nor thread safe.\n- */\n-public final class Datastore {\n-\n-  static final int MULTICAST_SIZE = 1000;\n-  private static final String DEVICE_TYPE = \"Device\";\n-  private static final String DEVICE_REG_ID_PROPERTY = \"regId\";\n-\n-  private static final String NOTIFICATION_TYPE = \"Notification\";\n-  private static final String NOTIFICATION_STATUS_PROPERTY = \"status\";\n-  private static final String NOTIFICATION_REG_ID_PROPERTY = \"regId\";\n-  private static final String NOTIFICATION_TIMESTAMP_PROPERTY = \"timestamp\";\n-\n-    private static final String MULTICAST_TYPE = \"Multicast\";\n-  private static final String MULTICAST_REG_IDS_PROPERTY = \"regIds\";\n-\n-  private static final FetchOptions DEFAULT_FETCH_OPTIONS = FetchOptions.Builder\n-      .withPrefetchSize(MULTICAST_SIZE).chunkSize(MULTICAST_SIZE);\n-\n-  private static final Logger logger =\n-      Logger.getLogger(Datastore.class.getName());\n-  private static final DatastoreService datastore =\n-      DatastoreServiceFactory.getDatastoreService();\n-\n-  private Datastore() {\n-    throw new UnsupportedOperationException();\n-  }\n-\n-  /**\n-   * Registers a device.\n-   *\n-   * @param regId device's registration id.\n-   */\n-  public static void register(String regId) {\n-    logger.info(\"Registering \" + regId);\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      Entity entity = findDeviceByRegId(regId);\n-      if (entity != null) {\n-        logger.fine(regId + \" is already registered; ignoring.\");\n-        return;\n-      }\n-      entity = new Entity(DEVICE_TYPE);\n-      entity.setProperty(DEVICE_REG_ID_PROPERTY, regId);\n-      datastore.put(entity);\n-      txn.commit();\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-  }\n-\n-  /**\n-   * Unregisters a device.\n-   *\n-   * @param regId device's registration id.\n-   */\n-  public static void unregister(String regId) {\n-    logger.info(\"Unregistering \" + regId);\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      Entity entity = findDeviceByRegId(regId);\n-      if (entity == null) {\n-        logger.warning(\"Device \" + regId + \" already unregistered\");\n-      } else {\n-        Key key = entity.getKey();\n-        datastore.delete(key);\n-      }\n-      txn.commit();\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-  }\n-\n-  /**\n-   * Updates the registration id of a device.\n-   */\n-  public static void updateRegistration(String oldId, String newId) {\n-    logger.info(\"Updating \" + oldId + \" to \" + newId);\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      Entity entity = findDeviceByRegId(oldId);\n-      if (entity == null) {\n-        logger.warning(\"No device for registration id \" + oldId);\n-        return;\n-      }\n-      entity.setProperty(DEVICE_REG_ID_PROPERTY, newId);\n-      datastore.put(entity);\n-      txn.commit();\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-  }\n-\n-  /**\n-   * Gets all registered devices.\n-   */\n-  public static List<String> getDevices() {\n-    List<String> devices;\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      Query query = new Query(DEVICE_TYPE);\n-      Iterable<Entity> entities =\n-          datastore.prepare(query).asIterable(DEFAULT_FETCH_OPTIONS);\n-      devices = new ArrayList<String>();\n-      for (Entity entity : entities) {\n-        String device = (String) entity.getProperty(DEVICE_REG_ID_PROPERTY);\n-        devices.add(device);\n-      }\n-      txn.commit();\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-    return devices;\n-  }\n-\n-  /**\n-   * Gets the number of total devices.\n-   */\n-  public static int getTotalDevices() {\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      Query query = new Query(DEVICE_TYPE).setKeysOnly();\n-      List<Entity> allKeys =\n-          datastore.prepare(query).asList(DEFAULT_FETCH_OPTIONS);\n-      int total = allKeys.size();\n-      logger.fine(\"Total number of devices: \" + total);\n-      txn.commit();\n-      return total;\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-  }\n-\n-  private static Entity findDeviceByRegId(String regId) {\n-    Query query = new Query(DEVICE_TYPE)\n-        .addFilter(DEVICE_REG_ID_PROPERTY, FilterOperator.EQUAL, regId);\n-    PreparedQuery preparedQuery = datastore.prepare(query);\n-    List<Entity> entities = preparedQuery.asList(DEFAULT_FETCH_OPTIONS);\n-    Entity entity = null;\n-    if (!entities.isEmpty()) {\n-      entity = entities.get(0);\n-    }\n-    int size = entities.size();\n-    if (size > 0) {\n-      logger.severe(\n-          \"Found \" + size + \" entities for regId \" + regId + \": \" + entities);\n-    }\n-    return entity;\n-  }\n-\n-  /**\n-   * Creates a persistent record with the devices to be notified using a\n-   * multicast message.\n-   *\n-   * @param devices registration ids of the devices.\n-   * @return encoded key for the persistent record.\n-   */\n-  public static String createMulticast(List<String> devices) {\n-    logger.info(\"Storing multicast for \" + devices.size() + \" devices\");\n-    String encodedKey;\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      Entity entity = new Entity(MULTICAST_TYPE);\n-      entity.setProperty(MULTICAST_REG_IDS_PROPERTY, devices);\n-      datastore.put(entity);\n-      Key key = entity.getKey();\n-      encodedKey = KeyFactory.keyToString(key);\n-      logger.fine(\"multicast key: \" + encodedKey);\n-      txn.commit();\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-    return encodedKey;\n-  }\n-\n-  /**\n-   * Gets a persistent record with the devices to be notified using a\n-   * multicast message.\n-   *\n-   * @param encodedKey encoded key for the persistent record.\n-   */\n-  public static List<String> getMulticast(String encodedKey) {\n-    Key key = KeyFactory.stringToKey(encodedKey);\n-    Entity entity;\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      entity = datastore.get(key);\n-      @SuppressWarnings(\"unchecked\")\n-      List<String> devices =\n-          (List<String>) entity.getProperty(MULTICAST_REG_IDS_PROPERTY);\n-      txn.commit();\n-      return devices;\n-    } catch (EntityNotFoundException e) {\n-      logger.severe(\"No entity for key \" + key);\n-      return Collections.emptyList();\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-  }\n-\n-  /**\n-   * Updates a persistent record with the devices to be notified using a\n-   * multicast message.\n-   *\n-   * @param encodedKey encoded key for the persistent record.\n-   * @param devices new list of registration ids of the devices.\n-   */\n-  public static void updateMulticast(String encodedKey, List<String> devices) {\n-    Key key = KeyFactory.stringToKey(encodedKey);\n-    Entity entity;\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      try {\n-        entity = datastore.get(key);\n-      } catch (EntityNotFoundException e) {\n-        logger.severe(\"No entity for key \" + key);\n-        return;\n-      }\n-      entity.setProperty(MULTICAST_REG_IDS_PROPERTY, devices);\n-      datastore.put(entity);\n-      txn.commit();\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-  }\n-\n-  /**\n-   * Deletes a persistent record with the devices to be notified using a\n-   * multicast message.\n-   *\n-   * @param encodedKey encoded key for the persistent record.\n-   */\n-  public static void deleteMulticast(String encodedKey) {\n-    Transaction txn = datastore.beginTransaction();\n-    try {\n-      Key key = KeyFactory.stringToKey(encodedKey);\n-      datastore.delete(key);\n-      txn.commit();\n-    } finally {\n-      if (txn.isActive()) {\n-        txn.rollback();\n-      }\n-    }\n-  }\n-\n-\n-    /**\n-     * Creates a persistent record with the device to be notified using a\n-     * single message.\n-     *\n-     * @param device registration id of the devices.\n-     * @return encoded key for the persistent record.\n-     */\n-    public static String createNotification(String device) {\n-        logger.info(\"Storing notification for device \" + device);\n-        String encodedKey;\n-        Transaction txn = datastore.beginTransaction();\n-        try {\n-            Entity entity = new Entity(NOTIFICATION_TYPE);\n-            entity.setProperty(NOTIFICATION_REG_ID_PROPERTY, device);\n-            datastore.put(entity);\n-            Key key = entity.getKey();\n-            encodedKey = KeyFactory.keyToString(key);\n-            logger.fine(\"notification key: \" + encodedKey);\n-            txn.commit();\n-        } finally {\n-            if (txn.isActive()) {\n-                txn.rollback();\n-            }\n-        }\n-        return encodedKey;\n-    }\n-\n-    /**\n-     * Gets a persistent record with the device to be notified using a\n-     * notification message.\n-     *\n-     * @param encodedKey encoded key for the persistent record.\n-     */\n-    public static String getNotification(String encodedKey) {\n-        Key key = KeyFactory.stringToKey(encodedKey);\n-        Entity entity;\n-        Transaction txn = datastore.beginTransaction();\n-        try {\n-            entity = datastore.get(key);\n-            @SuppressWarnings(\"unchecked\")\n-            String device =\n-                    (String) entity.getProperty(NOTIFICATION_REG_ID_PROPERTY);\n-            txn.commit();\n-            return device;\n-        } catch (EntityNotFoundException e) {\n-            logger.severe(\"No entity for key \" + key);\n-            return null;\n-        } finally {\n-            if (txn.isActive()) {\n-                txn.rollback();\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Updates a persistent record with the new status using a\n-     * notification message.\n-     *\n-     * @param encodedKey encoded key for the persistent record.\n-     * @param status new list of registration ids of the devices.\n-     */\n-    public static void updateNotification(String encodedKey, String status) {\n-        Key key = KeyFactory.stringToKey(encodedKey);\n-        Entity entity;\n-        Transaction txn = datastore.beginTransaction();\n-        try {\n-            try {\n-                entity = datastore.get(key);\n-            } catch (EntityNotFoundException e) {\n-                logger.severe(\"No entity for key \" + key);\n-                return;\n-            }\n-            entity.setProperty(NOTIFICATION_STATUS_PROPERTY, status);\n-            datastore.put(entity);\n-            txn.commit();\n-        } finally {\n-            if (txn.isActive()) {\n-                txn.rollback();\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Deletes a persistent record with the devices to be notified using a\n-     * notification message.\n-     *\n-     * @param encodedKey encoded key for the persistent record.\n-     */\n-    public static void deleteNotification(String encodedKey) {\n-        Transaction txn = datastore.beginTransaction();\n-        try {\n-            Key key = KeyFactory.stringToKey(encodedKey);\n-            datastore.delete(key);\n-            txn.commit();\n-        } finally {\n-            if (txn.isActive()) {\n-                txn.rollback();\n-            }\n-        }\n-    }\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/HomeServlet.java",
            "additions": 0,
            "deletions": 87
        },
        "diff content": "@@ -1,87 +0,0 @@\n-/*\n- * Copyright 2012 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.judo.android.gcm.demo.server;\n-\n-import java.io.IOException;\n-import java.io.PrintWriter;\n-\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-\n-/**\n- * Servlet that adds display number of devices and button to send a message.\n- * <p>\n- * This servlet is used just by the browser (i.e., not device) and contains the\n- * main page of the demo app.\n- */\n-@SuppressWarnings(\"serial\")\n-public class HomeServlet extends BaseServlet {\n-\n-  static final String ATTRIBUTE_STATUS = \"status\";\n-\n-  /**\n-   * Displays the existing messages and offer the option to send a new one.\n-   */\n-  @Override\n-  protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n-      throws IOException {\n-    resp.setContentType(\"text/html\");\n-    PrintWriter out = resp.getWriter();\n-\n-    out.print(\"<html><body>\");\n-    out.print(\"<head>\");\n-    out.print(\"  <title>GCM Judo merchant</title>\");\n-    out.print(\"  <link rel='icon' href='favicon.png'/>\");\n-    out.print(\"</head>\");\n-    String status = (String) req.getAttribute(ATTRIBUTE_STATUS);\n-    if (status != null) {\n-      out.print(status);\n-    }\n-    int total = Datastore.getTotalDevices();\n-    if (total == 0) {\n-      out.print(\"<h2>No devices registered!</h2>\");\n-    } else {\n-      out.print(\"<h2>\" + total + \" device(s) registered!</h2>\");\n-        for(String device: Datastore.getDevices()){\n-            out.print(\"device: \" + device);\n-            out.print(\"<form name='form' method='POST' action='sendAll'>\");\n-            out.print(\"<input type='hidden' name='device' value='\"+ device +\"'/>\");\n-            out.print(\"<input type='hidden' name='type' value='payment'/>\");\n-            out.print(\"<input type='submit' value='Send Payment' />\");\n-            out.print(\"</form>\");\n-            out.print(\"<form name='form' method='POST' action='sendAll'>\");\n-            out.print(\"<input type='hidden' name='device' value='\"+ device +\"'/>\");\n-            out.print(\"<input type='hidden' name='type' value='refund'/>\");\n-            out.print(\"<input type='submit' value='Send Refund' />\");\n-            out.print(\"</form>\");\n-            out.print(\"<hr/>\");\n-        }\n-\n-      out.print(\"<form name='form' method='POST' action='sendAll'>\");\n-      out.print(\"<input type='submit' value='Send Test Messages' />\");\n-      out.print(\"</form>\");\n-    }\n-    out.print(\"</body></html>\");\n-    resp.setStatus(HttpServletResponse.SC_OK);\n-  }\n-\n-  @Override\n-  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n-      throws IOException {\n-    doGet(req, resp);\n-  }\n-\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/RegisterServlet.java",
            "additions": 0,
            "deletions": 44
        },
        "diff content": "@@ -1,44 +0,0 @@\n-/*\n- * Copyright 2012 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.judo.android.gcm.demo.server;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-\n-/**\n- * Servlet that registers a device, whose registration id is identified by\n- * {@link #PARAMETER_REG_ID}.\n- *\n- * <p>\n- * The client app should call this servlet everytime it receives a\n- * {@code com.google.android.c2dm.intent.REGISTRATION C2DM} intent without an\n- * error or {@code unregistered} extra.\n- */\n-@SuppressWarnings(\"serial\")\n-public class RegisterServlet extends BaseServlet {\n-\n-  private static final String PARAMETER_REG_ID = \"regId\";\n-\n-  @Override\n-  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n-      throws ServletException {\n-    String regId = getParameter(req, PARAMETER_REG_ID);\n-    Datastore.register(regId);\n-    setSuccess(resp);\n-  }\n-\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/SendAllMessagesServlet.java",
            "additions": 0,
            "deletions": 94
        },
        "diff content": "@@ -1,94 +0,0 @@\n-/*\n- * Copyright 2012 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.judo.android.gcm.demo.server;\n-\n-import static com.google.appengine.api.taskqueue.TaskOptions.Builder.withUrl;\n-\n-import com.google.appengine.api.taskqueue.Queue;\n-import com.google.appengine.api.taskqueue.QueueFactory;\n-import com.google.appengine.api.taskqueue.TaskOptions;\n-import com.google.appengine.api.taskqueue.TaskOptions.Method;\n-\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-\n-/**\n- * Servlet that adds a new message to all registered devices.\n- * <p>\n- * This servlet is used just by the browser (i.e., not device).\n- */\n-@SuppressWarnings(\"serial\")\n-public class SendAllMessagesServlet extends BaseServlet {\n-\n-  /**\n-   * Processes the request to add a new message.\n-   */\n-  @Override\n-  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n-      throws IOException, ServletException {\n-    List<String> devices = Datastore.getDevices();\n-    String status;\n-    if (devices.isEmpty()) {\n-      status = \"Message ignored as there is no device registered!\";\n-    } else {\n-      Queue queue = QueueFactory.getQueue(\"gcm\");\n-      \n-      String deviceId = req.getParameter(SendMessageServlet.PARAMETER_DEVICE);\n-      String msgType = req.getParameter(SendMessageServlet.PARAMETER_TYPE);\n-      \n-      if (deviceId != null && deviceId.length() > 0){\n-    \t// send a single message using plain post        \n-        queue.add(withUrl(\"/send\").param(\n-            SendMessageServlet.PARAMETER_DEVICE, deviceId).param(SendMessageServlet.PARAMETER_TYPE, msgType));\n-        status = \"Single message queued for registration id \" + deviceId;\n-      } else {\n-        // send a multicast message using JSON\n-        // must split in chunks of 1000 devices (GCM limit)\n-        int total = devices.size();\n-        List<String> partialDevices = new ArrayList<String>(total);\n-        int counter = 0;\n-        int tasks = 0;\n-        for (String device : devices) {\n-          counter++;\n-          partialDevices.add(device);\n-          int partialSize = partialDevices.size();\n-          if (partialSize == Datastore.MULTICAST_SIZE || counter == total) {\n-            String multicastKey = Datastore.createMulticast(partialDevices);\n-            logger.fine(\"Queuing \" + partialSize + \" devices on multicast \" +\n-                multicastKey);\n-            TaskOptions taskOptions = TaskOptions.Builder\n-                .withUrl(\"/send\")\n-                .param(SendMessageServlet.PARAMETER_MULTICAST, multicastKey)\n-                .method(Method.POST);\n-            queue.add(taskOptions);\n-            partialDevices.clear();\n-            tasks++;\n-          }\n-        }\n-        status = \"Queued tasks to send \" + tasks + \" multicast messages to \" +\n-            total + \" devices\";\n-      }\n-    }\n-    req.setAttribute(HomeServlet.ATTRIBUTE_STATUS, status.toString());\n-    getServletContext().getRequestDispatcher(\"/home\").forward(req, resp);\n-  }\n-\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/SendMessageServlet.java",
            "additions": 0,
            "deletions": 222
        },
        "diff content": "@@ -1,222 +0,0 @@\n-/*\n- * Copyright 2012 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.judo.android.gcm.demo.server;\n-\n-import com.google.android.gcm.server.Constants;\n-import com.google.android.gcm.server.Message;\n-import com.google.android.gcm.server.MulticastResult;\n-import com.google.android.gcm.server.Result;\n-import com.google.android.gcm.server.Sender;\n-\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.logging.Level;\n-\n-import javax.servlet.ServletConfig;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-\n-/**\n- * Servlet that sends a message to a device.\n- * <p>\n- * This servlet is invoked by AppEngine's Push Queue mechanism.\n- */\n-@SuppressWarnings(\"serial\")\n-public class SendMessageServlet extends BaseServlet {\n-\n-\tprivate static final String HEADER_QUEUE_COUNT = \"X-AppEngine-TaskRetryCount\";\n-\tprivate static final String HEADER_QUEUE_NAME = \"X-AppEngine-QueueName\";\n-\tprivate static final int MAX_RETRY = 3;\n-\n-\tstatic final String PARAMETER_DEVICE = \"device\";\n-\tstatic final String PARAMETER_MULTICAST = \"multicastKey\";\n-\tstatic final String PARAMETER_TYPE = \"type\";\n-\n-\tprivate Sender sender;\n-\n-\t@Override\n-\tpublic void init(ServletConfig config) throws ServletException {\n-\t\tsuper.init(config);\n-\t\tsender = newSender(config);\n-\t}\n-\n-\t/**\n-\t * Creates the {@link Sender} based on the servlet settings.\n-\t */\n-\tprotected Sender newSender(ServletConfig config) {\n-\t\tString key = (String) config.getServletContext().getAttribute(\n-\t\t\t\tApiKeyInitializer.ATTRIBUTE_ACCESS_KEY);\n-\t\treturn new Sender(key);\n-\t}\n-\n-\t/**\n-\t * Indicates to App Engine that this task should be retried.\n-\t */\n-\tprivate void retryTask(HttpServletResponse resp) {\n-\t\tresp.setStatus(500);\n-\t}\n-\n-\t/**\n-\t * Indicates to App Engine that this task is done.\n-\t */\n-\tprivate void taskDone(HttpServletResponse resp) {\n-\t\tresp.setStatus(200);\n-\t}\n-\n-\t/**\n-\t * Processes the request to add a new message.\n-\t */\n-\t@Override\n-\tprotected void doPost(HttpServletRequest req, HttpServletResponse resp)\n-\t\t\tthrows IOException {\n-\t\tif (req.getHeader(HEADER_QUEUE_NAME) == null) {\n-\t\t\tthrow new IOException(\"Missing header \" + HEADER_QUEUE_NAME);\n-\t\t}\n-\t\tString retryCountHeader = req.getHeader(HEADER_QUEUE_COUNT);\n-\t\tlogger.fine(\"retry count: \" + retryCountHeader);\n-\t\tif (retryCountHeader != null) {\n-\t\t\tint retryCount = Integer.parseInt(retryCountHeader);\n-\t\t\tif (retryCount > MAX_RETRY) {\n-\t\t\t\tlogger.severe(\"Too many retries, dropping task\");\n-\t\t\t\ttaskDone(resp);\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t}\n-\t\tString regId = req.getParameter(PARAMETER_DEVICE);\n-\t\tString type = req.getParameter(PARAMETER_TYPE);\n-\t\tif (regId != null) {\n-\t\t\tsendSingleMessage(regId, resp, type);\n-\t\t\treturn;\n-\t\t}\n-\t\tString multicastKey = req.getParameter(PARAMETER_MULTICAST);\n-\t\tif (multicastKey != null) {\n-\t\t\tsendMulticastMessage(multicastKey, resp);\n-\t\t\treturn;\n-\t\t}\n-\t\tlogger.severe(\"Invalid request!\");\n-\t\ttaskDone(resp);\n-\t\treturn;\n-\t}\n-\n-\tprivate Message createMessage(String type) {\n-\t\tMessage message = new Message.Builder().addData(PARAMETER_TYPE, type).addData(\"value\", \"1000\").build();\n-\t\treturn message;\n-\t}\n-\n-\tprivate void sendSingleMessage(String regId, HttpServletResponse resp,\n-\t\t\tString type) {\n-\t\tlogger.info(\"Sending message to device \" + regId);\n-\t\tMessage message = createMessage(type);\n-\t\tResult result;\n-\t\ttry {\n-\t\t\tresult = sender.sendNoRetry(message, regId);\n-\t\t} catch (IOException e) {\n-\t\t\tlogger.log(Level.SEVERE, \"Exception posting \" + message, e);\n-\t\t\ttaskDone(resp);\n-\t\t\treturn;\n-\t\t}\n-\t\tif (result == null) {\n-\t\t\tretryTask(resp);\n-\t\t\treturn;\n-\t\t}\n-\t\tif (result.getMessageId() != null) {\n-\t\t\tlogger.info(\"Succesfully sent message to device \" + regId);\n-\t\t\tString canonicalRegId = result.getCanonicalRegistrationId();\n-\t\t\tif (canonicalRegId != null) {\n-\t\t\t\t// same device has more than on registration id: update it\n-\t\t\t\tlogger.finest(\"canonicalRegId \" + canonicalRegId);\n-\t\t\t\tDatastore.updateRegistration(regId, canonicalRegId);\n-\t\t\t}\n-\t\t} else {\n-\t\t\tString error = result.getErrorCodeName();\n-\t\t\tif (error.equals(Constants.ERROR_NOT_REGISTERED)) {\n-\t\t\t\t// application has been removed from device - unregister it\n-\t\t\t\tDatastore.unregister(regId);\n-\t\t\t} else {\n-\t\t\t\tlogger.severe(\"Error sending message to device \" + regId + \": \"\n-\t\t\t\t\t\t+ error);\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate void sendMulticastMessage(String multicastKey,\n-\t\t\tHttpServletResponse resp) {\n-\t\t// Recover registration ids from datastore\n-\t\tList<String> regIds = Datastore.getMulticast(multicastKey);\n-\t\tMessage message = createMessage(\"test\");\n-\t\tMulticastResult multicastResult;\n-\t\ttry {\n-\t\t\tmulticastResult = sender.sendNoRetry(message, regIds);\n-\t\t} catch (IOException e) {\n-\t\t\tlogger.log(Level.SEVERE, \"Exception posting \" + message, e);\n-\t\t\tmulticastDone(resp, multicastKey);\n-\t\t\treturn;\n-\t\t}\n-\t\tboolean allDone = true;\n-\t\t// check if any registration id must be updated\n-\t\tif (multicastResult.getCanonicalIds() != 0) {\n-\t\t\tList<Result> results = multicastResult.getResults();\n-\t\t\tfor (int i = 0; i < results.size(); i++) {\n-\t\t\t\tString canonicalRegId = results.get(i)\n-\t\t\t\t\t\t.getCanonicalRegistrationId();\n-\t\t\t\tif (canonicalRegId != null) {\n-\t\t\t\t\tString regId = regIds.get(i);\n-\t\t\t\t\tDatastore.updateRegistration(regId, canonicalRegId);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tif (multicastResult.getFailure() != 0) {\n-\t\t\t// there were failures, check if any could be retried\n-\t\t\tList<Result> results = multicastResult.getResults();\n-\t\t\tList<String> retriableRegIds = new ArrayList<String>();\n-\t\t\tfor (int i = 0; i < results.size(); i++) {\n-\t\t\t\tString error = results.get(i).getErrorCodeName();\n-\t\t\t\tif (error != null) {\n-\t\t\t\t\tString regId = regIds.get(i);\n-\t\t\t\t\tlogger.warning(\"Got error (\" + error + \") for regId \"\n-\t\t\t\t\t\t\t+ regId);\n-\t\t\t\t\tif (error.equals(Constants.ERROR_NOT_REGISTERED)) {\n-\t\t\t\t\t\t// application has been removed from device - unregister\n-\t\t\t\t\t\t// it\n-\t\t\t\t\t\tDatastore.unregister(regId);\n-\t\t\t\t\t}\n-\t\t\t\t\tif (error.equals(Constants.ERROR_UNAVAILABLE)) {\n-\t\t\t\t\t\tretriableRegIds.add(regId);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tif (!retriableRegIds.isEmpty()) {\n-\t\t\t\t// update task\n-\t\t\t\tDatastore.updateMulticast(multicastKey, retriableRegIds);\n-\t\t\t\tallDone = false;\n-\t\t\t\tretryTask(resp);\n-\t\t\t}\n-\t\t}\n-\t\tif (allDone) {\n-\t\t\tmulticastDone(resp, multicastKey);\n-\t\t} else {\n-\t\t\tretryTask(resp);\n-\t\t}\n-\t}\n-\n-\tprivate void multicastDone(HttpServletResponse resp, String encodedKey) {\n-\t\tDatastore.deleteMulticast(encodedKey);\n-\t\ttaskDone(resp);\n-\t}\n-\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/UnregisterServlet.java",
            "additions": 0,
            "deletions": 43
        },
        "diff content": "@@ -1,43 +0,0 @@\n-/*\n- * Copyright 2012 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.judo.android.gcm.demo.server;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-\n-/**\n- * Servlet that unregisters a device, whose registration id is identified by\n- * {@link #PARAMETER_REG_ID}.\n- * <p>\n- * The client app should call this servlet everytime it receives a\n- * {@code com.google.android.c2dm.intent.REGISTRATION} with an\n- * {@code unregistered} extra.\n- */\n-@SuppressWarnings(\"serial\")\n-public class UnregisterServlet extends BaseServlet {\n-\n-  private static final String PARAMETER_REG_ID = \"regId\";\n-\n-  @Override\n-  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n-      throws ServletException {\n-    String regId = getParameter(req, PARAMETER_REG_ID);\n-    Datastore.unregister(regId);\n-    setSuccess(resp);\n-  }\n-\n-}\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/appengine-web.xml",
            "additions": 0,
            "deletions": 30
        },
        "diff content": "@@ -1,31 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-  - Copyright 2012 Google Inc.\n-  -\n-  - Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n-  - use this file except in compliance with the License. You may obtain a copy\n-  - of the License at\n-  -\n-  - http://www.apache.org/licenses/LICENSE-2.0\n-  -\n-  - Unless required by applicable law or agreed to in writing, software\n-  - distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n-  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n-  - License for the specific language governing permissions and limitations\n-  - under the License.\n--->\n-<appengine-web-app xmlns=\"http://appengine.google.com/ns/1.0\">\n-  <application>judo-merchants-novodatest</application>\n-  <version>1</version>\n-\n-  <!--\n-    Allows App Engine to send multiple requests to one instance in parallel:\n-  -->\n-  <threadsafe>true</threadsafe>\n-\n-  <!-- Configure java.util.logging -->\n-  <system-properties>\n-    <property name=\"java.util.logging.config.file\" value=\"WEB-INF/logging.properties\"/>\n-  </system-properties>\n-\n-</appengine-web-app>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-api-1.0-sdk-1.7.3.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-api-1.0-sdk-1.7.3.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-api-labs.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-api-labs.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-endpoints.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-endpoints.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-jsr107cache-1.7.3.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-jsr107cache-1.7.3.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/asm-4.0.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/asm-4.0.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-api-jdo-3.1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-api-jdo-3.1.1.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-api-jpa-3.1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-api-jpa-3.1.1.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-appengine-2.1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-appengine-2.1.1.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-core-3.1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-core-3.1.1.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/gcm-server.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/gcm-server.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/geronimo-jpa_2.0_spec-1.0.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/geronimo-jpa_2.0_spec-1.0.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/jdo-api-3.0.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/jdo-api-3.0.1.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/json_simple-1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/json_simple-1.1.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/jsr107cache-1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/jsr107cache-1.1.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/jta-1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/WEB-INF/lib/jta-1.1.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/logging.properties",
            "additions": 0,
            "deletions": 29
        },
        "diff content": "@@ -1,29 +0,0 @@\n-# Copyright 2012 Google Inc.\n-#\n-# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n-# use this file except in compliance with the License. You may obtain a copy\n-# of the License at\n-#\n-# http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing, software\n-# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n-# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n-# License for the specific language governing permissions and limitations\n-# under the License.\n-\n-# A default java.util.logging configuration.\n-# (All App Engine logging is through java.util.logging by default).\n-#\n-# To use this configuration, copy it into your application's WEB-INF\n-# folder and add the following to your appengine-web.xml:\n-#\n-# <system-properties>\n-#   <property name=\"java.util.logging.config.file\" value=\"WEB-INF/logging.properties\"/>\n-# </system-properties>\n-\n-# Set the default logging level for all loggers to WARNING\n-.level = WARNING\n-\n-com.google.android.level = FINEST\n-com.judo.android.level = FINEST\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/queue.xml",
            "additions": 0,
            "deletions": 29
        },
        "diff content": "@@ -1,30 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-  - Copyright 2012 Google Inc.\n-  -\n-  - Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n-  - use this file except in compliance with the License. You may obtain a copy\n-  - of the License at\n-  -\n-  - http://www.apache.org/licenses/LICENSE-2.0\n-  -\n-  - Unless required by applicable law or agreed to in writing, software\n-  - distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n-  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n-  - License for the specific language governing permissions and limitations\n-  - under the License.\n--->\n-<queue-entries>\n-  <queue>\n-    <name>gcm</name>\n-    <rate>1/s</rate>\n-    <max-concurrent-requests>1</max-concurrent-requests>\n-    <bucket-size>2</bucket-size>\n-    <retry-parameters>\n-      <task-retry-limit>7</task-retry-limit>\n-      <min-backoff-seconds>10</min-backoff-seconds>\n-      <max-backoff-seconds>200</max-backoff-seconds>\n-      <max-doublings>2</max-doublings>\n-    </retry-parameters>\n-  </queue>\n-</queue-entries>\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/web.xml",
            "additions": 0,
            "deletions": 99
        },
        "diff content": "@@ -1,100 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--\n-  - Copyright 2012 Google Inc.\n-  -\n-  - Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n-  - use this file except in compliance with the License. You may obtain a copy\n-  - of the License at\n-  -\n-  - http://www.apache.org/licenses/LICENSE-2.0\n-  -\n-  - Unless required by applicable law or agreed to in writing, software\n-  - distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n-  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n-  - License for the specific language governing permissions and limitations\n-  - under the License.\n---><web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:web=\"http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" id=\"WebApp_ID\" version=\"2.5\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n-\n-  <listener>\n-    <listener-class>\n-      com.judo.android.gcm.demo.server.ApiKeyInitializer\n-    </listener-class>\n-  </listener>\n-\n-  <servlet>\n-    <servlet-name>RegisterServlet</servlet-name>\n-    <servlet-class>\n-      com.judo.android.gcm.demo.server.RegisterServlet\n-    </servlet-class>\n-    <load-on-startup>1</load-on-startup>\n-  </servlet>\n-\n-  <servlet-mapping>\n-    <servlet-name>RegisterServlet</servlet-name>\n-    <url-pattern>/register</url-pattern>\n-  </servlet-mapping>\n-\n-  <servlet>\n-    <servlet-name>UnregisterServlet</servlet-name>\n-    <servlet-class>\n-      com.judo.android.gcm.demo.server.UnregisterServlet\n-    </servlet-class>\n-    <load-on-startup>1</load-on-startup>\n-  </servlet>\n-\n-  <servlet-mapping>\n-    <servlet-name>UnregisterServlet</servlet-name>\n-    <url-pattern>/unregister</url-pattern>\n-  </servlet-mapping>\n-\n-  <servlet>\n-    <servlet-name>SendAllMessagesServlet</servlet-name>\n-    <servlet-class>\n-      com.judo.android.gcm.demo.server.SendAllMessagesServlet\n-    </servlet-class>\n-    <load-on-startup>1</load-on-startup>\n-  </servlet>\n-\n-  <servlet-mapping>\n-    <servlet-name>SendAllMessagesServlet</servlet-name>\n-    <url-pattern>/sendAll</url-pattern>\n-  </servlet-mapping>\n-\n-  <servlet>\n-    <servlet-name>SendMessageServlet</servlet-name>\n-    <servlet-class>\n-      com.judo.android.gcm.demo.server.SendMessageServlet\n-    </servlet-class>\n-    <load-on-startup>1</load-on-startup>\n-  </servlet>\n-\n-  <servlet-mapping>\n-    <servlet-name>SendMessageServlet</servlet-name>\n-    <url-pattern>/send</url-pattern>\n-  </servlet-mapping>\n-\n-  <servlet>\n-    <servlet-name>HomeServlet</servlet-name>\n-    <servlet-class>\n-      com.judo.android.gcm.demo.server.HomeServlet\n-    </servlet-class>\n-    <load-on-startup>1</load-on-startup>\n-  </servlet>\n-\n-  <servlet-mapping>\n-    <servlet-name>HomeServlet</servlet-name>\n-    <url-pattern>/home</url-pattern>\n-  </servlet-mapping>\n-\n- <servlet>\n-  <servlet-name>SystemServiceServlet</servlet-name>\n-  <servlet-class>com.google.api.server.spi.SystemServiceServlet</servlet-class>\n-  <init-param>\n-   <param-name>services</param-name>\n-   <param-value/>\n-  </init-param>\n- </servlet>\n- <servlet-mapping>\n-  <servlet-name>SystemServiceServlet</servlet-name>\n-  <url-pattern>/_ah/spi/*</url-pattern>\n- </servlet-mapping>\n-</web-app>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/favicon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/gcm_appengine/war/favicon.png and /dev/null differ\n"
    },
    {
        "commit hash": "a0b2ec5589e0ace6dbacece9c98a52b8531e6024",
        "previous commit hash": "ce59fbe0e7ae6d5d4b6d19c7478e579c3bc06fc7",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/index.jsp",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-<jsp:forward page=\"/home\"/>\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/README.md",
            "additions": 0,
            "deletions": 6
        },
        "diff content": "@@ -1,6 +0,0 @@\n-#Demo CustomTabsHack\n-\n-*Deprecated*\n-\n-Uses the deprecated TabActivity\n-\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/build.gradle",
            "additions": 0,
            "deletions": 21
        },
        "diff content": "@@ -1,21 +0,0 @@\n-apply plugin: 'com.android.application'\n-\n-\n-android {\n-    compileSdkVersion 21\n-    buildToolsVersion \"21.1.2\"\n-\n-    defaultConfig {\n-        applicationId \"com.novoda.demo.customtabshack\"\n-        minSdkVersion 3\n-        targetSdkVersion 21\n-        versionCode 1\n-        versionName \"1.0\"\n-    }\n-    \n-    lintOptions {\n-        abortOnError false\n-    }\n-}\n-\n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 22
        },
        "diff content": "@@ -1,22 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-      package=\"com.novoda\"\n-      android:versionCode=\"1\"\n-      android:versionName=\"1.0\">\n-    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\" android:theme=\"@style/Default\">\n-        \n-        <activity android:name=\".Container\"\n-                  android:label=\"@string/app_name\">\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity>\n-    \n-    <activity android:name=\"Tab1Activity\"></activity>\n-\n-\t<activity android:name=\"Tab2Activity\"></activity>\n-\t\n-\t</application>\n-    <uses-sdk android:minSdkVersion=\"3\" />\n-</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/java/com/novoda/Container.java",
            "additions": 0,
            "deletions": 69
        },
        "diff content": "@@ -1,69 +0,0 @@\n-package com.novoda;\n-\n-import android.app.TabActivity;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.content.IntentFilter;\n-import android.os.Bundle;\n-import android.os.Handler;\n-import android.os.Message;\n-import android.util.Log;\n-import android.widget.TabHost;\n-\n-public class Container extends TabActivity{\n-\n-\t@Override\n-\tpublic void onCreate(Bundle savedInstanceState) {\n-        requestWindowFeature(android.view.Window.FEATURE_NO_TITLE);\n-\t\tsuper.onCreate(savedInstanceState);\n-\n-\t\thost = getTabHost();\n-\t\tIntent intent = new Intent(this, Tab1Activity.class);\n-\t\thost.addTab(host.newTabSpec(\"one\").setIndicator(\"TAB1\").setContent(intent));\n-\t\tintent = new Intent(this, Tab2Activity.class);\n-\t\thost.addTab(host.newTabSpec(\"two\").setIndicator(\"TAB2\").setContent(intent));\n-\t\t\n-\t\thost.getTabWidget().getChildAt(0).getLayoutParams().height = 0;\n-\t\thost.getTabWidget().getChildAt(1).getLayoutParams().height = 0;\n-\n-\t}\n-\t\n-\t@Override\n-\tprotected void onResume() {\n-\t\tsuper.onResume();\n-\t\treceiver = new TabChangeReceiver();\n-\t\tregisterReceiver(receiver, new IntentFilter(\"com.novoda.TAB\"), null, mHandler);\n-\t}\n-\t\n-\t@Override\n-\tprotected void onPause() {\n-\t\tsuper.onPause();\n-\t\tunregisterReceiver(receiver);\n-\t};\n-\t\n-    protected Handler mHandler = new Handler() {\n-        @Override public void handleMessage(Message msg) {\n-            switch (msg.what) {\n-            \tcase SWITCH_TAB:\n-            \t\tLog.i(\"handler\", \"using the handler\");\n-                    host.setCurrentTab(msg.arg1);            \t\t\n-            \t\tbreak;\n-            }\n-        }\n-    };\n-\n-    public class TabChangeReceiver extends android.content.BroadcastReceiver{\n-\t\t@Override\n-\t\tpublic void onReceive(Context context, Intent intent) {\n-\t\t\tint intExtra = intent.getIntExtra(\"tab\", 0);\n-\t\t\tLog.i(TabChangeReceiver.class.getSimpleName(), \"Recieved broadcast with extra=[\" + intExtra + \"]\");\n-\t\t\t\n-\t\t\tmHandler.sendMessage(mHandler.obtainMessage(SWITCH_TAB, intExtra, 0));\n-\t\t}\n-\t}\n-\t\n-\tprivate TabHost host;\n-\tpublic static final int SWITCH_TAB = 2545;\n-\tprotected static TabChangeReceiver receiver;\n-\t\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/java/com/novoda/Tab1Activity.java",
            "additions": 0,
            "deletions": 25
        },
        "diff content": "@@ -1,25 +0,0 @@\n-package com.novoda;\n-\n-import android.app.Activity;\n-import android.content.Intent;\n-import android.os.Bundle;\n-import android.view.View;\n-import android.view.View.OnClickListener;\n-\n-public class Tab1Activity extends Activity{\n-\t\n-\t@Override\n-\tprotected void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-        setContentView(R.layout.tab1);\n-        \n-        findViewById(R.id.tab2).setOnClickListener(new OnClickListener() {\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n-\t\t\t\tintent.putExtra(\"tab\", 1);\n-\t\t\t\tsendBroadcast(intent);\n-\t\t\t}\n-\t\t});\n-        \n-\t}\n-}\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/java/com/novoda/Tab2Activity.java",
            "additions": 0,
            "deletions": 25
        },
        "diff content": "@@ -1,25 +0,0 @@\n-package com.novoda;\n-\n-import android.app.Activity;\n-import android.content.Intent;\n-import android.os.Bundle;\n-import android.view.View;\n-import android.view.View.OnClickListener;\n-\n-public class Tab2Activity extends Activity{\n-\t\n-\t@Override\n-\tprotected void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-        setContentView(R.layout.tab2);\n-        \n-        findViewById(R.id.tab1).setOnClickListener(new OnClickListener() {\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n-\t\t\t\tintent.putExtra(\"tab\", 0);\n-\t\t\t\tsendBroadcast(intent);\n-\t\t\t}\n-\t\t});\n-            \n-\t}\n-}\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CustomTabsHack/src/main/res/drawable/icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/drawable/selected.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CustomTabsHack/src/main/res/drawable/selected.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/drawable/unselected.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CustomTabsHack/src/main/res/drawable/unselected.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-<TextView  \n-    android:layout_width=\"fill_parent\" \n-    android:layout_height=\"wrap_content\" \n-    android:text=\"@string/hello\"\n-    />\n-</LinearLayout>\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/layout/tab1.xml",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\">\n-    \n-    <LinearLayout style=\"@style/TabContainer\">\n-\t\t<LinearLayout  android:id=\"@+id/tab1\" style=\"@style/TabSelected\">\n-\t\t\t<TextView style=\"@style/TabTxt\"\tandroid:text=\"Tab1\"/>\n-\t\t</LinearLayout>\t\n-\t\t\n-\t\t<LinearLayout android:id=\"@+id/tab2\" style=\"@style/TabUnselected\">\n-\t\t\t<TextView style=\"@style/TabTxt\"\tandroid:text=\"Tab2\"/>\n-\t\t</LinearLayout>\t\n-\t</LinearLayout>\t\n-\t\n-</LinearLayout>\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/layout/tab2.xml",
            "additions": 0,
            "deletions": 19
        },
        "diff content": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-    \n-    <LinearLayout style=\"@style/TabContainer\">\n-\t\t<LinearLayout  android:id=\"@+id/tab1\" style=\"@style/TabUnselected\">\n-\t\t\t<TextView style=\"@style/TabTxt\"\tandroid:text=\"Tab1\"/>\n-\t\t</LinearLayout>\t\n-\t\t\n-\t\t<LinearLayout   android:id=\"@+id/tab2\" style=\"@style/TabSelected\">\n-\t\t\t<TextView style=\"@style/TabTxt\"\tandroid:text=\"Tab2\"/>\n-\t\t</LinearLayout>\t\t\n-\t\t\t\n-\t</LinearLayout>\t\n-\t\n-</LinearLayout>\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-    <string name=\"hello\">Hello World, Container!</string>\n-    <string name=\"app_name\">MultipleActivityTabHost</string>\n-</resources>\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/values/styles.xml",
            "additions": 0,
            "deletions": 39
        },
        "diff content": "@@ -1,39 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-\n-\t<style name=\"Default\">\n-\t\t<item name=\"android:layout_width\">wrap_content</item>\n-\t\t<item name=\"android:layout_height\">wrap_content</item>\n-\t</style>\n-\t\n-\t<style name=\"WidthFillParentBoth\">\n-\t\t<item name=\"android:layout_width\">fill_parent</item>\n-\t\t<item name=\"android:layout_height\">fill_parent</item>\n-\t</style>\n-\t\n-\t<style name=\"TabContainer\">\n-\t\t<item name=\"android:layout_width\">fill_parent</item>\n-\t\t<item name=\"android:layout_height\">60dip</item>\n-\t\t<item name=\"android:orientation\">horizontal</item>\n-\t</style>\n-\t\n-\t<style name=\"Tab\">\n-\t\t<item name=\"android:layout_height\">fill_parent</item>\n-\t\t<item name=\"android:gravity\">center</item>\n-\t\t<item name=\"android:layout_weight\">33</item>\n-\t</style>\n-\t\n-\t<style name=\"TabUnselected\" parent=\"Tab\">\n-\t\t<item name=\"android:background\">@drawable/unselected</item>\n-\t</style>\n-\t\n-\t<style name=\"TabSelected\"  parent=\"Tab\">\n-\t\t<item name=\"android:background\">@drawable/selected</item>\n-\t</style>\n-\t\n-\t<style name=\"TabTxt\">\n-\t\t<item name=\"android:gravity\">center</item>\n-\t</style>\n-\t\n-\t\n-</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/README.md",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-#Demo MultpileActivityTabHost\n-\n-*Deprecated*\n-\n-Uses deprecated TabActivity\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/build.gradle",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,17 +0,0 @@\n-apply plugin: 'com.android.application'\n-\n-\n-android {\n-    compileSdkVersion 'Google Inc.:Google APIs:21'\n-    buildToolsVersion \"21.1.2\"\n-\n-    defaultConfig {\n-        applicationId \"com.novoda.demo.multpileactivitytabhost\"\n-        minSdkVersion 3\n-        targetSdkVersion 21\n-        versionCode 1\n-        versionName \"1.0\"\n-    }\n-}\n-\n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,23 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-      package=\"com.novoda\"\n-      android:versionCode=\"1\"\n-      android:versionName=\"1.0\">\n-    \n-    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n-        \n-        <activity android:name=\".Container\"\n-                  android:label=\"@string/app_name\">\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity>\n-    \n-    <activity android:name=\"Tab1Activity\"></activity>\n-\n-\t<activity android:name=\"Tab2Activity\"></activity>\n-\t\n-\t</application>\n-    <uses-sdk android:minSdkVersion=\"3\" />\n-</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/java/com/novoda/Container.java",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,17 +0,0 @@\n-package com.novoda;\n-\n-import android.app.TabActivity;\n-import android.content.Intent;\n-import android.os.Bundle;\n-import android.widget.TabHost;\n-\n-public class Container extends TabActivity {\n-\t@Override\n-\tpublic void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-\n-\t\tTabHost host = getTabHost();\n-\t\thost.addTab(host.newTabSpec(\"one\").setIndicator(\"TAB1\").setContent(new Intent(this, Tab1Activity.class)));\n-\t\thost.addTab(host.newTabSpec(\"two\").setIndicator(\"TAB2\").setContent(new Intent(this, Tab2Activity.class)));\n-\t}\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/java/com/novoda/Tab1Activity.java",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-package com.novoda;\n-\n-import android.app.Activity;\n-import android.os.Bundle;\n-\n-public class Tab1Activity extends Activity{\n-\t\n-\t@Override\n-\tprotected void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-        setContentView(R.layout.tab1);\n-\t}\n-}\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/java/com/novoda/Tab2Activity.java",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-package com.novoda;\n-\n-import android.app.Activity;\n-import android.os.Bundle;\n-\n-public class Tab2Activity extends Activity{\n-\t\n-\t@Override\n-\tprotected void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-        setContentView(R.layout.tab2);\n-\t}\n-}\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultpileActivityTabHost/src/main/res/drawable/icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-<TextView  \n-    android:layout_width=\"fill_parent\" \n-    android:layout_height=\"wrap_content\" \n-    android:text=\"@string/hello\"\n-    />\n-</LinearLayout>\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/layout/tab1.xml",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-<TextView  \n-    android:layout_width=\"fill_parent\" \n-    android:layout_height=\"wrap_content\" \n-    android:text=\"tab1\"\n-    />\n-</LinearLayout>\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/layout/tab2.xml",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-<TextView  \n-    android:layout_width=\"fill_parent\" \n-    android:layout_height=\"wrap_content\" \n-    android:text=\"tab2\"\n-    />\n-</LinearLayout>\n"
    },
    {
        "commit hash": "86cfdc907301d4331eb57866d2f130071e155d61",
        "previous commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-    <string name=\"hello\">Hello World, Container!</string>\n-    <string name=\"app_name\">MultipleActivityTabHost</string>\n-</resources>\n"
    },
    {
        "commit hash": "972f69d6e0a2ea35cc8ad5425a7215d6a09cb69e",
        "previous commit hash": "de930d2eca1ddee780dd77efc636db175d02ef1a",
        "diff stats": {
            "file_path": "gradle/update-demos.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -51,11 +51,11 @@ private writeGlobalReadmeFooter(File globalReadme) {\n \n     globalReadme.append(\"#Further NOS work\\n\")\n     globalReadme.append(\"##All NOS libraries\\n\")\n-    def libfile = new JsonSlurper().parseText(\"https://raw.githubusercontent.com/novoda/novoda/gradle-plugins/assets/libs.json\".toURL().text)\n+    def libfile = new JsonSlurper().parseText(\"https://raw.githubusercontent.com/novoda/novoda/master/assets/libs.json\".toURL().text)\n     libfile.libs.each({ globalReadme.append(\"* [$it.title]($it.url)\\n\") })\n \n     globalReadme.append(\"##All NOS gradle plugins\\n\")\n-    def gradlepluginfile = new JsonSlurper().parseText(\"https://raw.githubusercontent.com/novoda/novoda/gradle-plugins/assets/gradle-plugins.json\".toURL().text)\n+    def gradlepluginfile = new JsonSlurper().parseText(\"https://raw.githubusercontent.com/novoda/novoda/master/assets/gradle-plugins.json\".toURL().text)\n     gradlepluginfile.get(\"gradle-plugins\").each({ globalReadme.append(\"* [$it.title]($it.url)\\n\") })\n }\n \n"
    },
    {
        "commit hash": "de930d2eca1ddee780dd77efc636db175d02ef1a",
        "previous commit hash": "121d740525ade58eb07d31012db145ea55e9bf2c",
        "diff stats": {
            "file_path": "README.md",
            "additions": 16,
            "deletions": 1
        },
        "diff content": "@@ -27,7 +27,7 @@ This is a collection of basic android examples created by Novoda.\n * [TabHostMultipleActivityBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostMultipleActivityBrowsing)\n * [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n * [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n-#Demos of Novoda Open Source libraries and projects\n+#Demos of Novoda Open Source (NOS) libraries and projects\n \n * [Simple Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-simple)\n * [Extended Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-extended)\n@@ -37,3 +37,18 @@ This is a collection of basic android examples created by Novoda.\n * [Demo for image based palettes](https://github.com/novoda/material-painter)\n * [Demo for Merlin (network connectivity)](https://github.com/novoda/merlin/tree/master/demo)\n * [Demo for simple XML parsing](https://github.com/novoda/simple-easy-xml-parser/tree/master/demoAndroid)\n+#Further NOS work\n+\n+##All NOS libraries\n+* [Download Manager](https://github.com/novoda/download-manager)\n+* [Merlin - Connectivity Checker](https://github.com/novoda/merlin)\n+* [Landing Strip](https://github.com/novoda/landing-strip)\n+* [Sqlite Provider](https://github.com/novoda/sqlite-provider)\n+* [Notils](https://github.com/novoda/notils)\n+* [Simple XML Parser](https://github.com/novoda/simple-easy-xml-parser)\n+* [RxPresso](https://github.com/novoda/rxpresso)\n+##Gradle plugins\n+* [Bintray Release](https://github.com/novoda/bintray-release)\n+* [Sqlite Analyzer](https://github.com/novoda/sqlite-analyzer)\n+* [Android Command Plugin](https://github.com/novoda/gradle-android-command-plugin)\n+* [Compare Reports](https://github.com/novoda/spikes/tree/master/compare-reports)\n"
    },
    {
        "commit hash": "de930d2eca1ddee780dd77efc636db175d02ef1a",
        "previous commit hash": "121d740525ade58eb07d31012db145ea55e9bf2c",
        "diff stats": {
            "file_path": "gradle/update-demos.gradle",
            "additions": 10,
            "deletions": 1
        },
        "diff content": "@@ -45,9 +45,18 @@ private writeGlobalReadmeHeader(File globalReadme) {\n }\n \n private writeGlobalReadmeFooter(File globalReadme) {\n-    globalReadme.append(\"#Demos of Novoda Open Source libraries and projects\\n\\n\")\n+    globalReadme.append(\"#Demos of Novoda Open Source (NOS) libraries and projects\\n\")\n     def demofile = new JsonSlurper().parseText(\"https://raw.githubusercontent.com/novoda/novoda/master/assets/demos.json\".toURL().text)\n     demofile.demos.each({ globalReadme.append(\"* [$it.title]($it.url)\\n\") })\n+\n+    globalReadme.append(\"#Further NOS work\\n\")\n+    globalReadme.append(\"##All NOS libraries\\n\")\n+    def libfile = new JsonSlurper().parseText(\"https://raw.githubusercontent.com/novoda/novoda/gradle-plugins/assets/libs.json\".toURL().text)\n+    libfile.libs.each({ globalReadme.append(\"* [$it.title]($it.url)\\n\") })\n+\n+    globalReadme.append(\"##All NOS gradle plugins\\n\")\n+    def gradlepluginfile = new JsonSlurper().parseText(\"https://raw.githubusercontent.com/novoda/novoda/gradle-plugins/assets/gradle-plugins.json\".toURL().text)\n+    gradlepluginfile.get(\"gradle-plugins\").each({ globalReadme.append(\"* [$it.title]($it.url)\\n\") })\n }\n \n private boolean isAndroidApp(File file) {\n"
    },
    {
        "commit hash": "0d7e4e69035e2dcc41c111a9c5ea03870b9c9987",
        "previous commit hash": "4a9d05585b797050c0fb2377dc91c01efd2704d5",
        "diff stats": {
            "file_path": "README.md",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -27,3 +27,13 @@ This is a collection of basic android examples created by Novoda.\n * [TabHostMultipleActivityBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostMultipleActivityBrowsing)\n * [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n * [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n+#Demos of Novoda Open Source libraries and projects\n+\n+* [Simple Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-simple)\n+* [Extended Demo for Download Manager](https://github.com/novoda/download-manager/tree/master/demo-extended)\n+* [Demo for Reactive Espresso Testing](https://github.com/novoda/rxpresso/tree/master/demo)\n+* [Demo for Landing Strip (sliding viewpager tab strip)](https://github.com/novoda/landing-strip/tree/master/demo)\n+* [Demo for Reactive Mocking](https://github.com/novoda/rxmocks/tree/master/demo)\n+* [Demo for image based palettes](https://github.com/novoda/material-painter)\n+* [Demo for Merlin (network connectivity)](https://github.com/novoda/merlin/tree/master/demo)\n+* [Demo for simple XML parsing](https://github.com/novoda/simple-easy-xml-parser/tree/master/demoAndroid)\n"
    },
    {
        "commit hash": "0d7e4e69035e2dcc41c111a9c5ea03870b9c9987",
        "previous commit hash": "4a9d05585b797050c0fb2377dc91c01efd2704d5",
        "diff stats": {
            "file_path": "gradle/update-demos.gradle",
            "additions": 11,
            "deletions": 1
        },
        "diff content": "@@ -1,3 +1,5 @@\n+import groovy.json.JsonSlurper\n+\n task updateDemos() << {\n     File globalReadme = new File(\"README.md\")\n     writeGlobalReadmeHeader(globalReadme)\n@@ -9,6 +11,7 @@ task updateDemos() << {\n             updateDemoList(file, globalReadme)\n         }\n     }\n+    writeGlobalReadmeFooter(globalReadme)\n }\n \n private void updateBuildGradle(File file) {\n@@ -37,7 +40,14 @@ private void updateDemoList(File file, File globalReadme) {\n }\n \n private writeGlobalReadmeHeader(File globalReadme) {\n-    globalReadme.write(\"#Android Demos\\n\\nThis is a collection of basic android examples created by Novoda.\\n\\n\")\n+    globalReadme.write(\"#Android Demos [![](https://raw.githubusercontent.com/novoda/novoda/master/assets/btn_apache_lisence.png)](LICENSE.txt)\\n\\n\" +\n+            \"This is a collection of basic android examples created by Novoda.\\n\\n\")\n+}\n+\n+private writeGlobalReadmeFooter(File globalReadme) {\n+    globalReadme.append(\"#Demos of Novoda Open Source libraries and projects\\n\\n\")\n+    def demofile = new JsonSlurper().parseText(\"https://raw.githubusercontent.com/novoda/novoda/master/assets/demos.json\".toURL().text)\n+    demofile.demos.each({ globalReadme.append(\"* [$it.title]($it.url)\\n\") })\n }\n \n private boolean isAndroidApp(File file) {\n"
    },
    {
        "commit hash": "4a9d05585b797050c0fb2377dc91c01efd2704d5",
        "previous commit hash": "50919095d6e06a5d5c16c3aaae469d89223099bf",
        "diff stats": {
            "file_path": "CHANGELOG.md",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -3,8 +3,8 @@\n Changes for each demo are documented in the corresponding change log files.\n \n ## June 2015\n-Streamline package naming\n-\n+* Streamline package naming\n+* Add helper method for updating demos (maintainers use `apply from: 'gradle/update-demos.gradle'`)\n \n ## Jan 2015\n * Gradleify all projects and upgrade to build tools 21.1.2\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/README.md",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-#Demo TabHostMultipleActivityBrowsing\n-\n-*Deprecated*\n-\n-Uses deprecated TabActivity\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/build.gradle",
            "additions": 0,
            "deletions": 16
        },
        "diff content": "@@ -1,16 +0,0 @@\n-apply plugin: 'com.android.application'\n-\n-android {\n-    compileSdkVersion 21\n-    buildToolsVersion \"21.1.2\"\n-\n-    defaultConfig {\n-        applicationId \"com.novoda.demo.tabhostmultipleactivitybrowsing\"\n-        minSdkVersion 3\n-        targetSdkVersion 21\n-        versionCode 1\n-        versionName \"1.0\"\n-    }\n-}\n-\n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 22
        },
        "diff content": "@@ -1,22 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-      package=\"com.novoda\"\n-      android:versionCode=\"1\"\n-      android:versionName=\"1.0\">\n-    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n-        \n-        <activity android:name=\".Container\"\n-                  android:label=\"@string/app_name\">\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity>\n-    \n-    <activity android:name=\"Tab1Activity\"></activity>\n-\n-\t<activity android:name=\"Tab2Activity\"></activity>\n-\t\n-\t</application>\n-    <uses-sdk android:minSdkVersion=\"3\" />\n-</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/java/com/novoda/Container.java",
            "additions": 0,
            "deletions": 65
        },
        "diff content": "@@ -1,65 +0,0 @@\n-package com.novoda;\n-\n-import android.app.TabActivity;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.content.IntentFilter;\n-import android.os.Bundle;\n-import android.os.Handler;\n-import android.os.Message;\n-import android.text.style.SuperscriptSpan;\n-import android.util.Log;\n-import android.widget.TabHost;\n-\n-public class Container extends TabActivity{\n-\n-\t@Override\n-\tpublic void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-\n-\t\thost = getTabHost();\n-\t\tIntent intent = new Intent(this, Tab1Activity.class);\n-\t\thost.addTab(host.newTabSpec(\"one\").setIndicator(\"TAB1\").setContent(intent));\n-\t\tintent = new Intent(this, Tab2Activity.class);\n-\t\thost.addTab(host.newTabSpec(\"two\").setIndicator(\"TAB2\").setContent(intent));\n-\t}\n-\t\n-\t@Override\n-\tprotected void onResume() {\n-\t\tsuper.onResume();\n-\t\treceiver = new TabChangeReceiver();\n-\t\tregisterReceiver(receiver, new IntentFilter(\"com.novoda.TAB\"), null, mHandler);\n-\t}\n-\t\n-\t@Override\n-\tprotected void onPause() {\n-\t\tsuper.onPause();\n-\t\tunregisterReceiver(receiver);\n-\t};\n-\t\n-    protected Handler mHandler = new Handler() {\n-        @Override public void handleMessage(Message msg) {\n-            switch (msg.what) {\n-            \tcase SWITCH_TAB:\n-            \t\tLog.i(\"handler\", \"using the handler\");\n-                    host.setCurrentTab(msg.arg1);            \t\t\n-            \t\tbreak;\n-            }\n-        }\n-    };\n-\n-    public class TabChangeReceiver extends android.content.BroadcastReceiver{\n-\t\t@Override\n-\t\tpublic void onReceive(Context context, Intent intent) {\n-\t\t\tint intExtra = intent.getIntExtra(\"tab\", 0);\n-\t\t\tLog.i(TabChangeReceiver.class.getSimpleName(), \"Recieved broadcast with extra=[\" + intExtra + \"]\");\n-\t\t\t\n-\t\t\tmHandler.sendMessage(mHandler.obtainMessage(SWITCH_TAB, intExtra, 0));\n-\t\t}\n-\t}\n-\t\n-\tprivate TabHost host;\n-\tpublic static final int SWITCH_TAB = 2545;\n-\tprotected static TabChangeReceiver receiver;\n-\t\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/java/com/novoda/Tab1Activity.java",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,23 +0,0 @@\n-package com.novoda;\n-\n-import android.app.Activity;\n-import android.content.Intent;\n-import android.os.Bundle;\n-import android.view.View;\n-import android.view.View.OnClickListener;\n-\n-public class Tab1Activity extends Activity{\n-\t\n-\t@Override\n-\tprotected void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-        setContentView(R.layout.tab1);\n-        findViewById(R.id.tab1button).setOnClickListener(new OnClickListener() {\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n-\t\t\t\tintent.putExtra(\"tab\", 1);\n-\t\t\t\tsendBroadcast(intent);\n-\t\t\t}\n-\t\t});\n-\t}\n-}\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/java/com/novoda/Tab2Activity.java",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,23 +0,0 @@\n-package com.novoda;\n-\n-import android.app.Activity;\n-import android.content.Intent;\n-import android.os.Bundle;\n-import android.view.View;\n-import android.view.View.OnClickListener;\n-\n-public class Tab2Activity extends Activity{\n-\t\n-\t@Override\n-\tprotected void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-        setContentView(R.layout.tab2);\n-        findViewById(R.id.tab2button).setOnClickListener(new OnClickListener() {\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n-\t\t\t\tintent.putExtra(\"tab\", 0);\n-\t\t\t\tsendBroadcast(intent);\n-\t\t\t}\n-\t\t});        \n-\t}\n-}\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/TabHostMultipleActivityBrowsing/src/main/res/drawable/icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-<TextView  \n-    android:layout_width=\"fill_parent\" \n-    android:layout_height=\"wrap_content\" \n-    android:text=\"@string/hello\"\n-    />\n-</LinearLayout>\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/layout/tab1.xml",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-\t<Button\n-\t\tandroid:id=\"@+id/tab1button\"\n-\t\tandroid:layout_width=\"fill_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:text=\"Open Tab #2\" />\n-</LinearLayout>\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/layout/tab2.xml",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-\t<Button\n-\t\tandroid:id=\"@+id/tab2button\"\n-\t\tandroid:layout_width=\"fill_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:text=\"Open Tab #1\" />\n-</LinearLayout>\n"
    },
    {
        "commit hash": "14b00b95872fc2fb8cef1e7ef3df2327ef36ab6b",
        "previous commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-    <string name=\"hello\">Hello World, Container!</string>\n-    <string name=\"app_name\">MultipleActivityTabHost</string>\n-</resources>\n"
    },
    {
        "commit hash": "0a2905713a504400aaf0b24ae0b2f0165551d263",
        "previous commit hash": "7d3186e278ccc33d359200b00488983b1f26da99",
        "diff stats": {
            "file_path": "README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,4 @@\n-#Android Demos\n+#Android Demos [![](https://raw.githubusercontent.com/novoda/novoda/master/assets/btn_apache_lisence.png)](LICENSE.txt)\n \n This is a collection of basic android examples created by Novoda.\n \n"
    },
    {
        "commit hash": "cd61f9911f8e550f0a3dc1fd1fffcabc582fa925",
        "previous commit hash": "eb9d8ca0281618294682d50a53889e07c18993b5",
        "diff stats": {
            "file_path": "CHANGELOG.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,7 @@ Changes for each demo are documented in the corresponding change log files.\n \n ## June 2015\n * Streamline package naming\n-* Add helper method for updating demos (maintainers use apply from: `'gradle/update-demos.gradle')\n+* Add helper method for updating demos (maintainers use `apply from: 'gradle/update-demos.gradle'`)\n \n ## Jan 2015\n * Gradleify all projects and upgrade to build tools 21.1.2\n"
    },
    {
        "commit hash": "eb9d8ca0281618294682d50a53889e07c18993b5",
        "previous commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "diff stats": {
            "file_path": "CHANGELOG.md",
            "additions": 3,
            "deletions": 5
        },
        "diff content": "@@ -3,10 +3,8 @@\n Changes for each demo are documented in the corresponding change log files.\n \n ## June 2015\n-Add android-command plugin. Run demos with\n-```\n-./gradlew ListStyles:runDebug\n-```\n+* Streamline package naming\n+* Add helper method for updating demos (maintainers use apply from: `'gradle/update-demos.gradle')\n \n ## Jan 2015\n-Gradleify all projects and upgrade to build tools 21.1.2\n+* Gradleify all projects and upgrade to build tools 21.1.2\n"
    },
    {
        "commit hash": "eb9d8ca0281618294682d50a53889e07c18993b5",
        "previous commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "diff stats": {
            "file_path": "build.gradle",
            "additions": 0,
            "deletions": 51
        },
        "diff content": "@@ -4,7 +4,6 @@ buildscript {\n     }\n     dependencies {\n         classpath 'com.android.tools.build:gradle:1.2.3'\n-        classpath 'com.novoda:gradle-android-command-plugin:1.4.0'\n     }\n }\n \n@@ -13,53 +12,3 @@ allprojects {\n         jcenter()\n     }\n }\n-\n-task wrapper(type: Wrapper) {\n-    gradleVersion = '2.4'\n-}\n-\n-task updateDemos() << {\n-    File globalReadme = new File(\"README.md\")\n-    writeGlobalReadmeHeader(globalReadme)\n-    FileTree tree = fileTree(dir: '.', include: \"*/**/build.gradle\")\n-    tree.each { File file ->\n-        updateBuildGradle(file)\n-        updateReadme(file)\n-        if (isAndroidApp(file)) {\n-            updateDemoList(file, globalReadme)\n-        }\n-    }\n-}\n-\n-private void updateBuildGradle(File file) {\n-    String packageSuffix = relativePath(file.parentFile).toLowerCase()\n-    packageSuffix = packageSuffix.replaceAll(\"/\", \".\")\n-    packageSuffix = packageSuffix.replaceAll(\"_\", \"\")\n-    println \"Updating $packageSuffix ...\"\n-    if (!file.text.contains(\"applicationId \\\"com.novoda.demo.$packageSuffix\\\"\")) {\n-        ant.replaceregexp(file: file, match: \"applicationId (\\\\S*)\", replace: \"applicationId \\\"com.novoda.demo.$packageSuffix\\\"\")\n-    }\n-}\n-\n-private void updateReadme(File file) {\n-    String projectName = relativePath(file.parentFile)\n-    File readme = new File(file.parentFile, \"README.md\")\n-    if (!readme.exists()) {\n-        readme.withWriterAppend { w ->\n-            w << \"#Demo $projectName\\n\\n\"\n-        }\n-    }\n-}\n-\n-private void updateDemoList(File file, File globalReadme) {\n-    String projectName = relativePath(file.parentFile)\n-    globalReadme << \"* [$projectName](http://github.com/novoda/android-demos/tree/master/$projectName)\\n\"\n-}\n-\n-private writeGlobalReadmeHeader(File globalReadme) {\n-    globalReadme.write(\"#Android Demos\\n\\nThis is a collection of basic android examples created by Novoda.\\n\\n\")\n-}\n-\n-private boolean isAndroidApp(File file) {\n-    file.text.contains(\"apply plugin: 'com.android.application'\")\n-}\n"
    },
    {
        "commit hash": "eb9d8ca0281618294682d50a53889e07c18993b5",
        "previous commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "diff stats": {
            "file_path": "gradle/update-demos.gradle",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+task updateDemos() << {\n+    File globalReadme = new File(\"README.md\")\n+    writeGlobalReadmeHeader(globalReadme)\n+    FileTree tree = fileTree(dir: '.', include: \"*/**/build.gradle\")\n+    tree.each { File file ->\n+        updateBuildGradle(file)\n+        updateReadme(file)\n+        if (isAndroidApp(file)) {\n+            updateDemoList(file, globalReadme)\n+        }\n+    }\n+}\n+\n+private void updateBuildGradle(File file) {\n+    String packageSuffix = relativePath(file.parentFile).toLowerCase()\n+    packageSuffix = packageSuffix.replaceAll(\"/\", \".\")\n+    packageSuffix = packageSuffix.replaceAll(\"_\", \"\")\n+    println \"Updating $packageSuffix ...\"\n+    if (!file.text.contains(\"applicationId \\\"com.novoda.demo.$packageSuffix\\\"\")) {\n+        ant.replaceregexp(file: file, match: \"applicationId (\\\\S*)\", replace: \"applicationId \\\"com.novoda.demo.$packageSuffix\\\"\")\n+    }\n+}\n+\n+private void updateReadme(File file) {\n+    String projectName = relativePath(file.parentFile)\n+    File readme = new File(file.parentFile, \"README.md\")\n+    if (!readme.exists()) {\n+        readme.withWriterAppend { w ->\n+            w << \"#Demo $projectName\\n\\n\"\n+        }\n+    }\n+}\n+\n+private void updateDemoList(File file, File globalReadme) {\n+    String projectName = relativePath(file.parentFile)\n+    globalReadme << \"* [$projectName](http://github.com/novoda/android-demos/tree/master/$projectName)\\n\"\n+}\n+\n+private writeGlobalReadmeHeader(File globalReadme) {\n+    globalReadme.write(\"#Android Demos\\n\\nThis is a collection of basic android examples created by Novoda.\\n\\n\")\n+}\n+\n+private boolean isAndroidApp(File file) {\n+    file.text.contains(\"apply plugin: 'com.android.application'\")\n+}\n"
    },
    {
        "commit hash": "0f99f5b933247d6e8ddeb48be30e9906c341f0c0",
        "previous commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "diff stats": {
            "file_path": "CHANGELOG.md",
            "additions": 1,
            "deletions": 4
        },
        "diff content": "@@ -3,10 +3,7 @@\n Changes for each demo are documented in the corresponding change log files.\n \n ## June 2015\n-Add android-command plugin. Run demos with\n-```\n-./gradlew ListStyles:runDebug\n-```\n+Streamline package naming\n \n ## Jan 2015\n Gradleify all projects and upgrade to build tools 21.1.2\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "CarouselFragment/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "CompassExample/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -20,4 +20,3 @@ dependencies {\n   compile files('libs/novocation-core-1.0.8.jar')\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "ContactSelector/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "CustomActivityTransition/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "CustomTabsHack/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -18,4 +18,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "DynamicListItems/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -18,4 +18,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "Fragments/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -18,4 +18,3 @@ dependencies {\n   compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'\n   compile 'com.android.support:support-v4:21.0.0'\n }\n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "GsonJsonWebservice/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -18,4 +18,3 @@ android {\n dependencies {\n   compile 'com.google.code.gson:gson:2.3.1'\n }\n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -15,4 +15,3 @@ android {\n dependencies {\n     compile project(':LeftNavBarLibrary')\n }\n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "ListStyles/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "MapApiV2Demo/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -19,4 +19,3 @@ dependencies {\n     compile 'com.google.android.gms:play-services:6.5.87'\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "MultipleContacts/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "PinchZoomDetector/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -21,4 +21,3 @@ dependencies {\n     //compile 'com.google.android.gms:play-services:6.5.87'\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "TabHostExample/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "build.gradle",
            "additions": 0,
            "deletions": 4
        },
        "diff content": "@@ -39,10 +39,6 @@ private void updateBuildGradle(File file) {\n     if (!file.text.contains(\"applicationId \\\"com.novoda.demo.$packageSuffix\\\"\")) {\n         ant.replaceregexp(file: file, match: \"applicationId (\\\\S*)\", replace: \"applicationId \\\"com.novoda.demo.$packageSuffix\\\"\")\n     }\n-    if (isAndroidApp(file) &&\n-            !file.text.contains(\"apply plugin: 'android-command'\")) {\n-        file << \"\\napply plugin: 'android-command'\\n\"\n-    }\n }\n \n private void updateReadme(File file) {\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "encryption/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -14,4 +14,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "simperAudioStreamer/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "sms/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "14730288a9b3dae712573abafda388c770f192f7",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "wizard/build.gradle",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -13,4 +13,3 @@ android {\n     }\n }\n \n-apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "CustomTabsHack/README.md",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,6 @@\n #Demo CustomTabsHack\n \n+*Deprecated*\n+\n+Uses the deprecated TabActivity\n+\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "DynamicListItems/README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,3 @@\n #Demo DynamicListItems\n \n+DynamicListItems shows how to add items to a listview at runtime.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo FixedSizeTextColumns\n \n+FixedSizeTextColumns shows how WebView behaves with different font sizes.\n+\n+The user can choose from three different layouts and change the font size via menu.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "Fragments/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo Fragments\n \n+Fragments demonstrates how to use activities and fragments for basic master/detail layout.\n+\n+It does not use the support classes.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "GsonJsonWebservice/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo GsonJsonWebservice\n \n+GsonJsonWebservice demonstrates how to make a request to twitter.\n+\n+It uses Gson to handle json response.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/README.md",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,6 @@\n #Demo LeftNavBarExample/Example\n \n+Example show how to use the left navigation bar for TV.\n+\n+It uses the example library from google tv, it uses deprecated ActionBar.Tab, no support classes are used.\n+\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "ListStyles/README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,3 @@\n #Demo ListStyles\n \n+ListStyles demonstrates how to programmatically defined list item layouts.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/README.md",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,6 @@\n #Demo Livewallpaper/switch_animation\n \n+switch_animation demonstrates how to live wall papers with animations\n+\n+Crashes on newer devices due to bitmap handling.\n+\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo Livewallpaper/switch_leftright\n \n+switch_leftright demonstrates how to live wall papers with animations\n+\n+Crashes on newer devices due to bitmap handling.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "MultipleContacts/README.md",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,7 @@\n #Demo MultipleContacts\n \n+MultipleContacts demonstrates multi-auto-completion with contacts.\n+\n+The user can enter several comma separated names and auto-completion is suggested for each name.\n+\n+Uses deprecated People Uris.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo MultpileActivityTabHost\n \n+*Deprecated*\n+\n+Uses deprecated TabActivity\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "PinchZoomDetector/README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,3 @@\n #Demo PinchZoomDetector\n \n+PinchZoomDetector demonstrates how to add pinch to zoom gesture to an activity.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/README.md",
            "additions": 66,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,68 @@\n #Demo PushNotifications/c2dm_urban_airship\n \n+##Step 1:\n+\n+Urban Airship for Android uses C2DM for push notifications. In order to begin you first need to register an email id with Google\u2019s C2DM framework which can be found here:\n+\n+http://code.google.com/android/c2dm/signup.html\n+\n+you will also be required to register the application\u2019s package name.\n+\n+##Step 2:\n+\n+Register with Urban Airship on : http://urbanairship.com/ and wait for the confirmation mail from Google.\n+\n+##Step 3:\n+\n+Once you have the confirmation mail from Google informing you that your account can now successfully send push notifications you need to create a new application on Urban Airship. Log into Urban Airship and then create a new application. During creation make sure that you have Push Notification Support enabled and you register the same package name you registered with Google\u2019s servers.\n+\n+##Step 4:\n+\n+In order to get the C2DM authorisation token you need to execute a curl command\n+\n+curl https://www.google.com/accounts/ClientLogin -d Email=your_user -d \"Passwd=your_password\" -d accountType=GOOGLE -d source=Google-cURL-Example -d service=ac2dm\n+\n+Enter your password and email in the required fields. The response will resemble this\n+\n+SID=DQAAAPMAAACMY6LUPhXt_co8ESnZa9_bX17MJJZj2AGlDr4gcNIXxq7OJBMPFiT8ry756bE_0rmx\n+RfH6wLP4fwUO53qJzN6XlXufColJYUlqsT-vTMiZEPEDE_j_dTQcWRnSk2jMyQOTHLve0sSrthqMVPwT\n+kBZJn2pb8gsRsBUMHQbZRgCjEnMO8Ci_fkgKvgUYsX3xjlNO7O8znPWcxwK1KQjJZMGcYs8iM02s4u5g\n+ujij2hejb2Jg-F92t9XUmp51Dea-6FPw2OiOuIOobjh7lQdoO63Rp_qc040hICXl_8mx-DgWyCeUX1bh\n+s1EZb4c3qNiK-wRuSIi2ioA3VnpDBL231C35\n+LSID=DQAAAPUAAADaz7cSh--p87KoL0qT3eyLvA76QdMLtNaTYNMdOBMcH09_AEV9g3a3Js_7Lwgnw-N\n+sTRwVH719WITJKkzkuRwEhD6PJ92XXrpNxco4hZecnpsL07RxRHaWY3RqwJDUba-Le4UWeALr7ybdrz4\n+SEJy8Jlw9yGr8hctxK6wWAWToGQF3Bw9K9DiAx-E7ZyfWaZt98Y_ygPLg86hEUbBodIQD6UBZ75vDAbJ\n+YxhIP6yOBFCOCuP7NjDJ2ET1_IBDTEoCkXvVgky57w6N5Z8fO7QUoI6FUfGV9sY8y68G27PzwaeQcLv9\n+UuL6UGFRYOEfOxsKhK9Z99UoySuPzGcOgo7Sr\n+Auth=DGAAAPYAAAA7M1KQj2uTozkpD3p0J-X32eVRbK2a7oXPtNkZ3Uon6Kw8RySEds7ygjgB95tC0c5\n+Y3CzEUpHHIytC1KuF4s7majdRZFtqCRKwuTmLDALvyGGU8dv4FUUvMC4i016Epuk8jpq0QKTccmv2yCi\n+RgoIr7oMWkX5NuuYAmLO-m8i52AqDcVg3cyRatVHmNZnpfmhs8bXKjjvFAzP8r4oaH5Z33ibQRljCXeR\n+e71lFjBsIQGvmwnV3bzTJTza4aKkmlfGTA9Zk5p4QlgXHlpvmgWznbmm_gp7t5Q4yXyR9AlMj1W6mvfk\n+_PzzjcGh_8AW-5f9iFSFUjxwDrRJKDAXKc0ko\n+Extract the \u201cAuth\u201d portion of it i.e.\n+\n+DGAAAPYAAAA7M1KQj2uTozkpD3p0J-X32eVRbK2a7oXPtNkZ3Uon6Kw8RySEds7ygjgB95tC0c5\n+Y3CzEUpHHIytC1KuF4s7majdRZFtqCRKwuTmLDALvyGGU8dv4FUUvMC4i016Epuk8jpq0QKTccmv2yCi\n+RgoIr7oMWkX5NuuYAmLO-m8i52AqDcVg3cyRatVHmNZnpfmhs8bXKjjvFAzP8r4oaH5Z33ibQRljCXeR\n+e71lFjBsIQGvmwnV3bzTJTza4aKkmlfGTA9Zk5p4QlgXHlpvmgWznbmm_gp7t5Q4yXyR9AlMj1W6mvfk\n+_PzzjcGh_8AW-5f9iFSFUjxwDrRJKDAXKc0ko\n+\n+And enter it into the urban airship application field which requests for the C2DM authorisation token. And finally create the Urban Airship app.\n+\n+##Step 5:\n+\n+Create android project as per the example posted on github at:\n+\n+https://github.com/novoda/UrbanAirshipDemo\n+\n+##Step 6:\n+\n+Once the code is compiled in order to test the push notifications log into your urban airship account and goto the Test Push Notifications, here you need your device token in order to test the notification.\n+\n+You can get the Token ID from the logs, search for a Log that resembles:\n+\n+01-04 15:17:58.746: D/Push Sample - UALib(9606): Updating APID: 17b3c59d-8338-4dd8-b6de-410a693e742a\n+\n+OR\n+\n+you can test by sending a broadcast\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "TabHostExample/README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,3 @@\n #Demo TabHostExample\n \n+TabHostExample shows how to use the TabHost class.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo TabHostMultipleActivityBrowsing\n \n+*Deprecated*\n+\n+Uses deprecated TabActivity\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,3 @@\n #Demo TabHostSelfContainedTabBrowsing\n \n+TabHostSelfContainedTabBrowsing demonstrates a simple use of `TabHost` class with navigation between tabs.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "encryption/README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,3 @@\n #Demo encryption\n \n+Encyption demonstrates how to use javax.crypto in Activities.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "simperAudioStreamer/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo simperAudioStreamer\n \n+simperAudioStreamer demonstrates how to provide a simple audio stream service.\n+\n+The API for the service provides play, stop, currentPosition.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "sms/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo sms\n \n+sms demonstrates how to send SMS using the `SmsManager`.\n+\n+It uses the deprecated `gsm.SmsManager`.\n"
    },
    {
        "commit hash": "905be05c51c21993715c06f3dca6aaa288de0c97",
        "previous commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "diff stats": {
            "file_path": "wizard/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,4 @@\n #Demo wizard\n \n+wizard shows how to click through several activities in a wizzard like manner.\n+\n"
    },
    {
        "commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "previous commit hash": "112d2b9dfc8ffa913da868126368c28d4c1778a2",
        "diff stats": {
            "file_path": "CustomActivityTransition/README.md",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,8 @@\n #Demo CustomActivityTransition\n \n+CustomActivityTransition demonstrates how to define animations in the application theme.\n+\n+The animations to use for opening and closing activities are defined in\n+[styles_master.xml](src/main/res/values/styles_master.xml). The animations themselves are defined in the\n+[anim folder](src/main/res/anim).\n+\n"
    },
    {
        "commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "previous commit hash": "112d2b9dfc8ffa913da868126368c28d4c1778a2",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/java/novoda/demo/ToThis.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ package novoda.demo;\n import android.app.Activity;\n import android.os.Bundle;\n \n-public class ToThis extends Activity{\n+public class ToThis extends Activity {\n     @Override\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n"
    },
    {
        "commit hash": "4eeac6a89e7d1a7aa4941d8a7fcc53c840452a26",
        "previous commit hash": "112d2b9dfc8ffa913da868126368c28d4c1778a2",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/values/styles_master.xml",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -22,10 +22,10 @@ STLYING KEY\n     \n \t<!-- Standard animations for a full-screen window or activity. -->\n     <style name=\"Animation.ActivityTransition\" parent=\"@android:style/Animation.Activity\">\n-\t\t<item name=\"android:activityOpenEnterAnimation\">@null</item>\n+        <item name=\"android:activityOpenEnterAnimation\">@null</item>\n         <item name=\"android:activityOpenExitAnimation\">@null</item>\n         <item name=\"android:activityCloseEnterAnimation\">@anim/activity_close_enter</item>\n- \t\t<item name=\"android:activityCloseExitAnimation\">@anim/activity_close_exit</item>\n+        <item name=\"android:activityCloseExitAnimation\">@anim/activity_close_exit</item>\n <!--        <item name=\"android:taskOpenEnterAnimation\">@android:anim/task_open_enter</item> -->\n <!--        <item name=\"android:taskOpenExitAnimation\">@android:anim/task_open_exit</item> -->\n <!--        <item name=\"android:taskCloseEnterAnimation\">@android:anim/task_close_enter</item> -->\n"
    },
    {
        "commit hash": "112d2b9dfc8ffa913da868126368c28d4c1778a2",
        "previous commit hash": "98a82b324abe63c41f6dd945d94d214239287d7b",
        "diff stats": {
            "file_path": "ContactSelector/README.md",
            "additions": 3,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,5 @@\n #Demo ContactSelector\n \n+ContactSelector demonstrates the use of the pick action for contacts.\n+\n+It allows the user to select a contact and displays the primary name. This requires the READ_CONTACTS` permission.\n"
    },
    {
        "commit hash": "112d2b9dfc8ffa913da868126368c28d4c1778a2",
        "previous commit hash": "98a82b324abe63c41f6dd945d94d214239287d7b",
        "diff stats": {
            "file_path": "ContactSelector/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -7,7 +7,7 @@ android {\n \n     defaultConfig {\n         applicationId \"com.novoda.demo.contactselector\"\n-        minSdkVersion 3\n+        minSdkVersion 11\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n"
    },
    {
        "commit hash": "112d2b9dfc8ffa913da868126368c28d4c1778a2",
        "previous commit hash": "98a82b324abe63c41f6dd945d94d214239287d7b",
        "diff stats": {
            "file_path": "ContactSelector/src/main/java/com/novoda/ContactSelector.java",
            "additions": 50,
            "deletions": 39
        },
        "diff content": "@@ -1,54 +1,65 @@\n package com.novoda;\n \n import android.app.Activity;\n+import android.content.CursorLoader;\n import android.content.Intent;\n+import android.content.Loader;\n import android.database.Cursor;\n import android.net.Uri;\n import android.os.Bundle;\n import android.provider.Contacts.People;\n+import android.provider.ContactsContract;\n import android.view.View;\n import android.view.View.OnClickListener;\n import android.widget.Button;\n import android.widget.TextView;\n \n public class ContactSelector extends Activity {\n-\tpublic static final int\tPICK_CONTACT\t= 1;\n-\tprivate Button\t\t\tbtnContacts;\n-\tprivate TextView\t\ttxtContacts;\n-\n-\t@Override\n-\tpublic void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-\t\tsetContentView(R.layout.main);\n-\n-\t\tbtnContacts = (Button) findViewById(R.id.btn_contacts);\n-\t\ttxtContacts = (TextView) findViewById(R.id.txt_contacts);\n-\n-\t\tbtnContacts.setOnClickListener(new OnClickListener() {\n-\n-\t\t\t@Override\n-\t\t\tpublic void onClick(View arg0) {\n-\t\t\t\tIntent intent = new Intent(Intent.ACTION_PICK, People.CONTENT_URI);\n-\t\t\t\tstartActivityForResult(intent, PICK_CONTACT);\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-\t@Override\n-\tpublic void onActivityResult(int reqCode, int resultCode, Intent data) {\n-\t\tsuper.onActivityResult(reqCode, resultCode, data);\n-\n-\t\tswitch (reqCode) {\n-\t\t\tcase (PICK_CONTACT):\n-\t\t\t\tif (resultCode == Activity.RESULT_OK) {\n-\t\t\t\t\tUri contactData = data.getData();\n-\t\t\t\t\tCursor c = managedQuery(contactData, null, null, null, null);\n-\t\t\t\t\tif (c.moveToFirst()) {\n-\t\t\t\t\t\tString name = c.getString(c.getColumnIndexOrThrow(People.NAME));\n-\t\t\t\t\t\ttxtContacts.setText(name);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\tbreak;\n-\t\t}\n-\t}\n+    private static final int PICK_CONTACT = 1;\n+    private static final int LOADER_ID_CONTACT = 1;\n+    private Button btnContacts;\n+    private TextView txtContacts;\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.main);\n+\n+        btnContacts = (Button) findViewById(R.id.btn_contacts);\n+        txtContacts = (TextView) findViewById(R.id.txt_contacts);\n+\n+        btnContacts.setOnClickListener(new OnClickListener() {\n+\n+            @Override\n+            public void onClick(View arg0) {\n+                Intent intent = new Intent(Intent.ACTION_PICK, People.CONTENT_URI);\n+                startActivityForResult(intent, PICK_CONTACT);\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void onActivityResult(int reqCode, int resultCode, Intent data) {\n+        super.onActivityResult(reqCode, resultCode, data);\n+\n+        switch (reqCode) {\n+            case (PICK_CONTACT):\n+                if (resultCode == Activity.RESULT_OK) {\n+                    Uri contactData = data.getData();\n+                    CursorLoader loader = new CursorLoader(this, contactData, null, null, null, null);\n+                    loader.registerListener(LOADER_ID_CONTACT, new Loader.OnLoadCompleteListener<Cursor>() {\n+                        @Override\n+                        public void onLoadComplete(final Loader<Cursor> loader, final Cursor data) {\n+                            if (data.moveToFirst()) {\n+                                int nameColumnIndex = data.getColumnIndexOrThrow(ContactsContract.Contacts.DISPLAY_NAME_PRIMARY);\n+                                String name = data.getString(nameColumnIndex);\n+                                txtContacts.setText(name);\n+                            }\n+                        }\n+                    });\n+                    loader.startLoading();\n+                }\n+                break;\n+        }\n+    }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "98a82b324abe63c41f6dd945d94d214239287d7b",
        "previous commit hash": "9c8b72fc49eb146f36fc07700f10b0a996e415f6",
        "diff stats": {
            "file_path": "CompassExample/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,4 @@\n #Demo CompassExample\n \n+Demonstrates use of the deprecated Novocation library. The app works only for pre-jellybean devices.\n+\n"
    },
    {
        "commit hash": "98a82b324abe63c41f6dd945d94d214239287d7b",
        "previous commit hash": "9c8b72fc49eb146f36fc07700f10b0a996e415f6",
        "diff stats": {
            "file_path": "CompassExample/build.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,8 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda.demo.compassexample\"\n         minSdkVersion 9\n-        targetSdkVersion 21\n+        maxSdkVersion 15\n+        targetSdkVersion 15\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "9c8b72fc49eb146f36fc07700f10b0a996e415f6",
        "previous commit hash": "a58a1247fa0937d00d36013c8a5c39735a6140d4",
        "diff stats": {
            "file_path": "CarouselFragment/screenshot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CarouselFragment/screenshot.png and b/CarouselFragment/screenshot.png differ\n"
    },
    {
        "commit hash": "a58a1247fa0937d00d36013c8a5c39735a6140d4",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "CarouselFragment/README.md",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -1,2 +1,7 @@\n #Demo CarouselFragment\n \n+The CarouselFragment demonstrates how to select content using the (deprecated) Gallery widget on TV.\n+\n+The demo is only controlled by dpad keys or media buttons, press enter to select a content.\n+\n+![Screenshot](screenshot.png)\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a58a1247fa0937d00d36013c8a5c39735a6140d4",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "CarouselFragment/screenshot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/screenshot.png differ\n"
    },
    {
        "commit hash": "a58a1247fa0937d00d36013c8a5c39735a6140d4",
        "previous commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/java/novoda/demo/Carousel.java",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -114,7 +114,6 @@ public class Carousel extends Activity {\n \t        super.onCreateView(inflater, container, savedInstanceState);\n \t        Gallery gallery = (Gallery) inflater.inflate(R.layout.carousel_gallery, null);\n \t\n-\t        // In dual-pane mode, the list view highlights the selected item.\n \t        gallery.setAdapter(new GalleryAdapter(mContext));\n \t        gallery.setOnItemClickListener(new OnItemClickListener() {\n \t            public void onItemClick(AdapterView<?> l, View v, int position, long id) {\n"
    },
    {
        "commit hash": "7810b32cb477f9fa64552b8b0d6a84a37abf47f9",
        "previous commit hash": "d717c7e8eedbcc75c4e5c6aef2804a939c10b37d",
        "diff stats": {
            "file_path": "CHANGELOG.md",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+# Change Log\n+\n+Changes for each demo are documented in the corresponding change log files.\n+\n+## June 2015\n+Add android-command plugin. Run demos with\n+```\n+./gradlew ListStyles:runDebug\n+```\n+\n+## Jan 2015\n+Gradleify all projects and upgrade to build tools 21.1.2\n"
    },
    {
        "commit hash": "d717c7e8eedbcc75c4e5c6aef2804a939c10b37d",
        "previous commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "diff stats": {
            "file_path": "LICENSE.txt",
            "additions": 191,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,191 @@\n+     Copyright 2015 Novoda Ltd\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+\n+\n+\t\t\t\t                Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n"
    },
    {
        "commit hash": "d717c7e8eedbcc75c4e5c6aef2804a939c10b37d",
        "previous commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "diff stats": {
            "file_path": "README",
            "additions": 0,
            "deletions": 18
        },
        "diff content": "@@ -1,19 +0,0 @@\n-Hi there! This is a collection of basic android examples created by Novoda.\n-\n-\n-License\n--------\n-\n-    (c) Copyright 2014 Novoda\n-\n-    Licensed under the Apache License, Version 2.0 (the \"License\");\n-    you may not use this file except in compliance with the License.\n-    You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-    Unless required by applicable law or agreed to in writing, software\n-    distributed under the License is distributed on an \"AS IS\" BASIS,\n-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-    See the License for the specific language governing permissions and\n-    limitations under the License.\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "CarouselFragment/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo CarouselFragment\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "CarouselFragment/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"novoda.demo\"\n+        applicationId \"com.novoda.demo.carouselfragment\"\n         minSdkVersion 11\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "CompassExample/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo CompassExample\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "CompassExample/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,7 +6,7 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda.example.compass\"\n+        applicationId \"com.novoda.demo.compassexample\"\n         minSdkVersion 9\n         targetSdkVersion 21\n         versionCode 1\n@@ -19,3 +19,5 @@ dependencies {\n   compile 'com.android.support:support-v4:21.0.0'\n   compile files('libs/novocation-core-1.0.8.jar')\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "ContactSelector/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo ContactSelector\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "ContactSelector/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.contactselector\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "CustomActivityTransition/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo CustomActivityTransition\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "CustomActivityTransition/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"novoda.demo\"\n+        applicationId \"com.novoda.demo.customactivitytransition\"\n         minSdkVersion 4\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "CustomTabsHack/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo CustomTabsHack\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "CustomTabsHack/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,7 +6,7 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.customtabshack\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n@@ -17,3 +17,5 @@ android {\n         abortOnError false\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "DynamicListItems/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo DynamicListItems\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "DynamicListItems/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,7 +6,7 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.dynamiclistitems\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n@@ -17,3 +17,5 @@ android {\n         abortOnError false\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo FixedSizeTextColumns\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.fixedsizetextcolumns\"\n         minSdkVersion 7\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "Fragments/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo Fragments\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "Fragments/build.gradle",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -6,7 +6,7 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"novoda.demo.fragments.list\"\n+        applicationId \"com.novoda.demo.fragments\"\n         minSdkVersion 7\n         targetSdkVersion 21\n         versionCode 1\n@@ -17,4 +17,5 @@ android {\n dependencies {\n   compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'\n   compile 'com.android.support:support-v4:21.0.0'\n-}\n\\ No newline at end of file\n+}\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "GsonJsonWebservice/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo GsonJsonWebservice\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "GsonJsonWebservice/build.gradle",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -6,7 +6,7 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.gsonjsonwebservice\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n@@ -17,4 +17,5 @@ android {\n \n dependencies {\n   compile 'com.google.code.gson:gson:2.3.1'\n-}\n\\ No newline at end of file\n+}\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo LeftNavBarExample/Example\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/build.gradle",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -4,7 +4,7 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"novoda.demo\"\n+        applicationId \"com.novoda.demo.leftnavbarexample.example\"\n         minSdkVersion 11\n         targetSdkVersion 21\n         versionCode 1\n@@ -14,4 +14,5 @@ android {\n \n dependencies {\n     compile project(':LeftNavBarLibrary')\n-}\n\\ No newline at end of file\n+}\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo LeftNavBarExample/LeftNavBarLibrary\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "LeftNavBarExample/build.gradle",
            "additions": 0,
            "deletions": 14
        },
        "diff content": "@@ -1,14 +0,0 @@\n-buildscript {\n-    repositories {\n-        jcenter()\n-    }\n-    dependencies {\n-        classpath 'com.android.tools.build:gradle:1.0.0'\n-    }\n-}\n-\n-allprojects {\n-    repositories {\n-        jcenter()\n-    }\n-}\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "ListStyles/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo ListStyles\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "ListStyles/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.liststyles\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo Livewallpaper/switch_animation\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda.wallpaper\"\n+        applicationId \"com.novoda.demo.livewallpaper.switchanimation\"\n         minSdkVersion 7\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo Livewallpaper/switch_leftright\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda.wallpaper\"\n+        applicationId \"com.novoda.demo.livewallpaper.switchleftright\"\n         minSdkVersion 7\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "MapApiV2Demo/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,7 +6,7 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda.mapdemo\"\n+        applicationId \"com.novoda.demo.mapapiv2demo\"\n         minSdkVersion 9\n         targetSdkVersion 21\n         versionCode 1\n@@ -18,3 +18,5 @@ dependencies {\n     compile 'com.android.support:support-v4:21.0.3'\n     compile 'com.google.android.gms:play-services:6.5.87'\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "MultipleContacts/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo MultipleContacts\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "MultipleContacts/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.multiplecontacts\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo MultpileActivityTabHost\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.multpileactivitytabhost\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "PinchZoomDetector/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo PinchZoomDetector\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "PinchZoomDetector/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.pinchzoomdetector\"\n         minSdkVersion 7\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo PushNotifications/c2dm_urban_airship\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -7,7 +7,7 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda.urbanairship.demo\"\n+        applicationId \"com.novoda.demo.pushnotifications.c2dmurbanairship\"\n         minSdkVersion 14\n         targetSdkVersion 21\n         versionCode 1\n@@ -20,3 +20,5 @@ dependencies {\n     //compile 'com.android.support:support-v4:21.0.3'\n     //compile 'com.google.android.gms:play-services:6.5.87'\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "README.md",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+#Android Demos\n+\n+This is a collection of basic android examples created by Novoda.\n+\n+* [CarouselFragment](http://github.com/novoda/android-demos/tree/master/CarouselFragment)\n+* [CompassExample](http://github.com/novoda/android-demos/tree/master/CompassExample)\n+* [ContactSelector](http://github.com/novoda/android-demos/tree/master/ContactSelector)\n+* [CustomActivityTransition](http://github.com/novoda/android-demos/tree/master/CustomActivityTransition)\n+* [CustomTabsHack](http://github.com/novoda/android-demos/tree/master/CustomTabsHack)\n+* [DynamicListItems](http://github.com/novoda/android-demos/tree/master/DynamicListItems)\n+* [encryption](http://github.com/novoda/android-demos/tree/master/encryption)\n+* [FixedSizeTextColumns](http://github.com/novoda/android-demos/tree/master/FixedSizeTextColumns)\n+* [Fragments](http://github.com/novoda/android-demos/tree/master/Fragments)\n+* [GsonJsonWebservice](http://github.com/novoda/android-demos/tree/master/GsonJsonWebservice)\n+* [LeftNavBarExample/Example](http://github.com/novoda/android-demos/tree/master/LeftNavBarExample/Example)\n+* [ListStyles](http://github.com/novoda/android-demos/tree/master/ListStyles)\n+* [Livewallpaper/switch_animation](http://github.com/novoda/android-demos/tree/master/Livewallpaper/switch_animation)\n+* [Livewallpaper/switch_leftright](http://github.com/novoda/android-demos/tree/master/Livewallpaper/switch_leftright)\n+* [MapApiV2Demo](http://github.com/novoda/android-demos/tree/master/MapApiV2Demo)\n+* [MultipleContacts](http://github.com/novoda/android-demos/tree/master/MultipleContacts)\n+* [MultpileActivityTabHost](http://github.com/novoda/android-demos/tree/master/MultpileActivityTabHost)\n+* [PinchZoomDetector](http://github.com/novoda/android-demos/tree/master/PinchZoomDetector)\n+* [PushNotifications/c2dm_urban_airship](http://github.com/novoda/android-demos/tree/master/PushNotifications/c2dm_urban_airship)\n+* [simperAudioStreamer](http://github.com/novoda/android-demos/tree/master/simperAudioStreamer)\n+* [sms](http://github.com/novoda/android-demos/tree/master/sms)\n+* [TabHostExample](http://github.com/novoda/android-demos/tree/master/TabHostExample)\n+* [TabHostMultipleActivityBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostMultipleActivityBrowsing)\n+* [TabHostSelfContainedTabBrowsing](http://github.com/novoda/android-demos/tree/master/TabHostSelfContainedTabBrowsing)\n+* [wizard](http://github.com/novoda/android-demos/tree/master/wizard)\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "TabHostExample/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo TabHostExample\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "TabHostExample/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -5,10 +5,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.tabhostexample\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo TabHostMultipleActivityBrowsing\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -5,10 +5,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.tabhostmultipleactivitybrowsing\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo TabHostSelfContainedTabBrowsing\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -5,10 +5,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.tabhostselfcontainedtabbrowsing\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "build.gradle",
            "additions": 54,
            "deletions": 3
        },
        "diff content": "@@ -3,7 +3,8 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:1.0.0'\n+        classpath 'com.android.tools.build:gradle:1.2.3'\n+        classpath 'com.novoda:gradle-android-command-plugin:1.4.0'\n     }\n }\n \n@@ -14,5 +15,55 @@ allprojects {\n }\n \n task wrapper(type: Wrapper) {\n-    gradleVersion = '2.2.1'\n-}\n\\ No newline at end of file\n+    gradleVersion = '2.4'\n+}\n+\n+task updateDemos() << {\n+    File globalReadme = new File(\"README.md\")\n+    writeGlobalReadmeHeader(globalReadme)\n+    FileTree tree = fileTree(dir: '.', include: \"*/**/build.gradle\")\n+    tree.each { File file ->\n+        updateBuildGradle(file)\n+        updateReadme(file)\n+        if (isAndroidApp(file)) {\n+            updateDemoList(file, globalReadme)\n+        }\n+    }\n+}\n+\n+private void updateBuildGradle(File file) {\n+    String packageSuffix = relativePath(file.parentFile).toLowerCase()\n+    packageSuffix = packageSuffix.replaceAll(\"/\", \".\")\n+    packageSuffix = packageSuffix.replaceAll(\"_\", \"\")\n+    println \"Updating $packageSuffix ...\"\n+    if (!file.text.contains(\"applicationId \\\"com.novoda.demo.$packageSuffix\\\"\")) {\n+        ant.replaceregexp(file: file, match: \"applicationId (\\\\S*)\", replace: \"applicationId \\\"com.novoda.demo.$packageSuffix\\\"\")\n+    }\n+    if (isAndroidApp(file) &&\n+            !file.text.contains(\"apply plugin: 'android-command'\")) {\n+        file << \"\\napply plugin: 'android-command'\\n\"\n+    }\n+}\n+\n+private void updateReadme(File file) {\n+    String projectName = relativePath(file.parentFile)\n+    File readme = new File(file.parentFile, \"README.md\")\n+    if (!readme.exists()) {\n+        readme.withWriterAppend { w ->\n+            w << \"#Demo $projectName\\n\\n\"\n+        }\n+    }\n+}\n+\n+private void updateDemoList(File file, File globalReadme) {\n+    String projectName = relativePath(file.parentFile)\n+    globalReadme << \"* [$projectName](http://github.com/novoda/android-demos/tree/master/$projectName)\\n\"\n+}\n+\n+private writeGlobalReadmeHeader(File globalReadme) {\n+    globalReadme.write(\"#Android Demos\\n\\nThis is a collection of basic android examples created by Novoda.\\n\\n\")\n+}\n+\n+private boolean isAndroidApp(File file) {\n+    file.text.contains(\"apply plugin: 'com.android.application'\")\n+}\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "encryption/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo encryption\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "encryption/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -6,10 +6,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.encryption\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "simperAudioStreamer/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo simperAudioStreamer\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "simperAudioStreamer/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -5,10 +5,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"novoda.audio\"\n+        applicationId \"com.novoda.demo.simperaudiostreamer\"\n         minSdkVersion 4\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "sms/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo sms\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "sms/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -5,10 +5,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda.sms\"\n+        applicationId \"com.novoda.demo.sms\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "wizard/README.md",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+#Demo wizard\n+\n"
    },
    {
        "commit hash": "90705cd16380a1e07124d5f734f4c5e611caf1eb",
        "previous commit hash": "3b06364b8caf359a142ffd98d7eb4210bbdb64d5",
        "diff stats": {
            "file_path": "wizard/build.gradle",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -5,10 +5,12 @@ android {\n     buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n-        applicationId \"com.novoda\"\n+        applicationId \"com.novoda.demo.wizard\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n }\n+\n+apply plugin: 'android-command'\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "CarouselFragment/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"novoda.demo\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "CompassExample/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda.example.compass\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "ContactSelector/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "CustomActivityTransition/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"novoda.demo\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "CustomTabsHack/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "DynamicListItems/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "Fragments/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"novoda.demo.fragments.list\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "GsonJsonWebservice/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,7 +1,7 @@\n apply plugin: 'com.android.application'\n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"novoda.demo\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -11,7 +11,7 @@ apply plugin: 'com.android.library'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         minSdkVersion 11\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "ListStyles/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda.wallpaper\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda.wallpaper\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "MapApiV2Demo/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 'Google Inc.:Google APIs:21'\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda.mapdemo\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "MultipleContacts/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 'Google Inc.:Google APIs:21'\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "PinchZoomDetector/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 'Google Inc.:Google APIs:21'\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,7 @@ apply plugin: 'com.android.application'\n android {\n     //'Google Inc.:Google APIs:21'\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda.urbanairship.demo\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "TabHostExample/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "encryption/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "simperAudioStreamer/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"novoda.audio\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "sms/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda.sms\"\n"
    },
    {
        "commit hash": "fb183adba3b9d6481e45c49e12927e830f486844",
        "previous commit hash": "99535eb43613e5b0b20147dac3d5d7b13f602e96",
        "diff stats": {
            "file_path": "wizard/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.1.1\"\n+    buildToolsVersion \"21.1.2\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "798915a0d28a4f1a7a20d45ba2a91f83d82e674f",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "LeftNavBarExample/build.gradle",
            "additions": 0,
            "deletions": 4
        },
        "diff content": "@@ -12,7 +12,3 @@ allprojects {\n         jcenter()\n     }\n }\n-\n-task wrapper(type: Wrapper) {\n-    gradleVersion = '2.1'\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b9a3ceb7299fdb038d88a4ffe5517567f9ee3765",
        "previous commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "diff stats": {
            "file_path": "build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -3,7 +3,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:0.14.2'\n+        classpath 'com.android.tools.build:gradle:1.0.0'\n     }\n }\n \n@@ -14,5 +14,5 @@ allprojects {\n }\n \n task wrapper(type: Wrapper) {\n-    gradleVersion = '2.1'\n+    gradleVersion = '2.2.1'\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b9a3ceb7299fdb038d88a4ffe5517567f9ee3765",
        "previous commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "diff stats": {
            "file_path": "gradle/wrapper/gradle-wrapper.properties",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,6 +1,6 @@\n-#Wed Nov 12 16:31:36 GMT 2014\n+#Tue Jan 06 15:56:11 GMT 2015\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "CarouselFragment/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"novoda.demo\"\n         minSdkVersion 11\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "CompassExample/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda.example.compass\"\n         minSdkVersion 9\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n@@ -16,6 +16,6 @@ android {\n \n dependencies {\n   compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'\n-  compile 'com.android.support:support-v4:20.0.0'\n+  compile 'com.android.support:support-v4:21.0.0'\n   compile files('libs/novocation-core-1.0.8.jar')\n }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "CompassExample/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@\n   package=\"com.novoda.example.compass\" android:versionCode=\"1\"\n   android:versionName=\"1.0\">\n \n-  <uses-sdk android:minSdkVersion=\"9\" android:targetSdkVersion=\"15\" />\n+  <uses-sdk android:minSdkVersion=\"9\" android:targetSdkVersion=\"21\" />\n \n   <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n \n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "ContactSelector/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "CustomActivityTransition/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"novoda.demo\"\n         minSdkVersion 4\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "CustomTabsHack/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "DynamicListItems/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 7\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "Fragments/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"novoda.demo.fragments.list\"\n         minSdkVersion 7\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n@@ -16,5 +16,5 @@ android {\n \n dependencies {\n   compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'\n-  compile 'com.android.support:support-v4:20.0.0'\n+  compile 'com.android.support:support-v4:21.0.0'\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "Fragments/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@\n \n     <uses-sdk\n     \tandroid:minSdkVersion=\"4\"\n-    \tandroid:targetSdkVersion=\"13\"/>\n+    \tandroid:targetSdkVersion=\"21\"/>\n \n     <application\n     \tandroid:icon=\"@drawable/ic_launcher\"\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "GsonJsonWebservice/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -6,7 +6,7 @@ android {\n     defaultConfig {\n         applicationId \"novoda.demo\"\n         minSdkVersion 11\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -15,6 +15,6 @@ android {\n \n     defaultConfig {\n         minSdkVersion 11\n-        targetSdkVersion 12\n+        targetSdkVersion 21\n     }\n }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -16,7 +16,7 @@\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n \tpackage=\"com.example.google.tv.leftnavbar\">\n \t\n-\t<uses-sdk android:minSdkVersion=\"11\" android:targetSdkVersion=\"12\" />\n+\t<uses-sdk android:minSdkVersion=\"11\" android:targetSdkVersion=\"21\" />\n \n   <application />\n \n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "ListStyles/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda.wallpaper\"\n         minSdkVersion 7\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda.wallpaper\"\n         minSdkVersion 7\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "MapApiV2Demo/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda.mapdemo\"\n         minSdkVersion 9\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,7 @@\n \n   <uses-sdk\n     android:minSdkVersion=\"8\"\n-    android:targetSdkVersion=\"16\"/>\n+    android:targetSdkVersion=\"21\"/>\n \n   <uses-permission android:name=\"android.permission.INTERNET\"/>\n   <uses-permission android:name=\"com.google.android.providers.gsf.permission.READ_GSERVICES\"/>\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "MultipleContacts/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "PinchZoomDetector/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 7\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda.urbanairship.demo\"\n         minSdkVersion 14\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "TabHostExample/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -7,7 +7,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -7,7 +7,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -7,7 +7,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "encryption/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -8,7 +8,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 20\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "simperAudioStreamer/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -7,7 +7,7 @@ android {\n     defaultConfig {\n         applicationId \"novoda.audio\"\n         minSdkVersion 4\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "ce24944e5bef2bfe775dd6d1c3ab567fc40e5c2b",
        "previous commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "diff stats": {
            "file_path": "wizard/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -7,7 +7,7 @@ android {\n     defaultConfig {\n         applicationId \"com.novoda\"\n         minSdkVersion 3\n-        targetSdkVersion 16\n+        targetSdkVersion 21\n         versionCode 1\n         versionName \"1.0\"\n     }\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "CarouselFragment/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"novoda.demo\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "CompassExample/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda.example.compass\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "ContactSelector/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "CustomActivityTransition/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"novoda.demo\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "CustomTabsHack/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "DynamicListItems/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "Fragments/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"novoda.demo.fragments.list\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "GsonJsonWebservice/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,7 +1,7 @@\n apply plugin: 'com.android.application'\n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"novoda.demo\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -10,8 +10,8 @@ buildscript {\n apply plugin: 'com.android.library'\n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         minSdkVersion 11\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "ListStyles/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda.wallpaper\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda.wallpaper\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "MapApiV2Demo/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 'Google Inc.:Google APIs:21'\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda.mapdemo\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "MultipleContacts/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 'Google Inc.:Google APIs:21'\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "PinchZoomDetector/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 'Google Inc.:Google APIs:21'\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,7 @@ apply plugin: 'com.android.application'\n android {\n     //'Google Inc.:Google APIs:21'\n     compileSdkVersion 21\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda.urbanairship.demo\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "TabHostExample/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "encryption/build.gradle",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -2,8 +2,8 @@ apply plugin: 'com.android.application'\n \n \n android {\n-    compileSdkVersion 20\n-    buildToolsVersion \"20.0.0\"\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "simperAudioStreamer/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"novoda.audio\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "sms/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"21.0.2\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda.sms\"\n"
    },
    {
        "commit hash": "a462cc1f3daf703cb133036a010139da6f115890",
        "previous commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "diff stats": {
            "file_path": "wizard/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -2,7 +2,7 @@ apply plugin: 'com.android.application'\n \n android {\n     compileSdkVersion 21\n-    buildToolsVersion \"20.0.0\"\n+    buildToolsVersion \"21.1.1\"\n \n     defaultConfig {\n         applicationId \"com.novoda\"\n"
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -28,3 +28,4 @@ include 'sms'\n include 'TabHostExample'\n include 'TabHostMultipleActivityBrowsing'\n include 'TabHostSelfContainedTabBrowsing'\n+include 'wizard'\n"
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/build.gradle",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 21\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/java/com/novoda/Step1.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/java/com/novoda/Step2.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/java/com/novoda/Step3.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/java/com/novoda/Wizard.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/res/layout/step1.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/res/layout/step2.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/res/layout/step3.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/res/layout/wizard.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e66fe0ce2f457728fc1e8a903556a81dd8f9af3b",
        "previous commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "diff stats": {
            "file_path": "wizard/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "previous commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/build.gradle",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 21\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "previous commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "previous commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/src/main/java/com/novoda/SelfContainedTabHost.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "previous commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "previous commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/src/main/res/layout/tabhost_container.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "previous commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "1ca0bc11b8867b5084c372c6720bb5cbf7a3dfb7",
        "previous commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -27,3 +27,4 @@ include 'simperAudioStreamer'\n include 'sms'\n include 'TabHostExample'\n include 'TabHostMultipleActivityBrowsing'\n+include 'TabHostSelfContainedTabBrowsing'\n"
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/build.gradle",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 21\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/java/com/novoda/Container.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/java/com/novoda/Tab1Activity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/java/com/novoda/Tab2Activity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/layout/tab1.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/layout/tab2.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "5c9f7f9bc02fdad2ecb55caedd4e99ebef64fd01",
        "previous commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -26,3 +26,4 @@ project(':PushNotifications').projectDir = new File('PushNotifications/c2dm_urba\n include 'simperAudioStreamer'\n include 'sms'\n include 'TabHostExample'\n+include 'TabHostMultipleActivityBrowsing'\n"
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "TabHostExample/build.gradle",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 21\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "TabHostExample/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "TabHostExample/src/main/java/com/novoda/SelfContainedTabHost.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "TabHostExample/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "TabHostExample/src/main/res/layout/tabhost_container.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "TabHostExample/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -25,3 +25,4 @@ include 'PushNotifications'\n project(':PushNotifications').projectDir = new File('PushNotifications/c2dm_urban_airship')\n include 'simperAudioStreamer'\n include 'sms'\n+include 'TabHostExample'\n"
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "simperAudioStreamer/AndroidManifest.xml",
            "additions": 0,
            "deletions": 36
        },
        "diff content": "@@ -1,36 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-      package=\"novoda.audio\"\n-      android:versionCode=\"1\"\n-      android:versionName=\"1.0\">\n-      \n-    <uses-permission android:name=\"android.permission.INTERNET\"/>\n-    <uses-sdk android:minSdkVersion=\"4\" />\n-    \n-    <application \n-    \tandroid:icon=\"@drawable/icon\"\n-    \tandroid:label=\"Simple Audio Streamer\">\n-    \t\n-        <activity\n-        \tandroid:name=\".StreamerInterface\" \n-        \tandroid:label=\"Audio Streaming example\">\n-            \n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-            \n-            <intent-filter>\n-     \t\t\t<action android:name=\"android.intent.action.VIEW\" />\n-     \t\t\t<action android:name=\"android.intent.action.BROWSABLE\" />\n-     \t\t\t<category android:name=\"android.intent.category.DEFAULT\" />\n-     \t\t\t<data android:mimeType=\"application/pls\" />\n- \t\t\t\t<data android:mimeType=\"audio/x-scpls\" />\n- \t\t\t\t<data android:mimeType=\"audio/x-mpegurl\" />\n- \t\t\t</intent-filter>\n-        </activity>\n-        \n-    \t<service android:exported=\"true\" android:name=\".service.AudioStreamService\" android:enabled=\"true\"></service>\n-    </application>\n-\n-</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "sms/AndroidManifest.xml",
            "additions": 0,
            "deletions": 30
        },
        "diff content": "@@ -1,30 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-\tpackage=\"com.novoda.sms\" android:versionCode=\"1\"\n-\tandroid:versionName=\"1.0\">\n-\t\n-\t<uses-permission android:name=\"android.permission.SEND_SMS\" />\n-\t<uses-permission android:name=\"android.permission.RECEIVE_SMS\" />\n-\t<uses-permission android:name=\"android.permission.READ_CONTACTS\"/>\n-\n-\t<application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n-\t\t\n-\t\t<activity \n-\t\t\tandroid:name=\".SMS\" \n-\t\t\tandroid:label=\"@string/app_name\">\n-\t\t\t\n-\t\t\t<intent-filter>\n-\t\t\t\t<action android:name=\"android.intent.action.MAIN\" />\n-\t\t\t\t<category android:name=\"android.intent.category.LAUNCHER\" />\n-\t\t\t</intent-filter>\n-\t\t\t\n-\t\t</activity>\n-\n-        <receiver android:name=\".SmsReceiver\"> \n-            <intent-filter> \n-                <action android:name=\"android.provider.Telephony.SMS_RECEIVED\" /> \n-            </intent-filter> \n-        </receiver>\n-\t\n-\t</application>\n-</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "sms/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -5,7 +5,7 @@ android {\n     buildToolsVersion \"21.0.2\"\n \n     defaultConfig {\n-        applicationId \"novoda.audio\"\n+        applicationId \"com.novoda.sms\"\n         minSdkVersion 3\n         targetSdkVersion 21\n         versionCode 1\n"
    },
    {
        "commit hash": "aa14d1111fb0d50cdc3a8310b4f1dfc499506c49",
        "previous commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "diff stats": {
            "file_path": "sms/src/main/AndroidManifest.xml",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -1,6 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-\tpackage=\"com.novoda.sms\" android:versionCode=\"1\"\n+\tpackage=\"com.novoda.sms\" \n+\tandroid:versionCode=\"1\"\n \tandroid:versionName=\"1.0\">\n \t\n \t<uses-permission android:name=\"android.permission.SEND_SMS\" />\n"
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -22,5 +22,6 @@ include 'MultipleContacts'\n include 'MultpileActivityTabHost'\n include 'PinchZoomDetector'\n include 'PushNotifications'\n-project(':PushNotifications').projectDir = new File('PushNotifications/c2dm_urban_airship') \n-include 'simperAudioStreamer'\n\\ No newline at end of file\n+project(':PushNotifications').projectDir = new File('PushNotifications/c2dm_urban_airship')\n+include 'simperAudioStreamer'\n+include 'sms'\n"
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/resources.ap_ and /dev/null differ\n"
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/bin/sms.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/sms.apk and /dev/null differ\n"
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/build.gradle",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 21\n+    buildToolsVersion \"21.0.2\"\n+\n+    defaultConfig {\n+        applicationId \"novoda.audio\"\n+        minSdkVersion 3\n+        targetSdkVersion 21\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/default.properties",
            "additions": 0,
            "deletions": 11
        },
        "diff content": "@@ -1,11 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-# \n-# This file must be checked in Version Control Systems.\n-# \n-# To customize properties used by the Ant build system use,\n-# \"build.properties\", and override values to adapt the script to your\n-# project structure.\n-\n-# Project target.\n-target=android-3\n"
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/gen/com/novoda/sms/R.java",
            "additions": 0,
            "deletions": 35
        },
        "diff content": "@@ -1,35 +0,0 @@\n-/* AUTO-GENERATED FILE.  DO NOT MODIFY.\n- *\n- * This class was automatically generated by the\n- * aapt tool from the resource data it found.  It\n- * should not be modified by hand.\n- */\n-\n-package com.novoda.sms;\n-\n-public final class R {\n-    public static final class attr {\n-    }\n-    public static final class drawable {\n-        public static final int icon=0x7f020000;\n-        public static final int search=0x7f020001;\n-    }\n-    public static final class id {\n-        public static final int btnSendSMS=0x7f060002;\n-        public static final int txtMessage=0x7f060001;\n-        public static final int txtPhoneNo=0x7f060000;\n-    }\n-    public static final class layout {\n-        public static final int poll_choice=0x7f030000;\n-        public static final int poll_new_choice=0x7f030001;\n-        public static final int poll_question=0x7f030002;\n-        public static final int poll_voters=0x7f030003;\n-        public static final int sms=0x7f030004;\n-    }\n-    public static final class string {\n-        public static final int app_name=0x7f040000;\n-    }\n-    public static final class style {\n-        public static final int ChooseContactBackground=0x7f050000;\n-    }\n-}\n"
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/AndroidManifest.xml",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tpackage=\"com.novoda.sms\" android:versionCode=\"1\"\n+\tandroid:versionName=\"1.0\">\n+\t\n+\t<uses-permission android:name=\"android.permission.SEND_SMS\" />\n+\t<uses-permission android:name=\"android.permission.RECEIVE_SMS\" />\n+\t<uses-permission android:name=\"android.permission.READ_CONTACTS\"/>\n+\n+\t<application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+\t\t\n+\t\t<activity \n+\t\t\tandroid:name=\".SMS\" \n+\t\t\tandroid:label=\"@string/app_name\">\n+\t\t\t\n+\t\t\t<intent-filter>\n+\t\t\t\t<action android:name=\"android.intent.action.MAIN\" />\n+\t\t\t\t<category android:name=\"android.intent.category.LAUNCHER\" />\n+\t\t\t</intent-filter>\n+\t\t\t\n+\t\t</activity>\n+\n+        <receiver android:name=\".SmsReceiver\"> \n+            <intent-filter> \n+                <action android:name=\"android.provider.Telephony.SMS_RECEIVED\" /> \n+            </intent-filter> \n+        </receiver>\n+\t\n+\t</application>\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/java/com/novoda/sms/Constants.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/java/com/novoda/sms/SMS.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/java/com/novoda/sms/SmsDeliveredReciever.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/java/com/novoda/sms/SmsReceiver.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/java/com/novoda/sms/SmsSentReciever.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/drawable/search.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/layout/poll_choice.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/layout/poll_new_choice.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/layout/poll_question.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/layout/poll_voters.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/layout/sms.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f4001a840851604acbc2d1a695356ab1bfa50258",
        "previous commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "diff stats": {
            "file_path": "sms/src/main/res/values/styles.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -23,3 +23,4 @@ include 'MultpileActivityTabHost'\n include 'PinchZoomDetector'\n include 'PushNotifications'\n project(':PushNotifications').projectDir = new File('PushNotifications/c2dm_urban_airship') \n+include 'simperAudioStreamer'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/build.gradle",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    compileSdkVersion 21\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"novoda.audio\"\n+        minSdkVersion 4\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/main/AndroidManifest.xml",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"novoda.audio\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+      \n+    <uses-permission android:name=\"android.permission.INTERNET\"/>\n+    <uses-sdk android:minSdkVersion=\"4\" />\n+    \n+    <application \n+    \tandroid:icon=\"@drawable/icon\"\n+    \tandroid:label=\"Simple Audio Streamer\">\n+    \t\n+        <activity\n+        \tandroid:name=\".StreamerInterface\" \n+        \tandroid:label=\"Audio Streaming example\">\n+            \n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+            \n+            <intent-filter>\n+     \t\t\t<action android:name=\"android.intent.action.VIEW\" />\n+     \t\t\t<action android:name=\"android.intent.action.BROWSABLE\" />\n+     \t\t\t<category android:name=\"android.intent.category.DEFAULT\" />\n+     \t\t\t<data android:mimeType=\"application/pls\" />\n+ \t\t\t\t<data android:mimeType=\"audio/x-scpls\" />\n+ \t\t\t\t<data android:mimeType=\"audio/x-mpegurl\" />\n+ \t\t\t</intent-filter>\n+        </activity>\n+        \n+    \t<service android:exported=\"true\" android:name=\".service.AudioStreamService\" android:enabled=\"true\"></service>\n+    </application>\n+\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/main/aidl/novoda/audio/service/IAudioStreamService.aidl",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/main/java/novoda/audio/StreamerInterface.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/main/java/novoda/audio/service/AudioStreamService.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/main/res/layout/player_interface.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "6f7c2ac66247d90e7dc4d3452e28c0633d662680",
        "previous commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/build.gradle",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    //'Google Inc.:Google APIs:21'\n+    compileSdkVersion 21\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.urbanairship.demo\"\n+        minSdkVersion 14\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n+dependencies {\n+    compile files('libs/urbanairship-lib-1.0.7.jar')\n+    //compile 'com.android.support:support-v4:21.0.3'\n+    //compile 'com.google.android.gms:play-services:6.5.87'\n+}\n"
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/lib/urbanairship-lib-1.0.7.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/PushNotifications/c2dm_urban_airship/lib/urbanairship-lib-1.0.7.jar and /dev/null differ\n"
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/proguard.cfg",
            "additions": 0,
            "deletions": 40
        },
        "diff content": "@@ -1,40 +0,0 @@\n--optimizationpasses 5\n--dontusemixedcaseclassnames\n--dontskipnonpubliclibraryclasses\n--dontpreverify\n--verbose\n--optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n-\n--keep public class * extends android.app.Activity\n--keep public class * extends android.app.Application\n--keep public class * extends android.app.Service\n--keep public class * extends android.content.BroadcastReceiver\n--keep public class * extends android.content.ContentProvider\n--keep public class * extends android.app.backup.BackupAgentHelper\n--keep public class * extends android.preference.Preference\n--keep public class com.android.vending.licensing.ILicensingService\n-\n--keepclasseswithmembernames class * {\n-    native <methods>;\n-}\n-\n--keepclasseswithmembers class * {\n-    public <init>(android.content.Context, android.util.AttributeSet);\n-}\n-\n--keepclasseswithmembers class * {\n-    public <init>(android.content.Context, android.util.AttributeSet, int);\n-}\n-\n--keepclassmembers class * extends android.app.Activity {\n-   public void *(android.view.View);\n-}\n-\n--keepclassmembers enum * {\n-    public static **[] values();\n-    public static ** valueOf(java.lang.String);\n-}\n-\n--keep class * implements android.os.Parcelable {\n-  public static final android.os.Parcelable$Creator *;\n-}\n"
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/project.properties",
            "additions": 0,
            "deletions": 11
        },
        "diff content": "@@ -1,11 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must be checked in Version Control Systems.\n-#\n-# To customize properties used by the Ant build system use,\n-# \"ant.properties\", and override values to adapt the script to your\n-# project structure.\n-\n-# Project target.\n-target=Google Inc.:Google APIs:14\n"
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -24,7 +24,6 @@\n     <application\n         android:name=\"com.novoda.urbanairship.demo.UADemoApplication\"\n         android:allowClearUserData=\"true\"\n-        android:debuggable=\"true\"\n         android:enabled=\"true\"\n         android:icon=\"@drawable/icon\"\n         android:label=\"@string/app_name\" >\n"
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/assets/airshipconfig.properties",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/java/com/novoda/urbanairship/demo/IntentReceiver.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/java/com/novoda/urbanairship/demo/MainActivity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/java/com/novoda/urbanairship/demo/PushPreferencesActivity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/java/com/novoda/urbanairship/demo/UADemoApplication.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/color/black.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/color/gray.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/color/white.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable/icon_small.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable/stripes.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/drawable/tiledstripes.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout-v9/notification.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout-v9/notification_large.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout-v9/notification_multi_line.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout-v9/notification_three_lines.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/notification.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/notification_large.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/notification_multi_line.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/notification_three_lines.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/layout/push_preferences_dialog.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/raw/cat.wav",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/main/res/values/text_styles.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a572cb3b062be6f887aaaa9fd25167d6f695d460",
        "previous commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -21,3 +21,5 @@ include 'MapApiV2Demo'\n include 'MultipleContacts'\n include 'MultpileActivityTabHost'\n include 'PinchZoomDetector'\n+include 'PushNotifications'\n+project(':PushNotifications').projectDir = new File('PushNotifications/c2dm_urban_airship') \n"
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 'Google Inc.:Google APIs:21'\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 7\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/proguard.cfg",
            "additions": 0,
            "deletions": 34
        },
        "diff content": "@@ -1,34 +0,0 @@\n--optimizationpasses 5\n--dontusemixedcaseclassnames\n--dontskipnonpubliclibraryclasses\n--dontpreverify\n--verbose\n--optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n-\n--keep public class * extends android.app.Activity\n--keep public class * extends android.app.Application\n--keep public class * extends android.app.Service\n--keep public class * extends android.content.BroadcastReceiver\n--keep public class * extends android.content.ContentProvider\n--keep public class com.android.vending.licensing.ILicensingService\n-\n--keepclasseswithmembernames class * {\n-    native <methods>;\n-}\n-\n--keepclasseswithmembernames class * {\n-    public <init>(android.content.Context, android.util.AttributeSet);\n-}\n-\n--keepclasseswithmembernames class * {\n-    public <init>(android.content.Context, android.util.AttributeSet, int);\n-}\n-\n--keepclassmembers enum * {\n-    public static **[] values();\n-    public static ** valueOf(java.lang.String);\n-}\n-\n--keep class * implements android.os.Parcelable {\n-  public static final android.os.Parcelable$Creator *;\n-}\n"
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/java/com/novoda/Main.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/java/com/novoda/utils/PinchZoomDetector.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/res/layout/activity_main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/res/values/ids.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a7474af8ca65f5b582a9f54ff23e06416e287b9d",
        "previous commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -20,3 +20,4 @@ project(':LivewallpaperSwitchLeftRight').projectDir = new File('Livewallpaper/sw\n include 'MapApiV2Demo'\n include 'MultipleContacts'\n include 'MultpileActivityTabHost'\n+include 'PinchZoomDetector'\n"
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 'Google Inc.:Google APIs:21'\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/java/com/novoda/Container.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/java/com/novoda/Tab1Activity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/java/com/novoda/Tab2Activity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/layout/tab1.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/layout/tab2.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "305e957abaf62014d6e7d1fdfe2393db520efec4",
        "previous commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -18,4 +18,5 @@ project(':LivewallpaperSwitchAnimation').projectDir = new File('Livewallpaper/sw\n include 'LivewallpaperSwitchLeftRight'\n project(':LivewallpaperSwitchLeftRight').projectDir = new File('Livewallpaper/switch_leftright') \n include 'MapApiV2Demo'\n-include 'MultipleContacts'\n\\ No newline at end of file\n+include 'MultipleContacts'\n+include 'MultpileActivityTabHost'\n"
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/bin/MultipleContacts.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/MultipleContacts.apk and /dev/null differ\n"
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/resources.ap_ and /dev/null differ\n"
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/default.properties",
            "additions": 0,
            "deletions": 11
        },
        "diff content": "@@ -1,11 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-# \n-# This file must be checked in Version Control Systems.\n-# \n-# To customize properties used by the Ant build system use,\n-# \"build.properties\", and override values to adapt the script to your\n-# project structure.\n-\n-# Project target.\n-target=android-3\n"
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/gen/com/novoda/R.java",
            "additions": 0,
            "deletions": 26
        },
        "diff content": "@@ -1,26 +0,0 @@\n-/* AUTO-GENERATED FILE.  DO NOT MODIFY.\n- *\n- * This class was automatically generated by the\n- * aapt tool from the resource data it found.  It\n- * should not be modified by hand.\n- */\n-\n-package com.novoda;\n-\n-public final class R {\n-    public static final class attr {\n-    }\n-    public static final class drawable {\n-        public static final int icon=0x7f020000;\n-    }\n-    public static final class id {\n-        public static final int contacts=0x7f050000;\n-    }\n-    public static final class layout {\n-        public static final int multipleselect=0x7f030000;\n-    }\n-    public static final class string {\n-        public static final int app_name=0x7f040001;\n-        public static final int hello=0x7f040000;\n-    }\n-}\n"
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/src/main/java/com/novoda/AutoMultipleContacts.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/src/main/res/layout/multipleselect.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "MultipleContacts/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "a3ef851e2a6d5fbe1169f591d3304779324d05d3",
        "previous commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -18,3 +18,4 @@ project(':LivewallpaperSwitchAnimation').projectDir = new File('Livewallpaper/sw\n include 'LivewallpaperSwitchLeftRight'\n project(':LivewallpaperSwitchLeftRight').projectDir = new File('Livewallpaper/switch_leftright') \n include 'MapApiV2Demo'\n+include 'MultipleContacts'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/pom.xml",
            "additions": 0,
            "deletions": 106
        },
        "diff content": "@@ -1,106 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <groupId>com.novoda</groupId>\n-    <artifactId>MapApiV2Demo-parent</artifactId>\n-    <version>1.0</version>\n-  </parent>\n-\n-  <groupId>com.novoda</groupId>\n-  <artifactId>app</artifactId>\n-  <version>1.0</version>\n-  <packaging>apk</packaging>\n-  <name>MapApiV2Demo - Application</name>\n-\n-  <profiles>\n-    <profile>\n-      <id>emma</id>\n-      <build>\n-        <plugins>\n-          <plugin>\n-            <groupId>com.jayway.maven.plugins.android.generation2</groupId>\n-            <artifactId>android-maven-plugin</artifactId>\n-            <configuration>\n-              <emma>\n-                <enable>true</enable>\n-                <classFolders>${project.basedir}/target/classes/</classFolders>\n-                <outputMetaFile>${project.basedir}/target/emma/coverage.em</outputMetaFile>\n-              </emma>\n-              <dex>\n-                <noLocals>true</noLocals>\n-              </dex>\n-            </configuration>\n-            <extensions>true</extensions>\n-          </plugin>\n-        </plugins>\n-      </build>\n-    </profile>\n-  </profiles>\n-\n-  <dependencies>\n-    <dependency>\n-      <groupId>com.google.android</groupId>\n-      <artifactId>android</artifactId>\n-      <version>${android.version}</version>\n-      <scope>provided</scope>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>com.google.android</groupId>\n-      <artifactId>support-v4</artifactId>\n-      <version>${support-library.version}</version>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>com.actionbarsherlock</groupId>\n-      <artifactId>library</artifactId>\n-      <version>4.1.0</version>\n-      <type>apklib</type>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>com.google.extras</groupId>\n-      <artifactId>google-play-services-src</artifactId>\n-      <version>3.0</version>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>com.google.extras</groupId>\n-      <artifactId>google-play-services</artifactId>\n-      <version>3.0</version>\n-      <type>apklib</type>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>com.novoda</groupId>\n-      <artifactId>core</artifactId>\n-      <version>1.0</version>\n-    </dependency>\n-\n-  </dependencies>\n-\n-  <build>\n-    <sourceDirectory>src</sourceDirectory>\n-    <plugins>\n-      <plugin>\n-        <groupId>com.jayway.maven.plugins.android.generation2</groupId>\n-        <artifactId>android-maven-plugin</artifactId>\n-        <configuration>\n-          <dex>\n-            <jvmArguments>\n-              <jvmArgument>-Xms256m</jvmArgument>\n-              <jvmArgument>-Xmx512m</jvmArgument>\n-            </jvmArguments>\n-          </dex>\n-          <sign>\n-            <debug>both</debug>\n-          </sign>\n-        </configuration>\n-        <extensions>true</extensions>\n-      </plugin>\n-    </plugins>\n-  </build>\n-</project>\n"
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/build.gradle",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 'Google Inc.:Google APIs:21'\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.mapdemo\"\n+        minSdkVersion 9\n+        targetSdkVersion 16\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n+dependencies {\n+    compile 'com.android.support:support-v4:21.0.3'\n+    compile 'com.google.android.gms:play-services:6.5.87'\n+}\n"
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/pom.xml",
            "additions": 0,
            "deletions": 66
        },
        "diff content": "@@ -1,66 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <groupId>com.novoda</groupId>\n-    <artifactId>android</artifactId>\n-    <version>2.0.2</version>\n-  </parent>\n-\n-  <groupId>com.novoda</groupId>\n-  <artifactId>MapApiV2Demo-parent</artifactId>\n-  <version>1.0</version>\n-  <packaging>pom</packaging>\n-  <name>MapApiV2Demo - Parent</name>\n-\n-  <modules>\n-    <module>app</module>\n-  </modules>\n-\n-  <properties>\n-    <android.version>4.1.1.4</android.version>\n-        <android-test.version>2.3.3</android-test.version>\n-    <android.sdk.platform>16</android.sdk.platform>\n-    <android.maven.plugin.version>3.3.2</android.maven.plugin.version>\n-    <junit.version>4.10</junit.version>\n-    <support-library.version>r7</support-library.version>\n-    <scm.branch>master</scm.branch>\n-  </properties>\n-\n-  <repositories>\n-\n-    <repository>\n-      <id>public-mvn-repo-releases</id>\n-      <url>\n-        https://github.com/novoda/public-mvn-repo/raw/master/releases\n-      </url>\n-    </repository>\n-\n-    <repository>\n-      <id>jakewharton</id>\n-      <url>http://r.jakewharton.com/maven/release/</url>\n-    </repository>\n-\n-  </repositories>\n-\n-  <pluginRepositories>\n-\n-    <pluginRepository>\n-      <id>public-mvn-repo.plugin-releases</id>\n-      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n-      <snapshots>\n-        <enabled>false</enabled>\n-      </snapshots>\n-    </pluginRepository>\n-\n-  </pluginRepositories>\n-\n-  <licenses>\n-    <license>\n-      <name>Apache 2.0</name>\n-      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n-    </license>\n-  </licenses>\n-</project>\n"
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/java/com/novoda/mapdemo/activity/NovodaMapActivity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/java/com/novoda/mapdemo/fragment/NovodaMapFragment.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/java/com/novoda/mapdemo/fragment/SomeOtherFragment.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/res/drawable-hdpi/app_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/res/drawable-ldpi/app_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/res/drawable-mdpi/app_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/res/drawable-xhdpi/app_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/res/layout/novoda_demo.xml",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -4,13 +4,13 @@\n               style=\"@style/Match\"\n               android:orientation=\"vertical\">\n \n-  <fragment xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  <fragment \n             android:id=\"@+id/map\"\n             style=\"@style/Match\"\n             android:layout_weight=\"0.2\"\n             android:name=\"com.novoda.mapdemo.fragment.NovodaMapFragment\"/>\n \n-  <fragment xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  <fragment \n             android:id=\"@+id/image_fragment\"\n             style=\"@style/Match\"\n             android:layout_weight=\"0.8\"\n"
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/res/layout/some_other_fragment.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "MapApiV2Demo/src/main/res/values/style_base.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dd3df62a5cfbd99c7b3ca42c02cede33c9e2d475",
        "previous commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -17,3 +17,4 @@ include 'LivewallpaperSwitchAnimation'\n project(':LivewallpaperSwitchAnimation').projectDir = new File('Livewallpaper/switch_animation') \n include 'LivewallpaperSwitchLeftRight'\n project(':LivewallpaperSwitchLeftRight').projectDir = new File('Livewallpaper/switch_leftright') \n+include 'MapApiV2Demo'\n"
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/README.txt",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-Since Android 2.1\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.wallpaper\"\n+        minSdkVersion 7\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/java/com/novoda/wallpaper/AnimSwitchWallPaper.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/front_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/front_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/front_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/front_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/ic_launcher_wallpaper.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/left_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/left_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/left_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/left_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/right_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/right_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/right_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/drawable/right_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/main/res/xml/wallpaper.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.wallpaper\"\n+        minSdkVersion 7\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/java/com/novoda/wallpaper/ImageSwitchWallPaper.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/res/drawable/day_front.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/res/drawable/day_left.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/res/drawable/day_right.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/res/drawable/front.gif",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/res/drawable/ic_launcher_wallpaper.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/main/res/xml/wallpaper.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "066d1c64c5a0daca816d0d7280928b5dff8b97f3",
        "previous commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 5,
            "deletions": 1
        },
        "diff content": "@@ -12,4 +12,8 @@ include 'LeftNavBarLibrary'\n project(':LeftNavBarLibrary').projectDir = new File('LeftNavBarExample/LeftNavBarLibrary') \n include 'LeftNavBarExample'\n project(':LeftNavBarExample').projectDir = new File('LeftNavBarExample/Example') \n-include 'ListStyles'\n\\ No newline at end of file\n+include 'ListStyles'\n+include 'LivewallpaperSwitchAnimation'\n+project(':LivewallpaperSwitchAnimation').projectDir = new File('Livewallpaper/switch_animation') \n+include 'LivewallpaperSwitchLeftRight'\n+project(':LivewallpaperSwitchLeftRight').projectDir = new File('Livewallpaper/switch_leftright') \n"
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/java/com/novoda/StyledListItems.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/drawable/bg_list.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/drawable/bg_list_hover.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/drawable/bg_list_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/drawable/bg_list_sep.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/drawable/list_item_style.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/drawable/list_style.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/layout/list.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/layout/list_item.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "ListStyles/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "86e5ecc2248a0a4d6cc34319aa085c4958676293",
        "previous commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -11,4 +11,5 @@ include 'GsonJsonWebservice'\n include 'LeftNavBarLibrary'\n project(':LeftNavBarLibrary').projectDir = new File('LeftNavBarExample/LeftNavBarLibrary') \n include 'LeftNavBarExample'\n-project(':LeftNavBarExample').projectDir = new File('LeftNavBarExample/Example') \n\\ No newline at end of file\n+project(':LeftNavBarExample').projectDir = new File('LeftNavBarExample/Example') \n+include 'ListStyles'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/AndroidManifest.xml",
            "additions": 0,
            "deletions": 24
        },
        "diff content": "@@ -1,25 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-\tpackage=\"com.google.tv.leftnavbar\">\n-\t\n-\t<uses-sdk android:minSdkVersion=\"11\" android:targetSdkVersion=\"12\" />\n-\t\n-\t<application android:label=\"LeftNavBarLibrary\">\n-\t\t\n-\t</application>\n-\n-</manifest>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/ant.properties",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,17 +0,0 @@\n-# This file is used to override default values used by the Ant build system.\n-#\n-# This file must be checked into Version Control Systems, as it is\n-# integral to the build system of your project.\n-\n-# This file is only used by the Ant script.\n-\n-# You can use this to override default values such as\n-#  'source.dir' for the location of your java source folder and\n-#  'out.dir' for the location of your output folder.\n-\n-# You can also use it define how the release builds are signed by declaring\n-# the following properties:\n-#  'key.store' for the location of your keystore and\n-#  'key.alias' for the name of the key to use.\n-# The password will be asked during the build when you use the 'release' target.\n-\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/build.xml",
            "additions": 0,
            "deletions": 92
        },
        "diff content": "@@ -1,92 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project name=\"LeftNavBarLibrary\" default=\"help\">\n-\n-    <!-- The local.properties file is created and updated by the 'android' tool.\n-         It contains the path to the SDK. It should *NOT* be checked into\n-         Version Control Systems. -->\n-    <property file=\"local.properties\" />\n-\n-    <!-- The ant.properties file can be created by you. It is only edited by the\n-         'android' tool to add properties to it.\n-         This is the place to change some Ant specific build properties.\n-         Here are some properties you may want to change/update:\n-\n-         source.dir\n-             The name of the source directory. Default is 'src'.\n-         out.dir\n-             The name of the output directory. Default is 'bin'.\n-\n-         For other overridable properties, look at the beginning of the rules\n-         files in the SDK, at tools/ant/build.xml\n-\n-         Properties related to the SDK location or the project target should\n-         be updated using the 'android' tool with the 'update' action.\n-\n-         This file is an integral part of the build system for your\n-         application and should be checked into Version Control Systems.\n-\n-         -->\n-    <property file=\"ant.properties\" />\n-\n-    <!-- if sdk.dir was not set from one of the property file, then\n-         get it from the ANDROID_HOME env var.\n-         This must be done before we load project.properties since\n-         the proguard config can use sdk.dir -->\n-    <property environment=\"env\" />\n-    <condition property=\"sdk.dir\" value=\"${env.ANDROID_HOME}\">\n-        <isset property=\"env.ANDROID_HOME\" />\n-    </condition>\n-\n-    <!-- The project.properties file is created and updated by the 'android'\n-         tool, as well as ADT.\n-\n-         This contains project specific properties such as project target, and library\n-         dependencies. Lower level build properties are stored in ant.properties\n-         (or in .classpath for Eclipse projects).\n-\n-         This file is an integral part of the build system for your\n-         application and should be checked into Version Control Systems. -->\n-    <loadproperties srcFile=\"project.properties\" />\n-\n-    <!-- quick check on sdk.dir -->\n-    <fail\n-            message=\"sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable.\"\n-            unless=\"sdk.dir\"\n-    />\n-\n-    <!--\n-        Import per project custom build rules if present at the root of the project.\n-        This is the place to put custom intermediary targets such as:\n-            -pre-build\n-            -pre-compile\n-            -post-compile (This is typically used for code obfuscation.\n-                           Compiled code location: ${out.classes.absolute.dir}\n-                           If this is not done in place, override ${out.dex.input.absolute.dir})\n-            -post-package\n-            -post-build\n-            -pre-clean\n-    -->\n-    <import file=\"custom_rules.xml\" optional=\"true\" />\n-\n-    <!-- Import the actual build file.\n-\n-         To customize existing targets, there are two options:\n-         - Customize only one target:\n-             - copy/paste the target into this file, *before* the\n-               <import> task.\n-             - customize it to your needs.\n-         - Customize the whole content of build.xml\n-             - copy/paste the content of the rules files (minus the top node)\n-               into this file, replacing the <import> task.\n-             - customize to your needs.\n-\n-         ***********************\n-         ****** IMPORTANT ******\n-         ***********************\n-         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n-         in order to avoid having your file be overridden by tools such as \"android update project\"\n-    -->\n-    <!-- version-tag: 1 -->\n-    <import file=\"${sdk.dir}/tools/ant/build.xml\" />\n-\n-</project>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/local.properties",
            "additions": 0,
            "deletions": 10
        },
        "diff content": "@@ -1,10 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must *NOT* be checked into Version Control Systems,\n-# as it contains information specific to your local configuration.\n-\n-# location of the SDK. This is only used by Ant\n-# For customization when using a Version Control System, please read the\n-# header note.\n-sdk.dir=/home/adam/android-sdks\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml",
            "additions": 0,
            "deletions": 26
        },
        "diff content": "@@ -1,26 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-  <modelVersion>4.0.0</modelVersion>\n-  <parent>\n-    <groupId>com.google.tv.leftnavbar</groupId>\n-    <artifactId>leftnavbar-lib-parent</artifactId>\n-    <version>1.2-SNAPSHOT</version>\n-  </parent>\n-\n-  <artifactId>leftnavbar-lib</artifactId>\n-  <packaging>apklib</packaging>\n-  <name>leftnavbar-lib</name>\n-\n-<dependencies>\n-  <dependency>\n-      <groupId>android</groupId>\n-      <artifactId>android</artifactId>\n-      <version>3.2_r1</version>\n-      <scope>provided</scope>\n-  </dependency>\n-</dependencies>\n-\n-  <build>\n-    <sourceDirectory>src</sourceDirectory>\n-  </build>\n-</project>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/proguard-project.txt",
            "additions": 0,
            "deletions": 20
        },
        "diff content": "@@ -1,20 +0,0 @@\n-# To enable ProGuard in your project, edit project.properties\n-# to define the proguard.config property as described in that file.\n-#\n-# Add project specific ProGuard rules here.\n-# By default, the flags in this file are appended to flags specified\n-# in ${sdk.dir}/tools/proguard/proguard-android.txt\n-# You can edit the include path and order by changing the ProGuard\n-# include property in project.properties.\n-#\n-# For more details, see\n-#   http://developer.android.com/guide/developing/tools/proguard.html\n-\n-# Add any project specific keep options here:\n-\n-# If your project uses WebView with JS, uncomment the following\n-# and specify the fully qualified class name to the JavaScript interface\n-# class:\n-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n-#   public *;\n-#}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/project.properties",
            "additions": 0,
            "deletions": 15
        },
        "diff content": "@@ -1,15 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must be checked in Version Control Systems.\n-#\n-# To customize properties used by the Ant build system edit\n-# \"ant.properties\", and override values to adapt the script to your\n-# project structure.\n-#\n-# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):\n-#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n-\n-android.library=true\n-# Project target.\n-target=android-13\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/color/leftnav_bar_tab_text_dark.xml",
            "additions": 0,
            "deletions": 28
        },
        "diff content": "@@ -1,29 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <item android:state_enabled=\"false\"\n-        android:color=\"#999999\"\n-        />\n-    <item android:state_selected=\"true\"\n-        android:color=\"#6191F2\"\n-        />\n-    <item android:state_focused=\"true\"\n-        android:color=\"#FFFFFF\"\n-        />\n-    <item\n-        android:color=\"#999999\"\n-        />\n-</selector>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/color/leftnav_bar_tab_text_light.xml",
            "additions": 0,
            "deletions": 28
        },
        "diff content": "@@ -1,29 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <item android:state_enabled=\"false\"\n-        android:color=\"#666666\"\n-        />\n-    <item android:state_selected=\"true\"\n-        android:color=\"#6191F2\"\n-        />\n-    <item android:state_focused=\"true\"\n-        android:color=\"#222222\"\n-        />\n-    <item\n-        android:color=\"#666666\"\n-        />\n-</selector>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_background_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_background_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_tab_separator_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavLibrary/leftnavbar/res/drawable-xhdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/custom.xml",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,24 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <item android:state_activated=\"true\"\n-        android:drawable=\"@color/custom_activated\"\n-        />\n-    <item\n-        android:drawable=\"@color/custom_normal\"\n-        />\n-</selector>\n-\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/leftnav_bar_item_background_dark.xml",
            "additions": 0,
            "deletions": 40
        },
        "diff content": "@@ -1,41 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:enterFadeDuration=\"@android:integer/config_shortAnimTime\"\n-    android:exitFadeDuration=\"@android:integer/config_shortAnimTime\"\n-    >\n-\n-    <item android:state_pressed=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_item_background_pressed_dark\"\n-        />\n-\n-    <item android:state_selected=\"true\"\n-        android:state_focused=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_item_background_selected_focused_dark\"\n-        />\n-\n-    <item android:state_selected=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_item_background_selected_dark\"\n-        />\n-\n-    <item android:state_focused=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_item_background_focused_dark\"\n-        />\n-\n-    <item android:drawable=\"@android:color/transparent\" />\n-\n-</selector>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/leftnav_bar_item_background_light.xml",
            "additions": 0,
            "deletions": 40
        },
        "diff content": "@@ -1,41 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:enterFadeDuration=\"@android:integer/config_shortAnimTime\"\n-    android:exitFadeDuration=\"@android:integer/config_shortAnimTime\"\n-    >\n-\n-    <item android:state_pressed=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_item_background_pressed_light\"\n-        />\n-\n-    <item android:state_selected=\"true\"\n-        android:state_focused=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_item_background_selected_focused_light\"\n-        />\n-\n-    <item android:state_selected=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_item_background_selected_light\"\n-        />\n-\n-    <item android:state_focused=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_item_background_focused_light\"\n-        />\n-\n-    <item android:drawable=\"@android:color/transparent\" />\n-\n-</selector>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/leftnav_bar_option_icon_dark.xml",
            "additions": 0,
            "deletions": 24
        },
        "diff content": "@@ -1,25 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\n-    <item android:state_focused=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_option_icon_focused_dark\"\n-        />\n-\n-    <item android:drawable=\"@drawable/leftnav_bar_option_icon_normal_dark\" />\n-\n-</selector>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/leftnav_bar_option_icon_light.xml",
            "additions": 0,
            "deletions": 24
        },
        "diff content": "@@ -1,25 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\n-    <item android:state_focused=\"true\"\n-        android:drawable=\"@drawable/leftnav_bar_option_icon_focused_light\"\n-        />\n-\n-    <item android:drawable=\"@drawable/leftnav_bar_option_icon_normal_light\" />\n-\n-</selector>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/spinner_item_background.xml",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,24 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <item android:state_activated=\"true\"\n-        android:drawable=\"@color/list_activated\"\n-        />\n-    <item\n-        android:drawable=\"@color/list_normal\"\n-        />\n-</selector>\n-\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/spinner_list_item_background.xml",
            "additions": 0,
            "deletions": 18
        },
        "diff content": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <item android:drawable=\"@color/list_normal\" />\n-</selector>\n-\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/custom_tab.xml",
            "additions": 0,
            "deletions": 18
        },
        "diff content": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<Button xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"?android:attr/listPreferredItemHeight\"\n-    />\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/custom_view.xml",
            "additions": 0,
            "deletions": 19
        },
        "diff content": "@@ -1,20 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"match_parent\"\n-    android:background=\"@drawable/custom\"\n-    />\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/left_nav.xml",
            "additions": 0,
            "deletions": 25
        },
        "diff content": "@@ -1,26 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\n-    <!-- Central section of the panel. -->\n-    <LinearLayout android:id=\"@+id/main\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"0dip\"\n-        android:layout_weight=\"1\"\n-        android:orientation=\"vertical\"\n-        />\n-\n-</merge>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_home.xml",
            "additions": 0,
            "deletions": 38
        },
        "diff content": "@@ -1,39 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:id=\"@+id/action_bar_home\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:addStatesFromChildren=\"true\"\n-    android:background=\"@drawable/leftnav_bar_item_background_dark\"\n-    >\n-\n-    <ImageView android:id=\"@+id/home\"\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"36dip\"\n-        android:scaleType=\"fitStart\"\n-        android:gravity=\"left\"\n-        \n-        />\n-\n-    <ImageView android:id=\"@+id/up\"\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"wrap_content\"\n-        android:src=\"@drawable/leftnav_bar_home_up\"\n-        android:visibility=\"gone\"\n-        />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_option.xml",
            "additions": 0,
            "deletions": 39
        },
        "diff content": "@@ -1,40 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:orientation=\"horizontal\"\n-    android:gravity=\"center_vertical\"\n-    android:background=\"@drawable/leftnav_bar_item_background_dark\" >\n-\n-    <ImageView android:id=\"@+id/icon\"\n-        android:layout_width=\"@dimen/left_nav_icon_size\"\n-        android:layout_height=\"@dimen/left_nav_icon_size\"\n-        android:scaleType=\"centerInside\"\n-        android:src=\"@drawable/leftnav_bar_option_icon_dark\"\n-        />\n-\n-    <TextView android:id=\"@+id/title\"\n-        style=\"@style/Widget.ActionButton.Overflow_Text\"\n-        android:layout_width=\"0dip\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_weight=\"1\"\n-        android:layout_marginLeft=\"7dip\"\n-        android:layout_marginRight=\"7dip\"\n-        android:visibility=\"gone\"\n-        />\n-\n-</LinearLayout>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_options.xml",
            "additions": 0,
            "deletions": 35
        },
        "diff content": "@@ -1,36 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:orientation=\"vertical\"\n-    android:gravity=\"center\"\n-    android:addStatesFromChildren=\"true\"\n-    >\n-\n-    <LinearLayout android:id=\"@+id/shown_options\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"wrap_content\"\n-        android:orientation=\"vertical\"\n-        android:gravity=\"center\"\n-        android:visibility=\"gone\"\n-        />\n-\n-    <include android:id=\"@+id/menu\"\n-        layout=\"@layout/leftnav_bar_option\"\n-        />\n-\n-</LinearLayout>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_spinner.xml",
            "additions": 0,
            "deletions": 21
        },
        "diff content": "@@ -1,22 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<Spinner xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:gravity=\"center\"\n-    android:focusable=\"true\"\n-    android:clickable=\"true\"\n-    />\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_tab.xml",
            "additions": 0,
            "deletions": 44
        },
        "diff content": "@@ -1,45 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<com.google.tv.leftnavbar.TabFrame xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:id=\"@+id/leftnav_bar_tab\"\n-    style=\"@style/Widget.ActionBarView_TabView\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:orientation=\"horizontal\"\n-    android:gravity=\"center_vertical\"\n-    android:focusable=\"true\"\n-    android:clickable=\"true\"\n-    >\n-\n-    <ImageView android:id=\"@+id/icon\"\n-        android:layout_width=\"@dimen/left_nav_icon_size\"\n-        android:layout_height=\"@dimen/left_nav_icon_size\"\n-        android:scaleType=\"centerInside\"\n-        android:duplicateParentState=\"true\"\n-        />\n-\n-    <TextView android:id=\"@+id/title\"\n-        style=\"@style/Widget.ActionBarView_TabText\"\n-        android:layout_width=\"0dip\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_weight=\"1\"\n-        android:layout_marginLeft=\"7dip\"\n-        android:layout_marginRight=\"7dip\"\n-        android:visibility=\"gone\"\n-        android:duplicateParentState=\"true\"\n-        />\n-\n-</com.google.tv.leftnavbar.TabFrame>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_tabs.xml",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,18 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<com.google.tv.leftnavbar.TabListView\n-\txmlns:android=\"http://schemas.android.com/apk/res/android\" style=\"@style/Widget.ActionBarView_TabBar\"\n-\tandroid:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" />\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/lib_left_nav.xml",
            "additions": 0,
            "deletions": 22
        },
        "diff content": "@@ -1,23 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\n-  <com.google.tv.leftnavbar.LeftNavView xmlns:android=\"http://schemas.android.com/apk/res/android\"   android:id=\"@+id/left_nav\"\n-        style=\"@android:style/Widget.Holo.ActionBar\"\n-        android:layout_width=\"@dimen/left_nav_collapsed_apparent_width\"\n-        android:layout_height=\"match_parent\" \n-        />\n-</merge>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/lib_title_bar.xml",
            "additions": 0,
            "deletions": 90
        },
        "diff content": "@@ -1,91 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\n-    <LinearLayout\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"@dimen/title_bar_height\"\n-        android:paddingLeft=\"8dip\"\n-        android:paddingRight=\"8dip\"\n-        android:gravity=\"center_vertical\"\n-        android:background=\"@drawable/leftnav_bar_item_background_dark\"\n-        >\n-\n-        <ImageView android:id=\"@+id/left_icon\"\n-            android:layout_width=\"36dip\"\n-            android:layout_height=\"36dip\"\n-            android:layout_marginRight=\"8dip\"\n-            android:visibility=\"gone\"\n-            android:scaleType=\"fitCenter\"\n-            />\n-\n-        <LinearLayout\n-            android:layout_width=\"0dip\"\n-            android:layout_height=\"@dimen/title_bar_height\"\n-            android:layout_weight=\"1\"\n-            android:layout_marginRight=\"8dip\"\n-            android:orientation=\"vertical\"\n-            android:gravity=\"center_vertical\"\n-            >\n-\n-            <TextView android:id=\"@+id/title\"\n-                android:layout_width=\"match_parent\"\n-                android:layout_height=\"0dip\"\n-                android:layout_weight=\"1\"\n-                android:gravity=\"center_vertical\"\n-                android:singleLine=\"true\"\n-                android:ellipsize=\"end\"\n-                />\n-\n-            <TextView android:id=\"@+id/subtitle\"\n-                android:layout_width=\"match_parent\"\n-                android:layout_height=\"wrap_content\"\n-                android:singleLine=\"true\"\n-                android:ellipsize=\"end\"\n-                android:visibility=\"gone\"\n-                />\n-\n-        </LinearLayout>\n-\n-        <ProgressBar android:id=\"@+id/progress_circular\"\n-            style=\"?android:attr/progressBarStyle\"\n-            android:layout_width=\"wrap_content\"\n-            android:layout_height=\"wrap_content\"\n-            android:layout_marginRight=\"8dip\"\n-            android:visibility=\"gone\"\n-            android:max=\"10000\"\n-            />\n-\n-        <ImageView android:id=\"@+id/right_icon\"\n-            android:layout_width=\"36dip\"\n-            android:layout_height=\"36dip\"\n-            android:layout_marginRight=\"8dip\"\n-            android:visibility=\"gone\"\n-            android:scaleType=\"fitCenter\"\n-            />\n-\n-    </LinearLayout>\n-\n-    <ProgressBar android:id=\"@+id/progress_horizontal\"\n-        style=\"?android:attr/progressBarStyle\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_alignParentBottom=\"true\"\n-        android:visibility=\"gone\"\n-        android:max=\"10000\"\n-        />\n-\n-</merge>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/lib_title_container.xml",
            "additions": 0,
            "deletions": 26
        },
        "diff content": "@@ -1,27 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n- <merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n- \n- <com.google.tv.leftnavbar.TitleBarView xmlns:android=\"http://schemas.android.com/apk/res/android\"  android:id=\"@+id/title_container\"\n-        style=\"?android:attr/windowTitleBackgroundStyle\"\n-        android:layout_width=\"fill_parent\"\n-        android:layout_height=\"@dimen/title_bar_height\"\n-        android:layout_marginLeft=\"@dimen/left_nav_collapsed_apparent_width\"\n-       android:layout_gravity=\"fill_horizontal\"\n-        android:visibility=\"gone\" \n-         />\n-         \n-</merge>      \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/main.xml",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-<TextView\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:text=\"Hello World, ACTIVITY_ENTRY_NAME\"\n-    />\n-</LinearLayout>\n-\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/spinner_item.xml",
            "additions": 0,
            "deletions": 39
        },
        "diff content": "@@ -1,40 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:orientation=\"horizontal\"\n-    android:padding=\"5dip\"\n-    android:gravity=\"center\"\n-    >\n-\n-    <ImageView android:id=\"@+id/picture\"\n-        android:layout_width=\"36dip\"\n-        android:layout_height=\"36dip\"\n-        android:scaleType=\"fitXY\"\n-        android:padding=\"2dip\"\n-        />\n-\n-    <TextView android:id=\"@+id/name\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"match_parent\"\n-        android:gravity=\"center\"\n-        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n-        android:singleLine=\"true\"\n-        android:ellipsize=\"end\"\n-        />\n-\n-</LinearLayout>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/attrs.xml",
            "additions": 0,
            "deletions": 20
        },
        "diff content": "@@ -1,21 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<resources>\n-\n-    <!-- Background drawable for standalone items that need focus/pressed states. -->\n-    <attr name=\"selectableItemBackground\" format=\"reference\" />\n-\n-</resources>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/colors.xml",
            "additions": 0,
            "deletions": 23
        },
        "diff content": "@@ -1,24 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<resources xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\n-    <color name=\"custom_normal\">#3300FF00</color>\n-    <color name=\"custom_activated\">#33FF0000</color>\n-\n-    <color name=\"list_normal\">#999999</color>\n-    <color name=\"list_activated\">#000000</color>\n-\n-</resources>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/lib_leftnav_bar_dimens.xml",
            "additions": 0,
            "deletions": 26
        },
        "diff content": "@@ -1,27 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-/*\n-** Copyright 2011, The Android Open Source Project\n-**\n-** Licensed under the Apache License, Version 2.0 (the \"License\");\n-** you may not use this file except in compliance with the License.\n-** You may obtain a copy of the License at\n-**\n-**     http://www.apache.org/licenses/LICENSE-2.0\n-**\n-** Unless required by applicable law or agreed to in writing, software\n-** distributed under the License is distributed on an \"AS IS\" BASIS,\n-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-** See the License for the specific language governing permissions and\n-** limitations under the License.\n-*/\n--->\n-<resources>  \n-    <dimen name=\"left_nav_collapsed_width\">62dip</dimen>\n-    <dimen name=\"left_nav_collapsed_apparent_width\">50dip</dimen>\n-    <dimen name=\"left_nav_expanded_width\">182dip</dimen>\n-    <dimen name=\"left_nav_expanded_apparent_width\">170dip</dimen>\n-    <dimen name=\"left_nav_icon_size\">36dip</dimen>\n-    <dimen name=\"title_bar_height\">59dip</dimen>\n-    <dimen name=\"title_bar_apparent_height\">52dip</dimen>\n-</resources>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/strings.xml",
            "additions": 0,
            "deletions": 18
        },
        "diff content": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n-  \n-    <string name=\"lib_leftnav_bar_option_label\">Options</string>\n-</resources>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/styles.xml",
            "additions": 0,
            "deletions": 123
        },
        "diff content": "@@ -1,124 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!-- Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<resources xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\n-    <style name=\"WithTitle\" parent=\"@android:style/Theme.Holo\">\n-        <item name=\"android:windowActionBar\">false</item>\n-        <item name=\"android:windowActionBarOverlay\">false</item>\n-        <item name=\"android:windowNoTitle\">false</item>\n-    </style>\n-\n-  \n-\n-    <style name=\"Widget\">\n-        <item name=\"android:textAppearance\">?android:textAppearance</item>\n-    </style>\n-\n-   \n-\n-    <style name=\"TextAppearance\">\n-        <item name=\"android:textColor\">?android:textColorPrimary</item>\n-        <item name=\"android:textColorHighlight\">?android:textColorHighlight</item>\n-        <item name=\"android:textColorHint\">?android:textColorHint</item>\n-        <item name=\"android:textColorLink\">?android:textColorLink</item>\n-        <item name=\"android:textSize\">16sp</item>\n-        <item name=\"android:textStyle\">normal</item>\n-    </style>\n-\n-   \n-\n-    <style name=\"Widget.ActionBar\">\n-        <item name=\"android:background\">@drawable/leftnav_bar_background_dark</item>\n-        <item name=\"android:displayOptions\">useLogo|showHome</item>\n-        <item name=\"android:height\">0dip</item>\n-        <item name=\"android:homeLayout\">@layout/leftnav_bar_home</item>\n-        <item name=\"android:titleTextStyle\">@style/TextAppearance.ActionBar_Title</item>\n-        <item name=\"android:subtitleTextStyle\">@style/TextAppearance.ActionBar_Subtitle</item>\n-        <item name=\"selectableItemBackground\">@drawable/leftnav_bar_item_background_dark</item>\n-    </style>\n-\n-    <style name=\"TextAppearance.ActionBar_Title\">\n-        <item name=\"android:textSize\">20dip</item>\n-        <item name=\"android:textColor\">#FFFFFF</item>\n-    </style>\n-\n-    <style name=\"TextAppearance.ActionBar_Subtitle\">\n-        <item name=\"android:textSize\">14dip</item>\n-        <item name=\"android:textColor\">#999999</item>\n-    </style>\n-\n-    <style name=\"Widget.ActionBarView_TabBar\">\n-        <item name=\"android:scrollbars\">none</item>\n-        <item name=\"android:divider\">@drawable/leftnav_bar_tab_separator_dark</item>\n-    </style>\n-\n-    <style name=\"Widget.ActionBarView_TabView\">\n-        <item name=\"android:background\">@drawable/leftnav_bar_item_background_dark</item>\n-    </style>\n-\n-    <style name=\"Widget.ActionBarView_TabText\">\n-        <item name=\"android:textAppearance\">@android:style/TextAppearance.Medium</item>\n-        <item name=\"android:textColor\">@color/leftnav_bar_tab_text_dark</item>\n-        <item name=\"android:singleLine\">true</item>\n-        <item name=\"android:ellipsize\">end</item>\n-    </style>\n-\n-    <style name=\"Widget.ActionButton\">\n-        <item name=\"android:background\">@drawable/leftnav_bar_menu_background_top_dark</item>\n-    </style>\n-\n-    <style name=\"Widget.ActionButton.Overflow\">\n-        <item name=\"android:src\">@drawable/leftnav_bar_option_icon_dark</item>\n-        <item name=\"android:background\">@drawable/leftnav_bar_item_background_dark</item>\n-        <item name=\"android:drawableTop\">@drawable/leftnav_bar_menu_background_top_dark</item>\n-        <item name=\"android:drawableBottom\">@drawable/leftnav_bar_menu_background_bottom_dark</item>\n-    </style>\n-\n-    <style name=\"Widget.ActionButton.Overflow_Text\" parent=\"Widget.ActionBarView_TabText\" />\n-\n-    <style name=\"Widget.Holo.ActionBar\" parent=\"Widget.ActionBar\" />\n-    <style name=\"Widget.Holo.ActionBarView_TabBar\" parent=\"Widget.ActionBarView_TabBar\" />\n-    <style name=\"Widget.Holo.ActionBarView_TabView\" parent=\"Widget.ActionBarView_TabView\" />\n-    <style name=\"Widget.Holo.ActionBarView_TabText\" parent=\"Widget.ActionBarView_TabText\" />\n-    <style name=\"Widget.Holo.ActionButton\" parent=\"Widget.ActionButton\" />\n-    <style name=\"Widget.Holo.ActionButton.Overflow\" parent=\"Widget.ActionButton.Overflow\" />\n-    <style name=\"Widget.Holo.ActionButton.Overflow_Text\" parent=\"Widget.Holo.ActionBarView_TabText\" />\n-\n-    <style name=\"Widget.Holo.Light.ActionBar\" parent=\"Widget.Holo.ActionBar\">\n-        <item name=\"android:background\">@drawable/leftnav_bar_background_light</item>\n-        <item name=\"selectableItemBackground\">@drawable/leftnav_bar_item_background_light</item>\n-    </style>\n-    <style name=\"Widget.Holo.Light.ActionBarView_TabBar\" parent=\"Widget.Holo.ActionBarView_TabBar\">\n-        <item name=\"android:divider\">@drawable/leftnav_bar_tab_separator_light</item>\n-    </style>\n-    <style name=\"Widget.Holo.Light.ActionBarView_TabView\" parent=\"Widget.Holo.ActionBarView_TabView\">\n-        <item name=\"android:background\">@drawable/leftnav_bar_item_background_light</item>\n-    </style>\n-    <style name=\"Widget.Holo.Light.ActionBarView_TabText\" parent=\"Widget.Holo.ActionBarView_TabText\">\n-        <item name=\"android:textColor\">@color/leftnav_bar_tab_text_light</item>\n-    </style>\n-    <style name=\"Widget.Holo.Light.ActionButton\" parent=\"Widget.ActionButton\">\n-        <item name=\"android:background\">@drawable/leftnav_bar_menu_background_top_light</item>\n-    </style>\n-    <style name=\"Widget.Holo.Light.ActionButton.Overflow\" parent=\"Widget.ActionButton.Overflow\">\n-        <item name=\"android:src\">@drawable/leftnav_bar_option_icon_light</item>\n-        <item name=\"android:background\">@drawable/leftnav_bar_item_background_light</item>\n-        <item name=\"android:drawableTop\">@drawable/leftnav_bar_menu_background_top_light</item>\n-        <item name=\"android:drawableBottom\">@drawable/leftnav_bar_menu_background_bottom_light</item>\n-    </style>\n-    <style name=\"Widget.Holo.Light.ActionButton.Overflow_Text\" parent=\"Widget.Holo.Light.ActionBarView_TabText\" />\n-  \n-</resources>\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/HomeDisplay.java",
            "additions": 0,
            "deletions": 132
        },
        "diff content": "@@ -1,132 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.app.Activity;\n-import android.content.Context;\n-import android.content.pm.ApplicationInfo;\n-import android.content.pm.PackageManager;\n-import android.content.pm.PackageManager.NameNotFoundException;\n-import android.content.res.TypedArray;\n-import android.graphics.drawable.Drawable;\n-import android.util.Log;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.ImageView;\n-\n-/**\n- * Manages the \"home\" cue of the Left Navigation Bar.\n- */\n-class HomeDisplay {\n-\n-    private static final String TAG = \"LeftNavBar-Home\";\n-\n-    enum Mode {\n-        ICON,\n-        LOGO,\n-        BOTH  // Icon when collapsed, logo when expanded.\n-    }\n-    private Mode mMode;\n-\n-    private final Context mContext;\n-    private Drawable mLogo;\n-    private Drawable mIcon;\n-    private View mView;\n-    private boolean mExpanded;\n-\n-    HomeDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n-        mContext = context;\n-        mMode = Mode.ICON;\n-        ApplicationInfo appInfo = context.getApplicationInfo();\n-        PackageManager pm = context.getPackageManager();\n-        loadLogo(attributes, pm, appInfo);\n-        loadIcon(attributes, pm, appInfo);\n-        createView(parent, attributes);\n-    }\n-\n-    private void loadLogo(TypedArray a, PackageManager pm, ApplicationInfo appInfo) {\n-        if (mContext instanceof Activity) {\n-            try {\n-                mLogo = pm.getActivityLogo(((Activity) mContext).getComponentName());\n-            } catch (NameNotFoundException e) {\n-                Log.e(TAG, \"Failed to load app logo.\", e);\n-            }\n-        }\n-        if (mLogo == null) {\n-            mLogo = appInfo.loadLogo(pm);\n-        }\n-    }\n-\n-    private void loadIcon(TypedArray a, PackageManager pm, ApplicationInfo appInfo) {\n-        if (mContext instanceof Activity) {\n-            try {\n-                mIcon = pm.getActivityIcon(((Activity) mContext).getComponentName());\n-            } catch (NameNotFoundException e) {\n-                Log.e(TAG, \"Failed to load app icon.\", e);\n-            }\n-        }\n-        if (mIcon == null) {\n-            mIcon = appInfo.loadIcon(pm);\n-        }\n-    }\n-\n-    public void setOnClickHomeListener(View.OnClickListener listener) {\n-        mView.setOnClickListener(listener);\n-    }\n-\n-    private void createView(ViewGroup parent, TypedArray attributes) {\n-        mView = LayoutInflater.from(mContext).inflate(R.layout.leftnav_bar_home, parent, false);\n-    }\n-\n-    private void updateImage() {\n-        boolean useIcon = mMode == Mode.ICON\n-                || mLogo == null\n-                || (mMode == Mode.BOTH && !mExpanded);\n-        ((ImageView) mView.findViewById(R.id.home)).setImageDrawable(useIcon ? mIcon : mLogo);\n-    }\n-\n-    View getView() {\n-        return mView;\n-    }\n-\n-    HomeDisplay setVisible(boolean visible) {\n-        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n-        return this;\n-    }\n-\n-    boolean isVisible() {\n-        return mView.getVisibility() == View.VISIBLE;\n-    }\n-\n-    HomeDisplay setExpanded(boolean expanded) {\n-        mExpanded = expanded;\n-        updateImage();\n-        return this;\n-    }\n-\n-    HomeDisplay setImageMode(Mode mode) {\n-        mMode = mode;\n-        updateImage();\n-        return this;\n-    }\n-\n-    HomeDisplay setAsUp(boolean asUp) {\n-        mView.findViewById(R.id.up).setVisibility(asUp ? View.VISIBLE : View.GONE);\n-        return this;\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/LeftNavBar.java",
            "additions": 0,
            "deletions": 504
        },
        "diff content": "@@ -1,504 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-\n-import android.app.ActionBar;\n-import android.app.Activity;\n-import android.app.Dialog;\n-import android.content.Context;\n-import android.graphics.drawable.Drawable;\n-import android.view.ActionMode;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.view.ViewGroup.MarginLayoutParams;\n-import android.view.Window;\n-import android.widget.SpinnerAdapter;\n-\n-/**\n- * TV-specific implementation of the ActionBar API, using the title bar and a\n- * left navigation panel.\n- */\n-public class LeftNavBar extends ActionBar {\n-\n-    /**\n-     * Always show an expanded version of the Left Navigation bar.\n-     *\n-     * @see #setDisplayOptions(int)\n-     * @see #setDisplayOptions(int, int)\n-     * @hide\n-     */\n-    public static final int DISPLAY_ALWAYS_EXPANDED = 0x20;\n-\n-    /**\n-     * Use the app logo when the Left Navigation bar is expanded.\n-     *\n-     * @see #setDisplayOptions(int)\n-     * @see #setDisplayOptions(int, int)\n-     * @hide\n-     */\n-    public static final int DISPLAY_USE_LOGO_WHEN_EXPANDED = 0x80;\n-\n-    /**\n-     * Show an indeterminate progress indicator.\n-     *\n-     * @see #setDisplayOptions(int)\n-     * @see #setDisplayOptions(int, int)\n-     * @hide\n-     */\n-    public static final int DISPLAY_SHOW_INDETERMINATE_PROGRESS = 0x100;\n-\n-    /**\n-     * Display option for the Left Navigation bar to automatically expand when\n-     * certain ev ents happen. This includes gaining focus but could also\n-     * include other events, such as mouse hover.\n-     *\n-     * @see #setDisplayOptions(int)\n-     * @see #setDisplayOptions(int, int)\n-     */\n-    public static final int DISPLAY_AUTO_EXPAND = 0x40;\n-\n-    /**\n-     * Display options applied by default.\n-     */\n-    public static final int DEFAULT_DISPLAY_OPTIONS = ActionBar.DISPLAY_SHOW_HOME\n-            | ActionBar.DISPLAY_USE_LOGO | ActionBar.DISPLAY_SHOW_TITLE\n-            | LeftNavBar.DISPLAY_ALWAYS_EXPANDED;\n-\n-    private Context mContext;\n-\n-    private boolean mIsOverlay;\n-\n-    private TitleBarView mTitleBar;\n-\n-    private LeftNavView mLeftNav;\n-\n-    private View mContent;\n-\n-    public LeftNavBar(Activity activity) {\n-        initialize(activity.getWindow(), activity);\n-    }\n-\n-    public LeftNavBar(Dialog dialog) {\n-        initialize(dialog.getWindow(), dialog.getContext());\n-    }\n-\n-    private void initialize(Window window, Context context) {\n-        View decor = window.getDecorView();\n-        ViewGroup group = (ViewGroup) window.getDecorView();\n-        LayoutInflater inflater = (LayoutInflater) decor.getContext().getSystemService(\n-                Context.LAYOUT_INFLATER_SERVICE);\n-        \n-        inflater.inflate(R.layout.lib_title_container,group,true);\n-        inflater.inflate(R.layout.lib_left_nav,group, true);\n-        mContext = decor.getContext();\n-        mIsOverlay = window.hasFeature(Window.FEATURE_ACTION_BAR_OVERLAY);\n-        mTitleBar = (TitleBarView) decor.findViewById(R.id.title_container);\n-       \n-        mLeftNav = (LeftNavView) decor.findViewById(R.id.left_nav);\n-       \n-        mContent = group.getChildAt(0);\n-\n-        if (mTitleBar == null || mLeftNav == null) {\n-            throw new IllegalStateException(\n-                    getClass().getSimpleName() + \": incompatible window decor!\");\n-        }\n-\n-        setDisplayOptions(DEFAULT_DISPLAY_OPTIONS);\n-        showOptionsMenu(true);\n-    }\n-\n-    private void updateWindowLayout(boolean animated) {\n-        updateTitleBar(animated);\n-        setLeftMargin(mTitleBar, mLeftNav.getApparentWidth(true) );\n-        if (!mIsOverlay) {\n-            setLeftMargin(mContent, mLeftNav.getApparentWidth(false));\n-            setTopMargin(mContent, mTitleBar.getApparentHeight());\n-        }\n-    }\n-\n-\n-    private void updateTitleBar(boolean animated) {\n-        int options = getDisplayOptions();\n-        boolean titleVisible = has(options, DISPLAY_SHOW_TITLE);\n-        boolean progressVisible = has(options, DISPLAY_SHOW_INDETERMINATE_PROGRESS);\n-        boolean horizontalProgressVisible = mTitleBar.isHorizontalProgressVisible();\n-        mTitleBar.setVisible(\n-                isShowing() && (titleVisible || progressVisible || horizontalProgressVisible),\n-                animated);\n-        mTitleBar.setProgressVisible(progressVisible);\n-    }\n-\n-    private void setLeftMargin(View view, int margin) {\n-        MarginLayoutParams params = (MarginLayoutParams) view.getLayoutParams();\n-        params.leftMargin = margin;\n-        view.setLayoutParams(params);\n-    }\n-\n-    private void setTopMargin(View view, int margin) {\n-        MarginLayoutParams params = (MarginLayoutParams) view.getLayoutParams();\n-        params.topMargin = margin;\n-        view.setLayoutParams(params);\n-    }\n-\n-    // ----------------------------------------------------------------------------------------------\n-    // Visibility.\n-\n-    @Override\n-    public void show() {\n-        setVisible(true);\n-    }\n-\n-    @Override\n-    public void hide() {\n-        setVisible(false);\n-    }\n-\n-    private void setVisible(boolean visible) {\n-        boolean shouldAnimate = mIsOverlay;\n-        if (mLeftNav.setVisible(visible, shouldAnimate)) {\n-            updateWindowLayout(shouldAnimate);\n-        }\n-    }\n-\n-    @Override\n-    public boolean isShowing() {\n-        return mLeftNav.isVisible();\n-    }\n-\n-    // ----------------------------------------------------------------------------------------------\n-    // Title / subtitle.\n-\n-    @Override\n-    public void setTitle(CharSequence title) {\n-        mTitleBar.setTitle(title);\n-    }\n-\n-    @Override\n-    public void setTitle(int resId) {\n-        setTitle(mContext.getString(resId));\n-    }\n-\n-    @Override\n-    public CharSequence getTitle() {\n-        return mTitleBar.getTitle();\n-    }\n-\n-    @Override\n-    public void setSubtitle(CharSequence subtitle) {\n-        mTitleBar.setSubtitle(subtitle);\n-    }\n-\n-    @Override\n-    public void setSubtitle(int resId) {\n-        setSubtitle(mContext.getString(resId));\n-    }\n-\n-    @Override\n-    public CharSequence getSubtitle() {\n-        return mTitleBar.getSubtitle();\n-    }\n-\n-    // ----------------------------------------------------------------------------------------------\n-    // Tabs.\n-\n-    @Override\n-    public Tab newTab() {\n-        return new TabImpl(mContext) {\n-\n-            @Override\n-            public void select() {\n-                selectTab(this);\n-            }\n-        };\n-    }\n-\n-    /**\n-     * Ensures the given tab is a valid object.\n-     */\n-    private TabImpl convertTab(Tab tab) {\n-        if (tab == null) {\n-            return null;\n-        }\n-        if (!(tab instanceof TabImpl)) {\n-            throw new IllegalArgumentException(\"Invalid tab object.\");\n-        }\n-        return (TabImpl) tab;\n-    }\n-\n-    @Override\n-    public void addTab(Tab tab) {\n-        addTab(tab, TabDisplay.LAST_POSITION);\n-    }\n-\n-    @Override\n-    public void addTab(Tab tab, boolean setSelected) {\n-        addTab(tab, TabDisplay.LAST_POSITION, setSelected);\n-    }\n-\n-    @Override\n-    public void addTab(Tab tab, int position) {\n-        addTab(tab, position, getTabCount() == 0);\n-    }\n-\n-    @Override\n-    public void addTab(Tab tab, int position, boolean setSelected) {\n-        mLeftNav.getTabs().add(convertTab(tab), position, setSelected);\n-    }\n-\n-    @Override\n-    public Tab getSelectedTab() {\n-        return mLeftNav.getTabs().getSelected();\n-    }\n-\n-    @Override\n-    public Tab getTabAt(int index) {\n-        return mLeftNav.getTabs().get(index);\n-    }\n-\n-    @Override\n-    public int getTabCount() {\n-        return mLeftNav.getTabs().getCount();\n-    }\n-\n-    @Override\n-    public void removeAllTabs() {\n-        mLeftNav.getTabs().removeAll();\n-    }\n-\n-    @Override\n-    public void removeTab(Tab tab) {\n-        mLeftNav.getTabs().remove(convertTab(tab));\n-    }\n-\n-    @Override\n-    public void removeTabAt(int position) {\n-        mLeftNav.getTabs().remove(position);\n-    }\n-\n-    @Override\n-    public void selectTab(Tab tab) {\n-        mLeftNav.getTabs().select(convertTab(tab));\n-    }\n-\n-    // ----------------------------------------------------------------------------------------------\n-    // Navigation modes.\n-\n-    @Override\n-    public int getNavigationItemCount() {\n-        switch (getNavigationMode()) {\n-            case NAVIGATION_MODE_TABS:\n-                return getTabCount();\n-\n-            case NAVIGATION_MODE_LIST:\n-                return mLeftNav.getSpinner().getCount();\n-\n-            default:\n-                throw new IllegalStateException(\n-                        \"No count available for mode: \" + getNavigationMode());\n-        }\n-    }\n-\n-    @Override\n-    public int getNavigationMode() {\n-        return mLeftNav.getNavigationMode();\n-    }\n-\n-    @Override\n-    public int getSelectedNavigationIndex() {\n-        switch (getNavigationMode()) {\n-            case NAVIGATION_MODE_TABS:\n-                Tab selected = getSelectedTab();\n-                return selected != null ? selected.getPosition() : -1;\n-\n-            case NAVIGATION_MODE_LIST:\n-                return mLeftNav.getSpinner().getSelected();\n-\n-            default:\n-                throw new IllegalStateException(\n-                        \"No selection available for mode: \" + getNavigationMode());\n-        }\n-    }\n-\n-    @Override\n-    public void setListNavigationCallbacks(SpinnerAdapter adapter, OnNavigationListener callback) {\n-        mLeftNav.getSpinner().setContent(adapter, callback);\n-    }\n-\n-    @Override\n-    public void setNavigationMode(int mode) {\n-        mLeftNav.setNavigationMode(mode);\n-    }\n-\n-    @Override\n-    public void setSelectedNavigationItem(int position) {\n-        switch (getNavigationMode()) {\n-            case NAVIGATION_MODE_TABS:\n-                selectTab(getTabAt(position));\n-                break;\n-\n-            case NAVIGATION_MODE_LIST:\n-                mLeftNav.getSpinner().setSelected(position);\n-                break;\n-\n-            default:\n-                throw new IllegalStateException(\n-                        \"Cannot set selection on mode: \" + getNavigationMode());\n-        }\n-    }\n-\n-    // ----------------------------------------------------------------------------------------------\n-    // Display options.\n-\n-    @Override\n-    public int getDisplayOptions() {\n-        return mLeftNav.getDisplayOptions();\n-    }\n-\n-    private static boolean has(int changes, int option) {\n-        return (changes & option) != 0;\n-    }\n-\n-    @Override\n-    public void setDisplayOptions(int options) {\n-        int changes = mLeftNav.setDisplayOptions(options);\n-        if (has(changes, DISPLAY_ALWAYS_EXPANDED) || has(changes, DISPLAY_AUTO_EXPAND)\n-                || has(changes, DISPLAY_SHOW_TITLE)\n-                || has(changes, DISPLAY_SHOW_INDETERMINATE_PROGRESS)) {\n-            updateWindowLayout(false);\n-        }\n-    }\n-\n-    @Override\n-    public void setDisplayOptions(int options, int mask) {\n-        int current = getDisplayOptions();\n-        int updated = ((options & mask) | (current & ~mask));\n-        setDisplayOptions(updated);\n-    }\n-\n-    @Override\n-    public void setDisplayHomeAsUpEnabled(boolean showHomeAsUp) {\n-        setDisplayOptions(showHomeAsUp ? DISPLAY_HOME_AS_UP : 0, DISPLAY_HOME_AS_UP);\n-    }\n-\n-    @Override\n-    public void setDisplayShowCustomEnabled(boolean showCustom) {\n-        setDisplayOptions(showCustom ? DISPLAY_SHOW_CUSTOM : 0, DISPLAY_SHOW_CUSTOM);\n-    }\n-\n-    @Override\n-    public void setDisplayShowHomeEnabled(boolean showHome) {\n-        setDisplayOptions(showHome ? DISPLAY_SHOW_HOME : 0, DISPLAY_SHOW_HOME);\n-    }\n-\n-    @Override\n-    public void setDisplayShowTitleEnabled(boolean showTitle) {\n-        setDisplayOptions(showTitle ? DISPLAY_SHOW_TITLE : 0, DISPLAY_SHOW_TITLE);\n-    }\n-\n-    @Override\n-    public void setDisplayUseLogoEnabled(boolean useLogo) {\n-        setDisplayOptions(useLogo ? DISPLAY_USE_LOGO : 0, DISPLAY_USE_LOGO);\n-    }\n-\n-    /**\n-     * Sets the horizontal progress indicator to the given value.\n-     */\n-    public void setShowHorizontalProgress(int value) {\n-        mTitleBar.setHorizontalProgress(value);\n-        updateWindowLayout(false);\n-    }\n-\n-    // ----------------------------------------------------------------------------------------------\n-    // Custom view.\n-\n-    @Override\n-    public View getCustomView() {\n-        return mLeftNav.getCustomView();\n-    }\n-\n-    @Override\n-    public void setCustomView(View view) {\n-        mLeftNav.setCustomView(view);\n-    }\n-\n-    @Override\n-    public void setCustomView(View view, LayoutParams layoutParams) {\n-        view.setLayoutParams(layoutParams);\n-        setCustomView(view);\n-    }\n-\n-    @Override\n-    public void setCustomView(int resId) {\n-        setCustomView(LayoutInflater.from(mContext).inflate(resId, mLeftNav, false));\n-    }\n-\n-    // ----------------------------------------------------------------------------------------------\n-    // Miscellaneous.\n-\n-    @Override\n-    public void addOnMenuVisibilityListener(OnMenuVisibilityListener listener) {\n-        // No use for that, apps should use the regular options menu API.\n-    }\n-\n-    @Override\n-    public void removeOnMenuVisibilityListener(OnMenuVisibilityListener listener) {\n-        // No use for that, apps should use the regular options menu API.\n-    }\n-\n-    @Override\n-    public void setBackgroundDrawable(Drawable d) {\n-        mLeftNav.setBackgroundDrawable(d);\n-    }\n-\n-    @Override\n-    public int getHeight() {\n-        // The height is completely irrelevant in our case.\n-        // Returning the left nav's width as this is what apps may want to\n-        // adjust to.\n-        return mLeftNav.getApparentWidth(true /*\n-                                               * ignore the fact that it may be\n-                                               * hidden\n-                                               */);\n-    }\n-\n-    // ----------------------------------------------------------------------------------------------\n-    // Copies of ActionBarImpl methods.\n-    // This is to ensure this implementation can be easily swapped in.\n-\n-    public void setShowHideAnimationEnabled(boolean enabled) {\n-        mLeftNav.setAnimationsEnabled(enabled);\n-        mTitleBar.setAnimationsEnabled(enabled);\n-    }\n-\n-    public void dispatchMenuVisibilityChanged(boolean visible) {\n-    }\n-\n-    public ActionMode startActionMode(ActionMode.Callback callback) {\n-        return null;\n-    }\n-\n-    // Extra methods\n-    public void showOptionsMenu(boolean show) {\n-        mLeftNav.showOptionsMenu(show);\n-    }\n-\n-    public void setOnClickHomeListener(View.OnClickListener listener) {\n-        mLeftNav.setOnClickHomeListener(listener);\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/LeftNavBarService.java",
            "additions": 0,
            "deletions": 46
        },
        "diff content": "@@ -1,46 +0,0 @@\n-/*\n- * Copyright (C) 2011 The Android Open Source Project\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.app.Activity;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-/** This service maintains a single instance of LeftNavBar per Activity **/\n-public class LeftNavBarService {\n-\n-    private final Map<Integer, LeftNavBar> map;\n-\n-    private static final LeftNavBarService service = new LeftNavBarService();\n-\n-    private LeftNavBarService() {\n-        map = new HashMap<Integer, LeftNavBar>();\n-    }\n-\n-    public static LeftNavBarService instance() {\n-        return service;\n-    }\n-\n-    public LeftNavBar getLeftNavBar(Activity activity) {\n-        if (map.get(activity.hashCode()) == null) {\n-            LeftNavBar leftNavBar = new LeftNavBar(activity);           \n-            map.put(activity.hashCode(), leftNavBar);\n-        }\n-        return map.get(activity.hashCode());\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/LeftNavView.java",
            "additions": 0,
            "deletions": 622
        },
        "diff content": "@@ -1,622 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.animation.Animator;\n-import android.animation.AnimatorListenerAdapter;\n-import android.animation.ValueAnimator;\n-import android.app.ActionBar;\n-import android.content.Context;\n-import android.content.res.Resources;\n-import android.util.AttributeSet;\n-import android.view.FocusFinder;\n-import android.view.Gravity;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.LinearLayout;\n-\n-import java.util.ArrayList;\n-\n-\n-/**\n- * Left navigation panel hosting various controls such as tabs.\n- */\n-public class LeftNavView extends LinearLayout {\n-\t\n-    private final HomeDisplay mHome;\n-    private final TabDisplay mTabs;\n-    private final OptionsDisplay mOptions;\n-    private final SpinnerDisplay mSpinner;\n-\n-    private final int mWidthCollapsed;\n-    private final int mWidthExpanded;\n-    private final int mApparentWidthCollapsed;\n-    private final int mApparentWidthExpanded;\n-\n-    private final VisibilityController mVisibilityController;\n-\n-    private final int mAnimationDuration;\n-\n-    private int mDisplayOptions;\n-    private int mNavigationMode;\n-    private boolean mExpanded;\n-    private boolean mAnimationsEnabled;\n-    private ValueAnimator mWidthAnimator;\n-\n-    public LeftNavView(Context context, AttributeSet attrs) {\n-        super(context, attrs);\n-        mVisibilityController = new VisibilityController(this);\n-        LayoutInflater.from(context).inflate(R.layout.left_nav, this, true);\n-        setOrientation(VERTICAL);\n-\n-        mHome = new HomeDisplay(context, this, null).setVisible(false);\n-        mTabs = new TabDisplay(context, this, null).setVisible(false);\n-        mOptions = new OptionsDisplay(context, this, null).setVisible(false);\n-        mSpinner = new SpinnerDisplay(context, this, null).setVisible(false);\n-\n-        Resources res = context.getResources();\n-        mWidthCollapsed = res.getDimensionPixelSize(\n-                R.dimen.left_nav_collapsed_width);\n-        mWidthExpanded = res.getDimensionPixelSize(\n-                R.dimen.left_nav_expanded_width);\n-        mApparentWidthCollapsed = res.getDimensionPixelSize(\n-                R.dimen.left_nav_collapsed_apparent_width);\n-        mApparentWidthExpanded = res.getDimensionPixelSize(\n-                R.dimen.left_nav_expanded_apparent_width);\n-        mAnimationDuration = res.getInteger(        \t\t\n-        \t\tandroid.R.integer.config_shortAnimTime);\n-\n-        mNavigationMode = ActionBar.NAVIGATION_MODE_STANDARD;\n-        setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);\n-  }\n-\n-    @Override\n-    protected void onFinishInflate() {\n-        super.onFinishInflate();\n-\n-        // Add header / footer views.\n-        addView(mHome.getView(), 0);\n-        // Central section falls here.\n-        addView(mOptions.getView(), 2);\n-\n-        // Add views to the central section.\n-        ViewGroup main = getMainSection();\n-        main.addView(mTabs.getView());\n-        main.addView(mSpinner.getView());\n-    }\n-\n-    private ViewGroup getMainSection() {\n-        return (ViewGroup) findViewById(R.id.main);\n-    }\n-\n-    public boolean setVisible(boolean visible, boolean animated) {\n-        return mVisibilityController.setVisible(visible, animated && mAnimationsEnabled);\n-    }\n-\n-    public boolean isVisible() {\n-        return mVisibilityController.isVisible();\n-    }\n-\n-    public void setOnClickHomeListener(View.OnClickListener listener) {\n-        mHome.setOnClickHomeListener(listener);\n-    }\n-\n-    @Override\n-    public void addFocusables(ArrayList<View> views, int direction, int focusableMode) {\n-        if (direction == FOCUS_FORWARD) {\n-            // When setting the initial focus for the window, all views should be considered\n-            // focusable.\n-            super.addFocusables(views, direction, focusableMode);\n-            return;\n-        }\n-        if (direction != FOCUS_LEFT && !hasFocus()) {\n-            // We don't want to gain focus unless it's coming from the right or we already have\n-            // focus.\n-            return;\n-        }\n-        if (!hasFocus()) {\n-            // Try to focus a navigation mode first.\n-            int initialCount = views.size();\n-            switch (mNavigationMode) {\n-                case ActionBar.NAVIGATION_MODE_TABS:\n-                    mTabs.getView().addFocusables(views, direction, focusableMode);\n-                    break;\n-\n-                case ActionBar.NAVIGATION_MODE_LIST:\n-                    mSpinner.getView().addFocusables(views, direction, focusableMode);\n-                    break;\n-\n-                default:\n-                    if (hasCustomView()) {\n-                        getCustomView().addFocusables(views, direction, focusableMode);\n-                    }\n-                    break;\n-            }\n-            if (views.size() > initialCount) {\n-                // Some focusable elements were added.\n-                return;\n-            }\n-        }\n-        super.addFocusables(views, direction, focusableMode);\n-    }\n-\n-    @Override\n-    public View focusSearch(View focused, int direction) {\n-        if (hasFocus() && direction != FOCUS_RIGHT) {\n-            // If we have focus, we should only relinquish focus if it is moving to the right.\n-            // Otherwise we restrict the focus search to our children.\n-            return FocusFinder.getInstance().findNextFocus(this, focused, direction);\n-        } else {\n-            return super.focusSearch(focused, direction);\n-        }\n-    }\n-\n-    protected void onDescendantFocusChanged(boolean hasFocus) {\n-        super.onWindowFocusChanged(hasFocus);\n-        if (has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND)) {\n-            setExpanded(hasFocus);\n-        }\n-    }\n-    \n-    /*@Override\n-    protected void onDescendantFocusChanged(boolean hasFocus) {\n-        super.onDescendantFocusChanged(hasFocus);\n-        if (has(mDisplayOptions, ActionBar.DISPLAY_AUTO_EXPAND)) {\n-            setExpanded(hasFocus);\n-        }\n-    }*/\n-\n-    public int getDisplayOptions() {\n-        return mDisplayOptions;\n-    }\n-\n-    /**\n-     * Sets the display options and returns the options which have changed.\n-     */\n-    public int setDisplayOptions(int options) {\n-        int changes = options ^ mDisplayOptions;\n-        mDisplayOptions = options;\n-        if (has(changes, ActionBar.DISPLAY_SHOW_HOME)) {\n-            mHome.setVisible(has(options, ActionBar.DISPLAY_SHOW_HOME));\n-        }\n-        if (has(changes, ActionBar.DISPLAY_USE_LOGO) ||\n-                has(changes, LeftNavBar.DISPLAY_USE_LOGO_WHEN_EXPANDED)) {\n-            setHomeMode();\n-        }\n-        if (has(changes, ActionBar.DISPLAY_HOME_AS_UP)) {\n-            mHome.setAsUp(has(options, ActionBar.DISPLAY_HOME_AS_UP));\n-        }\n-        if (has(changes, ActionBar.DISPLAY_SHOW_CUSTOM)) {\n-            setCustomViewVisibility(has(mDisplayOptions, ActionBar.DISPLAY_SHOW_CUSTOM));\n-        }\n-        if (has(changes, LeftNavBar.DISPLAY_AUTO_EXPAND) ||\n-                has(changes, LeftNavBar.DISPLAY_ALWAYS_EXPANDED)) {\n-            setExpandedState();\n-        }\n-        return changes;\n-    }\n-\n-    private void setHomeMode() {\n-        HomeDisplay.Mode mode;\n-        if (has(mDisplayOptions, LeftNavBar.DISPLAY_USE_LOGO_WHEN_EXPANDED)) {\n-            mode = HomeDisplay.Mode.BOTH;\n-        } else if (has(mDisplayOptions, ActionBar.DISPLAY_USE_LOGO)) {\n-            mode = HomeDisplay.Mode.LOGO;\n-        } else {\n-            mode = HomeDisplay.Mode.ICON;\n-        }\n-        mHome.setImageMode(mode);\n-    }\n-\n-    private void setExpandedState() {\n-        if (has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND)) {\n-            setExpanded(hasFocus(), false);\n-        } else {\n-            setExpanded(has(mDisplayOptions, LeftNavBar.DISPLAY_ALWAYS_EXPANDED), false);\n-        }\n-    }\n-\n-    private void setExpanded(boolean expanded) {\n-        setExpanded(expanded, mAnimationsEnabled && isVisible());\n-    }\n-\n-    private void setExpanded(final boolean expanded, boolean animated) {\n-        if (mExpanded == expanded) {\n-            return;\n-        }\n-        if (animated) {\n-            if (mWidthAnimator != null) {\n-                mWidthAnimator.cancel();\n-            }\n-            mWidthAnimator = ValueAnimator.ofInt(\n-                    getLayoutParams().width,  // Starting value.\n-                    expanded ? mWidthExpanded : mWidthCollapsed);\n-            mWidthAnimator.setDuration(mAnimationDuration);\n-            mWidthAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n-                public void onAnimationUpdate(ValueAnimator animation) {\n-                    setViewWidth((Integer) animation.getAnimatedValue());\n-                }\n-            });\n-            mWidthAnimator.addListener(new AnimatorListenerAdapter() {\n-                @Override\n-                public void onAnimationStart(Animator animator) {\n-                    if (!expanded) {\n-                        setContentExpanded(false);\n-                    }\n-                }\n-                @Override\n-                public void onAnimationEnd(Animator animator) {\n-                    if (expanded) {\n-                        setContentExpanded(true);\n-                    }\n-                }\n-            });\n-            mWidthAnimator.start();\n-        } else {\n-            setViewWidth(expanded ? mWidthExpanded : mWidthCollapsed);\n-            setContentExpanded(expanded);\n-        }\n-        mExpanded = expanded;\n-    }\n-\n-    private void setContentExpanded(boolean expanded) {\n-        mTabs.setExpanded(expanded);\n-        mOptions.setExpanded(expanded);\n-        mHome.setExpanded(expanded);\n-        mSpinner.setExpanded(expanded);\n-        if (hasCustomView()) {\n-            getCustomView().setActivated(expanded);\n-        }\n-    }\n-\n-    private void setViewWidth(int width) {\n-        ViewGroup.LayoutParams params = getLayoutParams();\n-        params.width = width;\n-        setLayoutParams(params);\n-    }\n-\n-    /**\n-     * Returns the \"steady state\" width for the view, taking into account all shadowing effects.\n-     */\n-    public int getApparentWidth(boolean ignoreHiddenState) {\n-        if (!isVisible() && !ignoreHiddenState) {\n-            return 0;\n-        }\n-        boolean isCollapsed = has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND) ||\n-                !has(mDisplayOptions, LeftNavBar.DISPLAY_ALWAYS_EXPANDED);\n-        return isCollapsed ? mApparentWidthCollapsed : mApparentWidthExpanded;\n-    }\n-\n-    public void setAnimationsEnabled(boolean enabled) {\n-        mAnimationsEnabled = enabled;\n-    }\n-\n-    private static boolean has(int changes, int option) {\n-        return (changes & option) != 0;\n-    }\n-\n-    public TabDisplay getTabs() {\n-        return mTabs;\n-    }\n-\n-    public SpinnerDisplay getSpinner() {\n-        return mSpinner;\n-    }\n-\n-    public void setNavigationMode(int mode) {\n-        if (mNavigationMode == mode) {\n-            return;\n-        }\n-        setNavigationModeVisibility(mNavigationMode, false);\n-        setNavigationModeVisibility(mode, true);\n-        mNavigationMode = mode;\n-    }\n-\n-    private void setNavigationModeVisibility(int mode, boolean visible) {\n-        switch (mode) {\n-            case ActionBar.NAVIGATION_MODE_TABS:\n-                mTabs.setVisible(visible);\n-                break;\n-\n-            case ActionBar.NAVIGATION_MODE_LIST:\n-                mSpinner.setVisible(visible);\n-                break;\n-\n-            default:\n-                break;\n-        }\n-    }\n-\n-    public int getNavigationMode() {\n-        return mNavigationMode;\n-    }\n-\n-    public void showOptionsMenu(Boolean show) {\n-        mOptions.setVisible(show);\n-    }\n-\n-    public void setCustomView(View view) {\n-        ViewGroup main = getMainSection();\n-        CustomViewWrapper current = getCustomViewWrapper();\n-        if (current != null) {\n-            current.detach();\n-            main.removeView(current);\n-        }\n-        if (view != null) {\n-            view.setActivated(mExpanded);\n-            main.addView(new CustomViewWrapper(getContext(), view));\n-            setCustomViewVisibility(has(mDisplayOptions, ActionBar.DISPLAY_SHOW_CUSTOM));\n-        }\n-    }\n-\n-    private boolean hasCustomView() {\n-        return getCustomViewWrapper() != null;\n-    }\n-\n-    private boolean hasVisibleCustomView() {\n-        return hasCustomView() && getCustomViewWrapper().getVisibility() == VISIBLE;\n-    }\n-\n-    public View getCustomView() {\n-        CustomViewWrapper wrapper = getCustomViewWrapper();\n-        return wrapper != null ? wrapper.getView() : null;\n-    }\n-\n-    private CustomViewWrapper getCustomViewWrapper() {\n-        ViewGroup main = getMainSection();\n-        // The custom view comes after the tabs and the spinner.\n-        if (main.getChildCount() == 3) {\n-            return (CustomViewWrapper) main.getChildAt(2);\n-        }\n-        return null;\n-    }\n-\n-    private void setCustomViewVisibility(boolean visible) {\n-        View current = getCustomViewWrapper();\n-        if (current != null) {\n-            current.setVisibility(visible ? VISIBLE : GONE);\n-        }\n-    }\n-\n-    @Override\n-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n-        if (hasVisibleCustomView()) {\n-            getCustomViewWrapper().onPostMeasure(this);\n-        }\n-    }\n-\n-    @Override\n-    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n-        super.onLayout(changed, l, t, r, b);\n-        if (hasVisibleCustomView()) {\n-            getCustomViewWrapper().onPostLayout(this);\n-        }\n-    }\n-\n-    /**\n-     * Wrapper around custom views to allow them to use the layout parameters defined in the\n-     * ActionBar class and still be displayed within this view group.\n-     */\n-    private static final class CustomViewWrapper extends ViewGroup {\n-\n-        private final View mView;\n-\n-        CustomViewWrapper(Context context, View view) {\n-            super(context);\n-            setLayoutParams(new LinearLayout.LayoutParams(\n-                    ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\n-            mView = view;\n-            if (!(view.getLayoutParams() instanceof ActionBar.LayoutParams)) {\n-                view.setLayoutParams(generateDefaultLayoutParams());\n-            }\n-            addView(view);\n-        }\n-\n-        View getView() {\n-            return mView;\n-        }\n-\n-        void detach() {\n-            removeView(mView);\n-        }\n-\n-        /**\n-         * Locates the top bound of the space available for custom views, expressed in the\n-         * coordinate system of {@code parent}.\n-         */\n-        private int findTopOfAvailableSpace(LeftNavView parent) {\n-            //int top = parent.mPaddingTop;\n-        \tint top = parent.getPaddingTop();\n-            if (parent.mHome.isVisible()) {\n-                top += parent.mHome.getView().getMeasuredHeight();\n-            }\n-            switch (parent.mNavigationMode) {\n-                case ActionBar.NAVIGATION_MODE_TABS:\n-                    top += parent.mTabs.getView().getMeasuredHeight();\n-                    break;\n-\n-                case ActionBar.NAVIGATION_MODE_LIST:\n-                    top += parent.mSpinner.getView().getMeasuredHeight();\n-                    break;\n-\n-                default:\n-                    break;\n-            }\n-            return top;\n-        }\n-\n-        /**\n-         * Locates the bottom bound of the space available for custom views, expressed in the\n-         * coordinate system of {@code parent}.\n-         */\n-        private int findBottomOfAvailableSpace(LeftNavView parent) {\n-            //int bottom = parent.getMeasuredHeight() - parent.mPaddingBottom;\n-        \tint bottom = parent.getMeasuredHeight() - parent.getPaddingBottom();\n-            if (parent.mOptions.isVisible()) {\n-                bottom -= parent.mOptions.getView().getMeasuredHeight();\n-            }\n-            return bottom;\n-        }\n-\n-        private void checkDimensionsConsistency(int value, int expected) {\n-            if (value != expected) {\n-                throw new IllegalStateException(\"Inconsistent dimensions!\");\n-            }\n-        }\n-\n-        /**\n-         * Should be called after the rest of the left nav has been measured, so that custom views\n-         * can be sized according to the space left and the desired gravity.\n-         */\n-        void onPostMeasure(LeftNavView parent) {\n-            // Dimensions of the entire parent.\n-            int totalWidth = parent.getMeasuredWidth();\n-            int totalHeight = parent.getMeasuredHeight();\n-            // Coordinates of the top and bottom of the available space.\n-            int topOfAvailableSpace = findTopOfAvailableSpace(parent);\n-            int bottomOfAvailableSpace = findBottomOfAvailableSpace(parent);\n-            // Dimensions of the available space.\n-            int availableWidth = totalWidth - parent.getPaddingLeft() - parent.getPaddingRight();\n-            int availableHeight = bottomOfAvailableSpace - topOfAvailableSpace;\n-            // Space available in each half of the parent.\n-            // This is used when attempting to vertically center a custom view which has its height\n-            // as \"match parent\": in this case its size will be limited by the smallest of the two\n-            // spaces.\n-            int availableInTopHalf = totalHeight / 2 - topOfAvailableSpace;\n-            int availableInBottomHalf = bottomOfAvailableSpace - totalHeight / 2;\n-\n-            // Sanity checks.\n-            if (getMeasuredWidth() != 0) {\n-                checkDimensionsConsistency(availableWidth, getMeasuredWidth());\n-            }\n-            if (getMeasuredHeight() != 0) {\n-                checkDimensionsConsistency(availableHeight, getMeasuredHeight());\n-            }\n-\n-            ActionBar.LayoutParams params = (ActionBar.LayoutParams) mView.getLayoutParams();\n-            int horizontalMargin = params.leftMargin + params.rightMargin;\n-            int verticalMargin = params.topMargin + params.bottomMargin;\n-\n-            int widthMode = params.width != LayoutParams.WRAP_CONTENT ?\n-                    MeasureSpec.EXACTLY : MeasureSpec.AT_MOST;\n-            int widthValue = params.width >= 0 ?\n-                    Math.min(params.width, availableWidth) : availableWidth;\n-            widthValue = Math.max(0, widthValue - horizontalMargin);\n-\n-            int heightMode = params.height != LayoutParams.WRAP_CONTENT ?\n-                    MeasureSpec.EXACTLY : MeasureSpec.AT_MOST;\n-            int heightValue = params.height >= 0 ?\n-                    Math.min(params.height, availableHeight) : availableHeight;\n-            heightValue = Math.max(0, heightValue - verticalMargin);\n-\n-            int vGravity = params.gravity & Gravity.VERTICAL_GRAVITY_MASK;\n-            if (vGravity == Gravity.CENTER_VERTICAL &&\n-                    params.height == ViewGroup.LayoutParams.MATCH_PARENT &&\n-                    availableInTopHalf > 0 &&\n-                    availableInBottomHalf > 0) {\n-                // Attempt to center if there's enough space to center.\n-                heightValue = Math.min(availableInTopHalf, availableInBottomHalf) * 2;\n-            }\n-\n-            mView.measure(\n-                    MeasureSpec.makeMeasureSpec(widthValue, widthMode),\n-                    MeasureSpec.makeMeasureSpec(heightValue, heightMode));\n-        }\n-\n-        @Override\n-        protected void onLayout(boolean changed, int l, int t, int r, int b) {\n-            // Nothing to do here, all the work is done in onPostLayout.\n-        }\n-\n-        /**\n-         * Should be called as the last layout step to properly position the custom view.\n-         */\n-        void onPostLayout(LeftNavView parent) {\n-            int width = mView.getMeasuredWidth();\n-            int height = mView.getMeasuredHeight();\n-            ActionBar.LayoutParams params = (ActionBar.LayoutParams) mView.getLayoutParams();\n-\n-            // Expressed within the coordinate system of the present view.\n-            int xPosition = 0;\n-            // Horizontal alignment is always performed within the available space.\n-           // int containerWidth = mRight - mLeft;\n-            int containerWidth = getRight() - getLeft();\n-            switch (params.gravity & Gravity.HORIZONTAL_GRAVITY_MASK) {\n-                case Gravity.CENTER_HORIZONTAL:\n-                    xPosition = (containerWidth - width) / 2;\n-                    break;\n-                case Gravity.LEFT:\n-                    xPosition = params.leftMargin;\n-                    break;\n-                case Gravity.RIGHT:\n-                    xPosition = containerWidth - width - params.rightMargin;\n-                    break;\n-            }\n-\n-            int vGravity = params.gravity & Gravity.VERTICAL_GRAVITY_MASK;\n-            // For \"center vertical\" the view gets centered within the parent, not within the\n-            // available space.\n-           /* int superContainerHeight =\n-                    parent.mBottom - parent.mTop - parent.mPaddingTop - parent.mPaddingBottom;*/\n-            int superContainerHeight =\n-                parent.getBottom() - parent.getTop() - parent.getPaddingTop() - parent.getPaddingBottom();\n-            int superCenteredTop = (superContainerHeight - height) / 2 + parent.getPaddingTop();\n-            // The coordinates of the wrapper in parent's coordinate system.\n-            int top = findTopOfAvailableSpace(parent);\n-            int bottom = findBottomOfAvailableSpace(parent);\n-\n-            // Sanity checks.\n-            if (getBottom() - getTop() != 0) {\n-                checkDimensionsConsistency(bottom - top, getBottom() - getTop());\n-            }\n-\n-            // See if we actually have room to truly center; if not push against top or bottom.\n-            if (vGravity == Gravity.CENTER_VERTICAL) {\n-                if (superCenteredTop < top) {\n-                    vGravity = Gravity.TOP;\n-                } else if (superCenteredTop + height > bottom) {\n-                    vGravity = Gravity.BOTTOM;\n-                }\n-            }\n-\n-            // Expressed within the coordinate system of the present view.\n-            int yPosition = 0;\n-            int containerHeight = bottom - top;\n-            switch (vGravity) {\n-                case Gravity.CENTER_VERTICAL:\n-                    yPosition = superCenteredTop - top;\n-                    break;\n-                case Gravity.TOP:\n-                    yPosition = params.topMargin;\n-                    break;\n-                case Gravity.BOTTOM:\n-                    yPosition = containerHeight - height - params.bottomMargin;\n-                    break;\n-            }\n-\n-            mView.layout(xPosition, yPosition, xPosition + width, yPosition + height);\n-        }\n-\n-        @Override\n-        protected ViewGroup.LayoutParams generateDefaultLayoutParams() {\n-            return new ActionBar.LayoutParams(\n-                    ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n-        }\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/OptionsDisplay.java",
            "additions": 0,
            "deletions": 129
        },
        "diff content": "@@ -1,129 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.app.Activity;\n-import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.ImageView;\n-import android.widget.TextView;\n-\n-/**\n- * Manages the visual cues related to the options menu.\n- */\n-class OptionsDisplay {\n-\n-    private final Context mContext;\n-    private ViewGroup mView;\n-    private boolean mExpanded;\n-\n-    OptionsDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n-        mContext = context;\n-        createView(parent, attributes);\n-    }\n-\n-    View getView() {\n-        return mView;\n-    }\n-\n-    OptionsDisplay setVisible(boolean visible) {\n-        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n-        return this;\n-    }\n-\n-    boolean isVisible() {\n-        return mView.getVisibility() == View.VISIBLE;\n-    }\n-\n-    OptionsDisplay setExpanded(boolean expanded) {\n-        mExpanded = expanded;\n-        refreshExpandedState();\n-        return this;\n-    }\n-\n-    private void refreshExpandedState() {\n-        // Menu icon.\n-        setOptionExpanded(mView.getChildAt(1), mExpanded);\n-        // \"Show always\" options.\n-        ViewGroup optionsContainer = getOptionsContainer();\n-        for (int i = 0; i < optionsContainer.getChildCount(); ++i) {\n-            setOptionExpanded(optionsContainer.getChildAt(i), mExpanded);\n-        }\n-    }\n-\n-    private void createView(ViewGroup parent, TypedArray attributes) {\n-        mView = (ViewGroup) LayoutInflater.from(mContext).inflate(\n-                R.layout.leftnav_bar_options, parent, false);\n-        View menuOption = mView.findViewById(R.id.menu);\n-\n-        configureOption(menuOption,\n-                mContext.getResources().getString(R.string.lib_leftnav_bar_option_label),\n-                true);\n-        menuOption.setClickable(true);\n-        menuOption.setFocusable(true);\n-        menuOption.setOnClickListener(new View.OnClickListener() {\n-           public void onClick(View view) {\n-                if (mContext instanceof Activity) {\n-                    ((Activity) mContext).openOptionsMenu();\n-                }\n-            }\n-        });\n-        setDuplicateParentState(getOptionIcon(menuOption));\n-        setDuplicateParentState(getOptionTitle(menuOption));\n-    }\n-\n-    /**\n-     * Forces a view to duplicate its parent state, working around a bug whereby the attribute only\n-     * works if set before the view is added to its parent.\n-     */\n-    private void setDuplicateParentState(View view) {\n-        view.setDuplicateParentStateEnabled(true);\n-        ViewGroup parent = (ViewGroup) view.getParent();\n-        if (parent == null) {\n-            return;\n-        }\n-        int index = parent.indexOfChild(view);\n-        parent.removeViewAt(index);\n-        parent.addView(view, index);\n-    }\n-\n-    private View configureOption(View option, CharSequence title, boolean active) {\n-        ImageView iconView = getOptionIcon(option);\n-        iconView.setEnabled(active);\n-        getOptionTitle(option).setText(title);\n-        return option;\n-    }\n-\n-    private static void setOptionExpanded(View option, boolean expanded) {\n-        getOptionTitle(option).setVisibility(expanded ? View.VISIBLE : View.GONE);\n-    }\n-\n-    private static ImageView getOptionIcon(View option) {\n-        return (ImageView) option.findViewById(R.id.icon);\n-    }\n-\n-    private static TextView getOptionTitle(View option) {\n-        return (TextView) option.findViewById(R.id.title);\n-    }\n-\n-    private ViewGroup getOptionsContainer() {\n-        return (ViewGroup) mView.findViewById(R.id.shown_options);\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/SpinnerDisplay.java",
            "additions": 0,
            "deletions": 99
        },
        "diff content": "@@ -1,99 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.app.ActionBar.OnNavigationListener;\n-import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.AdapterView;\n-import android.widget.Spinner;\n-import android.widget.SpinnerAdapter;\n-\n-/**\n- * A display for the \"navigation list\" feature.\n- */\n-class SpinnerDisplay {\n-\n-    private final Context mContext;\n-    private Spinner mView;\n-    private OnNavigationListener mListener;\n-    private boolean mExpanded;\n-\n-    SpinnerDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n-        mContext = context;\n-        createView(parent, attributes);\n-    }\n-\n-    View getView() {\n-        return mView;\n-    }\n-\n-    SpinnerDisplay setVisible(boolean visible) {\n-        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n-        return this;\n-    }\n-\n-    SpinnerDisplay setExpanded(boolean expanded) {\n-        mExpanded = expanded;\n-        refreshSelectedItem();\n-        return this;\n-    }\n-\n-    void setContent(SpinnerAdapter adapter, OnNavigationListener listener) {\n-        mListener = listener;\n-        mView.setAdapter(adapter);\n-        refreshSelectedItem();\n-    }\n-\n-    void setSelected(int position) {\n-        mView.setSelection(position);\n-    }\n-\n-    int getSelected() {\n-        return mView.getSelectedItemPosition();\n-    }\n-\n-    int getCount() {\n-        return mView.getCount();\n-    }\n-\n-    private void refreshSelectedItem() {\n-        View selected = mView.getSelectedView();\n-        if (selected == null) {\n-            return;\n-        }\n-        selected.setActivated(mExpanded);\n-    }\n-\n-    private void createView(ViewGroup parent, TypedArray attributes) {\n-        mView = (Spinner) LayoutInflater.from(mContext).inflate(\n-                R.layout.leftnav_bar_spinner, parent, false);\n-        mView.setOnItemSelectedListener(new Spinner.OnItemSelectedListener() {\n-            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n-                if (mListener != null) {\n-                    mListener.onNavigationItemSelected(position, id);\n-                }\n-                refreshSelectedItem();\n-            }\n-\n-            public void onNothingSelected(AdapterView<?> parent) {}\n-        });\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TabDisplay.java",
            "additions": 0,
            "deletions": 319
        },
        "diff content": "@@ -1,319 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.app.ActionBar.Tab;\n-import android.app.Activity;\n-import android.app.FragmentTransaction;\n-import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.ArrayAdapter;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-/**\n- * Handles the tab navigation mode.\n- */\n-class TabDisplay {\n-\n-    /**\n-     * Should be used to append a tab at the end of the list.\n-     *\n-     * @see #add(TabImpl, int, boolean)\n-     */\n-    public static final int LAST_POSITION = -2;\n-\n-    private static final TabImpl NONE = null;\n-\n-    private final Context mContext;\n-    private final TabAdapter mAdapter;\n-\n-    private TabListView mList;\n-    private boolean mExpanded;\n-\n-    TabDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n-        mContext = context;\n-        mAdapter = new TabAdapter(context);\n-        createView(parent);\n-    }\n-\n-    private void createView(ViewGroup parent) {\n-        int resource = R.layout.leftnav_bar_tabs;\n-        mList = (TabListView) LayoutInflater.from(mContext).inflate(resource, parent, false);\n-        mList.setAdapter(mAdapter);\n-        mList.setItemsCanFocus(true);\n-        mList.setDescendantFocusability(ViewGroup.FOCUS_BEFORE_DESCENDANTS);\n-    }\n-\n-    View getView() {\n-        return mList;\n-    }\n-\n-    TabDisplay setVisible(boolean visible) {\n-        mList.setVisibility(visible ? View.VISIBLE : View.GONE);\n-        mAdapter.setSelectionActive(visible);\n-        return this;\n-    }\n-\n-    TabDisplay setExpanded(boolean expanded) {\n-        mExpanded = expanded;\n-        mAdapter.refresh();\n-        return this;\n-    }\n-\n-    /**\n-     * @see #LAST_POSITION\n-     */\n-    void add(TabImpl tab, int position, boolean setSelected) {\n-        if (position == LAST_POSITION) {\n-            position = mAdapter.getCount();\n-        }\n-        mAdapter.insert(tab, position);\n-        if (setSelected) {\n-            select(tab);\n-        }\n-    }\n-\n-    TabImpl get(int position) {\n-        return mAdapter.getItem(position);\n-    }\n-\n-    void select(TabImpl tab) {\n-        mAdapter.setSelected(tab);\n-    }\n-\n-    TabImpl getSelected() {\n-        return mAdapter.getSelected();\n-    }\n-\n-    private void onSelectionChanged(TabImpl oldSelection, TabImpl newSelection) {\n-        FragmentTransaction transaction = null;\n-        if (mContext instanceof Activity) {\n-            transaction = ((Activity) mContext).getFragmentManager()\n-                    .beginTransaction()\n-                    .disallowAddToBackStack();\n-        }\n-        if (oldSelection == newSelection) {\n-            if (newSelection != NONE && newSelection.getCallback() != null) {\n-                newSelection.getCallback().onTabReselected(newSelection, transaction);\n-            }\n-        } else {\n-            if (oldSelection != NONE && oldSelection.getCallback() != null) {\n-                oldSelection.getCallback().onTabUnselected(oldSelection, transaction);\n-            }\n-            if (newSelection != NONE && newSelection.getCallback() != null) {\n-                newSelection.getCallback().onTabSelected(newSelection, transaction);\n-            }\n-        }\n-        if (transaction != null && !transaction.isEmpty()) {\n-            transaction.commit();\n-        }\n-\n-        mList.setHighlighted(mAdapter.getPosition(newSelection));\n-    }\n-\n-    int getCount() {\n-        return mAdapter.getCount();\n-    }\n-\n-    void removeAll() {\n-        mAdapter.clear();\n-    }\n-\n-    void remove(TabImpl tab) {\n-        mAdapter.remove(tab);\n-    }\n-\n-    void remove(int position) {\n-        remove(mAdapter.getItem(position));\n-    }\n-\n-    /**\n-     * Removes the given view from its parent if it has one.\n-     */\n-    private static void detachFromParent(View view) {\n-        if (view == null) {\n-            return;\n-        }\n-        ViewGroup parent = (ViewGroup) view.getParent();\n-        if (parent != null) {\n-            parent.removeView(view);\n-        }\n-    }\n-\n-    /**\n-     * Creates views for tabs, and handles the selection state.\n-     */\n-    private final class TabAdapter extends ArrayAdapter<TabImpl> {\n-\n-        /**\n-         * Holds the views created thus far.\n-         */\n-        private final Map<TabImpl, TabFrame> mCachedViews;\n-\n-        /**\n-         * The currently selected tab, or {@code TabDisplay#NONE} if none is selected.\n-         */\n-        private TabImpl mSelection;\n-\n-        /**\n-         * {@code true} if selection changes should trigger a callback and any visual change;\n-         * otherwise the selection is just remembered.\n-         */\n-        private boolean mIsSelectionActive;\n-\n-        /**\n-         * When selection is not active, this simply remembers which tab was selected.\n-         */\n-        private TabImpl mSavedSelection;\n-\n-        TabAdapter(Context context) {\n-            super(context, 0);\n-            mCachedViews = new HashMap<TabImpl, TabFrame>();\n-            mSelection = NONE;\n-            mSavedSelection = NONE;\n-            mIsSelectionActive = true;\n-        }\n-\n-        public void setSelectionActive(boolean active) {\n-            if (active == mIsSelectionActive) {\n-                return;\n-            }\n-            if (active) {\n-                // Restore the saved selection.\n-                mIsSelectionActive = true;\n-                setSelected(mSavedSelection);\n-                mSavedSelection = NONE;\n-            } else {\n-                // Save the selection and deselect the actual tab.\n-                mSavedSelection = mSelection;\n-                setSelected(NONE);\n-                mIsSelectionActive = false;\n-            }\n-        }\n-\n-        public void setSelected(TabImpl tab) {\n-            if (!mIsSelectionActive) {\n-                // In this case, simply storing the selected tab.\n-                mSavedSelection = tab;\n-                return;\n-            }\n-            TabImpl oldSelection = mSelection;\n-            mSelection = tab;\n-            if (oldSelection != mSelection) {\n-                setSelectionState(oldSelection, false);\n-                setSelectionState(mSelection, true);\n-            }\n-            onSelectionChanged(oldSelection, mSelection);\n-        }\n-\n-        public TabImpl getSelected() {\n-            return mIsSelectionActive ? mSelection : mSavedSelection;\n-        }\n-\n-        private boolean isSelected(TabImpl tab) {\n-            return tab != NONE && tab == getSelected();\n-        }\n-\n-        private void setSelectionState(TabImpl tab, boolean selected) {\n-            if (tab != NONE && mCachedViews.containsKey(tab)) {\n-                mCachedViews.get(tab).select(selected);\n-            }\n-        }\n-\n-        public void refresh() {\n-            for (TabFrame frame : mCachedViews.values()) {\n-                frame.expand(mExpanded);\n-            }\n-        }\n-\n-        @Override\n-        public int getItemViewType(int position) {\n-            // This ensures views are not recycled.\n-            return IGNORE_ITEM_VIEW_TYPE;\n-        }\n-\n-        @Override\n-        public void insert(TabImpl tab, int position) {\n-            super.insert(tab, position);\n-            updatePositions(false /* normal order */);\n-        }\n-\n-        @Override\n-        public void remove(TabImpl tab) {\n-            // Need to make sure custom views are properly removed from their parent.\n-            detachFromParent(tab.getCustomView());\n-            mCachedViews.remove(tab);\n-            super.remove(tab);\n-            updatePositions(false /* normal order */);\n-            if (isSelected(tab)) {\n-                setSelected(getCount() == 0 ? NONE : getItem(Math.max(0, tab.getPosition() - 1)));\n-            }\n-            tab.setPosition(Tab.INVALID_POSITION);\n-        }\n-\n-        @Override\n-        public void clear() {\n-            updatePositions(true /* all invalid */);\n-            for (int i = 0; i < getCount(); ++i) {\n-                detachFromParent(getItem(i).getCustomView());\n-            }\n-            mCachedViews.clear();\n-            setSelected(NONE);\n-            super.clear();\n-        }\n-\n-        @Override\n-        public View getView(int position, View convertView, ViewGroup parent) {\n-            final TabImpl tab = getItem(position);\n-            if (!mCachedViews.containsKey(tab)) {\n-                TabFrame frame = (TabFrame) LayoutInflater.from(getContext()).inflate(\n-                        R.layout.leftnav_bar_tab, parent, false);\n-                if (tab.hasCustomView()) {\n-                    frame.configureCustom(tab.getCustomView());\n-                } else {\n-                    frame.configureNormal(tab.getIcon(), tab.getText());\n-                }\n-                frame.setOnClickListener(new View.OnClickListener() {\n-                    public void onClick(View v) {\n-                        setSelected(tab);\n-                    }\n-                });\n-                mCachedViews.put(tab, frame);\n-            }\n-            setSelectionState(tab, isSelected(tab));\n-            TabFrame result = mCachedViews.get(tab);\n-            result.expand(mExpanded);\n-            return result;\n-        }\n-\n-        /**\n-         * Updates the tab objects so that they correctly report their position in the list.\n-         *\n-         * @param   allInvalid      {@code true} to set the position as \"invalid\" on all tabs\n-         */\n-        private void updatePositions(boolean allInvalid) {\n-            for (int i = 0; i < getCount(); ++i) {\n-                getItem(i).setPosition(allInvalid ? Tab.INVALID_POSITION : i);\n-            }\n-        }\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TabFrame.java",
            "additions": 0,
            "deletions": 105
        },
        "diff content": "@@ -1,105 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.content.Context;\n-import android.graphics.drawable.Drawable;\n-import android.util.AttributeSet;\n-import android.view.View;\n-import android.widget.ImageView;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-\n-/**\n- * Container for tabs, responsible for handling events and setting the correct state.\n- */\n-class TabFrame extends LinearLayout {\n-\n-    private boolean mConfigured;\n-    private boolean mIsCustom;\n-\n-    public TabFrame(Context context, AttributeSet attributes) {\n-        super(context, attributes);\n-    }\n-\n-    @Override\n-    public void setSelected(boolean selected) {\n-        // No-op: the selected state is used to show that the tab is selected in the logical sense,\n-        // whereas ListView would attempt to use that state to show the tab as \"highlighted\" - we\n-        // use focus for that.\n-    }\n-\n-    /**\n-     * Sets the selected state of this view.\n-     */\n-    public void select(boolean selected) {\n-        super.setSelected(selected);\n-    }\n-\n-    /**\n-     * Expands the content of this tab.\n-     * <p>\n-     * For regular tabs, this will simply reveal the tab's title and mark the icon as activated.\n-     * For custom tabs, this will set their \"activated\" state.\n-     *\n-     * @see View#setActivated(boolean)\n-     */\n-    public void expand(boolean expanded) {\n-        if (!mIsCustom) {\n-            getTitle().setVisibility(expanded ? View.VISIBLE : View.GONE);\n-        }\n-        setActivated(expanded);\n-    }\n-\n-    private ImageView getIcon() {\n-        return (ImageView) findViewById(R.id.icon);\n-    }\n-\n-    private TextView getTitle() {\n-        return (TextView) findViewById(R.id.title);\n-    }\n-\n-    public void configureNormal(Drawable icon, CharSequence text) {\n-        markConfigured(false);\n-        getIcon().setImageDrawable(icon);\n-        getTitle().setText(text);\n-    }\n-\n-    public void configureCustom(View content) {\n-        markConfigured(true);\n-\n-        // The focused state should be rendered by the content.\n-        setBackgroundDrawable(null);\n-\n-        // Prevent the content from receiving events, but let it reflect the correct state.\n-        content.setFocusable(false);\n-        content.setFocusableInTouchMode(false);\n-        content.setClickable(false);\n-        content.setDuplicateParentStateEnabled(true);\n-\n-        removeAllViews();\n-        addView(content);\n-    }\n-\n-    private void markConfigured(boolean isCustom) {\n-        if (mConfigured) {\n-            throw new IllegalStateException(\"Frame already configured.\");\n-        }\n-        mConfigured = true;\n-        mIsCustom = isCustom;\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TabImpl.java",
            "additions": 0,
            "deletions": 137
        },
        "diff content": "@@ -1,137 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.app.ActionBar;\n-import android.app.ActionBar.Tab;\n-import android.content.Context;\n-import android.graphics.drawable.Drawable;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-\n-/**\n- * Basic implementation of the ActionBar.Tab type.\n- * <p>\n- * {@code select()} is left unimplemented so that the entity managing tabs can define the proper\n- * selection flow.\n- */\n-abstract class TabImpl extends Tab {\n-\n-    private final Context mContext;\n-\n-    private ActionBar.TabListener mCallback;\n-    private Object mTag;\n-    private Drawable mIcon;\n-    private CharSequence mText;\n-    private int mPosition;\n-    private View mCustomView;\n-\n-    public TabImpl(Context context) {\n-        mContext = context;\n-    }\n-\n-    @Override\n-    public Object getTag() {\n-        return mTag;\n-    }\n-\n-    @Override\n-    public Tab setTag(Object tag) {\n-        mTag = tag;\n-        return this;\n-    }\n-\n-    @Override\n-    public Tab setTabListener(ActionBar.TabListener callback) {\n-        mCallback = callback;\n-        return this;\n-    }\n-\n-    @Override\n-    public View getCustomView() {\n-        return mCustomView;\n-    }\n-\n-    @Override\n-    public Tab setCustomView(View view) {\n-        mCustomView = view;\n-        return this;\n-    }\n-\n-    @Override\n-    public Tab setCustomView(int layoutResId) {\n-        return setCustomView(LayoutInflater.from(mContext).inflate(layoutResId, null));\n-    }\n-\n-    @Override\n-    public Drawable getIcon() {\n-        return mIcon;\n-    }\n-\n-    @Override\n-    public int getPosition() {\n-        return mPosition;\n-    }\n-\n-    public void setPosition(int position) {\n-        mPosition = position;\n-    }\n-\n-    @Override\n-    public CharSequence getText() {\n-        return mText;\n-    }\n-\n-    @Override\n-    public Tab setIcon(Drawable icon) {\n-        mIcon = icon;\n-        return this;\n-    }\n-\n-    @Override\n-    public Tab setIcon(int resId) {\n-        return setIcon(mContext.getResources().getDrawable(resId));\n-    }\n-\n-    @Override\n-    public Tab setText(CharSequence text) {\n-        mText = text;\n-        return this;\n-    }\n-\n-    @Override\n-    public Tab setText(int resId) {\n-        return setText(mContext.getResources().getText(resId));\n-    }\n-\n-    //----------------------------------------------------------------------------------------------\n-    // Non-API.\n-\n-    public ActionBar.TabListener getCallback() {\n-        return mCallback;\n-    }\n-\n-    boolean hasCustomView() {\n-        return mCustomView != null;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        Object source = mTag != null ? mTag : mText;\n-        return \"Tab:\" + (source != null ? source.toString() : \"<no id>\");\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TabListView.java",
            "additions": 0,
            "deletions": 112
        },
        "diff content": "@@ -1,112 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.content.Context;\n-import android.graphics.Canvas;\n-import android.graphics.Rect;\n-import android.graphics.drawable.Drawable;\n-import android.util.AttributeSet;\n-import android.view.View;\n-import android.widget.ListView;\n-\n-import java.util.ArrayList;\n-\n-/**\n- * Extension of ListView which better handles focus.\n- */\n-public class TabListView extends ListView {\n-\n-    private int mHighlighted;\n-    private boolean mClearingFocus;\n-\n-    public TabListView(Context context, AttributeSet attrs) {\n-        super(context, attrs);\n-    }\n-\n-    /**\n-     * Sets the highlighted item which will receive focus whenever this list gains focus.\n-     */\n-    public void setHighlighted(int index) {\n-        mHighlighted = index;\n-    }\n-\n-    @Override\n-    public void addFocusables(ArrayList<View> views, int direction, int focusableMode) {\n-        int selectedIndex = mHighlighted - getFirstVisiblePosition();\n-        if (!hasFocus() &&\n-                selectedIndex >= 0 && selectedIndex < getChildCount() &&\n-                direction == FOCUS_LEFT) {\n-            // This will force focus on the highlighted item.\n-            setSelection(mHighlighted);\n-            getChildAt(selectedIndex).addFocusables(views, direction, focusableMode);\n-        } else {\n-            super.addFocusables(views, direction, focusableMode);\n-        }\n-    }\n-\n-    @Override\n-    public void clearFocus() {\n-        mClearingFocus = true;\n-        super.clearFocus();\n-        mClearingFocus = false;\n-    }\n-\n-    /**\n-     * Whenever the geometry of the list changes, focus gets cleared. This is problematic when the\n-     * list gets expanded. Instead of letting the focus go away, it simply gets reset slightly\n-     * later.\n-     */\n-    @Override\n-    public void clearChildFocus(View child) {\n-        if (mClearingFocus) {\n-            super.clearChildFocus(child);\n-        } else {\n-            post(new Runnable() {\n-                public void run() {\n-                    setSelection(mHighlighted);\n-                }\n-            });\n-        }\n-    }\n-\n-    /**\n-     * Draws an extra divider at the top and bottom of the list.\n-     */\n-    @Override\n-    protected void dispatchDraw(Canvas canvas) {\n-        super.dispatchDraw(canvas);\n-        Drawable divider = getDivider();\n-        if (divider == null) {\n-            return;\n-        }\n-        \n-        Rect bounds = new Rect();\n-        bounds.left = getPaddingLeft();\n-        bounds.right = getRight() - getLeft() - getPaddingRight();\n-        // Top.\n-        bounds.top = getPaddingTop();\n-        bounds.bottom = getPaddingTop() + getDividerHeight();\n-        divider.setBounds(bounds);\n-        divider.draw(canvas);\n-        // Bottom.\n-        bounds.top = getBottom() - getTop() - getPaddingBottom() - getDividerHeight();\n-        bounds.bottom = getBottom() - getTop() - getPaddingBottom();\n-        divider.setBounds(bounds);\n-        divider.draw(canvas);\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TitleBarView.java",
            "additions": 0,
            "deletions": 266
        },
        "diff content": "@@ -1,266 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.drawable.Drawable;\n-import android.text.TextUtils;\n-import android.util.AttributeSet;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.view.ViewParent;\n-import android.view.Window;\n-import android.widget.ImageView;\n-import android.widget.ProgressBar;\n-import android.widget.RelativeLayout;\n-import android.widget.TextView;\n-\n-/**\n- * Holds the various widgets of the title bar.\n- */\n-public class TitleBarView extends RelativeLayout {\n-\n-    private final VisibilityController mVisibilityController;\n-\n-    private boolean mIsLegacy;\n-    private boolean mAnimationsEnabled;\n-\n-    private TextView mTitle;\n-    private TextView mSubtitle;\n-    private ImageView mLeftIcon;\n-    private ImageView mRightIcon;\n-    private ProgressBar mCircularProgress;\n-    private ProgressBar mHorizontalProgress;\n-\n-    private int mTitleResource;\n-    private int mSubtitleResource;\n-    Context mContext;\n-\n-    public TitleBarView(Context context, AttributeSet attrs) {\n-        super(context, attrs, 0);\n-        mContext=context;\n-        mVisibilityController = new VisibilityController(this);\n-        TypedArray a = context.obtainStyledAttributes(attrs, new int[] {\n-        \t\tandroid.R.attr.windowTitleStyle,\n-                android.R.attr.defaultValue });\n-        mIsLegacy = a.getBoolean(a.getIndex(1 /* defaultValue */), false);\n-        if (mIsLegacy) {\n-            mTitleResource = a.getResourceId(a.getIndex(0 /* windowTitleStyle */), 0);\n-        } else {\n-            a.recycle();\n-            a = context.obtainStyledAttributes(null,\n-                    new int[] { android.R.attr.titleTextStyle,\n-                            android.R.attr.subtitleTextStyle },\n-                    android.R.attr.actionBarStyle,\n-                    0);\n-            mTitleResource = a.getResourceId(a.getIndex(0 /* titleTextStyle */), 0);\n-            mSubtitleResource = a.getResourceId(a.getIndex(1 /* subtitleTextStyle */), 0);\n-        }\n-        a.recycle();\n-    }\n-\n-    @Override\n-    protected void onFinishInflate() {\n-        super.onFinishInflate();\n-        if (getChildCount() == 0) {\n-            // Set up the default content.\n-            LayoutInflater.from(mContext).inflate(R.layout.lib_title_bar, this, true);\n-        }\n-        mTitle = (TextView) findViewById(R.id.title);\n-        mSubtitle = (TextView) findViewById(R.id.subtitle);\n-        mLeftIcon = (ImageView) findViewById(R.id.left_icon);\n-        mRightIcon = (ImageView) findViewById(R.id.right_icon);\n-        mCircularProgress = (ProgressBar) findViewById(R.id.progress_circular);\n-        if (mCircularProgress != null) {\n-            mCircularProgress.setIndeterminate(true);  // Cannot be done in XML...\n-        }\n-        mHorizontalProgress = (ProgressBar) findViewById(R.id.progress_horizontal);\n-        if (mIsLegacy) {\n-            setTextStyle(mTitle, mTitleResource);\n-            disableSubtitle();\n-        } else {\n-            setTextStyle(mTitle, mTitleResource);\n-            setTextStyle(mSubtitle, mSubtitleResource);\n-            disableLeftIcon();\n-            disableRightIcon();\n-        }\n-    }\n-\n-    private void setTextStyle(TextView view, int style) {\n-        if (style != 0) {\n-            view.setTextAppearance(getContext(), style);\n-        }\n-    }\n-\n-    public void setTitle(CharSequence text) {\n-        mTitle.setText(text);\n-    }\n-\n-    public void setTitleColor(int color) {\n-        mTitle.setTextColor(color);\n-    }\n-\n-    public void setLeftIcon(Drawable drawable, int alpha) {\n-        setIcon(mLeftIcon, drawable, alpha);\n-    }\n-\n-    public void setRightIcon(Drawable drawable, int alpha) {\n-        setIcon(mRightIcon, drawable, alpha);\n-    }\n-\n-    private void setIcon(ImageView view, Drawable drawable, int alpha) {\n-        if (view == null) {\n-            return;\n-        }\n-        if (drawable != null) {\n-            drawable.setAlpha(alpha);\n-            view.setImageDrawable(drawable);\n-            view.setVisibility(View.VISIBLE);\n-        } else {\n-            view.setVisibility(View.GONE);\n-        }\n-    }\n-\n-    public void setHorizontalProgress(int value) {\n-        if (mHorizontalProgress == null) {\n-            return;\n-        }\n-        switch (value) {\n-            case Window.PROGRESS_VISIBILITY_ON:\n-                mHorizontalProgress.setVisibility(View.VISIBLE);\n-                break;\n-\n-            case Window.PROGRESS_VISIBILITY_OFF:\n-                mHorizontalProgress.setVisibility(View.GONE);\n-                break;\n-\n-            case Window.PROGRESS_INDETERMINATE_ON:\n-                mHorizontalProgress.setIndeterminate(true);\n-                break;\n-\n-            case Window.PROGRESS_INDETERMINATE_OFF:\n-                mHorizontalProgress.setIndeterminate(false);\n-                break;\n-\n-            default:\n-                if (Window.PROGRESS_START <= value && value <= Window.PROGRESS_END) {\n-                    mHorizontalProgress.setProgress(value - Window.PROGRESS_START);\n-                } else if (Window.PROGRESS_SECONDARY_START <= value &&\n-                        value <= Window.PROGRESS_SECONDARY_END) {\n-                    mHorizontalProgress.setSecondaryProgress(\n-                            value - Window.PROGRESS_SECONDARY_START);\n-                }\n-                break;\n-        }\n-    }\n-\n-    public boolean isHorizontalProgressVisible() {\n-        return mHorizontalProgress != null && mHorizontalProgress.getVisibility() == VISIBLE;\n-    }\n-\n-    public void setCircularProgress(int value) {\n-        if (mCircularProgress == null) {\n-            return;\n-        }\n-        switch (value) {\n-            case Window.PROGRESS_VISIBILITY_ON:\n-                mCircularProgress.setVisibility(View.VISIBLE);\n-                break;\n-\n-            case Window.PROGRESS_VISIBILITY_OFF:\n-                mCircularProgress.setVisibility(View.GONE);\n-                break;\n-\n-            default:\n-                break;\n-        }\n-    }\n-\n-    public void disableLeftIcon() {\n-        removeFromParent(mLeftIcon);\n-        mLeftIcon = null;\n-    }\n-\n-    public void disableRightIcon() {\n-        removeFromParent(mRightIcon);\n-        mRightIcon = null;\n-    }\n-\n-    public void disableHorizontalProgress() {\n-        removeFromParent(mHorizontalProgress);\n-        mHorizontalProgress = null;\n-    }\n-\n-    public void disableCircularProgress() {\n-        removeFromParent(mCircularProgress);\n-        mCircularProgress = null;\n-    }\n-\n-    private void disableSubtitle() {\n-        removeFromParent(mSubtitle);\n-        mSubtitle = null;\n-    }\n-\n-    private static void removeFromParent(View view) {\n-        if (view == null) {\n-            return;\n-        }\n-        ViewParent parent = view.getParent();\n-        if (parent != null) {\n-            ((ViewGroup) parent).removeView(view);\n-        }\n-    }\n-\n-    public CharSequence getTitle() {\n-        return mTitle.getText();\n-    }\n-\n-    public void setSubtitle(CharSequence text) {\n-        mSubtitle.setText(text);\n-        mSubtitle.setVisibility(TextUtils.isEmpty(text) ? GONE : VISIBLE);\n-    }\n-\n-    public CharSequence getSubtitle() {\n-        return mSubtitle.getText();\n-    }\n-\n-    public void setAnimationsEnabled(boolean enabled) {\n-        mAnimationsEnabled = enabled;\n-    }\n-\n-    public void setVisible(boolean visible, boolean animated) {\n-        mVisibilityController.setVisible(visible, animated && mAnimationsEnabled);\n-    }\n-\n-    public boolean isVisible() {\n-        return mVisibilityController.isVisible();\n-    }\n-\n-    public int getApparentHeight() {\n-        return isVisible() ?\n-                getContext().getResources().getDimensionPixelSize(R.dimen.title_bar_apparent_height) :\n-                0;\n-    }\n-\n-    public void setProgressVisible(boolean visible) {\n-        setCircularProgress(visible ?\n-                Window.PROGRESS_VISIBILITY_ON :\n-                Window.PROGRESS_VISIBILITY_OFF);\n-    }\n-}\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/VisibilityController.java",
            "additions": 0,
            "deletions": 79
        },
        "diff content": "@@ -1,79 +0,0 @@\n-/*\n- * Copyright (C) 2011 Google Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.tv.leftnavbar;\n-\n-import android.animation.Animator;\n-import android.animation.AnimatorListenerAdapter;\n-import android.animation.ObjectAnimator;\n-import android.view.View;\n-\n-/**\n- * Manages the visibility of a view, with optional animations.\n- */\n-public class VisibilityController {\n-\n-    private final View mView;\n-    private final int mAnimationDuration;\n-    private boolean mVisible;\n-\n-    VisibilityController(View view) {\n-        mView = view;\n-\t\tmAnimationDuration = 10000; // view.getContext().getResources()\n-\t\t\t\t//.getInteger(android.R.integer.config_shortAnimTime);\n-        mVisible = view.getVisibility() == View.VISIBLE;\n-    }\n-\n-    boolean isVisible() {\n-        return mVisible;\n-    }\n-    boolean setVisible(final boolean visible, boolean animated) {\n-        if (isVisible() == visible) {\n-            return false;\n-        }\n-        mVisible = visible;\n-        if (animated) {\n-            float toAlpha = visible ? 1.0f : 0.0f;\n-            ObjectAnimator mAnimator = ObjectAnimator.ofFloat(mView, \"Alpha\", 1-toAlpha, toAlpha);\n-            mAnimator.setDuration(mAnimationDuration).\n-                addListener(new AnimatorListenerAdapter() {\n-\n-                @Override\n-                public void onAnimationStart(Animator animator) {\n-                    if (visible) {\n-                        setViewVisible(true);\n-                    }\n-                }\n-\n-                @Override\n-                public void onAnimationEnd(Animator animator) {\n-                    if (!visible) {\n-                        setViewVisible(false);\n-                    }\n-                }\n-            });\n-            mAnimator.start();\n-        } else {\n-            setViewVisible(visible);\n-        }\n-        return true;\n-    }\n-\n-    private void setViewVisible(boolean visible) {\n-        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n-    }\n-}\n-\n"
    },
    {
        "commit hash": "7640a2f66f0f13ddd9b6a39dc1f6ee7a5dd65865",
        "previous commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml",
            "additions": 0,
            "deletions": 75
        },
        "diff content": "@@ -1,75 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-  <modelVersion>4.0.0</modelVersion>\n-  <parent>\n-    <groupId>com.novoda</groupId>\n-    <artifactId>android</artifactId>\n-    <version>2.0.2</version>\n-  </parent>\n-\n-  <groupId>com.google.tv.leftnavbar</groupId>\n-  <artifactId>leftnavbar-lib-parent</artifactId>\n-  <version>1.2-SNAPSHOT</version>\n-  <packaging>pom</packaging>\n-  <name>leftnavbar-lib-parent</name>\n-\n-  <properties>\n-    <android.sdk.platform>13</android.sdk.platform>\n-  </properties>\n-\n-  <repositories>\n-    <repository>\n-      <id>public-mvn-repo-releases</id>\n-      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n-    </repository>\n- \n-  </repositories>\n-  <pluginRepositories>\n-    <pluginRepository>\n-      <id>public-mvn-repo.plugin-releases</id>\n-      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n-      <snapshots>\n-        <enabled>false</enabled>\n-      </snapshots>\n-    </pluginRepository>\n-  </pluginRepositories>\n-\n-  <scm>\n-    <url>http://github.com/novoda/Commons/tree/${scm.branch}</url>\n-    <connection>scm:git:git://github.com/novoda/android.git</connection>\n-    <developerConnection>scm:git:ssh://git@github.com/novoda/android.git</developerConnection>\n-  </scm>\n-\n-\n-  <distributionManagement>\n-    <repository>\n-      <id>local-public-mvn-repo</id>\n-      <name>local clone of https://github.com/novoda/public-mvn-repo</name>\n-      <url>${local.public.mvn.repo}</url>\n-    </repository>\n-  </distributionManagement>\n-\n-<build>\n-    <plugins>\n-      <plugin>\n-        <artifactId>maven-scm-plugin</artifactId>\n-        <configuration>\n-          <scmVersionType>branch</scmVersionType>\n-          <scmVersion>${scm.branch}</scmVersion>\n-        </configuration>\n-      </plugin>\n-      <plugin>\n-        <artifactId>maven-release-plugin</artifactId>\n-        <configuration>\n-          <autoVersionSubmodules>true</autoVersionSubmodules>\n-          <useReleaseProfile>false</useReleaseProfile>\n-        </configuration>\n-        <goals />\n-      </plugin>\n-    </plugins>\n-  </build>\n-\n-  <modules>\n-    <module>leftnavbar</module>\n-  </modules>\n-</project>\n"
    },
    {
        "commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "previous commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "diff stats": {
            "file_path": "LeftNavBarExample/README.md",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-Make sure to link LeftNavBarLibrary to the LeftNavBarExample project!\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "previous commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "diff stats": {
            "file_path": "LeftNavBarExample/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/gradle/wrapper/gradle-wrapper.jar and /dev/null differ\n"
    },
    {
        "commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "previous commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "diff stats": {
            "file_path": "LeftNavBarExample/gradle/wrapper/gradle-wrapper.properties",
            "additions": 0,
            "deletions": 6
        },
        "diff content": "@@ -1,6 +0,0 @@\n-#Mon Jan 05 15:02:54 GMT 2015\n-distributionBase=GRADLE_USER_HOME\n-distributionPath=wrapper/dists\n-zipStoreBase=GRADLE_USER_HOME\n-zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip\n"
    },
    {
        "commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "previous commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "diff stats": {
            "file_path": "LeftNavBarExample/gradlew",
            "additions": 0,
            "deletions": 164
        },
        "diff content": "@@ -1,164 +0,0 @@\n-#!/usr/bin/env bash\n-\n-##############################################################################\n-##\n-##  Gradle start up script for UN*X\n-##\n-##############################################################################\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS=\"\"\n-\n-APP_NAME=\"Gradle\"\n-APP_BASE_NAME=`basename \"$0\"`\n-\n-# Use the maximum available, or set MAX_FD != -1 to use that value.\n-MAX_FD=\"maximum\"\n-\n-warn ( ) {\n-    echo \"$*\"\n-}\n-\n-die ( ) {\n-    echo\n-    echo \"$*\"\n-    echo\n-    exit 1\n-}\n-\n-# OS specific support (must be 'true' or 'false').\n-cygwin=false\n-msys=false\n-darwin=false\n-case \"`uname`\" in\n-  CYGWIN* )\n-    cygwin=true\n-    ;;\n-  Darwin* )\n-    darwin=true\n-    ;;\n-  MINGW* )\n-    msys=true\n-    ;;\n-esac\n-\n-# For Cygwin, ensure paths are in UNIX format before anything is touched.\n-if $cygwin ; then\n-    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n-fi\n-\n-# Attempt to set APP_HOME\n-# Resolve links: $0 may be a link\n-PRG=\"$0\"\n-# Need this for relative symlinks.\n-while [ -h \"$PRG\" ] ; do\n-    ls=`ls -ld \"$PRG\"`\n-    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n-    if expr \"$link\" : '/.*' > /dev/null; then\n-        PRG=\"$link\"\n-    else\n-        PRG=`dirname \"$PRG\"`\"/$link\"\n-    fi\n-done\n-SAVED=\"`pwd`\"\n-cd \"`dirname \\\"$PRG\\\"`/\" >&-\n-APP_HOME=\"`pwd -P`\"\n-cd \"$SAVED\" >&-\n-\n-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n-\n-# Determine the Java command to use to start the JVM.\n-if [ -n \"$JAVA_HOME\" ] ; then\n-    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n-        # IBM's JDK on AIX uses strange locations for the executables\n-        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n-    else\n-        JAVACMD=\"$JAVA_HOME/bin/java\"\n-    fi\n-    if [ ! -x \"$JAVACMD\" ] ; then\n-        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n-\n-Please set the JAVA_HOME variable in your environment to match the\n-location of your Java installation.\"\n-    fi\n-else\n-    JAVACMD=\"java\"\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n-\n-Please set the JAVA_HOME variable in your environment to match the\n-location of your Java installation.\"\n-fi\n-\n-# Increase the maximum file descriptors if we can.\n-if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n-    MAX_FD_LIMIT=`ulimit -H -n`\n-    if [ $? -eq 0 ] ; then\n-        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n-            MAX_FD=\"$MAX_FD_LIMIT\"\n-        fi\n-        ulimit -n $MAX_FD\n-        if [ $? -ne 0 ] ; then\n-            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n-        fi\n-    else\n-        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n-    fi\n-fi\n-\n-# For Darwin, add options to specify how the application appears in the dock\n-if $darwin; then\n-    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n-fi\n-\n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin ; then\n-    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n-    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n-\n-    # We build the pattern for arguments to be converted via cygpath\n-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n-    SEP=\"\"\n-    for dir in $ROOTDIRSRAW ; do\n-        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n-        SEP=\"|\"\n-    done\n-    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n-    # Add a user-defined pattern to the cygpath arguments\n-    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n-        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n-    fi\n-    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n-    i=0\n-    for arg in \"$@\" ; do\n-        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n-        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n-\n-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n-            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n-        else\n-            eval `echo args$i`=\"\\\"$arg\\\"\"\n-        fi\n-        i=$((i+1))\n-    done\n-    case $i in\n-        (0) set -- ;;\n-        (1) set -- \"$args0\" ;;\n-        (2) set -- \"$args0\" \"$args1\" ;;\n-        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n-        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n-        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n-        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n-        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n-        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n-        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n-    esac\n-fi\n-\n-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n-function splitJvmOpts() {\n-    JVM_OPTS=(\"$@\")\n-}\n-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n-JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n-\n-exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "previous commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "diff stats": {
            "file_path": "LeftNavBarExample/settings.gradle",
            "additions": 0,
            "deletions": 2
        },
        "diff content": "@@ -1,2 +0,0 @@\n-include 'LeftNavBarExample'\n-include 'LeftNavBarLibrary'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f2a67eb4344b16465bd7fcb50b0bec16c70d7ec6",
        "previous commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 5,
            "deletions": 1
        },
        "diff content": "@@ -7,4 +7,8 @@ include 'DynamicListItems'\n include 'encryption'\n include 'FixedSizeTextColumns'\n include 'Fragments'\n-include 'GsonJsonWebservice'\n\\ No newline at end of file\n+include 'GsonJsonWebservice'\n+include 'LeftNavBarLibrary'\n+project(':LeftNavBarLibrary').projectDir = new File('LeftNavBarExample/LeftNavBarLibrary') \n+include 'LeftNavBarExample'\n+project(':LeftNavBarExample').projectDir = new File('LeftNavBarExample/Example') \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/build.gradle",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/java/novoda/demo/GridViewAdapter.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/java/novoda/demo/LeftNavBarExample.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/java/novoda/demo/LeftNavBarWrapper.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_a.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_b.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_c.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_d.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/layout/grid_item.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/layout/gridview.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "e4efc6b7e4acb03a129e7d33fbab423b581a1bad",
        "previous commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "diff stats": {
            "file_path": "LeftNavBarExample/Example/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/build.gradle",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+apply plugin: 'com.android.application'\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"novoda.demo\"\n+        minSdkVersion 11\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n+dependencies {\n+    compile project(':LeftNavBarLibrary')\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/java/novoda/demo/GridViewAdapter.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/java/novoda/demo/LeftNavBarExample.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/java/novoda/demo/LeftNavBarWrapper.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_a.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_b.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_c.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_d.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/layout/grid_item.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/layout/gridview.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "0f1450c5b98a4e055de9cda1b2f0bcb1011006f9",
        "previous commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 4
        },
        "diff content": "@@ -17,10 +17,7 @@\n \tpackage=\"com.example.google.tv.leftnavbar\">\n \t\n \t<uses-sdk android:minSdkVersion=\"11\" android:targetSdkVersion=\"12\" />\n-\t\n-\t<application android:label=\"LeftNavBarLibrary\">\n \n-\t\t\n-\t</application>\n+  <application />\n \n </manifest>\n"
    },
    {
        "commit hash": "f689507b3a69adc7aa837488c738d89681a331bd",
        "previous commit hash": "6d9c77d2d3d65915917c00a6e8ef7bfbab79bf6e",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/TabFrame.java",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -27,7 +27,7 @@ import android.widget.TextView;\n /**\n  * Container for tabs, responsible for handling events and setting the correct state.\n  */\n-class TabFrame extends LinearLayout {\n+public class TabFrame extends LinearLayout {\n \n     private boolean mConfigured;\n     private boolean mIsCustom;\n"
    },
    {
        "commit hash": "6d9c77d2d3d65915917c00a6e8ef7bfbab79bf6e",
        "previous commit hash": "d6e107019cbed329520f8b27f809da2d43380bb3",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/build.gradle",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -3,7 +3,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:0.13.2'\n+        classpath 'com.android.tools.build:gradle:1.0.0'\n     }\n }\n \n"
    },
    {
        "commit hash": "d6e107019cbed329520f8b27f809da2d43380bb3",
        "previous commit hash": "a7b1993e1b0199878c1e9640250cd2abcfe25d73",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/TabImpl.java",
            "additions": 19,
            "deletions": 2
        },
        "diff content": "@@ -37,6 +37,7 @@ abstract class TabImpl extends Tab {\n     private Object mTag;\n     private Drawable mIcon;\n     private CharSequence mText;\n+    private CharSequence mContentDescription;\n     private int mPosition;\n     private View mCustomView;\n \n@@ -96,6 +97,11 @@ abstract class TabImpl extends Tab {\n         return mText;\n     }\n \n+    @Override\n+    public CharSequence getContentDescription() {\n+        return mContentDescription;\n+    }\n+\n     @Override\n     public Tab setIcon(Drawable icon) {\n         mIcon = icon;\n@@ -107,6 +113,11 @@ abstract class TabImpl extends Tab {\n         return setIcon(mContext.getResources().getDrawable(resId));\n     }\n \n+    @Override\n+    public Tab setText(int resId) {\n+        return setText(mContext.getResources().getText(resId));\n+    }\n+\n     @Override\n     public Tab setText(CharSequence text) {\n         mText = text;\n@@ -114,8 +125,14 @@ abstract class TabImpl extends Tab {\n     }\n \n     @Override\n-    public Tab setText(int resId) {\n-        return setText(mContext.getResources().getText(resId));\n+    public Tab setContentDescription(int resId) {\n+        return setContentDescription(mContext.getResources().getText(resId));\n+    }\n+\n+    @Override\n+    public Tab setContentDescription(CharSequence contentDesc) {\n+        mContentDescription = contentDesc;\n+        return this;\n     }\n \n     //----------------------------------------------------------------------------------------------\n"
    },
    {
        "commit hash": "a7b1993e1b0199878c1e9640250cd2abcfe25d73",
        "previous commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/LeftNavBar.java",
            "additions": 20,
            "deletions": 1
        },
        "diff content": "@@ -16,7 +16,6 @@\n \n package com.example.google.tv.leftnavbar;\n \n-\n import android.app.ActionBar;\n import android.app.Activity;\n import android.app.Dialog;\n@@ -447,6 +446,26 @@ public class LeftNavBar extends ActionBar {\n         setCustomView(LayoutInflater.from(mContext).inflate(resId, mLeftNav, false));\n     }\n \n+    @Override\n+    public void setIcon(int resId) {\n+        // Ignored in this example\n+    }\n+\n+    @Override\n+    public void setIcon(Drawable icon) {\n+        // Ignored in this example\n+    }\n+\n+    @Override\n+    public void setLogo(int resId) {\n+        // Ignored in this example\n+    }\n+\n+    @Override\n+    public void setLogo(Drawable logo) {\n+        // Ignored in this example\n+    }\n+\n     // ----------------------------------------------------------------------------------------------\n     // Miscellaneous.\n \n"
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/build.gradle",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.13.2'\n+    }\n+}\n+\n+apply plugin: 'com.android.library'\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        minSdkVersion 11\n+        targetSdkVersion 12\n+    }\n+}\n"
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/HomeDisplay.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/LeftNavBar.java",
            "additions": 1,
            "deletions": 2
        },
        "diff content": "@@ -77,8 +77,7 @@ public class LeftNavBar extends ActionBar {\n      * Display options applied by default.\n      */\n     public static final int DEFAULT_DISPLAY_OPTIONS = ActionBar.DISPLAY_SHOW_HOME\n-            | ActionBar.DISPLAY_USE_LOGO | ActionBar.DISPLAY_SHOW_TITLE\n-            | LeftNavBar.DISPLAY_ALWAYS_EXPANDED;\n+            | ActionBar.DISPLAY_USE_LOGO | ActionBar.DISPLAY_SHOW_TITLE;\n \n     private Context mContext;\n \n"
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/LeftNavBarService.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/LeftNavView.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/OptionsDisplay.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/SpinnerDisplay.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/TabDisplay.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/TabFrame.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/TabImpl.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/TabListView.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/TitleBarView.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/java/com/example/google/tv/leftnavbar/VisibilityController.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/color/leftnav_bar_tab_text_dark.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/color/leftnav_bar_tab_text_light.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable/custom.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable/leftnav_bar_item_background_dark.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable/leftnav_bar_item_background_light.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable/leftnav_bar_option_icon_dark.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable/leftnav_bar_option_icon_light.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable/spinner_item_background.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/drawable/spinner_list_item_background.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/custom_tab.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/custom_view.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/left_nav.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/leftnav_bar_home.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/leftnav_bar_option.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/leftnav_bar_options.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/leftnav_bar_spinner.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/leftnav_bar_tab.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/leftnav_bar_tabs.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/lib_left_nav.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/lib_title_bar.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/lib_title_container.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/layout/spinner_item.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/values/attrs.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/values/colors.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/values/lib_leftnav_bar_dimens.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/main/res/values/styles.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/build.gradle",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:1.0.0'\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        jcenter()\n+    }\n+}\n+\n+task wrapper(type: Wrapper) {\n+    gradleVersion = '2.1'\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Mon Jan 05 15:02:54 GMT 2015\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip\n"
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/gradlew",
            "additions": 164,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# For Cygwin, ensure paths are in UNIX format before anything is touched.\n+if $cygwin ; then\n+    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n+fi\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >&-\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >&-\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "f5633a7bd1928c507ffe484d2553c22e3d8c4dcc",
        "previous commit hash": "533ae977159ecebfd8f1902ba1d0d83e2fe34e52",
        "diff stats": {
            "file_path": "LeftNavBarExample/settings.gradle",
            "additions": 2,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,2 @@\n+include 'LeftNavBarExample'\n+include 'LeftNavBarLibrary'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/build.gradle",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n+\n+dependencies {\n+  compile 'com.google.code.gson:gson:2.3.1'\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/lib/gson-1.6.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/GsonJsonWebservice/lib/gson-1.6.jar and /dev/null differ\n"
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/project.properties",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must be checked in Version Control Systems.\n-#\n-# To customize properties used by the Ant build system use,\n-# \"ant.properties\", and override values to adapt the script to your\n-# project structure.\n-\n-# Indicates whether an apk should be generated for each density.\n-split.density=false\n-# Project target.\n-target=android-3\n"
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/java/com/novoda/activity/JsonRequest.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/java/com/novoda/model/Metadata.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/java/com/novoda/model/Result.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/java/com/novoda/model/SearchResponse.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "d060bdbeada04de63780a11b772d616ab0dc8e45",
        "previous commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -6,4 +6,5 @@ include 'CustomTabsHack'\n include 'DynamicListItems'\n include 'encryption'\n include 'FixedSizeTextColumns'\n-include 'Fragments'\n\\ No newline at end of file\n+include 'Fragments'\n+include 'GsonJsonWebservice'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/build.gradle",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda.example.compass\"\n+        minSdkVersion 9\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n+dependencies {\n+  compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'\n+  compile 'com.android.support:support-v4:20.0.0'\n+  compile files('libs/novocation-core-1.0.8.jar')\n+}\n"
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/proguard-project.txt",
            "additions": 0,
            "deletions": 20
        },
        "diff content": "@@ -1,20 +0,0 @@\n-# To enable ProGuard in your project, edit project.properties\n-# to define the proguard.config property as described in that file.\n-#\n-# Add project specific ProGuard rules here.\n-# By default, the flags in this file are appended to flags specified\n-# in ${sdk.dir}/tools/proguard/proguard-android.txt\n-# You can edit the include path and order by changing the ProGuard\n-# include property in project.properties.\n-#\n-# For more details, see\n-#   http://developer.android.com/guide/developing/tools/proguard.html\n-\n-# Add any project specific keep options here:\n-\n-# If your project uses WebView with JS, uncomment the following\n-# and specify the fully qualified class name to the JavaScript interface\n-# class:\n-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n-#   public *;\n-#}\n"
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/project.properties",
            "additions": 0,
            "deletions": 15
        },
        "diff content": "@@ -1,15 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must be checked in Version Control Systems.\n-#\n-# To customize properties used by the Ant build system edit\n-# \"ant.properties\", and override values to adapt the script to your\n-# project structure.\n-#\n-# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):\n-#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n-\n-# Project target.\n-target=android-16\n-android.library.reference.1=../../ActionBarSherlock-2/library\n"
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -30,7 +30,7 @@\n \n     <receiver\n       android:name=\"com.novoda.location.receiver.UnregisterPassiveListenerOnLostConnectivity\"\n-      enabled=\"false\">\n+      android:enabled=\"false\">\n       <intent-filter>\n         <action android:name=\"android.net.conn.CONNECTIVITY_CHANGE\" />\n       </intent-filter>\n"
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/NovoCompass.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/activities/CompassActivity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/utils/CompassUtils.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/utils/LowPassFilter.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/view/RotatableImageView.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/java/com/novoda/example/compass/view/RotatedImageView.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable-hdpi/ic_action_enable_rotation.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable-hdpi/ic_action_search.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable-mdpi/ic_action_search.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable-xhdpi/ic_action_search.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/drawable/floorplan.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/layout/activity_compass.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/menu/activity_compass.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/values-large/dimens.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/values-v11/styles.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/values-v14/styles.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/values/dimens.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "CompassExample/src/main/res/values/styles.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "84046635c3e2c96e3b98b3a33f327f83e06e2677",
        "previous commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -1,4 +1,5 @@\n include 'CarouselFragment'\n+include 'CompassExample'\n include 'ContactSelector'\n include 'CustomActivityTransition'\n include 'CustomTabsHack'\n"
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/build.gradle",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"novoda.demo.fragments.list\"\n+        minSdkVersion 7\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n+\n+dependencies {\n+  compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'\n+  compile 'com.android.support:support-v4:20.0.0'\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/simple/README.md",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-ActionBarSherlock Sample: Shakespeare\n-=====================================\n-\n-See [actionbarsherlock.com/samples.html][1] for information on the sample\n-contained in this folder.\n-\n-\n-\n-\n-\n-\n-\n- [1]: http://actionbarsherlock.com/samples.html\n"
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/simple/libs/android-support-v4.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Fragments/simple/libs/android-support-v4.jar and /dev/null differ\n"
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/simple/pom.xml",
            "additions": 0,
            "deletions": 103
        },
        "diff content": "@@ -1,103 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-\t<modelVersion>4.0.0</modelVersion>\n-\n-\t<groupId>com.actionbarsherlock</groupId>\n-\t<artifactId>sample-shakespeare</artifactId>\n-\t<name>Sample: Shakespeare</name>\n-\t<packaging>apk</packaging>\n-\n-\t<parent>\n-\t\t<groupId>com.actionbarsherlock</groupId>\n-\t\t<artifactId>parent-sample</artifactId>\n-\t\t<version>3.5.1</version>\n-\t\t<relativePath>../pom.xml</relativePath>\n-\t</parent>\n-\n-\t<dependencies>\n-\t\t<dependency>\n-\t\t\t<groupId>android</groupId>\n-\t\t\t<artifactId>android</artifactId>\n-\t\t\t<scope>provided</scope>\n-\t\t</dependency>\n-\t\t\n-\t\t<dependency>\n-\t\t\t<groupId>com.actionbarsherlock</groupId>\n-\t\t\t<artifactId>library</artifactId>\n-\t\t\t<version>${project.version}</version>\n-\t\t\t<type>apklib</type>\n-\t\t</dependency>\n-\t</dependencies>\n-\n-\t<build>\n-\t\t<sourceDirectory>src</sourceDirectory>\n-\t\t<finalName>${apk.prefix}-${project.artifactId}-unaligned</finalName>\n-\n-\t\t<plugins>\n-\t\t\t<plugin>\n-\t\t\t\t<groupId>com.jayway.maven.plugins.android.generation2</groupId>\n-\t\t\t\t<artifactId>maven-android-plugin</artifactId>\n-\t\t\t\t<extensions>true</extensions>\n-\t\t\t</plugin>\n-\n-\t\t\t<plugin>\n-\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n-\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n-\t\t\t\t<configuration>\n-\t\t\t\t\t<skip>true</skip>\n-\t\t\t\t</configuration>\n-\t\t\t</plugin>\n-\t\t</plugins>\n-\t</build>\n-\n-\t<profiles>\n-\t\t<profile>\n-\t\t\t<id>release</id>\n-\t\t\t<activation>\n-\t\t\t\t<property>\n-\t\t\t\t\t<name>performRelease</name>\n-\t\t\t\t\t<value>true</value>\n-\t\t\t\t</property>\n-\t\t\t</activation>\n-\t\t\t<build>\n-\t\t\t\t<plugins>\n-\t\t\t\t\t<plugin>\n-\t\t\t\t\t\t<groupId>com.jayway.maven.plugins.android.generation2</groupId>\n-\t\t\t\t\t\t<artifactId>maven-android-plugin</artifactId>\n-\t\t\t\t\t\t<inherited>true</inherited>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<zipalign>\n-\t\t\t\t\t\t\t\t<inputApk>${project.build.directory}/${project.build.finalName}.apk</inputApk>\n-\t\t\t\t\t\t\t\t<outputApk>${project.build.directory}/${apk.prefix}-${project.artifactId}.apk</outputApk>\n-\t\t\t\t\t\t\t</zipalign>\n-\t\t\t\t\t\t</configuration>\n-\t\t\t\t\t\t<executions>\n-\t\t\t\t\t\t\t<execution>\n-\t\t\t\t\t\t\t\t<id>alignApk</id>\n-\t\t\t\t\t\t\t\t<phase>package</phase>\n-\t\t\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t\t\t<goal>zipalign</goal>\n-\t\t\t\t\t\t\t\t</goals>\n-\t\t\t\t\t\t\t</execution>\n-\t\t\t\t\t\t</executions>\n-\t\t\t\t\t</plugin>\n-\n-\t\t\t\t\t<plugin>\n-\t\t\t\t\t\t<groupId>com.jakewharton</groupId>\n-\t\t\t\t\t\t<artifactId>github-deploy-maven-plugin</artifactId>\n-\t\t\t\t\t\t<version>1.0.1</version>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<types>\n-\t\t\t\t\t\t\t\t<type>aligned</type>\n-\t\t\t\t\t\t\t</types>\n-\t\t\t\t\t\t</configuration>\n-\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t<goal>deploy</goal>\n-\t\t\t\t\t\t</goals>\n-\t\t\t\t\t</plugin>\n-\t\t\t\t</plugins>\n-\t\t\t</build>\n-\t\t</profile>\n-\t</profiles>\n-</project>\n"
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/simple/project.properties",
            "additions": 0,
            "deletions": 12
        },
        "diff content": "@@ -1,12 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must be checked in Version Control Systems.\n-#\n-# To customize properties used by the Ant build system use,\n-# \"ant.properties\", and override values to adapt the script to your\n-# project structure.\n-\n-# Project target.\n-target=android-14\n-android.library.reference.1=../../library\n"
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/java/novoda/demo/fragments/list/Constants.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/java/novoda/demo/fragments/list/activities/Details.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/java/novoda/demo/fragments/list/activities/List.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/java/novoda/demo/fragments/list/frags/Detail.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/java/novoda/demo/fragments/list/frags/List.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/res/drawable-xhdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/res/layout-land/act_list.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/res/layout-xlarge-land/act_list.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/res/layout/act_list.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "Fragments/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "dc3de58aa59f89bb47b25e2c57534972bab34e8a",
        "previous commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -4,4 +4,5 @@ include 'CustomActivityTransition'\n include 'CustomTabsHack'\n include 'DynamicListItems'\n include 'encryption'\n-include 'FixedSizeTextColumns'\n\\ No newline at end of file\n+include 'FixedSizeTextColumns'\n+include 'Fragments'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 7\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/proguard.cfg",
            "additions": 0,
            "deletions": 34
        },
        "diff content": "@@ -1,34 +0,0 @@\n--optimizationpasses 5\n--dontusemixedcaseclassnames\n--dontskipnonpubliclibraryclasses\n--dontpreverify\n--verbose\n--optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n-\n--keep public class * extends android.app.Activity\n--keep public class * extends android.app.Application\n--keep public class * extends android.app.Service\n--keep public class * extends android.content.BroadcastReceiver\n--keep public class * extends android.content.ContentProvider\n--keep public class com.android.vending.licensing.ILicensingService\n-\n--keepclasseswithmembernames class * {\n-    native <methods>;\n-}\n-\n--keepclasseswithmembernames class * {\n-    public <init>(android.content.Context, android.util.AttributeSet);\n-}\n-\n--keepclasseswithmembernames class * {\n-    public <init>(android.content.Context, android.util.AttributeSet, int);\n-}\n-\n--keepclassmembers enum * {\n-    public static **[] values();\n-    public static ** valueOf(java.lang.String);\n-}\n-\n--keep class * implements android.os.Parcelable {\n-  public static final android.os.Parcelable$Creator *;\n-}\n"
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/assets/images/earth.jpg",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/assets/three_columns.html",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/assets/two_columns.html",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/assets/two_columns_and_photo.html",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/java/com/novoda/HelloWebView.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/java/com/novoda/utils/PinchZoomDetector.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/drawable/ic_menu_choose_view.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/drawable/ic_menu_zoom_in.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/drawable/ic_menu_zoom_out.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/layout/webview_main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/menu/webview_main_menu.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/values/ids.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "encryption/build.gradle",
            "additions": 0,
            "deletions": 4
        },
        "diff content": "@@ -12,8 +12,4 @@ android {\n         versionCode 1\n         versionName \"1.0\"\n     }\n-    \n-    lintOptions {\n-        abortOnError false\n-    }\n }\n"
    },
    {
        "commit hash": "598b77305fcdddcb087eee25ebbff867ec38f657",
        "previous commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -3,4 +3,5 @@ include 'ContactSelector'\n include 'CustomActivityTransition'\n include 'CustomTabsHack'\n include 'DynamicListItems'\n-include 'encryption'\n\\ No newline at end of file\n+include 'encryption'\n+include 'FixedSizeTextColumns'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/build.gradle",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+    \n+    lintOptions {\n+        abortOnError false\n+    }\n+}\n"
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/proguard.cfg",
            "additions": 0,
            "deletions": 36
        },
        "diff content": "@@ -1,36 +0,0 @@\n--optimizationpasses 5\n--dontusemixedcaseclassnames\n--dontskipnonpubliclibraryclasses\n--dontpreverify\n--verbose\n--optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n-\n--keep public class * extends android.app.Activity\n--keep public class * extends android.app.Application\n--keep public class * extends android.app.Service\n--keep public class * extends android.content.BroadcastReceiver\n--keep public class * extends android.content.ContentProvider\n--keep public class * extends android.app.backup.BackupAgentHelper\n--keep public class * extends android.preference.Preference\n--keep public class com.android.vending.licensing.ILicensingService\n-\n--keepclasseswithmembernames class * {\n-    native <methods>;\n-}\n-\n--keepclasseswithmembernames class * {\n-    public <init>(android.content.Context, android.util.AttributeSet);\n-}\n-\n--keepclasseswithmembernames class * {\n-    public <init>(android.content.Context, android.util.AttributeSet, int);\n-}\n-\n--keepclassmembers enum * {\n-    public static **[] values();\n-    public static ** valueOf(java.lang.String);\n-}\n-\n--keep class * implements android.os.Parcelable {\n-  public static final android.os.Parcelable$Creator *;\n-}\n"
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/java/com/novoda/Base64.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/java/com/novoda/Base64DecoderException.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/java/com/novoda/Encrypt.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/res/values/styles_activities.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/res/values/styles_master.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "encryption/src/main/res/values/styles_theme.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "998f9707f98c4be1428d8f3df00cdf123b3858e3",
        "previous commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -2,4 +2,5 @@ include 'CarouselFragment'\n include 'ContactSelector'\n include 'CustomActivityTransition'\n include 'CustomTabsHack'\n-include 'DynamicListItems'\n\\ No newline at end of file\n+include 'DynamicListItems'\n+include 'encryption'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/bin/DynamicListItems.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/DynamicListItems.apk and /dev/null differ\n"
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/resources.ap_ and /dev/null differ\n"
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/build.gradle",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+    \n+    lintOptions {\n+        abortOnError false\n+    }\n+}\n"
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/src/main/java/com/novoda/DynamicListItems.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/src/main/res/layout/dynamic_list.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/src/main/res/layout/row.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "DynamicListItems/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "c9a6c4602c5550f2cf358b3d99e90955e213a67f",
        "previous commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,5 @@\n include 'CarouselFragment'\n include 'ContactSelector'\n include 'CustomActivityTransition'\n-include 'CustomTabsHack'\n\\ No newline at end of file\n+include 'CustomTabsHack'\n+include 'DynamicListItems'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/build.gradle",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+    \n+    lintOptions {\n+        abortOnError false\n+    }\n+}\n"
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/java/com/novoda/Container.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/java/com/novoda/Tab1Activity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/java/com/novoda/Tab2Activity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/drawable/selected.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/drawable/unselected.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/layout/tab1.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/layout/tab2.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "CustomTabsHack/src/main/res/values/styles.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f75c9afae9afa5f9de3f8489e91d4c925423ec7a",
        "previous commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 3,
            "deletions": 2
        },
        "diff content": "@@ -1,3 +1,4 @@\n-include 'CustomActivityTransition'\n include 'CarouselFragment'\n-//include 'CompassExample'\n\\ No newline at end of file\n+include 'ContactSelector'\n+include 'CustomActivityTransition'\n+include 'CustomTabsHack'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "previous commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "diff stats": {
            "file_path": "ContactSelector/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"com.novoda\"\n+        minSdkVersion 3\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "previous commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "diff stats": {
            "file_path": "ContactSelector/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "previous commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "diff stats": {
            "file_path": "ContactSelector/src/main/java/com/novoda/ContactSelector.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "previous commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "diff stats": {
            "file_path": "ContactSelector/src/main/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "previous commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "diff stats": {
            "file_path": "ContactSelector/src/main/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "previous commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "diff stats": {
            "file_path": "ContactSelector/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "791c1361fe7f98b89ce56c94f64dc62fee00119e",
        "previous commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -1,2 +1,3 @@\n include 'CustomActivityTransition'\n-include 'CarouselFragment'\n\\ No newline at end of file\n+include 'CarouselFragment'\n+//include 'CompassExample'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"novoda.demo\"\n+        minSdkVersion 11\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/project.properties",
            "additions": 0,
            "deletions": 14
        },
        "diff content": "@@ -1,14 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must be checked in Version Control Systems.\n-#\n-# To customize properties used by the Ant build system edit\n-# \"ant.properties\", and override values to adapt the script to your\n-# project structure.\n-#\n-# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):\n-#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n-\n-# Project target.\n-target=android-12\n"
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/assets/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/java/novoda/demo/Carousel.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/java/novoda/demo/GalleryAdapter.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/drawable-hdpi/image_background.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/drawable-hdpi/item_focused.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/layout/act_carousel.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/layout/carousel_gallery.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/layout/carousel_gallery_li.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "CarouselFragment/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "57d7c8a6b7f12ae28ebc8609c6ab69a2aace18c2",
        "previous commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -1 +1,2 @@\n-include 'CustomActivityTransition'\n\\ No newline at end of file\n+include 'CustomActivityTransition'\n+include 'CarouselFragment'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/build.gradle",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+apply plugin: 'com.android.application'\n+\n+\n+android {\n+    compileSdkVersion 20\n+    buildToolsVersion \"20.0.0\"\n+\n+    defaultConfig {\n+        applicationId \"novoda.demo\"\n+        minSdkVersion 4\n+        targetSdkVersion 20\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+}\n"
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/java/novoda/demo/ToThis.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/java/novoda/demo/TransitionFromThis.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/anim/activity_close_enter.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/anim/activity_close_exit.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/anim/activity_open_enter.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/anim/activity_open_exit.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/anim/decelerate_interpolator.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/anim/fadein.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/anim/fadeout.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/layout/act_transition_from_this.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/layout/act_transition_to_this.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/main/res/values/styles_master.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "91b433cd5306de43bea8fdf42960623bf9b2ccad",
        "previous commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "diff stats": {
            "file_path": "settings.gradle",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+include 'CustomActivityTransition'\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "previous commit hash": "e8e3ca387944842711ed7a6a91d274577d5ab54f",
        "diff stats": {
            "file_path": "build.gradle",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+buildscript {\n+    repositories {\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.14.2'\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        jcenter()\n+    }\n+}\n+\n+task wrapper(type: Wrapper) {\n+    gradleVersion = '2.1'\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "previous commit hash": "e8e3ca387944842711ed7a6a91d274577d5ab54f",
        "diff stats": {
            "file_path": "gradle/wrapper/gradle-wrapper.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/gradle/wrapper/gradle-wrapper.jar differ\n"
    },
    {
        "commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "previous commit hash": "e8e3ca387944842711ed7a6a91d274577d5ab54f",
        "diff stats": {
            "file_path": "gradle/wrapper/gradle-wrapper.properties",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+#Wed Nov 12 16:31:36 GMT 2014\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.1-all.zip\n"
    },
    {
        "commit hash": "c292acffe3b6026f6153a6125ba54b0a56924f58",
        "previous commit hash": "e8e3ca387944842711ed7a6a91d274577d5ab54f",
        "diff stats": {
            "file_path": "gradlew",
            "additions": 164,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# For Cygwin, ensure paths are in UNIX format before anything is touched.\n+if $cygwin ; then\n+    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n+fi\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >&-\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >&-\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
    },
    {
        "commit hash": "e8e3ca387944842711ed7a6a91d274577d5ab54f",
        "previous commit hash": "1014741b549ba763ccab4ac40648411238882202",
        "diff stats": {
            "file_path": ".gitignore",
            "additions": 8,
            "deletions": 1
        },
        "diff content": "@@ -12,6 +12,8 @@\n bin/\n gen/\n out/\n+build.log\n+build-log.xml\n \n # Local configuration file (sdk path, etc)\n local.properties\n@@ -23,6 +25,8 @@ target/\n libs/\n classes/\n gen-external-apklibs/\n+build/\n+tmp/\n \n # IDEA Ignores\n *.iml\n@@ -34,4 +38,7 @@ project.properties\n .gradle/\n \n # MAC\n-*.DS_Store\n\\ No newline at end of file\n+*.DS_Store\n+\n+build\n+lint-results.xml\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "1014741b549ba763ccab4ac40648411238882202",
        "previous commit hash": "83e47adad54a7a3e3b7c560128c305f2c6e744ab",
        "diff stats": {
            "file_path": ".gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -31,6 +31,7 @@ gen-external-apklibs/\n .idea/\n local.properties\n project.properties\n+.gradle/\n \n # MAC\n *.DS_Store\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "83e47adad54a7a3e3b7c560128c305f2c6e744ab",
        "previous commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "diff stats": {
            "file_path": "README",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -1 +1,19 @@\n Hi there! This is a collection of basic android examples created by Novoda.\n+\n+\n+License\n+-------\n+\n+    (c) Copyright 2014 Novoda\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": ".gitignore",
            "additions": 34,
            "deletions": 15
        },
        "diff content": "@@ -1,17 +1,36 @@\n-# need i\n-bin\n-bin/*\n-gen/*\n-gen\n-.classpath\n-.project\n-default.*\n-.settings/*\n-**/.settings/*\n-build.properties\n-.DS_Store\n+# built application files\n+*.apk\n+*.ap_\n+\n+# files for the dex VM\n+*.dex\n+\n+# Java class files\n *.class\n-java/build\n-java/*.log\n-java/*.log.*\n+\n+# generated files\n+bin/\n+gen/\n+out/\n+\n+# Local configuration file (sdk path, etc)\n+local.properties\n+\n+.project\n+.classpath\n+.settings\n target/\n+libs/\n+classes/\n+gen-external-apklibs/\n+\n+# IDEA Ignores\n+*.iml\n+*.ipr\n+*.iws\n+.idea/\n+local.properties\n+project.properties\n+\n+# MAC\n+*.DS_Store\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/.gitignore",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+# built application files\n+*.apk\n+*.ap_\n+\n+# files for the dex VM\n+*.dex\n+\n+# Java class files\n+*.class\n+\n+# Jar files\n+*.jar\n+\n+#ApkLibs\n+*.apklib\n+\n+# generated files\n+bin/\n+gen/\n+\n+# Local configuration file (sdk path, etc)\n+local.properties\n+project.properties\n+default.properties\n+\n+classes/\n+\n+\n+#IntelliJ IDEA#\n+*.iml\n+*.ipr\n+*.iws\n+.idea\n+target\n+\n+#Eclipse#\n+.settings\n+.classpath\n+.project\n+app/gen-external-apklibs/\n+*.orig\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/README.md",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+MapApiV2Demo\n+============\n+\n+Based upon the Google-Play-Services r3 maps example.\n+\n+This project aims to show how simple it is to create a map and show your location on it.\n+\n+To use this demo you will need to provide your own Maps API Key. This needs to be placed in the AndroidManifest.xml.\n+https://developers.google.com/maps/documentation/android/start#the_google_maps_api_key\n+\n+The google-play-service has also been \"mavenised\" for ease of use,\n+\n+enjoy!\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/AndroidManifest.xml",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+          package=\"com.novoda.mapdemo\"\n+          android:versionCode=\"1\"\n+          android:versionName=\"1.0\">\n+\n+  <permission android:name=\"com.novoda.mapdemo.permission.MAPS_RECEIVE\" android:protectionLevel=\"signature\"/>\n+  <uses-permission android:name=\"com.novoda.mapdemo.permission.MAPS_RECEIVE\"/>\n+\n+  <uses-sdk\n+    android:minSdkVersion=\"8\"\n+    android:targetSdkVersion=\"16\"/>\n+\n+  <uses-permission android:name=\"android.permission.INTERNET\"/>\n+  <uses-permission android:name=\"com.google.android.providers.gsf.permission.READ_GSERVICES\"/>\n+  <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n+  <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n+  <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n+\n+  <uses-feature\n+    android:glEsVersion=\"0x00020000\"\n+    android:required=\"true\"/>\n+\n+  <application\n+    android:icon=\"@drawable/app_launcher\"\n+    android:label=\"@string/app_name\"\n+    android:hardwareAccelerated=\"true\">\n+\n+    <meta-data\n+      android:name=\"com.google.android.maps.v2.API_KEY\"\n+      android:value=\"YOUR_API_KEY_GOES_HERE\"/>\n+\n+    <activity android:name=\".activity.NovodaMapActivity\" android:label=\"@string/app_name\">\n+      <intent-filter>\n+        <action android:name=\"android.intent.action.MAIN\"/>\n+        <category android:name=\"android.intent.category.LAUNCHER\"/>\n+      </intent-filter>\n+    </activity>\n+\n+  </application>\n+</manifest>\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/pom.xml",
            "additions": 106,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,106 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>com.novoda</groupId>\n+    <artifactId>MapApiV2Demo-parent</artifactId>\n+    <version>1.0</version>\n+  </parent>\n+\n+  <groupId>com.novoda</groupId>\n+  <artifactId>app</artifactId>\n+  <version>1.0</version>\n+  <packaging>apk</packaging>\n+  <name>MapApiV2Demo - Application</name>\n+\n+  <profiles>\n+    <profile>\n+      <id>emma</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>com.jayway.maven.plugins.android.generation2</groupId>\n+            <artifactId>android-maven-plugin</artifactId>\n+            <configuration>\n+              <emma>\n+                <enable>true</enable>\n+                <classFolders>${project.basedir}/target/classes/</classFolders>\n+                <outputMetaFile>${project.basedir}/target/emma/coverage.em</outputMetaFile>\n+              </emma>\n+              <dex>\n+                <noLocals>true</noLocals>\n+              </dex>\n+            </configuration>\n+            <extensions>true</extensions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.google.android</groupId>\n+      <artifactId>android</artifactId>\n+      <version>${android.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.android</groupId>\n+      <artifactId>support-v4</artifactId>\n+      <version>${support-library.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.actionbarsherlock</groupId>\n+      <artifactId>library</artifactId>\n+      <version>4.1.0</version>\n+      <type>apklib</type>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.extras</groupId>\n+      <artifactId>google-play-services-src</artifactId>\n+      <version>3.0</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.extras</groupId>\n+      <artifactId>google-play-services</artifactId>\n+      <version>3.0</version>\n+      <type>apklib</type>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.novoda</groupId>\n+      <artifactId>core</artifactId>\n+      <version>1.0</version>\n+    </dependency>\n+\n+  </dependencies>\n+\n+  <build>\n+    <sourceDirectory>src</sourceDirectory>\n+    <plugins>\n+      <plugin>\n+        <groupId>com.jayway.maven.plugins.android.generation2</groupId>\n+        <artifactId>android-maven-plugin</artifactId>\n+        <configuration>\n+          <dex>\n+            <jvmArguments>\n+              <jvmArgument>-Xms256m</jvmArgument>\n+              <jvmArgument>-Xmx512m</jvmArgument>\n+            </jvmArguments>\n+          </dex>\n+          <sign>\n+            <debug>both</debug>\n+          </sign>\n+        </configuration>\n+        <extensions>true</extensions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/res/drawable-hdpi/app_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MapApiV2Demo/app/res/drawable-hdpi/app_launcher.png differ\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/res/drawable-ldpi/app_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MapApiV2Demo/app/res/drawable-ldpi/app_launcher.png differ\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/res/drawable-mdpi/app_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MapApiV2Demo/app/res/drawable-mdpi/app_launcher.png differ\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/res/drawable-xhdpi/app_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MapApiV2Demo/app/res/drawable-xhdpi/app_launcher.png differ\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/res/layout/novoda_demo.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+              style=\"@style/Match\"\n+              android:orientation=\"vertical\">\n+\n+  <fragment xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+            android:id=\"@+id/map\"\n+            style=\"@style/Match\"\n+            android:layout_weight=\"0.2\"\n+            android:name=\"com.novoda.mapdemo.fragment.NovodaMapFragment\"/>\n+\n+  <fragment xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+            android:id=\"@+id/image_fragment\"\n+            style=\"@style/Match\"\n+            android:layout_weight=\"0.8\"\n+            android:name=\"com.novoda.mapdemo.fragment.SomeOtherFragment\"/>\n+\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/res/layout/some_other_fragment.xml",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+              style=\"@style/Match\">\n+\n+  <Button\n+    android:id=\"@+id/fragment_button\"\n+    style=\"@style/Match\"\n+    android:text=\"Click me!\"/>\n+\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/res/values/strings.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\n+    <string name=\"app_name\">MapApiV2Demo</string>\n+\n+</resources>\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/res/values/style_base.xml",
            "additions": 43,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,43 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<resources>\n+\n+  <style name=\"Vertical\">\n+    <item name=\"android:orientation\">vertical</item>\n+  </style>\n+\n+  <style name=\"Match\" parent=\"Vertical\">\n+    <item name=\"android:layout_width\">match_parent</item>\n+    <item name=\"android:layout_height\">match_parent</item>\n+  </style>\n+\n+  <style name=\"Wrap\" parent=\"Vertical\">\n+    <item name=\"android:layout_width\">wrap_content</item>\n+    <item name=\"android:layout_height\">wrap_content</item>\n+  </style>\n+\n+  <style\n+      name=\"MatchHeight\"\n+      parent=\"Match\">\n+    <item name=\"android:layout_width\">wrap_content</item>\n+  </style>\n+\n+  <style\n+      name=\"MatchWidth\"\n+      parent=\"Match\">\n+    <item name=\"android:layout_height\">wrap_content</item>\n+  </style>\n+\n+  <style\n+      name=\"MatchHorizontal\"\n+      parent=\"Match\">\n+    <item name=\"android:orientation\">horizontal</item>\n+  </style>\n+\n+  <style\n+      name=\"MatchWidthHorizontal\"\n+      parent=\"MatchWidth\">\n+    <item name=\"android:orientation\">horizontal</item>\n+  </style>\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/src/com/novoda/mapdemo/activity/NovodaMapActivity.java",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+package com.novoda.mapdemo.activity;\n+\n+import android.os.Bundle;\n+import android.support.v4.app.FragmentActivity;\n+import com.novoda.mapdemo.R;\n+\n+public class NovodaMapActivity extends FragmentActivity {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.novoda_demo);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/src/com/novoda/mapdemo/fragment/NovodaMapFragment.java",
            "additions": 55,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,55 @@\n+package com.novoda.mapdemo.fragment;\n+\n+import android.content.Context;\n+import android.location.Location;\n+import android.location.LocationManager;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import com.google.android.gms.maps.CameraUpdate;\n+import com.google.android.gms.maps.CameraUpdateFactory;\n+import com.google.android.gms.maps.GoogleMap;\n+import com.google.android.gms.maps.SupportMapFragment;\n+import com.google.android.gms.maps.model.LatLng;\n+\n+public class NovodaMapFragment extends SupportMapFragment {\n+\n+    private static final int ZOOM_LEVEL = 16;\n+    private GoogleMap map;\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup viewGroup, Bundle bundle) {\n+        View view = super.onCreateView(inflater, viewGroup, bundle);\n+        setUpMapIfNeeded();\n+        return view;\n+    }\n+\n+    private void setUpMapIfNeeded() {\n+        if (map == null) {\n+            map = getMap();\n+            if (map != null) {\n+                setUpMap();\n+            }\n+        }\n+    }\n+\n+    private void setUpMap() {\n+        map.setMyLocationEnabled(true);\n+        map.animateCamera(zoomToLastKnownLatLng());\n+    }\n+\n+    private CameraUpdate zoomToLastKnownLatLng() {\n+        return CameraUpdateFactory.newLatLngZoom(getLastKnownLatLng(), ZOOM_LEVEL);\n+    }\n+\n+    private LatLng getLastKnownLatLng() {\n+        Location location = ((LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE)).getLastKnownLocation(\"gps\");\n+        return locationToLatLng(location);\n+    }\n+\n+    private LatLng locationToLatLng(Location location) {\n+        return new LatLng(location.getLatitude(), location.getLongitude());\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/app/src/com/novoda/mapdemo/fragment/SomeOtherFragment.java",
            "additions": 32,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,32 @@\n+package com.novoda.mapdemo.fragment;\n+\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Toast;\n+import com.novoda.mapdemo.R;\n+\n+public class SomeOtherFragment extends Fragment implements View.OnClickListener {\n+\n+    private static final String FRAGMENT_TOAST_MESSAGE = \"Some other fragment logic!\";\n+\n+    public SomeOtherFragment() {}\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        View view = inflater.inflate(R.layout.some_other_fragment, container, false);\n+        view.findViewById(R.id.fragment_button).setOnClickListener(this);\n+        return view;\n+    }\n+\n+    @Override\n+    public void onClick(View v) {\n+        showToast();\n+    }\n+\n+    private void showToast() {\n+        Toast.makeText(getActivity(), FRAGMENT_TOAST_MESSAGE, Toast.LENGTH_SHORT).show();\n+    }\n+}\n"
    },
    {
        "commit hash": "3052e6d253bd6a29c3e9b043ba87021242857ba5",
        "previous commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "diff stats": {
            "file_path": "MapApiV2Demo/pom.xml",
            "additions": 66,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,66 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>com.novoda</groupId>\n+    <artifactId>android</artifactId>\n+    <version>2.0.2</version>\n+  </parent>\n+\n+  <groupId>com.novoda</groupId>\n+  <artifactId>MapApiV2Demo-parent</artifactId>\n+  <version>1.0</version>\n+  <packaging>pom</packaging>\n+  <name>MapApiV2Demo - Parent</name>\n+\n+  <modules>\n+    <module>app</module>\n+  </modules>\n+\n+  <properties>\n+    <android.version>4.1.1.4</android.version>\n+        <android-test.version>2.3.3</android-test.version>\n+    <android.sdk.platform>16</android.sdk.platform>\n+    <android.maven.plugin.version>3.3.2</android.maven.plugin.version>\n+    <junit.version>4.10</junit.version>\n+    <support-library.version>r7</support-library.version>\n+    <scm.branch>master</scm.branch>\n+  </properties>\n+\n+  <repositories>\n+\n+    <repository>\n+      <id>public-mvn-repo-releases</id>\n+      <url>\n+        https://github.com/novoda/public-mvn-repo/raw/master/releases\n+      </url>\n+    </repository>\n+\n+    <repository>\n+      <id>jakewharton</id>\n+      <url>http://r.jakewharton.com/maven/release/</url>\n+    </repository>\n+\n+  </repositories>\n+\n+  <pluginRepositories>\n+\n+    <pluginRepository>\n+      <id>public-mvn-repo.plugin-releases</id>\n+      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n+      <snapshots>\n+        <enabled>false</enabled>\n+      </snapshots>\n+    </pluginRepository>\n+\n+  </pluginRepositories>\n+\n+  <licenses>\n+    <license>\n+      <name>Apache 2.0</name>\n+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+    </license>\n+  </licenses>\n+</project>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/AndroidManifest.xml",
            "additions": 72,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.novoda.urbanairship.demo\"\n+    android:versionCode=\"1\"\n+    android:versionName=\"1.0\" >\n+\n+    <uses-sdk android:minSdkVersion=\"14\" />\n+\n+    <!-- REQUIRED -->\n+    <uses-permission android:name=\"android.permission.INTERNET\" />\n+    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n+    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n+    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\n+    <uses-permission android:name=\"android.permission.VIBRATE\" />\n+    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n+\n+    <permission\n+        android:name=\"com.novoda.urbanairship.demo.permission.C2D_MESSAGE\"\n+        android:protectionLevel=\"signature\" />\n+\n+    <uses-permission android:name=\"com.novoda.urbanairship.demo.permission.C2D_MESSAGE\" />\n+    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\n+\n+    <application\n+        android:name=\"com.novoda.urbanairship.demo.UADemoApplication\"\n+        android:allowClearUserData=\"true\"\n+        android:debuggable=\"true\"\n+        android:enabled=\"true\"\n+        android:icon=\"@drawable/icon\"\n+        android:label=\"@string/app_name\" >\n+        \n+        <activity android:name=\"com.novoda.urbanairship.demo.MainActivity\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+        \n+        <activity android:name=\"com.novoda.urbanairship.demo.PushPreferencesActivity\" />\n+\n+        <receiver android:name=\"com.urbanairship.CoreReceiver\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n+                <action android:name=\"android.intent.action.ACTION_SHUTDOWN\" />\n+            </intent-filter>\n+        </receiver>\n+\n+        <receiver\n+            android:name=\"com.urbanairship.push.c2dm.C2DMPushReceiver\"\n+            android:permission=\"com.google.android.c2dm.permission.SEND\" >\n+\n+            <!-- Receive the actual message -->\n+            <intent-filter>\n+                <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\n+                <category android:name=\"com.novoda.urbanairship.demo\" />\n+            </intent-filter>\n+            <!-- Receive the registration id -->\n+            <intent-filter>\n+                <action android:name=\"com.google.android.c2dm.intent.REGISTRATION\" />\n+                <category android:name=\"com.novoda.urbanairship.demo\" />\n+            </intent-filter>\n+        </receiver>\n+\n+        <service\n+            android:name=\"com.urbanairship.push.PushService\"\n+            android:process=\":com.urbanairship.push.process\" />\n+\n+        <receiver android:name=\"com.novoda.urbanairship.demo.IntentReceiver\" />\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/README",
            "additions": 66,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,66 @@\n+Step 1:\n+\n+Urban Airship for Android uses C2DM for push notifications. In order to begin you first need to register an email id with Google\u2019s C2DM framework which can be found here: \n+\n+http://code.google.com/android/c2dm/signup.html\n+\n+you will also be required to register the application\u2019s package name.\n+\n+Step 2:\n+\n+Register with Urban Airship on : http://urbanairship.com/ and wait for the confirmation mail from Google.\n+\n+Step 3:\n+\n+Once you have the confirmation mail from Google informing you that your account can now successfully send push notifications you need to create a new application on Urban Airship. Log into Urban Airship and then create a new application. During creation make sure that you have Push Notification Support enabled and you register the same package name you registered with Google\u2019s servers.\n+\n+Step 4:\n+\n+In order to get the C2DM authorisation token you need to execute a curl command\n+\n+curl https://www.google.com/accounts/ClientLogin -d Email=your_user -d \"Passwd=your_password\" -d accountType=GOOGLE -d source=Google-cURL-Example -d service=ac2dm\n+\n+Enter your password and email in the required fields. The response will resemble this\n+\n+SID=DQAAAPMAAACMY6LUPhXt_co8ESnZa9_bX17MJJZj2AGlDr4gcNIXxq7OJBMPFiT8ry756bE_0rmx\n+RfH6wLP4fwUO53qJzN6XlXufColJYUlqsT-vTMiZEPEDE_j_dTQcWRnSk2jMyQOTHLve0sSrthqMVPwT\n+kBZJn2pb8gsRsBUMHQbZRgCjEnMO8Ci_fkgKvgUYsX3xjlNO7O8znPWcxwK1KQjJZMGcYs8iM02s4u5g\n+ujij2hejb2Jg-F92t9XUmp51Dea-6FPw2OiOuIOobjh7lQdoO63Rp_qc040hICXl_8mx-DgWyCeUX1bh\n+s1EZb4c3qNiK-wRuSIi2ioA3VnpDBL231C35\n+LSID=DQAAAPUAAADaz7cSh--p87KoL0qT3eyLvA76QdMLtNaTYNMdOBMcH09_AEV9g3a3Js_7Lwgnw-N\n+sTRwVH719WITJKkzkuRwEhD6PJ92XXrpNxco4hZecnpsL07RxRHaWY3RqwJDUba-Le4UWeALr7ybdrz4\n+SEJy8Jlw9yGr8hctxK6wWAWToGQF3Bw9K9DiAx-E7ZyfWaZt98Y_ygPLg86hEUbBodIQD6UBZ75vDAbJ\n+YxhIP6yOBFCOCuP7NjDJ2ET1_IBDTEoCkXvVgky57w6N5Z8fO7QUoI6FUfGV9sY8y68G27PzwaeQcLv9\n+UuL6UGFRYOEfOxsKhK9Z99UoySuPzGcOgo7Sr\n+Auth=DGAAAPYAAAA7M1KQj2uTozkpD3p0J-X32eVRbK2a7oXPtNkZ3Uon6Kw8RySEds7ygjgB95tC0c5\n+Y3CzEUpHHIytC1KuF4s7majdRZFtqCRKwuTmLDALvyGGU8dv4FUUvMC4i016Epuk8jpq0QKTccmv2yCi\n+RgoIr7oMWkX5NuuYAmLO-m8i52AqDcVg3cyRatVHmNZnpfmhs8bXKjjvFAzP8r4oaH5Z33ibQRljCXeR\n+e71lFjBsIQGvmwnV3bzTJTza4aKkmlfGTA9Zk5p4QlgXHlpvmgWznbmm_gp7t5Q4yXyR9AlMj1W6mvfk\n+_PzzjcGh_8AW-5f9iFSFUjxwDrRJKDAXKc0ko\n+Extract the \u201cAuth\u201d portion of it i.e. \n+\n+DGAAAPYAAAA7M1KQj2uTozkpD3p0J-X32eVRbK2a7oXPtNkZ3Uon6Kw8RySEds7ygjgB95tC0c5\n+Y3CzEUpHHIytC1KuF4s7majdRZFtqCRKwuTmLDALvyGGU8dv4FUUvMC4i016Epuk8jpq0QKTccmv2yCi\n+RgoIr7oMWkX5NuuYAmLO-m8i52AqDcVg3cyRatVHmNZnpfmhs8bXKjjvFAzP8r4oaH5Z33ibQRljCXeR\n+e71lFjBsIQGvmwnV3bzTJTza4aKkmlfGTA9Zk5p4QlgXHlpvmgWznbmm_gp7t5Q4yXyR9AlMj1W6mvfk\n+_PzzjcGh_8AW-5f9iFSFUjxwDrRJKDAXKc0ko\n+\n+And enter it into the urban airship application field which requests for the C2DM authorisation token. And finally create the Urban Airship app.\n+\n+Step 5:\n+\n+Create android project as per the example posted on github at: \n+\n+https://github.com/novoda/UrbanAirshipDemo\n+\n+Step 6:\n+\n+Once the code is compiled in order to test the push notifications log into your urban airship account and goto the Test Push Notifications, here you need your device token in order to test the notification.\n+\n+You can get the Token ID from the logs, search for a Log that resembles:\n+\n+01-04 15:17:58.746: D/Push Sample - UALib(9606): Updating APID: 17b3c59d-8338-4dd8-b6de-410a693e742a\n+\n+OR\n+\n+you can test by sending a broadcast\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/assets/airshipconfig.properties",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/lib/urbanairship-lib-1.0.7.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/c2dm_urban_airship/lib/urbanairship-lib-1.0.7.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/proguard.cfg",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+-optimizationpasses 5\n+-dontusemixedcaseclassnames\n+-dontskipnonpubliclibraryclasses\n+-dontpreverify\n+-verbose\n+-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n+\n+-keep public class * extends android.app.Activity\n+-keep public class * extends android.app.Application\n+-keep public class * extends android.app.Service\n+-keep public class * extends android.content.BroadcastReceiver\n+-keep public class * extends android.content.ContentProvider\n+-keep public class * extends android.app.backup.BackupAgentHelper\n+-keep public class * extends android.preference.Preference\n+-keep public class com.android.vending.licensing.ILicensingService\n+\n+-keepclasseswithmembernames class * {\n+    native <methods>;\n+}\n+\n+-keepclasseswithmembers class * {\n+    public <init>(android.content.Context, android.util.AttributeSet);\n+}\n+\n+-keepclasseswithmembers class * {\n+    public <init>(android.content.Context, android.util.AttributeSet, int);\n+}\n+\n+-keepclassmembers class * extends android.app.Activity {\n+   public void *(android.view.View);\n+}\n+\n+-keepclassmembers enum * {\n+    public static **[] values();\n+    public static ** valueOf(java.lang.String);\n+}\n+\n+-keep class * implements android.os.Parcelable {\n+  public static final android.os.Parcelable$Creator *;\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/project.properties",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must be checked in Version Control Systems.\n+#\n+# To customize properties used by the Ant build system use,\n+# \"ant.properties\", and override values to adapt the script to your\n+# project structure.\n+\n+# Project target.\n+target=Google Inc.:Google APIs:14\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/color/black.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n+    <item android:state_enabled=\"false\" android:color=\"#50000000\" />\n+    <item android:color=\"#FF000000\" />\n+</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/color/gray.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n+    <item android:state_enabled=\"false\" android:color=\"#80999999\" />\n+    <item android:color=\"#999999\" />\n+</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/color/white.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n+    <item android:state_enabled=\"false\" android:color=\"#80FFFFFF\" />\n+    <item android:color=\"#FFFFFF\" />\n+</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/c2dm_urban_airship/res/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/c2dm_urban_airship/res/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/c2dm_urban_airship/res/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/c2dm_urban_airship/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/drawable/icon_small.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/c2dm_urban_airship/res/drawable/icon_small.png differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/drawable/stripes.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/c2dm_urban_airship/res/drawable/stripes.png differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/drawable/tiledstripes.xml",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<bitmap xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:src=\"@drawable/stripes\" \n+    android:tileMode=\"repeat\" />\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout-v9/notification.xml",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:orientation=\"vertical\"\n+    android:layout_alignParentTop=\"true\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <ImageView android:id=\"@+id/icon\"\n+      android:src=\"@drawable/icon\"\n+      android:layout_marginRight=\"10px\"\n+      android:layout_marginLeft=\"0px\"\n+      android:layout_width=\"65dip\"\n+      android:layout_height=\"65dip\" />\n+      \n+  <TextView android:id=\"@+id/subject\"\n+      android:text=\"Subject\"\n+      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n+      android:layout_alignTop=\"@+id/icon\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_width=\"wrap_content\"\n+      android:maxLines=\"1\" />\n+\n+  <TextView android:id=\"@+id/message\"\n+      android:textSize=\"14dip\"\n+      android:text=\"Message\"\n+      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent\"\n+      android:maxLines=\"1\"\n+      android:layout_marginTop=\"3dip\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_below=\"@+id/subject\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_width=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout-v9/notification_large.xml",
            "additions": 43,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,43 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<RelativeLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"0dip\"\n+    android:layout_alignParentTop=\"true\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <ImageView android:id=\"@+id/icon\" \n+      android:src=\"@drawable/icon\"\n+      android:layout_width=\"65dip\"\n+      android:layout_height=\"65dip\" \n+      android:layout_margin=\"0dip\"/>\n+  \n+  <!-- The custom notification requires a subject field.\n+  To maximize space in this layout this\n+  field is hidden. Visibility is set to gone. -->\n+  <TextView android:id=\"@+id/subject\"\n+      android:text=\"Subject\"\n+      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n+      android:layout_alignTop=\"@+id/icon\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_width=\"wrap_content\"\n+      android:maxLines=\"1\" android:visibility=\"gone\"/> \n+      \n+  <!-- The message block. Standard text size is 14dip\n+  but is increased here to maximize impact. -->\n+  <TextView android:id=\"@+id/message\"\n+      android:textSize=\"48dip\"\n+      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n+      android:text=\"Message\"\n+      android:maxLines=\"4\"\n+      android:layout_marginTop=\"0dip\"\n+      android:layout_marginRight=\"2dip\"\n+      android:layout_marginLeft=\"10dip\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_width=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout-v9/notification_multi_line.xml",
            "additions": 44,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<RelativeLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"0dip\"\n+    android:layout_alignParentTop=\"true\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <ImageView android:id=\"@+id/icon\"\n+      android:src=\"@drawable/icon\"\n+      android:layout_marginRight=\"10dip\"\n+      android:layout_marginLeft=\"0dip\"\n+      android:layout_width=\"65dip\"\n+      android:layout_height=\"65dip\" />\n+      \n+  <!-- The custom notification requires a subject field.\n+  To accommodate multiple lines in this layout this\n+  field is hidden. Visibility is set to gone. -->\n+  <TextView android:id=\"@+id/subject\"\n+      android:text=\"Subject\"\n+      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n+      android:layout_alignTop=\"@+id/icon\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_width=\"wrap_content\"\n+      android:maxLines=\"1\" android:visibility=\"gone\"/> \n+\n+  <!-- The message block. Standard text size is 14dip\n+  but is reduced here to maximize content. -->\n+  <TextView android:id=\"@+id/message\"\n+      android:textSize=\"12dip\" \n+      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent\"\n+      android:text=\"Message\"\n+      android:maxLines=\"4\"\n+      android:layout_marginTop=\"0dip\"\n+      android:layout_marginRight=\"2dip\"\n+      android:layout_marginLeft=\"0dip\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_width=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout-v9/notification_three_lines.xml",
            "additions": 38,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"0px\"\n+    android:layout_alignParentTop=\"true\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <ImageView android:id=\"@+id/icon\"\n+      android:src=\"@drawable/icon\"\n+      android:layout_marginRight=\"10px\"\n+      android:layout_marginLeft=\"0px\"\n+      android:layout_width=\"65dip\"\n+      android:layout_height=\"65dip\" />\n+      \n+  <TextView android:id=\"@+id/subject\"\n+      android:text=\"Subject\"\n+      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent.Title\"\n+      android:layout_alignTop=\"@+id/icon\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_width=\"wrap_content\"\n+      android:maxLines=\"1\" android:visibility=\"gone\"/>\n+\n+  <TextView android:id=\"@+id/message\"\n+      android:textSize=\"14dip\"\n+      android:textAppearance=\"@android:style/TextAppearance.StatusBar.EventContent\"\n+      android:text=\"Message\"\n+      android:maxLines=\"3\"\n+      android:layout_marginTop=\"3dip\"\n+      android:layout_marginRight=\"6px\"\n+      android:layout_marginLeft=\"2px\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_width=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout/main.xml",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+      android:background=\"@drawable/tiledstripes\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <Button\n+        android:id=\"@+id/push_preferences_button\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"Preferences\" />\n+        \n+</LinearLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout/notification.xml",
            "additions": 38,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"8px\"\n+    android:layout_alignParentTop=\"true\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <ImageView android:id=\"@+id/icon\"\n+      android:src=\"@drawable/icon\"\n+      android:layout_marginRight=\"10px\"\n+      android:layout_marginLeft=\"10px\"\n+      android:layout_width=\"24dip\"\n+      android:layout_height=\"24dip\" />\n+      \n+  <TextView android:id=\"@+id/subject\"\n+      android:text=\"Subject\"\n+      style=\"@style/dark_bold_header\"\n+      android:layout_alignTop=\"@+id/icon\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_width=\"wrap_content\"\n+      android:maxLines=\"1\" />\n+\n+  <TextView android:id=\"@+id/message\"\n+      android:textSize=\"14dip\"\n+      android:textColor=\"#FF000000\"\n+      android:text=\"Message\"\n+      android:maxLines=\"1\"\n+      android:layout_marginTop=\"3dip\"\n+      android:layout_marginRight=\"10px\"\n+      android:layout_marginLeft=\"10px\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_below=\"@+id/subject\"\n+      android:layout_width=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout/notification_large.xml",
            "additions": 44,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<RelativeLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"2dip\"\n+    android:layout_alignParentTop=\"true\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <ImageView android:id=\"@+id/icon\"\n+      android:src=\"@drawable/icon\"\n+      android:layout_marginRight=\"4dip\"\n+      android:layout_marginLeft=\"5dip\"\n+      android:layout_width=\"100dip\"\n+      android:layout_height=\"100dip\" />\n+      \n+  <!-- The custom notification requires a subject field.\n+  To maximize space in this layout this\n+  field is hidden. Visibility is set to gone. -->\n+  <TextView android:id=\"@+id/subject\"\n+      android:text=\"Subject\"\n+      style=\"@style/dark_bold_header\"\n+      android:layout_alignTop=\"@+id/icon\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_width=\"wrap_content\"\n+      android:maxLines=\"1\" android:visibility=\"gone\"/> \n+\n+  <!-- The message block. Standard text size is 14dip\n+  but is increased here to maximize impact. -->\n+  <TextView android:id=\"@+id/message\"\n+      android:textSize=\"48dip\" \n+      android:textColor=\"#FF000000\"\n+      android:text=\"Message\"\n+      android:maxLines=\"4\"\n+      android:layout_marginTop=\"0dip\"\n+      android:layout_marginRight=\"2dip\"\n+      android:layout_marginLeft=\"0dip\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_width=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout/notification_multi_line.xml",
            "additions": 48,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<!--  A sample notification layout that\n+      fits 160 chars on a Nexus S display in\n+      portrait orientation -->\n+\n+<RelativeLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"2dip\"\n+    android:layout_alignParentTop=\"true\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <ImageView android:id=\"@+id/icon\"\n+      android:src=\"@drawable/icon\"\n+      android:layout_marginRight=\"4dip\"\n+      android:layout_marginLeft=\"5dip\"\n+      android:layout_width=\"24dip\"\n+      android:layout_height=\"24dip\" />\n+      \n+  <!-- The custom notification requires a subject field.\n+  To accommodate multiple lines in this layout this\n+  field is hidden. Visibility is set to gone. -->\n+  <TextView android:id=\"@+id/subject\"\n+      android:text=\"Subject\"\n+      style=\"@style/dark_bold_header\"\n+      android:layout_alignTop=\"@+id/icon\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_width=\"wrap_content\"\n+      android:maxLines=\"1\" android:visibility=\"gone\"/> \n+\n+  <!-- The message block. Standard text size is 14dip\n+  but is reduced here to maximize content. -->\n+  <TextView android:id=\"@+id/message\"\n+      android:textSize=\"12dip\" \n+      android:textColor=\"#FF000000\"\n+      android:text=\"Message\"\n+      android:maxLines=\"4\"\n+      android:layout_marginTop=\"0dip\"\n+      android:layout_marginRight=\"2dip\"\n+      android:layout_marginLeft=\"0dip\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_width=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout/notification_three_lines.xml",
            "additions": 38,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"6px\"\n+    android:layout_alignParentTop=\"true\"\n+    android:layout_height=\"fill_parent\">\n+    \n+  <ImageView android:id=\"@+id/icon\"\n+      android:src=\"@drawable/icon\"\n+      android:layout_marginRight=\"8px\"\n+      android:layout_marginLeft=\"10px\"\n+      android:layout_width=\"24dip\"\n+      android:layout_height=\"24dip\" />\n+      \n+  <TextView android:id=\"@+id/subject\"\n+      android:text=\"Subject\"\n+      style=\"@style/dark_bold_header\"\n+      android:layout_alignTop=\"@+id/icon\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_width=\"wrap_content\"\n+      android:maxLines=\"1\" android:visibility=\"gone\"/>\n+\n+  <TextView android:id=\"@+id/message\"\n+      android:textSize=\"14dip\"\n+      android:textColor=\"#FF000000\"\n+      android:text=\"Message\"\n+      android:maxLines=\"3\"\n+      android:layout_marginTop=\"3dip\"\n+      android:layout_marginRight=\"6px\"\n+      android:layout_marginLeft=\"2px\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_toRightOf=\"@+id/icon\"\n+      android:layout_width=\"wrap_content\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/layout/push_preferences_dialog.xml",
            "additions": 100,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,100 @@\n+<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+              android:id=\"@+id/layout_root\"\n+              android:layout_width=\"fill_parent\"\n+              android:layout_height=\"fill_parent\">\n+\n+<LinearLayout android:orientation=\"vertical\"\n+              android:layout_width=\"fill_parent\"\n+              android:layout_height=\"fill_parent\"\n+              android:padding=\"20dip\">\n+\n+\t<LinearLayout android:orientation=\"horizontal\"\n+                  android:layout_width=\"fill_parent\"\n+                  android:layout_height=\"fill_parent\">\n+\n+        <CheckBox android:id=\"@+id/push_enabled\"\n+            android:layout_height=\"wrap_content\"\n+            android:checked=\"true\"\n+            android:layout_width=\"wrap_content\"/>\n+\n+        <TextView android:text=\"Push Enabled\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_width=\"wrap_content\"\n+            android:textSize=\"16dip\"/>\n+\n+\t</LinearLayout>\n+\t\n+\t<LinearLayout android:orientation=\"horizontal\"\n+                  android:layout_width=\"fill_parent\"\n+                  android:layout_height=\"fill_parent\">\n+\n+        <CheckBox android:id=\"@+id/sound_enabled\"\n+            android:layout_height=\"wrap_content\"\n+            android:checked=\"true\"\n+            android:layout_width=\"wrap_content\"/>\n+\n+        <TextView android:text=\"Sound Enabled\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_width=\"wrap_content\"\n+            android:textSize=\"16dip\"/>\n+\n+\t</LinearLayout>\n+\t\n+\t\t<LinearLayout android:orientation=\"horizontal\"\n+                  android:layout_width=\"fill_parent\"\n+                  android:layout_height=\"fill_parent\">\n+\n+        <CheckBox android:id=\"@+id/vibrate_enabled\"\n+            android:layout_height=\"wrap_content\"\n+            android:checked=\"true\"\n+            android:layout_width=\"wrap_content\"/>\n+\n+        <TextView android:text=\"Vibrate Enabled\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_width=\"wrap_content\"\n+            android:textSize=\"16dip\"/>\n+\n+\t</LinearLayout>\n+\t\n+\t\t<LinearLayout android:orientation=\"horizontal\"\n+                  android:layout_width=\"fill_parent\"\n+                  android:layout_height=\"fill_parent\">\n+\n+        <CheckBox android:id=\"@+id/quiet_time_enabled\"\n+            android:layout_height=\"wrap_content\"\n+            android:checked=\"true\"\n+            android:layout_width=\"wrap_content\"/>\n+\n+        <TextView android:text=\"Quiet Time Enabled\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_width=\"wrap_content\"\n+            android:textSize=\"16dip\"/>\n+\n+\t</LinearLayout>\n+              \n+<TextView\n+    android:text=\"Start Time\"\n+    android:layout_height=\"wrap_content\"\n+    android:layout_width=\"wrap_content\"\n+    android:textSize=\"16dip\"/>\n+            \n+<TimePicker\n+    android:enabled=\"false\"\n+    android:id=\"@+id/start_time\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"/>\n+\n+<TextView\n+    android:paddingTop=\"10dip\"\n+    android:text=\"End Time\"\n+    android:layout_height=\"wrap_content\"\n+    android:layout_width=\"wrap_content\"\n+    android:textSize=\"16dip\"/>\n+    \n+<TimePicker\n+    android:id=\"@+id/end_time\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\"/>\n+    \n+</LinearLayout>\n+</ScrollView>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/raw/cat.wav",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/c2dm_urban_airship/res/raw/cat.wav differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/values/strings.xml",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+  <string name=\"app_name\">Push Sample</string>\n+  <string name=\"short_app_name\">PushSample</string>\n+\n+  <string name=\"app_description\">\n+      \u00a9 2011 Urban Airship, Inc. All Rights Reserved.\\n\\n\n+  </string>\n+</resources>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/res/values/text_styles.xml",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <style name=\"header_base\">\n+        <item name=\"android:textColor\">@color/black</item>\n+    </style>\n+    <style name=\"dark_header_base\">\n+        <item name=\"android:textColor\">@color/black</item>\n+    </style>    \n+    <style name=\"header\" parent=\"header_base\">\n+        <item name=\"android:textSize\">22dip</item>\n+    </style>\n+    <style name=\"bold_header\" parent=\"header_base\">\n+        <item name=\"android:textSize\">18dip</item>\n+        <item name=\"android:textStyle\">bold</item>\n+    </style>\n+    <style name=\"dark_bold_header\" parent=\"dark_header_base\">\n+        <item name=\"android:textSize\">18dip</item>\n+        <item name=\"android:textStyle\">bold</item>\n+    </style>    \n+</resources>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/com/novoda/urbanairship/demo/IntentReceiver.java",
            "additions": 100,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,100 @@\n+/*\n+Copyright 2009-2011 Urban Airship Inc. All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this\n+list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice,\n+this list of conditions and the following disclaimer in the documentation\n+and/or other materials provided with the distribution.\n+\n+THIS SOFTWARE IS PROVIDED BY THE URBAN AIRSHIP INC ``AS IS'' AND ANY EXPRESS OR\n+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n+EVENT SHALL URBAN AIRSHIP INC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n+BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n+LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n+OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n+ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+*/\n+\n+package com.novoda.urbanairship.demo;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Set;\n+\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.util.Log;\n+\n+import com.urbanairship.UAirship;\n+import com.urbanairship.push.PushManager;\n+\n+public class IntentReceiver extends BroadcastReceiver {\n+\n+\tprivate static final String logTag = \"PushSample\";\n+\t\n+\t@Override\n+\tpublic void onReceive(Context context, Intent intent) {\n+\t\tLog.i(logTag, \"Received intent: \" + intent.toString());\n+\t\tString action = intent.getAction();\n+\n+\t\tif (action.equals(PushManager.ACTION_PUSH_RECEIVED)) {\n+\n+\t\t    int id = intent.getIntExtra(PushManager.EXTRA_NOTIFICATION_ID, 0);\n+\n+\t\t    Log.i(logTag, \"Received push notification. Alert: \" \n+\t\t            + intent.getStringExtra(PushManager.EXTRA_ALERT)\n+\t\t            + \" [NotificationID=\"+id+\"]\");\n+\n+\t\t    logPushExtras(intent);\n+\n+\t\t} else if (action.equals(PushManager.ACTION_NOTIFICATION_OPENED)) {\n+\n+\t\t\tLog.i(logTag, \"User clicked notification. Message: \" + intent.getStringExtra(PushManager.EXTRA_ALERT));\n+\n+\t\t\tlogPushExtras(intent);\n+\n+            Intent launch = new Intent(Intent.ACTION_MAIN);\n+\t\t\tlaunch.setClass(UAirship.shared().getApplicationContext(), MainActivity.class);\n+\t\t\tlaunch.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n+\t\t\t\n+            UAirship.shared().getApplicationContext().startActivity(launch);\n+\n+\t\t} else if (action.equals(PushManager.ACTION_REGISTRATION_FINISHED)) {\n+            Log.i(logTag, \"Registration complete. APID:\" + intent.getStringExtra(PushManager.EXTRA_APID)\n+                    + \". Valid: \" + intent.getBooleanExtra(PushManager.EXTRA_REGISTRATION_VALID, false));\n+\t\t}\n+\n+\t}\n+\n+\t/**\n+\t * Log the values sent in the payload's \"extra\" dictionary.\n+\t * \n+\t * @param intent A PushManager.ACTION_NOTIFICATION_OPENED or ACTION_PUSH_RECEIVED intent.\n+\t */\n+\tprivate void logPushExtras(Intent intent) {\n+        Set<String> keys = intent.getExtras().keySet();\n+        for (String key : keys) {\n+\n+            //ignore standard C2DM extra keys\n+            List<String> ignoredKeys = (List<String>)Arrays.asList(\n+                    \"collapse_key\",//c2dm collapse key\n+                    \"from\",//c2dm sender\n+                    PushManager.EXTRA_NOTIFICATION_ID,//int id of generated notification (ACTION_PUSH_RECEIVED only)\n+                    PushManager.EXTRA_PUSH_ID,//internal UA push id\n+                    PushManager.EXTRA_ALERT);//ignore alert\n+            if (ignoredKeys.contains(key)) {\n+                continue;\n+            }\n+            Log.i(logTag, \"Push Notification Extra: [\"+key+\" : \" + intent.getStringExtra(key) + \"]\");\n+        }\n+\t}\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/com/novoda/urbanairship/demo/MainActivity.java",
            "additions": 55,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,55 @@\n+/*\n+Copyright 2009-2011 Urban Airship Inc. All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this\n+list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice,\n+this list of conditions and the following disclaimer in the documentation\n+and/or other materials provided with the distribution.\n+\n+THIS SOFTWARE IS PROVIDED BY THE URBAN AIRSHIP INC ``AS IS'' AND ANY EXPRESS OR\n+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n+EVENT SHALL URBAN AIRSHIP INC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n+BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n+LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n+OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n+ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+*/\n+\n+package com.novoda.urbanairship.demo;\n+\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.widget.Button;\n+\n+import com.urbanairship.analytics.InstrumentedActivity;\n+\n+public class MainActivity extends InstrumentedActivity {\n+    \n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.main);\n+        \n+        Button launchButton = (Button) findViewById(R.id.push_preferences_button);\n+        \n+        launchButton.setOnClickListener(new OnClickListener() {\n+        \t\n+            public void onClick(View v) {\n+                Intent intent = new Intent(getBaseContext(), PushPreferencesActivity.class);\n+                startActivity(intent);\n+            }\n+        });\n+\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/com/novoda/urbanairship/demo/PushPreferencesActivity.java",
            "additions": 179,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,179 @@\n+/*\n+Copyright 2009-2011 Urban Airship Inc. All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this\n+list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice,\n+this list of conditions and the following disclaimer in the documentation\n+and/or other materials provided with the distribution.\n+\n+THIS SOFTWARE IS PROVIDED BY THE URBAN AIRSHIP INC ``AS IS'' AND ANY EXPRESS OR\n+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n+EVENT SHALL URBAN AIRSHIP INC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n+BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n+LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n+OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n+ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+*/\n+\n+package com.novoda.urbanairship.demo;\n+\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import android.content.res.Configuration;\n+import android.os.Bundle;\n+import android.text.format.DateFormat;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.view.Window;\n+import android.widget.CheckBox;\n+import android.widget.TimePicker;\n+\n+import com.urbanairship.analytics.InstrumentedActivity;\n+import com.urbanairship.push.PushManager;\n+import com.urbanairship.push.PushPreferences;\n+\n+// This class represents the UI and implementation of the activity enabling users\n+// to set Quiet Time preferences.\n+\n+public class PushPreferencesActivity extends InstrumentedActivity {\n+\t\n+    CheckBox pushEnabled;\n+    CheckBox soundEnabled;\n+    CheckBox vibrateEnabled;\n+    CheckBox quietTimeEnabled;\n+    \n+    TimePicker startTime;\n+    TimePicker endTime;\n+    \n+    PushPreferences prefs = PushManager.shared().getPreferences();\n+\n+    \n+    private void pushSettingsActive(boolean b) {\n+    \tsoundEnabled.setEnabled(b);\n+    \tvibrateEnabled.setEnabled(b);\n+    }\n+    \n+    private void quietTimeSettingsActive(boolean b) {\n+    \tstartTime.setEnabled(b);\n+    \tendTime.setEnabled(b);\n+    }\n+    \n+    @Override\n+    public void onCreate(Bundle icicle) {\n+        super.onCreate(icicle);\n+\n+        Window w = getWindow();\n+        w.requestFeature(Window.FEATURE_LEFT_ICON);\n+        setContentView(R.layout.push_preferences_dialog);\n+        \n+        pushEnabled = (CheckBox) findViewById(R.id.push_enabled);\n+        soundEnabled = (CheckBox) findViewById(R.id.sound_enabled);\n+        vibrateEnabled = (CheckBox) findViewById(R.id.vibrate_enabled);\n+        quietTimeEnabled = (CheckBox) findViewById(R.id.quiet_time_enabled);\n+        \n+        startTime = (TimePicker) findViewById(R.id.start_time);\n+        endTime = (TimePicker) findViewById(R.id.end_time);\n+\n+        startTime.setIs24HourView(DateFormat.is24HourFormat(this));\n+        endTime.setIs24HourView(DateFormat.is24HourFormat(this));\n+        \n+        pushEnabled.setOnClickListener(new OnClickListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tpushSettingsActive(((CheckBox)v).isChecked());\n+\t\t\t}\n+        \t\n+        });\n+        \n+        quietTimeEnabled.setOnClickListener(new OnClickListener(){\n+\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tquietTimeSettingsActive(((CheckBox)v).isChecked());\n+\t\t\t}\n+        });\n+        \n+    }\n+\n+    // When the activity starts, we need to fetch and display the user's current\n+    // Push preferences in the view, if applicable.\n+    @Override\n+    public void onStart() {\n+        super.onStart();\n+        \n+        boolean isPushEnabled = prefs.isPushEnabled();\n+        pushEnabled.setChecked(isPushEnabled);\n+        soundEnabled.setChecked(prefs.isSoundEnabled());\n+        vibrateEnabled.setChecked(prefs.isVibrateEnabled());\n+        pushSettingsActive(isPushEnabled);\n+        \n+        boolean isQuietTimeEnabled = prefs.isQuietTimeEnabled();\n+        quietTimeEnabled.setChecked(isQuietTimeEnabled);\n+        quietTimeSettingsActive(isQuietTimeEnabled);\n+        \n+        //this will be null if a quiet time interval hasn't been set\n+        Date[] interval = prefs.getQuietTimeInterval();\n+        if(interval != null) {\n+\t        startTime.setCurrentHour(interval[0].getHours());\n+\t        startTime.setCurrentMinute(interval[0].getMinutes());\n+\t        endTime.setCurrentHour(interval[1].getHours());\n+\t        endTime.setCurrentMinute(interval[1].getMinutes());\n+        }\n+    }\n+\n+    // When the activity is closed, save the user's Push preferences\n+    @Override\n+    public void onStop() {\n+        super.onStop();\n+        \n+        boolean isPushEnabledInActivity = pushEnabled.isChecked();\n+        boolean isQuietTimeEnabledInActivity = quietTimeEnabled.isChecked();\n+        \n+        if(isPushEnabledInActivity) {\n+        \tPushManager.enablePush();\n+        }\n+        else {\n+        \tPushManager.disablePush();\n+        }\n+       \n+        prefs.setSoundEnabled(soundEnabled.isChecked());\n+        prefs.setVibrateEnabled(vibrateEnabled.isChecked());\n+              \n+        prefs.setQuietTimeEnabled(isQuietTimeEnabledInActivity);\n+        \n+        if(isQuietTimeEnabledInActivity) {\n+        \n+\t        // Grab the start date.\n+\t        Calendar cal = Calendar.getInstance();\n+\t        cal.set(Calendar.HOUR_OF_DAY, startTime.getCurrentHour());\n+\t        cal.set(Calendar.MINUTE, startTime.getCurrentMinute());\n+\t        Date startDate = cal.getTime();\n+\t\n+\t        // Prepare the end date.\n+\t        cal = Calendar.getInstance();\n+\t        cal.set(Calendar.HOUR_OF_DAY, endTime.getCurrentHour());\n+\t        cal.set(Calendar.MINUTE, endTime.getCurrentMinute());\n+\t        Date endDate = cal.getTime();\n+\t        \n+\t        prefs.setQuietTimeInterval(startDate, endDate);\n+        }\n+    }\n+\n+    @Override\n+    public void onConfigurationChanged(Configuration newConfig) {\n+        super.onConfigurationChanged(newConfig);\n+        // DO NOT REMOVE, just having it here seems to fix a weird issue with\n+        // Time picker where the fields would go blank on rotation.\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/c2dm_urban_airship/src/com/novoda/urbanairship/demo/UADemoApplication.java",
            "additions": 76,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,76 @@\n+/*\n+Copyright 2009-2011 Urban Airship Inc. All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this\n+list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice,\n+this list of conditions and the following disclaimer in the documentation\n+and/or other materials provided with the distribution.\n+\n+THIS SOFTWARE IS PROVIDED BY THE URBAN AIRSHIP INC ``AS IS'' AND ANY EXPRESS OR\n+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n+EVENT SHALL URBAN AIRSHIP INC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n+BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n+LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n+OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n+ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+*/\n+\n+package com.novoda.urbanairship.demo;\n+\n+import android.app.Application;\n+import android.util.Log;\n+\n+import com.urbanairship.AirshipConfigOptions;\n+import com.urbanairship.Logger;\n+import com.urbanairship.UAirship;\n+import com.urbanairship.push.CustomPushNotificationBuilder;\n+import com.urbanairship.push.PushManager;\n+\n+public class UADemoApplication extends Application {\n+    \n+    @Override\n+    public void onCreate() {\n+        \n+        super.onCreate();\n+        \n+        AirshipConfigOptions options = AirshipConfigOptions.loadDefaultOptions(this);\n+\n+        // Optionally, customize your config at runtime:\n+        //\n+         options.inProduction = false;\n+         options.developmentAppKey = \"eYhRyqBFT8GckDWywDgqzQ\";\n+         options.developmentAppSecret = \"kSFFVVBgQjaNUCUjjNu7tw\";\n+         options.transport = \"hybrid\";//\"helium\";\n+         options.c2dmSender = \"akshaydashrath@gmail.com\";\n+         options.analyticsEnabled = false;\n+                \n+\n+        UAirship.takeOff(this, options);\n+        Logger.logLevel = Log.VERBOSE;\n+        \n+        //use CustomPushNotificationBuilder to specify a custom layout\n+        CustomPushNotificationBuilder nb = new CustomPushNotificationBuilder();\n+\n+        nb.statusBarIconDrawableId = R.drawable.icon_small;//custom status bar icon\n+\n+        nb.layout = R.layout.notification;\n+        nb.layoutIconDrawableId = R.drawable.icon;//custom layout icon\n+        nb.layoutIconId = R.id.icon;\n+        nb.layoutSubjectId = R.id.subject;\n+        nb.layoutMessageId = R.id.message;\n+\n+        // customize the sound played when a push is received\n+        //nb.soundUri = Uri.parse(\"android.resource://\"+this.getPackageName()+\"/\" +R.raw.cat);\n+\n+        PushManager.shared().setNotificationBuilder(nb);\n+        PushManager.shared().setIntentReceiver(IntentReceiver.class);\n+    }\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/README",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+GCM demo App Engine server\n+---------------------------\n+\n+1.To run the server in your local App Engine server, run:\n+\n+  ant -Dsdk.dir=PATH_TO_APP_ENGINE_JAVA_SDK runserver\n+\n+\n+ If the compilation fails because of missing classes from the com.google.android.gcm.server package, check if the WebContent/WEB-INF/lib directory contains the gcm-server.jar file. If it doesn't, then run:\n+\n+  ant -f ../../gcm-server/build.xml update-demo\n+\n+ Then run the runserver task again.\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/build.xml",
            "additions": 113,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,113 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  - Copyright 2012 Google Inc.\n+  -\n+  - Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  - use this file except in compliance with the License. You may obtain a copy\n+  - of the License at\n+  -\n+  - http://www.apache.org/licenses/LICENSE-2.0\n+  -\n+  - Unless required by applicable law or agreed to in writing, software\n+  - distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  - License for the specific language governing permissions and limitations\n+  - under the License.\n+-->\n+<project name=\"judo-merchants-demo-appengine\" default=\"dist\">\n+\n+  <!-- Set the Google App Engine SDK location below or using -Dsdk.dir -->\n+  <!--\n+  <property name=\"sdk.dir\" location=\"/opt/google/appengine-java-sdk\" />\n+  -->\n+  <!-- Also set the property below to your server's host name or ip address -->\n+  <property name=\"server.host\" value=\"localhost\"/>\n+  <property name=\"server.port\" value=\"8080\"/>\n+\n+  <import file=\"${sdk.dir}/config/user/ant-macros.xml\" />\n+\n+  <property name=\"src\" location=\"src\"/>\n+  <property name=\"lib\" location=\"lib\"/>\n+  <property name=\"build\" location=\"build\"/>\n+  <property name=\"dist\" location=\"dist\"/>\n+  <property name=\"war\" value=\"${dist}/gcm-demo.war\"/>\n+  <property name=\"web-src\" value=\"WebContent\"/>\n+  <property name=\"web-inf\" value=\"${web-src}/WEB-INF\"/>\n+  <property name=\"web-lib\" value=\"${web-inf}/lib\"/>\n+  <property name=\"classes\" location=\"${web-inf}/classes\"/>\n+\n+  <path id=\"compile.classpath\">\n+    <fileset dir=\"${lib}\">\n+      <include name=\"*.jar\"/>\n+    </fileset>\n+    <fileset dir=\"${web-lib}\">\n+      <include name=\"*.jar\"/>\n+    </fileset>\n+  </path>\n+\n+  <target name=\"clean\" description=\"Clean all artifacts except the dist files.\">\n+    <delete dir=\"${build}\"/>\n+    <delete dir=\"${classes}\"/>\n+    <delete>\n+      <fileset dir=\"${web-lib}\" excludes=\"gcm-server.jar,json_simple*.jar\"/>\n+    </delete>\n+  </target>\n+\n+  <target name=\"full-clean\" depends=\"clean\" description=\"Clean all artifacts including the dist files.\">\n+    <delete dir=\"${dist}\"/>\n+    <delete file=\"${web-lib}/gcm-server.jar\"/>\n+  </target>\n+\n+  <target name=\"init\">\n+    <mkdir dir=\"${classes}\"/>\n+    <mkdir dir=\"${dist}\"/>\n+  </target>\n+\n+  <target name=\"copyjars\" depends=\"init\" description=\"Copies the App Engine JARs to the WAR.\" if=\"sdk.dir\">\n+    <copy todir=\"${web-lib}\" flatten=\"true\">\n+      <fileset dir=\"${sdk.dir}/lib/user\">\n+        <include name=\"**/*.jar\" />\n+      </fileset>\n+    </copy>\n+  </target>\n+\n+  <target name=\"compile\" depends=\"copyjars\" description=\"Compile the Java classes.\">\n+    <javac destdir=\"${classes}\" debug=\"true\" srcdir=\"${src}\" target=\"1.5\"\n+      includeantruntime=\"false\">\n+      <classpath refid=\"compile.classpath\"/>\n+    </javac>\n+  </target>\n+\n+  <target name=\"datanucleusenhance\" depends=\"compile\" description=\"Performs JDO enhancement on compiled data classes.\">\n+    <enhance_war war=\"${web-src}\" />\n+  </target>\n+\n+\n+  <target name=\"war\" depends=\"datanucleusenhance\" description=\"Generate the WAR file.\">\n+    <war destfile=\"${war}\" webxml=\"${web-src}/WEB-INF/web.xml\">\n+      <fileset dir=\"${web-src}\"/>\n+      <classes dir=\"${classes}\"/>\n+    </war>\n+  </target>\n+\n+  <target name=\"dist\" depends=\"war\" description=\"Generate all artifacts.\"/>\n+\n+  <target name=\"runserver\" depends=\"datanucleusenhance\" description=\"Starts the development server.\">\n+    <dev_appserver war=\"${web-src}\" port=\"${server.port}\" address=\"${server.host}\"/>\n+  </target>\n+\n+  <!-- You can give the development server arguments using attributes and an <options> element.\n+       For example, the following target starts the server using the port 8888,\n+       and enables remote Java debugging on port 9999:\n+  -->\n+  <target name=\"debugserver\" depends=\"datanucleusenhance\" description=\"Starts the development server on debug mode.\">\n+    <dev_appserver war=\"${web-src}\" port=\"${server.port}\" address=\"${server.host}\">\n+      <options>\n+        <arg value=\"--jvm_flag=-Xdebug\"/>\n+        <arg value=\"--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9999\"/>\n+      </options>\n+    </dev_appserver>\n+  </target>\n+\n+</project>\n+\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/lib/gcm-server.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/lib/gcm-server.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/lib/servlet-api-2.5.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/lib/servlet-api-2.5.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/ApiKeyInitializer.java",
            "additions": 70,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2012 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.judo.android.gcm.demo.server;\n+\n+import com.google.appengine.api.datastore.DatastoreService;\n+import com.google.appengine.api.datastore.DatastoreServiceFactory;\n+import com.google.appengine.api.datastore.Entity;\n+import com.google.appengine.api.datastore.EntityNotFoundException;\n+import com.google.appengine.api.datastore.Key;\n+import com.google.appengine.api.datastore.KeyFactory;\n+\n+import java.util.logging.Logger;\n+\n+import javax.servlet.ServletContextEvent;\n+import javax.servlet.ServletContextListener;\n+\n+/**\n+ * Context initializer that loads the API key from the App Engine datastore.\n+ */\n+public class ApiKeyInitializer implements ServletContextListener {\n+\n+  static final String ATTRIBUTE_ACCESS_KEY = \"apiKey\";\n+\n+  private static final String ENTITY_KIND = \"Settings\";\n+  private static final String ENTITY_KEY = \"MyKey\";\n+  private static final String ACCESS_KEY_FIELD = \"ApiKey\";\n+\n+  private final Logger logger = Logger.getLogger(getClass().getName());\n+\n+  public void contextInitialized(ServletContextEvent event) {\n+    DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();\n+    Key key = KeyFactory.createKey(ENTITY_KIND, ENTITY_KEY);\n+\n+    Entity entity;\n+    try {\n+      entity = datastore.get(key);\n+    } catch (EntityNotFoundException e) {\n+      entity = new Entity(key);\n+      // NOTE: it's not possible to change entities in the local server, so\n+      // it will be necessary to hardcode the API key below if you are running\n+      // it locally.\n+      entity.setProperty(ACCESS_KEY_FIELD,\n+          \"AIzaSyBytNqJYH89Wku8Xq_fTYG01bOdApTVmIE\");\n+      datastore.put(entity);\n+      logger.severe(\"Created fake key. Please go to App Engine admin \"\n+          + \"console, change its value to your API Key (the entity \"\n+          + \"type is '\" + ENTITY_KIND + \"' and its field to be changed is '\"\n+          + ACCESS_KEY_FIELD + \"'), then restart the server!\");\n+    }\n+    String accessKey = (String) entity.getProperty(ACCESS_KEY_FIELD);\n+    event.getServletContext().setAttribute(ATTRIBUTE_ACCESS_KEY, accessKey);\n+  }\n+\n+  public void contextDestroyed(ServletContextEvent event) {\n+  }\n+\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/BaseServlet.java",
            "additions": 91,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2012 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.judo.android.gcm.demo.server;\n+\n+import java.io.IOException;\n+import java.util.Enumeration;\n+import java.util.logging.Logger;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * Skeleton class for all servlets in this package.\n+ */\n+@SuppressWarnings(\"serial\")\n+abstract class BaseServlet extends HttpServlet {\n+\n+  // change to true to allow GET calls\n+  static final boolean DEBUG = true;\n+\n+  protected final Logger logger = Logger.getLogger(getClass().getName());\n+\n+  @Override\n+  protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n+      throws IOException, ServletException {\n+    if (DEBUG) {\n+      doPost(req, resp);\n+    } else {\n+      super.doGet(req, resp);\n+    }\n+  }\n+\n+  protected String getParameter(HttpServletRequest req, String parameter)\n+      throws ServletException {\n+    String value = req.getParameter(parameter);\n+    if (isEmptyOrNull(value)) {\n+      if (DEBUG) {\n+        StringBuilder parameters = new StringBuilder();\n+        @SuppressWarnings(\"unchecked\")\n+        Enumeration<String> names = req.getParameterNames();\n+        while (names.hasMoreElements()) {\n+          String name = names.nextElement();\n+          String param = req.getParameter(name);\n+          parameters.append(name).append(\"=\").append(param).append(\"\\n\");\n+        }\n+        logger.fine(\"parameters: \" + parameters);\n+      }\n+      throw new ServletException(\"Parameter \" + parameter + \" not found\");\n+    }\n+    return value.trim();\n+  }\n+\n+  protected String getParameter(HttpServletRequest req, String parameter,\n+      String defaultValue) {\n+    String value = req.getParameter(parameter);\n+    if (isEmptyOrNull(value)) {\n+      value = defaultValue;\n+    }\n+    return value.trim();\n+  }\n+\n+  protected void setSuccess(HttpServletResponse resp) {\n+    setSuccess(resp, 0);\n+  }\n+\n+  protected void setSuccess(HttpServletResponse resp, int size) {\n+    resp.setStatus(HttpServletResponse.SC_OK);\n+    resp.setContentType(\"text/plain\");\n+    resp.setContentLength(size);\n+  }\n+\n+  protected boolean isEmptyOrNull(String value) {\n+    return value == null || value.trim().length() == 0;\n+  }\n+\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/Datastore.java",
            "additions": 401,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,401 @@\n+/*\n+ * Copyright 2012 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.judo.android.gcm.demo.server;\n+\n+import com.google.appengine.api.datastore.DatastoreService;\n+import com.google.appengine.api.datastore.DatastoreServiceFactory;\n+import com.google.appengine.api.datastore.Entity;\n+import com.google.appengine.api.datastore.EntityNotFoundException;\n+import com.google.appengine.api.datastore.FetchOptions;\n+import com.google.appengine.api.datastore.Key;\n+import com.google.appengine.api.datastore.KeyFactory;\n+import com.google.appengine.api.datastore.PreparedQuery;\n+import com.google.appengine.api.datastore.Query;\n+import com.google.appengine.api.datastore.Query.FilterOperator;\n+import com.google.appengine.api.datastore.Transaction;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.logging.Logger;\n+\n+/**\n+ * Simple implementation of a data store using standard Java collections.\n+ * <p>\n+ * This class is neither persistent (it will lost the data when the app is\n+ * restarted) nor thread safe.\n+ */\n+public final class Datastore {\n+\n+  static final int MULTICAST_SIZE = 1000;\n+  private static final String DEVICE_TYPE = \"Device\";\n+  private static final String DEVICE_REG_ID_PROPERTY = \"regId\";\n+\n+  private static final String NOTIFICATION_TYPE = \"Notification\";\n+  private static final String NOTIFICATION_STATUS_PROPERTY = \"status\";\n+  private static final String NOTIFICATION_REG_ID_PROPERTY = \"regId\";\n+  private static final String NOTIFICATION_TIMESTAMP_PROPERTY = \"timestamp\";\n+\n+    private static final String MULTICAST_TYPE = \"Multicast\";\n+  private static final String MULTICAST_REG_IDS_PROPERTY = \"regIds\";\n+\n+  private static final FetchOptions DEFAULT_FETCH_OPTIONS = FetchOptions.Builder\n+      .withPrefetchSize(MULTICAST_SIZE).chunkSize(MULTICAST_SIZE);\n+\n+  private static final Logger logger =\n+      Logger.getLogger(Datastore.class.getName());\n+  private static final DatastoreService datastore =\n+      DatastoreServiceFactory.getDatastoreService();\n+\n+  private Datastore() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  /**\n+   * Registers a device.\n+   *\n+   * @param regId device's registration id.\n+   */\n+  public static void register(String regId) {\n+    logger.info(\"Registering \" + regId);\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      Entity entity = findDeviceByRegId(regId);\n+      if (entity != null) {\n+        logger.fine(regId + \" is already registered; ignoring.\");\n+        return;\n+      }\n+      entity = new Entity(DEVICE_TYPE);\n+      entity.setProperty(DEVICE_REG_ID_PROPERTY, regId);\n+      datastore.put(entity);\n+      txn.commit();\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Unregisters a device.\n+   *\n+   * @param regId device's registration id.\n+   */\n+  public static void unregister(String regId) {\n+    logger.info(\"Unregistering \" + regId);\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      Entity entity = findDeviceByRegId(regId);\n+      if (entity == null) {\n+        logger.warning(\"Device \" + regId + \" already unregistered\");\n+      } else {\n+        Key key = entity.getKey();\n+        datastore.delete(key);\n+      }\n+      txn.commit();\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Updates the registration id of a device.\n+   */\n+  public static void updateRegistration(String oldId, String newId) {\n+    logger.info(\"Updating \" + oldId + \" to \" + newId);\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      Entity entity = findDeviceByRegId(oldId);\n+      if (entity == null) {\n+        logger.warning(\"No device for registration id \" + oldId);\n+        return;\n+      }\n+      entity.setProperty(DEVICE_REG_ID_PROPERTY, newId);\n+      datastore.put(entity);\n+      txn.commit();\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Gets all registered devices.\n+   */\n+  public static List<String> getDevices() {\n+    List<String> devices;\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      Query query = new Query(DEVICE_TYPE);\n+      Iterable<Entity> entities =\n+          datastore.prepare(query).asIterable(DEFAULT_FETCH_OPTIONS);\n+      devices = new ArrayList<String>();\n+      for (Entity entity : entities) {\n+        String device = (String) entity.getProperty(DEVICE_REG_ID_PROPERTY);\n+        devices.add(device);\n+      }\n+      txn.commit();\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+    return devices;\n+  }\n+\n+  /**\n+   * Gets the number of total devices.\n+   */\n+  public static int getTotalDevices() {\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      Query query = new Query(DEVICE_TYPE).setKeysOnly();\n+      List<Entity> allKeys =\n+          datastore.prepare(query).asList(DEFAULT_FETCH_OPTIONS);\n+      int total = allKeys.size();\n+      logger.fine(\"Total number of devices: \" + total);\n+      txn.commit();\n+      return total;\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+  }\n+\n+  private static Entity findDeviceByRegId(String regId) {\n+    Query query = new Query(DEVICE_TYPE)\n+        .addFilter(DEVICE_REG_ID_PROPERTY, FilterOperator.EQUAL, regId);\n+    PreparedQuery preparedQuery = datastore.prepare(query);\n+    List<Entity> entities = preparedQuery.asList(DEFAULT_FETCH_OPTIONS);\n+    Entity entity = null;\n+    if (!entities.isEmpty()) {\n+      entity = entities.get(0);\n+    }\n+    int size = entities.size();\n+    if (size > 0) {\n+      logger.severe(\n+          \"Found \" + size + \" entities for regId \" + regId + \": \" + entities);\n+    }\n+    return entity;\n+  }\n+\n+  /**\n+   * Creates a persistent record with the devices to be notified using a\n+   * multicast message.\n+   *\n+   * @param devices registration ids of the devices.\n+   * @return encoded key for the persistent record.\n+   */\n+  public static String createMulticast(List<String> devices) {\n+    logger.info(\"Storing multicast for \" + devices.size() + \" devices\");\n+    String encodedKey;\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      Entity entity = new Entity(MULTICAST_TYPE);\n+      entity.setProperty(MULTICAST_REG_IDS_PROPERTY, devices);\n+      datastore.put(entity);\n+      Key key = entity.getKey();\n+      encodedKey = KeyFactory.keyToString(key);\n+      logger.fine(\"multicast key: \" + encodedKey);\n+      txn.commit();\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+    return encodedKey;\n+  }\n+\n+  /**\n+   * Gets a persistent record with the devices to be notified using a\n+   * multicast message.\n+   *\n+   * @param encodedKey encoded key for the persistent record.\n+   */\n+  public static List<String> getMulticast(String encodedKey) {\n+    Key key = KeyFactory.stringToKey(encodedKey);\n+    Entity entity;\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      entity = datastore.get(key);\n+      @SuppressWarnings(\"unchecked\")\n+      List<String> devices =\n+          (List<String>) entity.getProperty(MULTICAST_REG_IDS_PROPERTY);\n+      txn.commit();\n+      return devices;\n+    } catch (EntityNotFoundException e) {\n+      logger.severe(\"No entity for key \" + key);\n+      return Collections.emptyList();\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Updates a persistent record with the devices to be notified using a\n+   * multicast message.\n+   *\n+   * @param encodedKey encoded key for the persistent record.\n+   * @param devices new list of registration ids of the devices.\n+   */\n+  public static void updateMulticast(String encodedKey, List<String> devices) {\n+    Key key = KeyFactory.stringToKey(encodedKey);\n+    Entity entity;\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      try {\n+        entity = datastore.get(key);\n+      } catch (EntityNotFoundException e) {\n+        logger.severe(\"No entity for key \" + key);\n+        return;\n+      }\n+      entity.setProperty(MULTICAST_REG_IDS_PROPERTY, devices);\n+      datastore.put(entity);\n+      txn.commit();\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Deletes a persistent record with the devices to be notified using a\n+   * multicast message.\n+   *\n+   * @param encodedKey encoded key for the persistent record.\n+   */\n+  public static void deleteMulticast(String encodedKey) {\n+    Transaction txn = datastore.beginTransaction();\n+    try {\n+      Key key = KeyFactory.stringToKey(encodedKey);\n+      datastore.delete(key);\n+      txn.commit();\n+    } finally {\n+      if (txn.isActive()) {\n+        txn.rollback();\n+      }\n+    }\n+  }\n+\n+\n+    /**\n+     * Creates a persistent record with the device to be notified using a\n+     * single message.\n+     *\n+     * @param device registration id of the devices.\n+     * @return encoded key for the persistent record.\n+     */\n+    public static String createNotification(String device) {\n+        logger.info(\"Storing notification for device \" + device);\n+        String encodedKey;\n+        Transaction txn = datastore.beginTransaction();\n+        try {\n+            Entity entity = new Entity(NOTIFICATION_TYPE);\n+            entity.setProperty(NOTIFICATION_REG_ID_PROPERTY, device);\n+            datastore.put(entity);\n+            Key key = entity.getKey();\n+            encodedKey = KeyFactory.keyToString(key);\n+            logger.fine(\"notification key: \" + encodedKey);\n+            txn.commit();\n+        } finally {\n+            if (txn.isActive()) {\n+                txn.rollback();\n+            }\n+        }\n+        return encodedKey;\n+    }\n+\n+    /**\n+     * Gets a persistent record with the device to be notified using a\n+     * notification message.\n+     *\n+     * @param encodedKey encoded key for the persistent record.\n+     */\n+    public static String getNotification(String encodedKey) {\n+        Key key = KeyFactory.stringToKey(encodedKey);\n+        Entity entity;\n+        Transaction txn = datastore.beginTransaction();\n+        try {\n+            entity = datastore.get(key);\n+            @SuppressWarnings(\"unchecked\")\n+            String device =\n+                    (String) entity.getProperty(NOTIFICATION_REG_ID_PROPERTY);\n+            txn.commit();\n+            return device;\n+        } catch (EntityNotFoundException e) {\n+            logger.severe(\"No entity for key \" + key);\n+            return null;\n+        } finally {\n+            if (txn.isActive()) {\n+                txn.rollback();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Updates a persistent record with the new status using a\n+     * notification message.\n+     *\n+     * @param encodedKey encoded key for the persistent record.\n+     * @param status new list of registration ids of the devices.\n+     */\n+    public static void updateNotification(String encodedKey, String status) {\n+        Key key = KeyFactory.stringToKey(encodedKey);\n+        Entity entity;\n+        Transaction txn = datastore.beginTransaction();\n+        try {\n+            try {\n+                entity = datastore.get(key);\n+            } catch (EntityNotFoundException e) {\n+                logger.severe(\"No entity for key \" + key);\n+                return;\n+            }\n+            entity.setProperty(NOTIFICATION_STATUS_PROPERTY, status);\n+            datastore.put(entity);\n+            txn.commit();\n+        } finally {\n+            if (txn.isActive()) {\n+                txn.rollback();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Deletes a persistent record with the devices to be notified using a\n+     * notification message.\n+     *\n+     * @param encodedKey encoded key for the persistent record.\n+     */\n+    public static void deleteNotification(String encodedKey) {\n+        Transaction txn = datastore.beginTransaction();\n+        try {\n+            Key key = KeyFactory.stringToKey(encodedKey);\n+            datastore.delete(key);\n+            txn.commit();\n+        } finally {\n+            if (txn.isActive()) {\n+                txn.rollback();\n+            }\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/HomeServlet.java",
            "additions": 87,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2012 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.judo.android.gcm.demo.server;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * Servlet that adds display number of devices and button to send a message.\n+ * <p>\n+ * This servlet is used just by the browser (i.e., not device) and contains the\n+ * main page of the demo app.\n+ */\n+@SuppressWarnings(\"serial\")\n+public class HomeServlet extends BaseServlet {\n+\n+  static final String ATTRIBUTE_STATUS = \"status\";\n+\n+  /**\n+   * Displays the existing messages and offer the option to send a new one.\n+   */\n+  @Override\n+  protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n+      throws IOException {\n+    resp.setContentType(\"text/html\");\n+    PrintWriter out = resp.getWriter();\n+\n+    out.print(\"<html><body>\");\n+    out.print(\"<head>\");\n+    out.print(\"  <title>GCM Judo merchant</title>\");\n+    out.print(\"  <link rel='icon' href='favicon.png'/>\");\n+    out.print(\"</head>\");\n+    String status = (String) req.getAttribute(ATTRIBUTE_STATUS);\n+    if (status != null) {\n+      out.print(status);\n+    }\n+    int total = Datastore.getTotalDevices();\n+    if (total == 0) {\n+      out.print(\"<h2>No devices registered!</h2>\");\n+    } else {\n+      out.print(\"<h2>\" + total + \" device(s) registered!</h2>\");\n+        for(String device: Datastore.getDevices()){\n+            out.print(\"device: \" + device);\n+            out.print(\"<form name='form' method='POST' action='sendAll'>\");\n+            out.print(\"<input type='hidden' name='device' value='\"+ device +\"'/>\");\n+            out.print(\"<input type='hidden' name='type' value='payment'/>\");\n+            out.print(\"<input type='submit' value='Send Payment' />\");\n+            out.print(\"</form>\");\n+            out.print(\"<form name='form' method='POST' action='sendAll'>\");\n+            out.print(\"<input type='hidden' name='device' value='\"+ device +\"'/>\");\n+            out.print(\"<input type='hidden' name='type' value='refund'/>\");\n+            out.print(\"<input type='submit' value='Send Refund' />\");\n+            out.print(\"</form>\");\n+            out.print(\"<hr/>\");\n+        }\n+\n+      out.print(\"<form name='form' method='POST' action='sendAll'>\");\n+      out.print(\"<input type='submit' value='Send Test Messages' />\");\n+      out.print(\"</form>\");\n+    }\n+    out.print(\"</body></html>\");\n+    resp.setStatus(HttpServletResponse.SC_OK);\n+  }\n+\n+  @Override\n+  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n+      throws IOException {\n+    doGet(req, resp);\n+  }\n+\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/RegisterServlet.java",
            "additions": 44,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2012 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.judo.android.gcm.demo.server;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * Servlet that registers a device, whose registration id is identified by\n+ * {@link #PARAMETER_REG_ID}.\n+ *\n+ * <p>\n+ * The client app should call this servlet everytime it receives a\n+ * {@code com.google.android.c2dm.intent.REGISTRATION C2DM} intent without an\n+ * error or {@code unregistered} extra.\n+ */\n+@SuppressWarnings(\"serial\")\n+public class RegisterServlet extends BaseServlet {\n+\n+  private static final String PARAMETER_REG_ID = \"regId\";\n+\n+  @Override\n+  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n+      throws ServletException {\n+    String regId = getParameter(req, PARAMETER_REG_ID);\n+    Datastore.register(regId);\n+    setSuccess(resp);\n+  }\n+\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/SendAllMessagesServlet.java",
            "additions": 94,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2012 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.judo.android.gcm.demo.server;\n+\n+import static com.google.appengine.api.taskqueue.TaskOptions.Builder.withUrl;\n+\n+import com.google.appengine.api.taskqueue.Queue;\n+import com.google.appengine.api.taskqueue.QueueFactory;\n+import com.google.appengine.api.taskqueue.TaskOptions;\n+import com.google.appengine.api.taskqueue.TaskOptions.Method;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * Servlet that adds a new message to all registered devices.\n+ * <p>\n+ * This servlet is used just by the browser (i.e., not device).\n+ */\n+@SuppressWarnings(\"serial\")\n+public class SendAllMessagesServlet extends BaseServlet {\n+\n+  /**\n+   * Processes the request to add a new message.\n+   */\n+  @Override\n+  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n+      throws IOException, ServletException {\n+    List<String> devices = Datastore.getDevices();\n+    String status;\n+    if (devices.isEmpty()) {\n+      status = \"Message ignored as there is no device registered!\";\n+    } else {\n+      Queue queue = QueueFactory.getQueue(\"gcm\");\n+      \n+      String deviceId = req.getParameter(SendMessageServlet.PARAMETER_DEVICE);\n+      String msgType = req.getParameter(SendMessageServlet.PARAMETER_TYPE);\n+      \n+      if (deviceId != null && deviceId.length() > 0){\n+    \t// send a single message using plain post        \n+        queue.add(withUrl(\"/send\").param(\n+            SendMessageServlet.PARAMETER_DEVICE, deviceId).param(SendMessageServlet.PARAMETER_TYPE, msgType));\n+        status = \"Single message queued for registration id \" + deviceId;\n+      } else {\n+        // send a multicast message using JSON\n+        // must split in chunks of 1000 devices (GCM limit)\n+        int total = devices.size();\n+        List<String> partialDevices = new ArrayList<String>(total);\n+        int counter = 0;\n+        int tasks = 0;\n+        for (String device : devices) {\n+          counter++;\n+          partialDevices.add(device);\n+          int partialSize = partialDevices.size();\n+          if (partialSize == Datastore.MULTICAST_SIZE || counter == total) {\n+            String multicastKey = Datastore.createMulticast(partialDevices);\n+            logger.fine(\"Queuing \" + partialSize + \" devices on multicast \" +\n+                multicastKey);\n+            TaskOptions taskOptions = TaskOptions.Builder\n+                .withUrl(\"/send\")\n+                .param(SendMessageServlet.PARAMETER_MULTICAST, multicastKey)\n+                .method(Method.POST);\n+            queue.add(taskOptions);\n+            partialDevices.clear();\n+            tasks++;\n+          }\n+        }\n+        status = \"Queued tasks to send \" + tasks + \" multicast messages to \" +\n+            total + \" devices\";\n+      }\n+    }\n+    req.setAttribute(HomeServlet.ATTRIBUTE_STATUS, status.toString());\n+    getServletContext().getRequestDispatcher(\"/home\").forward(req, resp);\n+  }\n+\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/SendMessageServlet.java",
            "additions": 222,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,222 @@\n+/*\n+ * Copyright 2012 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.judo.android.gcm.demo.server;\n+\n+import com.google.android.gcm.server.Constants;\n+import com.google.android.gcm.server.Message;\n+import com.google.android.gcm.server.MulticastResult;\n+import com.google.android.gcm.server.Result;\n+import com.google.android.gcm.server.Sender;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.logging.Level;\n+\n+import javax.servlet.ServletConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * Servlet that sends a message to a device.\n+ * <p>\n+ * This servlet is invoked by AppEngine's Push Queue mechanism.\n+ */\n+@SuppressWarnings(\"serial\")\n+public class SendMessageServlet extends BaseServlet {\n+\n+\tprivate static final String HEADER_QUEUE_COUNT = \"X-AppEngine-TaskRetryCount\";\n+\tprivate static final String HEADER_QUEUE_NAME = \"X-AppEngine-QueueName\";\n+\tprivate static final int MAX_RETRY = 3;\n+\n+\tstatic final String PARAMETER_DEVICE = \"device\";\n+\tstatic final String PARAMETER_MULTICAST = \"multicastKey\";\n+\tstatic final String PARAMETER_TYPE = \"type\";\n+\n+\tprivate Sender sender;\n+\n+\t@Override\n+\tpublic void init(ServletConfig config) throws ServletException {\n+\t\tsuper.init(config);\n+\t\tsender = newSender(config);\n+\t}\n+\n+\t/**\n+\t * Creates the {@link Sender} based on the servlet settings.\n+\t */\n+\tprotected Sender newSender(ServletConfig config) {\n+\t\tString key = (String) config.getServletContext().getAttribute(\n+\t\t\t\tApiKeyInitializer.ATTRIBUTE_ACCESS_KEY);\n+\t\treturn new Sender(key);\n+\t}\n+\n+\t/**\n+\t * Indicates to App Engine that this task should be retried.\n+\t */\n+\tprivate void retryTask(HttpServletResponse resp) {\n+\t\tresp.setStatus(500);\n+\t}\n+\n+\t/**\n+\t * Indicates to App Engine that this task is done.\n+\t */\n+\tprivate void taskDone(HttpServletResponse resp) {\n+\t\tresp.setStatus(200);\n+\t}\n+\n+\t/**\n+\t * Processes the request to add a new message.\n+\t */\n+\t@Override\n+\tprotected void doPost(HttpServletRequest req, HttpServletResponse resp)\n+\t\t\tthrows IOException {\n+\t\tif (req.getHeader(HEADER_QUEUE_NAME) == null) {\n+\t\t\tthrow new IOException(\"Missing header \" + HEADER_QUEUE_NAME);\n+\t\t}\n+\t\tString retryCountHeader = req.getHeader(HEADER_QUEUE_COUNT);\n+\t\tlogger.fine(\"retry count: \" + retryCountHeader);\n+\t\tif (retryCountHeader != null) {\n+\t\t\tint retryCount = Integer.parseInt(retryCountHeader);\n+\t\t\tif (retryCount > MAX_RETRY) {\n+\t\t\t\tlogger.severe(\"Too many retries, dropping task\");\n+\t\t\t\ttaskDone(resp);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t}\n+\t\tString regId = req.getParameter(PARAMETER_DEVICE);\n+\t\tString type = req.getParameter(PARAMETER_TYPE);\n+\t\tif (regId != null) {\n+\t\t\tsendSingleMessage(regId, resp, type);\n+\t\t\treturn;\n+\t\t}\n+\t\tString multicastKey = req.getParameter(PARAMETER_MULTICAST);\n+\t\tif (multicastKey != null) {\n+\t\t\tsendMulticastMessage(multicastKey, resp);\n+\t\t\treturn;\n+\t\t}\n+\t\tlogger.severe(\"Invalid request!\");\n+\t\ttaskDone(resp);\n+\t\treturn;\n+\t}\n+\n+\tprivate Message createMessage(String type) {\n+\t\tMessage message = new Message.Builder().addData(PARAMETER_TYPE, type).addData(\"value\", \"1000\").build();\n+\t\treturn message;\n+\t}\n+\n+\tprivate void sendSingleMessage(String regId, HttpServletResponse resp,\n+\t\t\tString type) {\n+\t\tlogger.info(\"Sending message to device \" + regId);\n+\t\tMessage message = createMessage(type);\n+\t\tResult result;\n+\t\ttry {\n+\t\t\tresult = sender.sendNoRetry(message, regId);\n+\t\t} catch (IOException e) {\n+\t\t\tlogger.log(Level.SEVERE, \"Exception posting \" + message, e);\n+\t\t\ttaskDone(resp);\n+\t\t\treturn;\n+\t\t}\n+\t\tif (result == null) {\n+\t\t\tretryTask(resp);\n+\t\t\treturn;\n+\t\t}\n+\t\tif (result.getMessageId() != null) {\n+\t\t\tlogger.info(\"Succesfully sent message to device \" + regId);\n+\t\t\tString canonicalRegId = result.getCanonicalRegistrationId();\n+\t\t\tif (canonicalRegId != null) {\n+\t\t\t\t// same device has more than on registration id: update it\n+\t\t\t\tlogger.finest(\"canonicalRegId \" + canonicalRegId);\n+\t\t\t\tDatastore.updateRegistration(regId, canonicalRegId);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tString error = result.getErrorCodeName();\n+\t\t\tif (error.equals(Constants.ERROR_NOT_REGISTERED)) {\n+\t\t\t\t// application has been removed from device - unregister it\n+\t\t\t\tDatastore.unregister(regId);\n+\t\t\t} else {\n+\t\t\t\tlogger.severe(\"Error sending message to device \" + regId + \": \"\n+\t\t\t\t\t\t+ error);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void sendMulticastMessage(String multicastKey,\n+\t\t\tHttpServletResponse resp) {\n+\t\t// Recover registration ids from datastore\n+\t\tList<String> regIds = Datastore.getMulticast(multicastKey);\n+\t\tMessage message = createMessage(\"test\");\n+\t\tMulticastResult multicastResult;\n+\t\ttry {\n+\t\t\tmulticastResult = sender.sendNoRetry(message, regIds);\n+\t\t} catch (IOException e) {\n+\t\t\tlogger.log(Level.SEVERE, \"Exception posting \" + message, e);\n+\t\t\tmulticastDone(resp, multicastKey);\n+\t\t\treturn;\n+\t\t}\n+\t\tboolean allDone = true;\n+\t\t// check if any registration id must be updated\n+\t\tif (multicastResult.getCanonicalIds() != 0) {\n+\t\t\tList<Result> results = multicastResult.getResults();\n+\t\t\tfor (int i = 0; i < results.size(); i++) {\n+\t\t\t\tString canonicalRegId = results.get(i)\n+\t\t\t\t\t\t.getCanonicalRegistrationId();\n+\t\t\t\tif (canonicalRegId != null) {\n+\t\t\t\t\tString regId = regIds.get(i);\n+\t\t\t\t\tDatastore.updateRegistration(regId, canonicalRegId);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (multicastResult.getFailure() != 0) {\n+\t\t\t// there were failures, check if any could be retried\n+\t\t\tList<Result> results = multicastResult.getResults();\n+\t\t\tList<String> retriableRegIds = new ArrayList<String>();\n+\t\t\tfor (int i = 0; i < results.size(); i++) {\n+\t\t\t\tString error = results.get(i).getErrorCodeName();\n+\t\t\t\tif (error != null) {\n+\t\t\t\t\tString regId = regIds.get(i);\n+\t\t\t\t\tlogger.warning(\"Got error (\" + error + \") for regId \"\n+\t\t\t\t\t\t\t+ regId);\n+\t\t\t\t\tif (error.equals(Constants.ERROR_NOT_REGISTERED)) {\n+\t\t\t\t\t\t// application has been removed from device - unregister\n+\t\t\t\t\t\t// it\n+\t\t\t\t\t\tDatastore.unregister(regId);\n+\t\t\t\t\t}\n+\t\t\t\t\tif (error.equals(Constants.ERROR_UNAVAILABLE)) {\n+\t\t\t\t\t\tretriableRegIds.add(regId);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (!retriableRegIds.isEmpty()) {\n+\t\t\t\t// update task\n+\t\t\t\tDatastore.updateMulticast(multicastKey, retriableRegIds);\n+\t\t\t\tallDone = false;\n+\t\t\t\tretryTask(resp);\n+\t\t\t}\n+\t\t}\n+\t\tif (allDone) {\n+\t\t\tmulticastDone(resp, multicastKey);\n+\t\t} else {\n+\t\t\tretryTask(resp);\n+\t\t}\n+\t}\n+\n+\tprivate void multicastDone(HttpServletResponse resp, String encodedKey) {\n+\t\tDatastore.deleteMulticast(encodedKey);\n+\t\ttaskDone(resp);\n+\t}\n+\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/src/com/judo/android/gcm/demo/server/UnregisterServlet.java",
            "additions": 43,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2012 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.judo.android.gcm.demo.server;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * Servlet that unregisters a device, whose registration id is identified by\n+ * {@link #PARAMETER_REG_ID}.\n+ * <p>\n+ * The client app should call this servlet everytime it receives a\n+ * {@code com.google.android.c2dm.intent.REGISTRATION} with an\n+ * {@code unregistered} extra.\n+ */\n+@SuppressWarnings(\"serial\")\n+public class UnregisterServlet extends BaseServlet {\n+\n+  private static final String PARAMETER_REG_ID = \"regId\";\n+\n+  @Override\n+  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n+      throws ServletException {\n+    String regId = getParameter(req, PARAMETER_REG_ID);\n+    Datastore.unregister(regId);\n+    setSuccess(resp);\n+  }\n+\n+}\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/appengine-web.xml",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  - Copyright 2012 Google Inc.\n+  -\n+  - Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  - use this file except in compliance with the License. You may obtain a copy\n+  - of the License at\n+  -\n+  - http://www.apache.org/licenses/LICENSE-2.0\n+  -\n+  - Unless required by applicable law or agreed to in writing, software\n+  - distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  - License for the specific language governing permissions and limitations\n+  - under the License.\n+-->\n+<appengine-web-app xmlns=\"http://appengine.google.com/ns/1.0\">\n+  <application>judo-merchants-novodatest</application>\n+  <version>1</version>\n+\n+  <!--\n+    Allows App Engine to send multiple requests to one instance in parallel:\n+  -->\n+  <threadsafe>true</threadsafe>\n+\n+  <!-- Configure java.util.logging -->\n+  <system-properties>\n+    <property name=\"java.util.logging.config.file\" value=\"WEB-INF/logging.properties\"/>\n+  </system-properties>\n+\n+</appengine-web-app>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-api-1.0-sdk-1.7.3.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-api-1.0-sdk-1.7.3.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-api-labs.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-api-labs.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-endpoints.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-endpoints.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-jsr107cache-1.7.3.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/appengine-jsr107cache-1.7.3.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/asm-4.0.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/asm-4.0.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-api-jdo-3.1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-api-jdo-3.1.1.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-api-jpa-3.1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-api-jpa-3.1.1.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-appengine-2.1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-appengine-2.1.1.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-core-3.1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/datanucleus-core-3.1.1.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/gcm-server.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/gcm-server.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/geronimo-jpa_2.0_spec-1.0.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/geronimo-jpa_2.0_spec-1.0.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/jdo-api-3.0.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/jdo-api-3.0.1.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/json_simple-1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/json_simple-1.1.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/jsr107cache-1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/jsr107cache-1.1.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/lib/jta-1.1.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/WEB-INF/lib/jta-1.1.jar differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/logging.properties",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+# Copyright 2012 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+# use this file except in compliance with the License. You may obtain a copy\n+# of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+# License for the specific language governing permissions and limitations\n+# under the License.\n+\n+# A default java.util.logging configuration.\n+# (All App Engine logging is through java.util.logging by default).\n+#\n+# To use this configuration, copy it into your application's WEB-INF\n+# folder and add the following to your appengine-web.xml:\n+#\n+# <system-properties>\n+#   <property name=\"java.util.logging.config.file\" value=\"WEB-INF/logging.properties\"/>\n+# </system-properties>\n+\n+# Set the default logging level for all loggers to WARNING\n+.level = WARNING\n+\n+com.google.android.level = FINEST\n+com.judo.android.level = FINEST\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/queue.xml",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  - Copyright 2012 Google Inc.\n+  -\n+  - Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  - use this file except in compliance with the License. You may obtain a copy\n+  - of the License at\n+  -\n+  - http://www.apache.org/licenses/LICENSE-2.0\n+  -\n+  - Unless required by applicable law or agreed to in writing, software\n+  - distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  - License for the specific language governing permissions and limitations\n+  - under the License.\n+-->\n+<queue-entries>\n+  <queue>\n+    <name>gcm</name>\n+    <rate>1/s</rate>\n+    <max-concurrent-requests>1</max-concurrent-requests>\n+    <bucket-size>2</bucket-size>\n+    <retry-parameters>\n+      <task-retry-limit>7</task-retry-limit>\n+      <min-backoff-seconds>10</min-backoff-seconds>\n+      <max-backoff-seconds>200</max-backoff-seconds>\n+      <max-doublings>2</max-doublings>\n+    </retry-parameters>\n+  </queue>\n+</queue-entries>\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/WEB-INF/web.xml",
            "additions": 100,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,100 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--\n+  - Copyright 2012 Google Inc.\n+  -\n+  - Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  - use this file except in compliance with the License. You may obtain a copy\n+  - of the License at\n+  -\n+  - http://www.apache.org/licenses/LICENSE-2.0\n+  -\n+  - Unless required by applicable law or agreed to in writing, software\n+  - distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  - License for the specific language governing permissions and limitations\n+  - under the License.\n+--><web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:web=\"http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" id=\"WebApp_ID\" version=\"2.5\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n+\n+  <listener>\n+    <listener-class>\n+      com.judo.android.gcm.demo.server.ApiKeyInitializer\n+    </listener-class>\n+  </listener>\n+\n+  <servlet>\n+    <servlet-name>RegisterServlet</servlet-name>\n+    <servlet-class>\n+      com.judo.android.gcm.demo.server.RegisterServlet\n+    </servlet-class>\n+    <load-on-startup>1</load-on-startup>\n+  </servlet>\n+\n+  <servlet-mapping>\n+    <servlet-name>RegisterServlet</servlet-name>\n+    <url-pattern>/register</url-pattern>\n+  </servlet-mapping>\n+\n+  <servlet>\n+    <servlet-name>UnregisterServlet</servlet-name>\n+    <servlet-class>\n+      com.judo.android.gcm.demo.server.UnregisterServlet\n+    </servlet-class>\n+    <load-on-startup>1</load-on-startup>\n+  </servlet>\n+\n+  <servlet-mapping>\n+    <servlet-name>UnregisterServlet</servlet-name>\n+    <url-pattern>/unregister</url-pattern>\n+  </servlet-mapping>\n+\n+  <servlet>\n+    <servlet-name>SendAllMessagesServlet</servlet-name>\n+    <servlet-class>\n+      com.judo.android.gcm.demo.server.SendAllMessagesServlet\n+    </servlet-class>\n+    <load-on-startup>1</load-on-startup>\n+  </servlet>\n+\n+  <servlet-mapping>\n+    <servlet-name>SendAllMessagesServlet</servlet-name>\n+    <url-pattern>/sendAll</url-pattern>\n+  </servlet-mapping>\n+\n+  <servlet>\n+    <servlet-name>SendMessageServlet</servlet-name>\n+    <servlet-class>\n+      com.judo.android.gcm.demo.server.SendMessageServlet\n+    </servlet-class>\n+    <load-on-startup>1</load-on-startup>\n+  </servlet>\n+\n+  <servlet-mapping>\n+    <servlet-name>SendMessageServlet</servlet-name>\n+    <url-pattern>/send</url-pattern>\n+  </servlet-mapping>\n+\n+  <servlet>\n+    <servlet-name>HomeServlet</servlet-name>\n+    <servlet-class>\n+      com.judo.android.gcm.demo.server.HomeServlet\n+    </servlet-class>\n+    <load-on-startup>1</load-on-startup>\n+  </servlet>\n+\n+  <servlet-mapping>\n+    <servlet-name>HomeServlet</servlet-name>\n+    <url-pattern>/home</url-pattern>\n+  </servlet-mapping>\n+\n+ <servlet>\n+  <servlet-name>SystemServiceServlet</servlet-name>\n+  <servlet-class>com.google.api.server.spi.SystemServiceServlet</servlet-class>\n+  <init-param>\n+   <param-name>services</param-name>\n+   <param-value/>\n+  </init-param>\n+ </servlet>\n+ <servlet-mapping>\n+  <servlet-name>SystemServiceServlet</servlet-name>\n+  <url-pattern>/_ah/spi/*</url-pattern>\n+ </servlet-mapping>\n+</web-app>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/favicon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PushNotifications/gcm_appengine/war/favicon.png differ\n"
    },
    {
        "commit hash": "2bb1098b42cf97cea9921e549341932dae89b5d9",
        "previous commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "diff stats": {
            "file_path": "PushNotifications/gcm_appengine/war/index.jsp",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+<jsp:forward page=\"/home\"/>\n"
    },
    {
        "commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "previous commit hash": "d292dc9c0e6af5197f514320a0bf7e35711539d9",
        "diff stats": {
            "file_path": "CompassExample/res/layout/activity_compass.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -6,7 +6,7 @@\n     android:layout_height=\"match_parent\" android:id=\"@android:id/text1\"\n     android:padding=\"@dimen/padding_medium\" android:layout_weight=\"10\" />\n \n-  <com.novoda.example.compass.view.RotatedImageView\n+  <com.novoda.example.compass.view.RotatableImageView\n     android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"\n     android:layout_weight=\"1\" android:id=\"@+id/image\" />\n \n"
    },
    {
        "commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "previous commit hash": "d292dc9c0e6af5197f514320a0bf7e35711539d9",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/CompassActivity.java",
            "additions": 5,
            "deletions": 4
        },
        "diff content": "@@ -3,6 +3,7 @@ package com.novoda.example.compass.activities;\n import com.actionbarsherlock.view.Menu;\n import com.novoda.example.compass.R;\n import com.novoda.example.compass.utils.CompassUtils;\n+import com.novoda.example.compass.view.RotatableImageView;\n import com.novoda.example.compass.view.RotatedImageView;\n \n import android.hardware.SensorEvent;\n@@ -13,13 +14,13 @@ import android.widget.Toast;\n public class CompassActivity extends BasicSensorActivity {\n \n     private boolean isCompassEnabled;\n-    private RotatedImageView image;\n+    private RotatableImageView image;\n \n     @Override\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_compass);\n-         image = (RotatedImageView) findViewById(R.id.image);\n+         image = (RotatableImageView) findViewById(R.id.image);\n         isCompassEnabled = false;\n         refreshText();\n     }\n@@ -32,7 +33,7 @@ public class CompassActivity extends BasicSensorActivity {\n     \n     private void refreshImageRotation() {\n         if (isCompassEnabled){ \n-            image.updateCompassDegrees(getRotation());\n+            image.setRotationInDegrees(getRotation());\n         }\n     }\n \n@@ -61,7 +62,7 @@ public class CompassActivity extends BasicSensorActivity {\n         switch (item.getItemId()) {\n         case R.id.menu_enable_compass_rotation:\n             isCompassEnabled = !isCompassEnabled;\n-            image.setCompassActivated(isCompassEnabled, getRotation());\n+            image.useCompassToRotate(isCompassEnabled);\n             String text = isCompassEnabled ? \"Compass rotation has been enabled!\"\n                     : \"Compass rotation has been disabled\";\n             Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT).show();\n"
    },
    {
        "commit hash": "e4ed0723abdc4b599d3e6156ccda963bea521c2c",
        "previous commit hash": "d292dc9c0e6af5197f514320a0bf7e35711539d9",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/view/RotatableImageView.java",
            "additions": 113,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,113 @@\n+package com.novoda.example.compass.view;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import com.novoda.example.compass.R;\n+\n+\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+import android.graphics.Matrix;\n+import android.graphics.Paint;\n+import android.util.AttributeSet;\n+import android.view.View;\n+\n+/**\n+ * This class extends the View class and is designed draw the compass on the\n+ * View.\n+ * \n+ * @author Justin Wetherell <phishman3579@gmail.com>\n+ */\n+public class RotatableImageView extends View {\n+    private static final AtomicBoolean drawing = new AtomicBoolean(false);\n+    private static final Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+\n+    private static int parentWidth = 0;\n+    private static int parentHeight = 0;\n+    private static Matrix matrix = null;\n+    private static Bitmap bitmap = null;\n+    private int rotationValue;\n+    private boolean isCompassEnabled;\n+\n+    public RotatableImageView(Context context) {\n+        super(context);\n+\n+        initialize();\n+    }\n+\n+    public RotatableImageView(Context context, AttributeSet attr) {\n+        super(context, attr);\n+\n+        initialize();\n+    }\n+\n+    private void initialize() {\n+        matrix = new Matrix();\n+        bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.floorplan);\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n+\n+        parentWidth = MeasureSpec.getSize(widthMeasureSpec);\n+        parentHeight = MeasureSpec.getSize(heightMeasureSpec);\n+        setMeasuredDimension(parentWidth, parentHeight);\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    protected void onDraw(Canvas canvas) {\n+        if (canvas == null)\n+            throw new NullPointerException();\n+\n+        if (!drawing.compareAndSet(false, true))\n+            return;\n+\n+        int bitmapWidth = bitmap.getWidth();\n+        int bitmapHeight = bitmap.getHeight();\n+\n+        int canvasWidth = canvas.getWidth();\n+        int canvasHeight = canvas.getHeight();\n+        if (bitmap.getWidth() > canvasWidth || bitmap.getHeight() > canvasHeight) {\n+            bitmap = Bitmap.createScaledBitmap(bitmap, (int) (bitmapWidth * .9), (int) (bitmapHeight * .9), true);\n+        }\n+\n+        int bitmapX = bitmap.getWidth() / 2;\n+        int bitmapY = bitmap.getHeight() / 2;\n+\n+        int parentX = parentWidth / 2;\n+        int parentY = parentHeight / 2;\n+\n+        int centerX = parentX - bitmapX;\n+        int centerY = parentY - bitmapY;\n+\n+\n+        \n+        if (isCompassEnabled){\n+            matrix.setRotate(rotationValue, bitmapX, bitmapY);\n+        }\n+        matrix.postTranslate(centerX, centerY);\n+\n+        canvas.drawBitmap(bitmap, matrix, paint);\n+\n+        drawing.set(false);\n+    }\n+    \n+    public void setRotationInDegrees(int rotation){\n+        this.rotationValue = rotation;\n+        invalidate();\n+    }\n+    \n+    public void useCompassToRotate(boolean isCompassEnabled){\n+        this.isCompassEnabled = isCompassEnabled;\n+    }\n+}\n"
    },
    {
        "commit hash": "d292dc9c0e6af5197f514320a0bf7e35711539d9",
        "previous commit hash": "6afa4ab2cbaea988a65f7d4bb0a5b7c0f6a6530a",
        "diff stats": {
            "file_path": "CompassExample/AndroidManifest.xml",
            "additions": 50,
            "deletions": 54
        },
        "diff content": "@@ -1,59 +1,55 @@\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    package=\"com.novoda.example.compass\"\n-    android:versionCode=\"1\"\n-    android:versionName=\"1.0\" >\n+  package=\"com.novoda.example.compass\" android:versionCode=\"1\"\n+  android:versionName=\"1.0\">\n \n-    <uses-sdk\n-        android:minSdkVersion=\"9\"\n-        android:targetSdkVersion=\"15\" />\n+  <uses-sdk android:minSdkVersion=\"9\" android:targetSdkVersion=\"15\" />\n+\n+  <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n+\n+  <application android:icon=\"@drawable/ic_launcher\"\n+    android:label=\"@string/app_name\" android:theme=\"@style/Theme.Sherlock.Light\"\n+    android:name=\"NovoCompass\">\n     \n-    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n-\n-    <application\n-        android:icon=\"@drawable/ic_launcher\"\n-        android:label=\"@string/app_name\"\n-        android:theme=\"@style/Theme.Sherlock.Light\" android:name=\"NovoCompass\">\n-        <activity\n-            android:name=\".activities.CompassActivity\"\n-            android:label=\"@string/title_activity_compass\" >\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity>\n-        \n-        <!-- Receivers -->\n-\n-        <receiver android:name=\"com.novoda.location.receiver.LocationChanged\" >\n-            <intent-filter>\n-                <action android:name=\"com.novoda.location.ACTIVE_LOCATION_UPDATE_ACTION\" />\n-            </intent-filter>\n-        </receiver>\n-        \n-        <receiver android:name=\"com.novoda.location.receiver.PassiveLocationChanged\" />\n-        \n-        <receiver\n-            android:name=\"com.novoda.location.receiver.UnregisterPassiveListenerOnLostConnectivity\"\n-            enabled=\"false\" >\n-            <intent-filter>\n-                <action android:name=\"android.net.conn.CONNECTIVITY_CHANGE\" />\n-            </intent-filter>\n-        </receiver>\n-        \n-        <receiver android:name=\"com.novoda.location.receiver.UnregisterPassiveListenerOnLowBattery\" >\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.BATTERY_LOW\" />\n-                <action android:name=\"android.intent.action.BATTERY_OKAY\" />\n-            </intent-filter>\n-        </receiver>\n-        \n-        <receiver android:name=\"com.novoda.location.receiver.RestorePassiveListenerBoot\" >\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n-            </intent-filter>\n-        </receiver>\n-        \n-    </application>\n+    <activity android:name=\".activities.CompassActivity\"\n+      android:screenOrientation=\"portrait\" android:label=\"@string/title_activity_compass\">\n+      <intent-filter>\n+        <action android:name=\"android.intent.action.MAIN\" />\n+        <category android:name=\"android.intent.category.LAUNCHER\" />\n+      </intent-filter>\n+    </activity>\n+\n+    <!-- Receivers -->\n+\n+    <receiver android:name=\"com.novoda.location.receiver.LocationChanged\">\n+      <intent-filter>\n+        <action android:name=\"com.novoda.location.ACTIVE_LOCATION_UPDATE_ACTION\" />\n+      </intent-filter>\n+    </receiver>\n+\n+    <receiver android:name=\"com.novoda.location.receiver.PassiveLocationChanged\" />\n+\n+    <receiver\n+      android:name=\"com.novoda.location.receiver.UnregisterPassiveListenerOnLostConnectivity\"\n+      enabled=\"false\">\n+      <intent-filter>\n+        <action android:name=\"android.net.conn.CONNECTIVITY_CHANGE\" />\n+      </intent-filter>\n+    </receiver>\n+\n+    <receiver\n+      android:name=\"com.novoda.location.receiver.UnregisterPassiveListenerOnLowBattery\">\n+      <intent-filter>\n+        <action android:name=\"android.intent.action.BATTERY_LOW\" />\n+        <action android:name=\"android.intent.action.BATTERY_OKAY\" />\n+      </intent-filter>\n+    </receiver>\n+\n+    <receiver android:name=\"com.novoda.location.receiver.RestorePassiveListenerBoot\">\n+      <intent-filter>\n+        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n+      </intent-filter>\n+    </receiver>\n+\n+  </application>\n \n </manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "d292dc9c0e6af5197f514320a0bf7e35711539d9",
        "previous commit hash": "6afa4ab2cbaea988a65f7d4bb0a5b7c0f6a6530a",
        "diff stats": {
            "file_path": "CompassExample/res/layout/activity_compass.xml",
            "additions": 12,
            "deletions": 14
        },
        "diff content": "@@ -1,16 +1,14 @@\n-<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    xmlns:tools=\"http://schemas.android.com/tools\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"match_parent\" >\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\"\n+  android:layout_height=\"match_parent\" android:orientation=\"vertical\">\n \n-    <TextView\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_centerHorizontal=\"true\"\n-        android:layout_centerVertical=\"true\"\n-        android:id=\"@android:id/text1\"\n-        android:padding=\"@dimen/padding_medium\"\n-        android:text=\"@string/hello_world\"\n-        tools:context=\".CompassActivity\" />\n+  <TextView android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\" android:id=\"@android:id/text1\"\n+    android:padding=\"@dimen/padding_medium\" android:layout_weight=\"10\" />\n \n-</RelativeLayout>\n+  <com.novoda.example.compass.view.RotatedImageView\n+    android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"\n+    android:layout_weight=\"1\" android:id=\"@+id/image\" />\n+\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "d292dc9c0e6af5197f514320a0bf7e35711539d9",
        "previous commit hash": "6afa4ab2cbaea988a65f7d4bb0a5b7c0f6a6530a",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/ImageActivity.java",
            "additions": 0,
            "deletions": 68
        },
        "diff content": "@@ -1,68 +0,0 @@\n-package com.novoda.example.compass;\n-\n-import utils.RotatedImageView;\n-\n-import android.app.Activity;\n-import android.graphics.Bitmap;\n-import android.graphics.BitmapFactory;\n-import android.graphics.Matrix;\n-import android.os.Bundle;\n-import android.view.MotionEvent;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.view.View.OnTouchListener;\n-import android.widget.ImageView;\n-\n-public class ImageActivity extends Activity implements OnTouchListener{\n-\n-    private ImageView image;\n-    \n-    @Override\n-    public void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-        \n-        RotatedImageView view = new RotatedImageView(this);\n-        view.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,\n-                ViewGroup.LayoutParams.MATCH_PARENT));\n-        \n-        setContentView(view);\n-        \n-//        setContentView(R.layout.activity_image);        \n-//        loadImage();\n-    }\n-    \n-    private void loadImage(){\n-        image = (ImageView) findViewById(R.id.backgroundimage);\n-        image.setOnTouchListener(this);\n-    }\n-\n-    @Override\n-    public boolean onTouch(View v, MotionEvent event) {\n-        \n-        double r = Math.atan2(event.getX() - image.getWidth() / 2, image.getHeight() / 2 - event.getY());\n-        int rotation = (int) Math.toDegrees(r);\n-        \n-        if (event.getAction() == MotionEvent.ACTION_MOVE)\n-        {\n-            updateRotation(rotation);\n-        }\n-        \n-        return true;\n-    }\n-    \n-    private void updateRotation(double rot)\n-    {\n-        float newRot = new Float(rot);\n-\n-        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.floorplan);\n-\n-        Matrix matrix = new Matrix();\n-        matrix.postRotate(newRot - 50);\n-\n-        Bitmap redrawnBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);\n-        image.setImageBitmap(redrawnBitmap);\n-    }\n-    \n-    \n-    \n-}\n"
    },
    {
        "commit hash": "d292dc9c0e6af5197f514320a0bf7e35711539d9",
        "previous commit hash": "6afa4ab2cbaea988a65f7d4bb0a5b7c0f6a6530a",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/CompassActivity.java",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -3,6 +3,7 @@ package com.novoda.example.compass.activities;\n import com.actionbarsherlock.view.Menu;\n import com.novoda.example.compass.R;\n import com.novoda.example.compass.utils.CompassUtils;\n+import com.novoda.example.compass.view.RotatedImageView;\n \n import android.hardware.SensorEvent;\n import android.os.Bundle;\n@@ -12,11 +13,13 @@ import android.widget.Toast;\n public class CompassActivity extends BasicSensorActivity {\n \n     private boolean isCompassEnabled;\n+    private RotatedImageView image;\n \n     @Override\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_compass);\n+         image = (RotatedImageView) findViewById(R.id.image);\n         isCompassEnabled = false;\n         refreshText();\n     }\n@@ -26,13 +29,22 @@ public class CompassActivity extends BasicSensorActivity {\n                 + \" Rotation in degress \" + getRotation()) : \"Compass disabled\";\n         updateText(text);\n     }\n+    \n+    private void refreshImageRotation() {\n+        if (isCompassEnabled){ \n+            image.updateCompassDegrees(getRotation());\n+        }\n+    }\n \n     @Override\n     public void onSensorChanged(SensorEvent evt) {\n         super.onSensorChanged(evt);\n         refreshText();\n+        refreshImageRotation();\n     }\n \n+ \n+\n     private void updateText(String textString) {\n         TextView text = (TextView) findViewById(android.R.id.text1);\n         text.setText(textString);\n@@ -49,6 +61,7 @@ public class CompassActivity extends BasicSensorActivity {\n         switch (item.getItemId()) {\n         case R.id.menu_enable_compass_rotation:\n             isCompassEnabled = !isCompassEnabled;\n+            image.setCompassActivated(isCompassEnabled, getRotation());\n             String text = isCompassEnabled ? \"Compass rotation has been enabled!\"\n                     : \"Compass rotation has been disabled\";\n             Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT).show();\n"
    },
    {
        "commit hash": "d292dc9c0e6af5197f514320a0bf7e35711539d9",
        "previous commit hash": "6afa4ab2cbaea988a65f7d4bb0a5b7c0f6a6530a",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/view/RotatedImageView.java",
            "additions": 1,
            "deletions": 15
        },
        "diff content": "@@ -8,16 +8,13 @@ import android.content.Context;\n import android.graphics.Canvas;\n import android.graphics.PointF;\n import android.graphics.drawable.Drawable;\n-import android.hardware.Sensor;\n-import android.hardware.SensorEvent;\n-import android.hardware.SensorEventListener;\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.MotionEvent;\n import android.view.ScaleGestureDetector;\n import android.view.View;\n \n-public class RotatedImageView extends View implements SensorEventListener {\n+public class RotatedImageView extends View {\n \n     private static final int INVALID_POINTER_ID = -1;\n \n@@ -341,17 +338,6 @@ public class RotatedImageView extends View implements SensorEventListener {\n \n     public void updateCompassDegrees(float degrees) {\n         compass_degrees = -degrees;\n-    }\n-\n-    @Override\n-    public void onAccuracyChanged(Sensor sensor, int accuracy) {\n-        // TODO Auto-generated method stub\n-\n-    }\n-\n-    @Override\n-    public void onSensorChanged(SensorEvent event) {\n-        // TODO Auto-generated method stub\n         invalidate();\n     }\n \n"
    },
    {
        "commit hash": "6afa4ab2cbaea988a65f7d4bb0a5b7c0f6a6530a",
        "previous commit hash": "c22c81c76b5826683301300f93daf5fc5fe4e6b1",
        "diff stats": {
            "file_path": "CompassExample/src/utils/RotatedImageView.java",
            "additions": 0,
            "deletions": 335
        },
        "diff content": "@@ -1,335 +0,0 @@\n-package utils;\n-\n-import java.util.ArrayList;\n-\n-import com.novoda.example.compass.R;\n-\n-import android.content.Context;\n-import android.graphics.Canvas;\n-import android.graphics.PointF;\n-import android.graphics.drawable.Drawable;\n-import android.util.AttributeSet;\n-import android.util.Log;\n-import android.view.MotionEvent;\n-import android.view.ScaleGestureDetector;\n-import android.view.View;\n-\n-public class RotatedImageView extends View {\n-\n-    private static final int INVALID_POINTER_ID = -1;\n-\n-    private Drawable backgroundImage;\n-    private float mPosX;\n-    private float mPosY;\n-\n-    private ArrayList<PointF> touchPoints = null;\n-\n-    private float mLastTouchX;\n-    private float mLastTouchY;\n-    private int mActivePointerId = INVALID_POINTER_ID;\n-\n-    private ScaleGestureDetector mScaleDetector;\n-    private float mScaleFactor = 1.f;\n-\n-    private float degrees;\n-    private float old_degrees;\n-    private boolean firstIterationMultitouch;\n-    private float last_rotation_degrees;\n-    \n-\n-    private float last_center_rotation_position_x;\n-    private float last_center_rotation_position_y;\n-\n-    private boolean isMultiTouch = false;\n-    \n-    private boolean isCompassActivated = false;\n-    private float compass_x_position;\n-    private float compass_y_position;\n-    private float compass_degrees;\n-\n-    private String TAG = \"RotatedImage\";\n-\n-    public RotatedImageView(Context context) {\n-        this(context, null, 0);\n-    }\n-\n-    public RotatedImageView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n-    }\n-\n-    public RotatedImageView(Context context, AttributeSet attrs, int defStyle) {\n-        super(context, attrs, defStyle);\n-        initialization(context);\n-    }\n-\n-    private void initialization(Context context) {\n-        initializeBackgroundImage(context);\n-        initializeScaleDetector(context);\n-        initializeVariables();\n-        last_rotation_degrees = 0;\n-        last_center_rotation_position_x = 0;\n-        last_center_rotation_position_y = 0;\n-        isCompassActivated=false;\n-    }\n-\n-    private void initializeBackgroundImage(Context context) {\n-        backgroundImage = context.getResources().getDrawable(R.drawable.floorplan);\n-        backgroundImage.setBounds(0, 0, backgroundImage.getIntrinsicWidth(), backgroundImage.getIntrinsicHeight());\n-\n-    }\n-\n-    private void initializeScaleDetector(Context context) {\n-        mScaleDetector = new ScaleGestureDetector(context, new ScaleListener());\n-    }\n-\n-    private void initializeVariables() {\n-        touchPoints = new ArrayList<PointF>();\n-        firstIterationMultitouch = true;\n-    }\n-\n-    @Override\n-    public boolean onTouchEvent(MotionEvent ev) {\n-\n-        activateScaleDetector(ev);\n-\n-        final int action = ev.getAction();\n-\n-        switch (action & MotionEvent.ACTION_MASK) {\n-\n-        case MotionEvent.ACTION_DOWN: {\n-            updateXYPositionSimpleTouch(ev);\n-            updatePointerId(ev);\n-            mActivePointerId = ev.getPointerId(0);\n-            // invalidate();\n-            break;\n-        }\n-\n-        case MotionEvent.ACTION_POINTER_DOWN: {\n-            Log.d(TAG, \"Pointer down\");\n-            isMultiTouch = true;\n-            firstIterationMultitouch = true;\n-            setInitalPositionMultiPoints(ev);\n-            invalidate();\n-            break;\n-        }\n-\n-        case MotionEvent.ACTION_MOVE: {\n-\n-            if (isMultiTouch) {\n-                setMultitouchPoints(ev);\n-            } else {\n-                updatePositionToMoveTheImage(ev);\n-            }\n-            break;\n-        }\n-\n-        case MotionEvent.ACTION_UP: {\n-            mActivePointerId = INVALID_POINTER_ID;\n-            Log.d(TAG, \"Action up\");\n-            break;\n-        }\n-\n-        case MotionEvent.ACTION_CANCEL: {\n-            mActivePointerId = INVALID_POINTER_ID;\n-            break;\n-        }\n-\n-        case MotionEvent.ACTION_POINTER_UP: {\n-            Log.d(TAG, \"Pointer up\");\n-            isMultiTouch = false;\n-            last_rotation_degrees = degrees + last_rotation_degrees;\n-            Log.d(TAG, \"last_rotation_degrees: \" + last_rotation_degrees);\n-            updateXYPositionSimpleTouch(ev);\n-            updatePointerId(ev);\n-\n-            break;\n-        }\n-\n-        }\n-\n-        return true;\n-    }\n-\n-    private void activateScaleDetector(MotionEvent ev) {\n-        mScaleDetector.onTouchEvent(ev);\n-    }\n-\n-    private void updateXYPositionSimpleTouch(MotionEvent ev) {\n-        mLastTouchX = ev.getX();\n-        mLastTouchY = ev.getY();\n-\n-    }\n-\n-    private void updatePointerId(MotionEvent ev) {\n-        final int pointerIndex = (ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;\n-        final int pointerId = ev.getPointerId(pointerIndex);\n-        if (pointerId == mActivePointerId) {\n-            // This was our active pointer going up. Choose a new\n-            // active pointer and adjust accordingly.\n-            final int newPointerIndex = pointerIndex == 0 ? 1 : 0;\n-            mLastTouchX = ev.getX(newPointerIndex);\n-            mLastTouchY = ev.getY(newPointerIndex);\n-            mActivePointerId = ev.getPointerId(newPointerIndex);\n-        }\n-    }\n-\n-    @Override\n-    public void onDraw(Canvas canvas) {\n-        super.onDraw(canvas);\n-        \n-        if(isCompassActivated){            \n-            canvas.rotate(compass_degrees, compass_x_position, compass_y_position);\n-        }\n-        \n-        else{\n-            \n-            if (!isMultiTouch) {\n-                canvas.translate(mPosX, mPosY);\n-                canvas.rotate(last_rotation_degrees, last_center_rotation_position_x, last_center_rotation_position_y);\n-            }\n-            \n-            if (isMultiTouch) {\n-\n-                if (touchPoints.size() > 1) {\n-                    // canvas.scale(mScaleFactor, mScaleFactor);\n-                    rotateImageFromMultitouch(touchPoints, canvas);\n-                }\n-            }\n-        }\n-        \n-        drawCanvas(canvas);\n-\n-    }\n-\n-    private void rotateImageFromMultitouch(ArrayList<PointF> touchPoints, Canvas canvas) {\n-\n-        PointF midpt;\n-\n-        for (int index = 1; index < touchPoints.size(); ++index) {\n-\n-            if (firstIterationMultitouch) {\n-\n-                double r = Math.atan2(touchPoints.get(index).x - touchPoints.get(index - 1).x, touchPoints.get(index).y\n-                        - touchPoints.get(index - 1).y);\n-                old_degrees = -(int) Math.toDegrees(r);\n-                firstIterationMultitouch = false;\n-                canvas.translate(mPosX, mPosY);\n-                canvas.rotate(last_rotation_degrees, last_center_rotation_position_x, last_center_rotation_position_y);\n-\n-            }\n-\n-            else {\n-\n-                double r = Math.atan2(touchPoints.get(index).x - touchPoints.get(index - 1).x, touchPoints.get(index).y\n-                        - touchPoints.get(index - 1).y);\n-                int currentDegrees = -(int) Math.toDegrees(r);\n-\n-                degrees = currentDegrees - old_degrees;\n-\n-                float temp = degrees + last_rotation_degrees;\n-\n-                midpt = getMidPoint(touchPoints.get(index - 1).x, touchPoints.get(index - 1).y,\n-                        touchPoints.get(index).x, touchPoints.get(index).y);\n-                \n-                last_center_rotation_position_x = midpt.x;\n-                last_center_rotation_position_y = midpt.y;                \n-\n-                canvas.translate(mPosX, mPosY);\n-                canvas.rotate(degrees + last_rotation_degrees, -mPosX + midpt.x, -mPosY + midpt.y);\n-\n-            }\n-        }\n-    }\n-\n-    private void drawCanvas(Canvas canvas) {\n-        canvas.save();\n-        backgroundImage.draw(canvas);\n-        canvas.restore();\n-    }\n-\n-    // Still not used\n-    private class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {\n-        @Override\n-        public boolean onScale(ScaleGestureDetector detector) {\n-            mScaleFactor *= detector.getScaleFactor();\n-\n-            // Don't let the object get too small or too large.\n-            mScaleFactor = Math.max(0.1f, Math.min(mScaleFactor, 5.0f));\n-\n-            invalidate();\n-            return true;\n-        }\n-    }\n-\n-    private PointF getMidPoint(float x1, float y1, float x2, float y2) {\n-        PointF point = new PointF();\n-\n-        float x = x1 + x2;\n-        float y = y1 + y2;\n-\n-        point.set(x / 2, y / 2);\n-\n-        return point;\n-    }\n-\n-    public void setMultitouchPoints(MotionEvent event) {\n-\n-        touchPoints.clear();\n-\n-        int pointerIndex = 0;\n-\n-        for (int index = 0; index < event.getPointerCount(); ++index) {\n-            pointerIndex = event.getPointerId(index);\n-\n-            touchPoints.add(new PointF(event.getX(pointerIndex), event.getY(pointerIndex)));\n-        }\n-    }\n-\n-    public void setInitalPositionMultiPoints(MotionEvent event) {\n-\n-        touchPoints.clear();\n-\n-        int pointerIndex = 0;\n-\n-        for (int index = 0; index < event.getPointerCount(); ++index) {\n-            pointerIndex = event.getPointerId(index);\n-\n-            touchPoints.add(new PointF(event.getX(pointerIndex), event.getY(pointerIndex)));\n-        }\n-\n-        double r = Math.atan2(touchPoints.get(1).x - touchPoints.get(1 - 1).x,\n-                touchPoints.get(1).y - touchPoints.get(1 - 1).y);\n-        old_degrees = -(int) Math.toDegrees(r);\n-    }\n-\n-    public void updatePositionToMoveTheImage(MotionEvent event) {\n-\n-        final int pointerIndex = event.findPointerIndex(mActivePointerId);\n-        final float x = event.getX(pointerIndex);\n-        final float y = event.getY(pointerIndex);\n-\n-        if (!mScaleDetector.isInProgress()) {\n-\n-            final float dx = x - mLastTouchX;\n-            final float dy = y - mLastTouchY;\n-\n-            mPosX += dx;\n-            mPosY += dy;\n-\n-            invalidate();\n-        }\n-\n-        mLastTouchX = x;\n-        mLastTouchY = y;\n-\n-    }\n-\n-    public void calculateNewPoints() {\n-\n-    }\n-    \n-    public void checkIfCompassIsActivated(){\n-        \n-    }\n-\n-}\n"
    },
    {
        "commit hash": "c22c81c76b5826683301300f93daf5fc5fe4e6b1",
        "previous commit hash": "0dc5642d58aa935903fbd774fa4a1b0cbca1d909",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/view/RotatedImageView.java",
            "additions": 359,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,359 @@\n+package com.novoda.example.compass.view;\n+\n+import java.util.ArrayList;\n+\n+import com.novoda.example.compass.R;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.PointF;\n+import android.graphics.drawable.Drawable;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.MotionEvent;\n+import android.view.ScaleGestureDetector;\n+import android.view.View;\n+\n+public class RotatedImageView extends View implements SensorEventListener {\n+\n+    private static final int INVALID_POINTER_ID = -1;\n+\n+    private Drawable backgroundImage;\n+    private float mPosX;\n+    private float mPosY;\n+\n+    private ArrayList<PointF> touchPoints = null;\n+\n+    private float mLastTouchX;\n+    private float mLastTouchY;\n+    private int mActivePointerId = INVALID_POINTER_ID;\n+\n+    private ScaleGestureDetector mScaleDetector;\n+    private float mScaleFactor = 1.f;\n+\n+    private float degrees;\n+    private float old_degrees;\n+    private boolean firstIterationMultitouch;\n+    private float last_rotation_degrees;\n+\n+    private float last_center_rotation_position_x;\n+    private float last_center_rotation_position_y;\n+\n+    private boolean isMultiTouch = false;\n+\n+    private boolean isCompassActivated;\n+    private float compass_degrees;\n+    private float original_compass_degrees;\n+\n+    private String TAG = \"RotatedImage\";\n+\n+    public RotatedImageView(Context context) {\n+        this(context, null, 0);\n+    }\n+\n+    public RotatedImageView(Context context, AttributeSet attrs) {\n+        this(context, attrs, 0);\n+    }\n+\n+    public RotatedImageView(Context context, AttributeSet attrs, int defStyle) {\n+        super(context, attrs, defStyle);\n+        initialization(context);\n+    }\n+\n+    private void initialization(Context context) {\n+        initializeBackgroundImage(context);\n+        initializeScaleDetector(context);\n+        initializeVariables();\n+        last_rotation_degrees = 0;\n+        last_center_rotation_position_x = 0;\n+        last_center_rotation_position_y = 0;\n+        isCompassActivated = false;\n+    }\n+\n+    private void initializeBackgroundImage(Context context) {\n+        backgroundImage = context.getResources().getDrawable(R.drawable.floorplan);\n+        backgroundImage.setBounds(0, 0, backgroundImage.getIntrinsicWidth(), backgroundImage.getIntrinsicHeight());\n+\n+    }\n+\n+    private void initializeScaleDetector(Context context) {\n+        mScaleDetector = new ScaleGestureDetector(context, new ScaleListener());\n+    }\n+\n+    private void initializeVariables() {\n+        touchPoints = new ArrayList<PointF>();\n+        firstIterationMultitouch = true;\n+    }\n+\n+    @Override\n+    public boolean onTouchEvent(MotionEvent ev) {\n+\n+        activateScaleDetector(ev);\n+\n+        final int action = ev.getAction();\n+\n+        switch (action & MotionEvent.ACTION_MASK) {\n+\n+        case MotionEvent.ACTION_DOWN: {\n+            updateXYPositionSimpleTouch(ev);\n+            updatePointerId(ev);\n+            mActivePointerId = ev.getPointerId(0);\n+            // invalidate();\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_POINTER_DOWN: {\n+            Log.d(TAG, \"Pointer down\");\n+            isMultiTouch = true;\n+            firstIterationMultitouch = true;\n+            setInitalPositionMultiPoints(ev);\n+            invalidate();\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_MOVE: {\n+\n+            if (isMultiTouch) {\n+                setMultitouchPoints(ev);\n+            } else {\n+                updatePositionToMoveTheImage(ev);\n+            }\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_UP: {\n+            mActivePointerId = INVALID_POINTER_ID;\n+            Log.d(TAG, \"Action up\");\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_CANCEL: {\n+            mActivePointerId = INVALID_POINTER_ID;\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_POINTER_UP: {\n+            Log.d(TAG, \"Pointer up\");\n+            isMultiTouch = false;\n+            last_rotation_degrees = degrees + last_rotation_degrees;\n+            Log.d(TAG, \"last_rotation_degrees: \" + last_rotation_degrees);\n+            updateXYPositionSimpleTouch(ev);\n+            updatePointerId(ev);\n+\n+            break;\n+        }\n+\n+        }\n+\n+        return true;\n+    }\n+\n+    private void activateScaleDetector(MotionEvent ev) {\n+        mScaleDetector.onTouchEvent(ev);\n+    }\n+\n+    private void updateXYPositionSimpleTouch(MotionEvent ev) {\n+        mLastTouchX = ev.getX();\n+        mLastTouchY = ev.getY();\n+\n+    }\n+\n+    private void updatePointerId(MotionEvent ev) {\n+        final int pointerIndex = (ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;\n+        final int pointerId = ev.getPointerId(pointerIndex);\n+        if (pointerId == mActivePointerId) {\n+            // This was our active pointer going up. Choose a new\n+            // active pointer and adjust accordingly.\n+            final int newPointerIndex = pointerIndex == 0 ? 1 : 0;\n+            mLastTouchX = ev.getX(newPointerIndex);\n+            mLastTouchY = ev.getY(newPointerIndex);\n+            mActivePointerId = ev.getPointerId(newPointerIndex);\n+        }\n+    }\n+\n+    @Override\n+    public void onDraw(Canvas canvas) {\n+        super.onDraw(canvas);\n+\n+        \n+        if (isCompassActivated) {\n+            canvas.rotate(original_compass_degrees - compass_degrees, 300, 600);\n+        }\n+\n+        else {\n+\n+            if (!isMultiTouch) {\n+                canvas.translate(mPosX, mPosY);\n+                canvas.rotate(last_rotation_degrees, last_center_rotation_position_x, last_center_rotation_position_y);\n+            }\n+\n+            if (isMultiTouch) {\n+\n+                if (touchPoints.size() > 1) {\n+                    // canvas.scale(mScaleFactor, mScaleFactor);\n+                    rotateImageFromMultitouch(touchPoints, canvas);\n+                }\n+            }\n+        }\n+\n+        drawCanvas(canvas);\n+\n+    }\n+\n+    private void rotateImageFromMultitouch(ArrayList<PointF> touchPoints, Canvas canvas) {\n+\n+        PointF midpt;\n+\n+        for (int index = 1; index < touchPoints.size(); ++index) {\n+\n+            if (firstIterationMultitouch) {\n+\n+                double r = Math.atan2(touchPoints.get(index).x - touchPoints.get(index - 1).x, touchPoints.get(index).y\n+                        - touchPoints.get(index - 1).y);\n+                old_degrees = -(int) Math.toDegrees(r);\n+                firstIterationMultitouch = false;\n+                canvas.translate(mPosX, mPosY);\n+                canvas.rotate(last_rotation_degrees, last_center_rotation_position_x, last_center_rotation_position_y);\n+\n+            }\n+\n+            else {\n+\n+                double r = Math.atan2(touchPoints.get(index).x - touchPoints.get(index - 1).x, touchPoints.get(index).y\n+                        - touchPoints.get(index - 1).y);\n+                int currentDegrees = -(int) Math.toDegrees(r);\n+\n+                degrees = currentDegrees - old_degrees;\n+\n+                \n+\n+                midpt = getMidPoint(touchPoints.get(index - 1).x, touchPoints.get(index - 1).y,\n+                        touchPoints.get(index).x, touchPoints.get(index).y);\n+\n+                last_center_rotation_position_x = midpt.x;\n+                last_center_rotation_position_y = midpt.y;\n+\n+                canvas.translate(mPosX, mPosY);\n+                canvas.rotate(degrees + last_rotation_degrees, -mPosX + midpt.x, -mPosY + midpt.y);\n+\n+            }\n+        }\n+    }\n+\n+    private void drawCanvas(Canvas canvas) {\n+        canvas.save();\n+        backgroundImage.draw(canvas);\n+        canvas.restore();\n+    }\n+\n+    // Still not used\n+    private class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {\n+        @Override\n+        public boolean onScale(ScaleGestureDetector detector) {\n+            mScaleFactor *= detector.getScaleFactor();\n+\n+            // Don't let the object get too small or too large.\n+            mScaleFactor = Math.max(0.1f, Math.min(mScaleFactor, 5.0f));\n+\n+            invalidate();\n+            return true;\n+        }\n+    }\n+\n+    private PointF getMidPoint(float x1, float y1, float x2, float y2) {\n+        PointF point = new PointF();\n+\n+        float x = x1 + x2;\n+        float y = y1 + y2;\n+\n+        point.set(x / 2, y / 2);\n+\n+        return point;\n+    }\n+\n+    public void setMultitouchPoints(MotionEvent event) {\n+\n+        touchPoints.clear();\n+\n+        int pointerIndex = 0;\n+\n+        for (int index = 0; index < event.getPointerCount(); ++index) {\n+            pointerIndex = event.getPointerId(index);\n+\n+            touchPoints.add(new PointF(event.getX(pointerIndex), event.getY(pointerIndex)));\n+        }\n+    }\n+\n+    public void setInitalPositionMultiPoints(MotionEvent event) {\n+\n+        touchPoints.clear();\n+\n+        int pointerIndex = 0;\n+\n+        for (int index = 0; index < event.getPointerCount(); ++index) {\n+            pointerIndex = event.getPointerId(index);\n+\n+            touchPoints.add(new PointF(event.getX(pointerIndex), event.getY(pointerIndex)));\n+        }\n+\n+        double r = Math.atan2(touchPoints.get(1).x - touchPoints.get(1 - 1).x,\n+                touchPoints.get(1).y - touchPoints.get(1 - 1).y);\n+        old_degrees = -(int) Math.toDegrees(r);\n+    }\n+\n+    public void updatePositionToMoveTheImage(MotionEvent event) {\n+\n+        final int pointerIndex = event.findPointerIndex(mActivePointerId);\n+        final float x = event.getX(pointerIndex);\n+        final float y = event.getY(pointerIndex);\n+\n+        if (!mScaleDetector.isInProgress()) {\n+\n+            final float dx = x - mLastTouchX;\n+            final float dy = y - mLastTouchY;\n+\n+            mPosX += dx;\n+            mPosY += dy;\n+\n+            invalidate();\n+        }\n+\n+        mLastTouchX = x;\n+        mLastTouchY = y;\n+\n+    }\n+\n+    public void calculateNewPoints() {\n+\n+    }\n+\n+    public void checkIfCompassIsActivated() {\n+\n+    }\n+\n+    public void setCompassActivated(boolean activated, float originalDegrees) {\n+        isCompassActivated = activated;\n+        original_compass_degrees = originalDegrees;\n+    }\n+\n+    public void updateCompassDegrees(float degrees) {\n+        compass_degrees = -degrees;\n+    }\n+\n+    @Override\n+    public void onAccuracyChanged(Sensor sensor, int accuracy) {\n+        // TODO Auto-generated method stub\n+\n+    }\n+\n+    @Override\n+    public void onSensorChanged(SensorEvent event) {\n+        // TODO Auto-generated method stub\n+        invalidate();\n+    }\n+\n+\n+}\n"
    },
    {
        "commit hash": "0dc5642d58aa935903fbd774fa4a1b0cbca1d909",
        "previous commit hash": "a918b47a941fab2f66a0119c28caebbd9c671848",
        "diff stats": {
            "file_path": "CompassExample/res/drawable/floorplan.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable/floorplan.png differ\n"
    },
    {
        "commit hash": "a3206f0964fb140a9c3c80bd071abbd439d25c10",
        "previous commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "diff stats": {
            "file_path": "CompassExample/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -12,7 +12,7 @@\n     <application\n         android:icon=\"@drawable/ic_launcher\"\n         android:label=\"@string/app_name\"\n-        android:theme=\"@style/AppTheme\" android:name=\"NovoCompass\">\n+        android:theme=\"@style/Theme.Sherlock.Light\" android:name=\"NovoCompass\">\n         <activity\n             android:name=\".activities.CompassActivity\"\n             android:label=\"@string/title_activity_compass\" >\n"
    },
    {
        "commit hash": "a3206f0964fb140a9c3c80bd071abbd439d25c10",
        "previous commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "diff stats": {
            "file_path": "CompassExample/res/drawable-hdpi/ic_action_enable_rotation.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable-hdpi/ic_action_enable_rotation.png differ\n"
    },
    {
        "commit hash": "a3206f0964fb140a9c3c80bd071abbd439d25c10",
        "previous commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "diff stats": {
            "file_path": "CompassExample/res/menu/activity_compass.xml",
            "additions": 4,
            "deletions": 4
        },
        "diff content": "@@ -1,6 +1,6 @@\n <menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <item android:id=\"@+id/menu_settings\"\n-        android:title=\"@string/menu_settings\"\n-        android:orderInCategory=\"100\"\n-        android:showAsAction=\"never\" />\n+    <item android:id=\"@+id/menu_enable_compass_rotation\"\n+        android:title=\"@string/menu_enable_compass_rotation\"\n+        android:icon=\"@drawable/ic_action_enable_rotation\"\n+        android:showAsAction=\"always\" />\n </menu>\n"
    },
    {
        "commit hash": "a3206f0964fb140a9c3c80bd071abbd439d25c10",
        "previous commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "diff stats": {
            "file_path": "CompassExample/res/values/strings.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -3,6 +3,7 @@\n     <string name=\"app_name\">CompassExample</string>\n     <string name=\"hello_world\">Hello world!</string>\n     <string name=\"menu_settings\">Settings</string>\n+    <string name=\"menu_enable_compass_rotation\">Use compass to rotate</string>    \n     <string name=\"title_activity_compass\">Compass</string>\n \n </resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a3206f0964fb140a9c3c80bd071abbd439d25c10",
        "previous commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 2,
            "deletions": 1
        },
        "diff content": "@@ -4,6 +4,7 @@ import java.util.concurrent.atomic.AtomicBoolean;\n \n import com.actionbarsherlock.app.SherlockFragmentActivity;\n import com.novoda.example.compass.NovoCompass;\n+import com.novoda.example.compass.utils.CompassUtils;\n import com.novoda.example.compass.utils.LowPassFilter;\n import com.novoda.location.exception.NoProviderAvailable;\n \n@@ -164,7 +165,7 @@ public abstract class BasicSensorActivity extends SherlockFragmentActivity imple\n     }\n \n     private void setBearing(double floatBearing) {\n-       this.rotationDegrees =  (int)(360 - floatBearing);\n+       this.rotationDegrees = CompassUtils.getRotationDegreesFromBearing(floatBearing);\n     }\n     \n     public int getRotation(){\n"
    },
    {
        "commit hash": "a3206f0964fb140a9c3c80bd071abbd439d25c10",
        "previous commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/CompassActivity.java",
            "additions": 34,
            "deletions": 29
        },
        "diff content": "@@ -1,55 +1,60 @@\n package com.novoda.example.compass.activities;\n \n+import com.actionbarsherlock.view.Menu;\n import com.novoda.example.compass.R;\n+import com.novoda.example.compass.utils.CompassUtils;\n \n-import android.hardware.Sensor;\n import android.hardware.SensorEvent;\n import android.os.Bundle;\n import android.widget.TextView;\n+import android.widget.Toast;\n \n public class CompassActivity extends BasicSensorActivity {\n \n+    private boolean isCompassEnabled;\n+\n     @Override\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_compass);\n-        \n+        isCompassEnabled = false;\n+        refreshText();\n+    }\n+\n+    private void refreshText() {\n+        String text = isCompassEnabled ? (\" Direction = \" + CompassUtils.getDirectionFromBearing(getBearing())\n+                + \" Rotation in degress \" + getRotation()) : \"Compass disabled\";\n+        updateText(text);\n     }\n-    \n+\n     @Override\n     public void onSensorChanged(SensorEvent evt) {\n         super.onSensorChanged(evt);\n-        updateText();\n+        refreshText();\n     }\n \n-    private void updateText() {\n-        TextView text = (TextView)findViewById(android.R.id.text1);\n-        String dirTxt = getDirectionFromBearing(getBearing());\n-        text.setText(\" Direction = \" + dirTxt + \" Rotation in degress \" + getRotation());\n-        \n+    private void updateText(String textString) {\n+        TextView text = (TextView) findViewById(android.R.id.text1);\n+        text.setText(textString);\n     }\n \n-    private String getDirectionFromBearing(double bearing) {\n-        int range = (int) (bearing / (360f / 16f));\n-        String dirTxt = \"\";\n-        if (range == 15 || range == 0)\n-            dirTxt = \"N\";\n-        else if (range == 1 || range == 2)\n-            dirTxt = \"NE\";\n-        else if (range == 3 || range == 4)\n-            dirTxt = \"E\";\n-        else if (range == 5 || range == 6)\n-            dirTxt = \"SE\";\n-        else if (range == 7 || range == 8)\n-            dirTxt = \"S\";\n-        else if (range == 9 || range == 10)\n-            dirTxt = \"SW\";\n-        else if (range == 11 || range == 12)\n-            dirTxt = \"W\";\n-        else if (range == 13 || range == 14)\n-            dirTxt = \"NW\";\n-        return dirTxt;\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getSupportMenuInflater().inflate(R.menu.activity_compass, menu);\n+        return super.onCreateOptionsMenu(menu);\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) {\n+        switch (item.getItemId()) {\n+        case R.id.menu_enable_compass_rotation:\n+            isCompassEnabled = !isCompassEnabled;\n+            String text = isCompassEnabled ? \"Compass rotation has been enabled!\"\n+                    : \"Compass rotation has been disabled\";\n+            Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT).show();\n+            return true;\n+        }\n+        return super.onOptionsItemSelected(item);\n+    }\n \n }\n"
    },
    {
        "commit hash": "a3206f0964fb140a9c3c80bd071abbd439d25c10",
        "previous commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/utils/CompassUtils.java",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+package com.novoda.example.compass.utils;\n+\n+public class CompassUtils {\n+\n+    public static String getDirectionFromBearing(double bearing) {\n+        int range = (int) (bearing / (360f / 16f));\n+        String dirTxt = \"\";\n+        if (range == 15 || range == 0)\n+            dirTxt = \"N\";\n+        else if (range == 1 || range == 2)\n+            dirTxt = \"NE\";\n+        else if (range == 3 || range == 4)\n+            dirTxt = \"E\";\n+        else if (range == 5 || range == 6)\n+            dirTxt = \"SE\";\n+        else if (range == 7 || range == 8)\n+            dirTxt = \"S\";\n+        else if (range == 9 || range == 10)\n+            dirTxt = \"SW\";\n+        else if (range == 11 || range == 12)\n+            dirTxt = \"W\";\n+        else if (range == 13 || range == 14)\n+            dirTxt = \"NW\";\n+        return dirTxt;\n+    }\n+    \n+    public static int getRotationDegreesFromBearing(double bearing){\n+        return  (int)(360 - bearing);\n+    }\n+    \n+}\n"
    },
    {
        "commit hash": "c77c4bf11ec28f9f57dc073b70f005a74d0aafb9",
        "previous commit hash": "3494fc42fff5af3a37d0984e8bf8aa0a40d693a2",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/ImageActivity.java",
            "additions": 68,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,68 @@\n+package com.novoda.example.compass;\n+\n+import utils.RotatedImageView;\n+\n+import android.app.Activity;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Matrix;\n+import android.os.Bundle;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.View.OnTouchListener;\n+import android.widget.ImageView;\n+\n+public class ImageActivity extends Activity implements OnTouchListener{\n+\n+    private ImageView image;\n+    \n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        \n+        RotatedImageView view = new RotatedImageView(this);\n+        view.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,\n+                ViewGroup.LayoutParams.MATCH_PARENT));\n+        \n+        setContentView(view);\n+        \n+//        setContentView(R.layout.activity_image);        \n+//        loadImage();\n+    }\n+    \n+    private void loadImage(){\n+        image = (ImageView) findViewById(R.id.backgroundimage);\n+        image.setOnTouchListener(this);\n+    }\n+\n+    @Override\n+    public boolean onTouch(View v, MotionEvent event) {\n+        \n+        double r = Math.atan2(event.getX() - image.getWidth() / 2, image.getHeight() / 2 - event.getY());\n+        int rotation = (int) Math.toDegrees(r);\n+        \n+        if (event.getAction() == MotionEvent.ACTION_MOVE)\n+        {\n+            updateRotation(rotation);\n+        }\n+        \n+        return true;\n+    }\n+    \n+    private void updateRotation(double rot)\n+    {\n+        float newRot = new Float(rot);\n+\n+        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.floorplan);\n+\n+        Matrix matrix = new Matrix();\n+        matrix.postRotate(newRot - 50);\n+\n+        Bitmap redrawnBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);\n+        image.setImageBitmap(redrawnBitmap);\n+    }\n+    \n+    \n+    \n+}\n"
    },
    {
        "commit hash": "3494fc42fff5af3a37d0984e8bf8aa0a40d693a2",
        "previous commit hash": "2c36d923607e464742f61a576de54f04e1fed746",
        "diff stats": {
            "file_path": "CompassExample/src/utils/RotatedImageView.java",
            "additions": 335,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,335 @@\n+package utils;\n+\n+import java.util.ArrayList;\n+\n+import com.novoda.example.compass.R;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.PointF;\n+import android.graphics.drawable.Drawable;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.MotionEvent;\n+import android.view.ScaleGestureDetector;\n+import android.view.View;\n+\n+public class RotatedImageView extends View {\n+\n+    private static final int INVALID_POINTER_ID = -1;\n+\n+    private Drawable backgroundImage;\n+    private float mPosX;\n+    private float mPosY;\n+\n+    private ArrayList<PointF> touchPoints = null;\n+\n+    private float mLastTouchX;\n+    private float mLastTouchY;\n+    private int mActivePointerId = INVALID_POINTER_ID;\n+\n+    private ScaleGestureDetector mScaleDetector;\n+    private float mScaleFactor = 1.f;\n+\n+    private float degrees;\n+    private float old_degrees;\n+    private boolean firstIterationMultitouch;\n+    private float last_rotation_degrees;\n+    \n+\n+    private float last_center_rotation_position_x;\n+    private float last_center_rotation_position_y;\n+\n+    private boolean isMultiTouch = false;\n+    \n+    private boolean isCompassActivated = false;\n+    private float compass_x_position;\n+    private float compass_y_position;\n+    private float compass_degrees;\n+\n+    private String TAG = \"RotatedImage\";\n+\n+    public RotatedImageView(Context context) {\n+        this(context, null, 0);\n+    }\n+\n+    public RotatedImageView(Context context, AttributeSet attrs) {\n+        this(context, attrs, 0);\n+    }\n+\n+    public RotatedImageView(Context context, AttributeSet attrs, int defStyle) {\n+        super(context, attrs, defStyle);\n+        initialization(context);\n+    }\n+\n+    private void initialization(Context context) {\n+        initializeBackgroundImage(context);\n+        initializeScaleDetector(context);\n+        initializeVariables();\n+        last_rotation_degrees = 0;\n+        last_center_rotation_position_x = 0;\n+        last_center_rotation_position_y = 0;\n+        isCompassActivated=false;\n+    }\n+\n+    private void initializeBackgroundImage(Context context) {\n+        backgroundImage = context.getResources().getDrawable(R.drawable.floorplan);\n+        backgroundImage.setBounds(0, 0, backgroundImage.getIntrinsicWidth(), backgroundImage.getIntrinsicHeight());\n+\n+    }\n+\n+    private void initializeScaleDetector(Context context) {\n+        mScaleDetector = new ScaleGestureDetector(context, new ScaleListener());\n+    }\n+\n+    private void initializeVariables() {\n+        touchPoints = new ArrayList<PointF>();\n+        firstIterationMultitouch = true;\n+    }\n+\n+    @Override\n+    public boolean onTouchEvent(MotionEvent ev) {\n+\n+        activateScaleDetector(ev);\n+\n+        final int action = ev.getAction();\n+\n+        switch (action & MotionEvent.ACTION_MASK) {\n+\n+        case MotionEvent.ACTION_DOWN: {\n+            updateXYPositionSimpleTouch(ev);\n+            updatePointerId(ev);\n+            mActivePointerId = ev.getPointerId(0);\n+            // invalidate();\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_POINTER_DOWN: {\n+            Log.d(TAG, \"Pointer down\");\n+            isMultiTouch = true;\n+            firstIterationMultitouch = true;\n+            setInitalPositionMultiPoints(ev);\n+            invalidate();\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_MOVE: {\n+\n+            if (isMultiTouch) {\n+                setMultitouchPoints(ev);\n+            } else {\n+                updatePositionToMoveTheImage(ev);\n+            }\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_UP: {\n+            mActivePointerId = INVALID_POINTER_ID;\n+            Log.d(TAG, \"Action up\");\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_CANCEL: {\n+            mActivePointerId = INVALID_POINTER_ID;\n+            break;\n+        }\n+\n+        case MotionEvent.ACTION_POINTER_UP: {\n+            Log.d(TAG, \"Pointer up\");\n+            isMultiTouch = false;\n+            last_rotation_degrees = degrees + last_rotation_degrees;\n+            Log.d(TAG, \"last_rotation_degrees: \" + last_rotation_degrees);\n+            updateXYPositionSimpleTouch(ev);\n+            updatePointerId(ev);\n+\n+            break;\n+        }\n+\n+        }\n+\n+        return true;\n+    }\n+\n+    private void activateScaleDetector(MotionEvent ev) {\n+        mScaleDetector.onTouchEvent(ev);\n+    }\n+\n+    private void updateXYPositionSimpleTouch(MotionEvent ev) {\n+        mLastTouchX = ev.getX();\n+        mLastTouchY = ev.getY();\n+\n+    }\n+\n+    private void updatePointerId(MotionEvent ev) {\n+        final int pointerIndex = (ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;\n+        final int pointerId = ev.getPointerId(pointerIndex);\n+        if (pointerId == mActivePointerId) {\n+            // This was our active pointer going up. Choose a new\n+            // active pointer and adjust accordingly.\n+            final int newPointerIndex = pointerIndex == 0 ? 1 : 0;\n+            mLastTouchX = ev.getX(newPointerIndex);\n+            mLastTouchY = ev.getY(newPointerIndex);\n+            mActivePointerId = ev.getPointerId(newPointerIndex);\n+        }\n+    }\n+\n+    @Override\n+    public void onDraw(Canvas canvas) {\n+        super.onDraw(canvas);\n+        \n+        if(isCompassActivated){            \n+            canvas.rotate(compass_degrees, compass_x_position, compass_y_position);\n+        }\n+        \n+        else{\n+            \n+            if (!isMultiTouch) {\n+                canvas.translate(mPosX, mPosY);\n+                canvas.rotate(last_rotation_degrees, last_center_rotation_position_x, last_center_rotation_position_y);\n+            }\n+            \n+            if (isMultiTouch) {\n+\n+                if (touchPoints.size() > 1) {\n+                    // canvas.scale(mScaleFactor, mScaleFactor);\n+                    rotateImageFromMultitouch(touchPoints, canvas);\n+                }\n+            }\n+        }\n+        \n+        drawCanvas(canvas);\n+\n+    }\n+\n+    private void rotateImageFromMultitouch(ArrayList<PointF> touchPoints, Canvas canvas) {\n+\n+        PointF midpt;\n+\n+        for (int index = 1; index < touchPoints.size(); ++index) {\n+\n+            if (firstIterationMultitouch) {\n+\n+                double r = Math.atan2(touchPoints.get(index).x - touchPoints.get(index - 1).x, touchPoints.get(index).y\n+                        - touchPoints.get(index - 1).y);\n+                old_degrees = -(int) Math.toDegrees(r);\n+                firstIterationMultitouch = false;\n+                canvas.translate(mPosX, mPosY);\n+                canvas.rotate(last_rotation_degrees, last_center_rotation_position_x, last_center_rotation_position_y);\n+\n+            }\n+\n+            else {\n+\n+                double r = Math.atan2(touchPoints.get(index).x - touchPoints.get(index - 1).x, touchPoints.get(index).y\n+                        - touchPoints.get(index - 1).y);\n+                int currentDegrees = -(int) Math.toDegrees(r);\n+\n+                degrees = currentDegrees - old_degrees;\n+\n+                float temp = degrees + last_rotation_degrees;\n+\n+                midpt = getMidPoint(touchPoints.get(index - 1).x, touchPoints.get(index - 1).y,\n+                        touchPoints.get(index).x, touchPoints.get(index).y);\n+                \n+                last_center_rotation_position_x = midpt.x;\n+                last_center_rotation_position_y = midpt.y;                \n+\n+                canvas.translate(mPosX, mPosY);\n+                canvas.rotate(degrees + last_rotation_degrees, -mPosX + midpt.x, -mPosY + midpt.y);\n+\n+            }\n+        }\n+    }\n+\n+    private void drawCanvas(Canvas canvas) {\n+        canvas.save();\n+        backgroundImage.draw(canvas);\n+        canvas.restore();\n+    }\n+\n+    // Still not used\n+    private class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {\n+        @Override\n+        public boolean onScale(ScaleGestureDetector detector) {\n+            mScaleFactor *= detector.getScaleFactor();\n+\n+            // Don't let the object get too small or too large.\n+            mScaleFactor = Math.max(0.1f, Math.min(mScaleFactor, 5.0f));\n+\n+            invalidate();\n+            return true;\n+        }\n+    }\n+\n+    private PointF getMidPoint(float x1, float y1, float x2, float y2) {\n+        PointF point = new PointF();\n+\n+        float x = x1 + x2;\n+        float y = y1 + y2;\n+\n+        point.set(x / 2, y / 2);\n+\n+        return point;\n+    }\n+\n+    public void setMultitouchPoints(MotionEvent event) {\n+\n+        touchPoints.clear();\n+\n+        int pointerIndex = 0;\n+\n+        for (int index = 0; index < event.getPointerCount(); ++index) {\n+            pointerIndex = event.getPointerId(index);\n+\n+            touchPoints.add(new PointF(event.getX(pointerIndex), event.getY(pointerIndex)));\n+        }\n+    }\n+\n+    public void setInitalPositionMultiPoints(MotionEvent event) {\n+\n+        touchPoints.clear();\n+\n+        int pointerIndex = 0;\n+\n+        for (int index = 0; index < event.getPointerCount(); ++index) {\n+            pointerIndex = event.getPointerId(index);\n+\n+            touchPoints.add(new PointF(event.getX(pointerIndex), event.getY(pointerIndex)));\n+        }\n+\n+        double r = Math.atan2(touchPoints.get(1).x - touchPoints.get(1 - 1).x,\n+                touchPoints.get(1).y - touchPoints.get(1 - 1).y);\n+        old_degrees = -(int) Math.toDegrees(r);\n+    }\n+\n+    public void updatePositionToMoveTheImage(MotionEvent event) {\n+\n+        final int pointerIndex = event.findPointerIndex(mActivePointerId);\n+        final float x = event.getX(pointerIndex);\n+        final float y = event.getY(pointerIndex);\n+\n+        if (!mScaleDetector.isInProgress()) {\n+\n+            final float dx = x - mLastTouchX;\n+            final float dy = y - mLastTouchY;\n+\n+            mPosX += dx;\n+            mPosY += dy;\n+\n+            invalidate();\n+        }\n+\n+        mLastTouchX = x;\n+        mLastTouchY = y;\n+\n+    }\n+\n+    public void calculateNewPoints() {\n+\n+    }\n+    \n+    public void checkIfCompassIsActivated(){\n+        \n+    }\n+\n+}\n"
    },
    {
        "commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "previous commit hash": "9ffeb3e943a843f615b6909d721069cc751e36bf",
        "diff stats": {
            "file_path": "CompassExample/res/layout/activity_compass.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -8,6 +8,7 @@\n         android:layout_height=\"wrap_content\"\n         android:layout_centerHorizontal=\"true\"\n         android:layout_centerVertical=\"true\"\n+        android:id=\"@android:id/text1\"\n         android:padding=\"@dimen/padding_medium\"\n         android:text=\"@string/hello_world\"\n         tools:context=\".CompassActivity\" />\n"
    },
    {
        "commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "previous commit hash": "9ffeb3e943a843f615b6909d721069cc751e36bf",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 21,
            "deletions": 1
        },
        "diff content": "@@ -37,6 +37,9 @@ public abstract class BasicSensorActivity extends SherlockFragmentActivity imple\n     private SensorManager sensorManager;\n     private Sensor acclSensor;\n     private Sensor magFieldSensor;\n+    \n+    private double bearing = 0;\n+    private int rotationDegrees = 0;\n \n \n     public BroadcastReceiver freshLocationReceiver = new BroadcastReceiver() {\n@@ -152,7 +155,24 @@ public abstract class BasicSensorActivity extends SherlockFragmentActivity imple\n             floatBearing += magField.getDeclination();\n         if (floatBearing < 0)\n             floatBearing += 360;\n-        //GlobalData.setBearing((int) floatBearing);\n+        setBearing(floatBearing);\n+        setRotationInDegrees(floatBearing);\n+    }\n+\n+    private void setRotationInDegrees(double floatBearing) {\n+        this.bearing = floatBearing;        \n+    }\n+\n+    private void setBearing(double floatBearing) {\n+       this.rotationDegrees =  (int)(360 - floatBearing);\n+    }\n+    \n+    public int getRotation(){\n+        return rotationDegrees;\n+    }\n+    \n+    public double getBearing(){\n+        return bearing;\n     }\n \n     private void setmagValues(SensorEvent event) {\n"
    },
    {
        "commit hash": "8954610f0492fbafd975d58c08ad37d1e61ca347",
        "previous commit hash": "9ffeb3e943a843f615b6909d721069cc751e36bf",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/CompassActivity.java",
            "additions": 39,
            "deletions": 0
        },
        "diff content": "@@ -2,7 +2,10 @@ package com.novoda.example.compass.activities;\n \n import com.novoda.example.compass.R;\n \n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n import android.os.Bundle;\n+import android.widget.TextView;\n \n public class CompassActivity extends BasicSensorActivity {\n \n@@ -10,6 +13,42 @@ public class CompassActivity extends BasicSensorActivity {\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_compass);\n+        \n+    }\n+    \n+    @Override\n+    public void onSensorChanged(SensorEvent evt) {\n+        super.onSensorChanged(evt);\n+        updateText();\n+    }\n+\n+    private void updateText() {\n+        TextView text = (TextView)findViewById(android.R.id.text1);\n+        String dirTxt = getDirectionFromBearing(getBearing());\n+        text.setText(\" Direction = \" + dirTxt + \" Rotation in degress \" + getRotation());\n+        \n+    }\n+\n+    private String getDirectionFromBearing(double bearing) {\n+        int range = (int) (bearing / (360f / 16f));\n+        String dirTxt = \"\";\n+        if (range == 15 || range == 0)\n+            dirTxt = \"N\";\n+        else if (range == 1 || range == 2)\n+            dirTxt = \"NE\";\n+        else if (range == 3 || range == 4)\n+            dirTxt = \"E\";\n+        else if (range == 5 || range == 6)\n+            dirTxt = \"SE\";\n+        else if (range == 7 || range == 8)\n+            dirTxt = \"S\";\n+        else if (range == 9 || range == 10)\n+            dirTxt = \"SW\";\n+        else if (range == 11 || range == 12)\n+            dirTxt = \"W\";\n+        else if (range == 13 || range == 14)\n+            dirTxt = \"NW\";\n+        return dirTxt;\n     }\n \n \n"
    },
    {
        "commit hash": "9ffeb3e943a843f615b6909d721069cc751e36bf",
        "previous commit hash": "0eac14c496cd71674d3048e985c2f728ce801d8b",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 116,
            "deletions": 7
        },
        "diff content": "@@ -1,46 +1,101 @@\n package com.novoda.example.compass.activities;\n \n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n import com.actionbarsherlock.app.SherlockFragmentActivity;\n import com.novoda.example.compass.NovoCompass;\n+import com.novoda.example.compass.utils.LowPassFilter;\n import com.novoda.location.exception.NoProviderAvailable;\n \n+import android.hardware.SensorManager;\n+\n import android.content.BroadcastReceiver;\n import android.content.Context;\n import android.content.Intent;\n import android.content.IntentFilter;\n+import android.hardware.GeomagneticField;\n import android.hardware.Sensor;\n import android.hardware.SensorEvent;\n import android.hardware.SensorEventListener;\n import android.location.Location;\n import android.os.Bundle;\n-import android.util.Log;\n \n public abstract class BasicSensorActivity extends SherlockFragmentActivity implements SensorEventListener {\n \n+    private static final int FIRST_SENSOR_ITEM = 0;\n+    private static final AtomicBoolean ATOMIC_BOOLEAN = new AtomicBoolean(false);\n+\n+    private static final float grav[] = new float[3]; \n+    private static final float mag[] = new float[3]; \n+    private static final float rotation[] = new float[9]; \n+    private static final float orientation[] = new float[3]; \n+    private static float smoothed[] = new float[3];\n+\n     private Location location;\n+    private GeomagneticField magField;\n+    private IntentFilter filter;\n+    private SensorManager sensorManager;\n+    private Sensor acclSensor;\n+    private Sensor magFieldSensor;\n \n-    public BroadcastReceiver freshLocationReceiver = new BroadcastReceiver() {\n \n+    public BroadcastReceiver freshLocationReceiver = new BroadcastReceiver() {\n         @Override\n         public void onReceive(Context context, Intent intent) {\n             location = NovoCompass.getLocator().getLocation();\n-            Log.i(\"Loc\", \" location = \" + location.getLatitude() + \" \" + location.getLongitude());\n+            magField = new GeomagneticField((float) location.getLatitude(), (float) location.getLongitude(),\n+                    (float) location.getAltitude(), System.currentTimeMillis());\n         }\n     };\n \n-    private IntentFilter filter;\n+  \n \n     protected void onCreate(Bundle bundle) {\n         super.onCreate(bundle);\n+\n+        sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);\n+        initLocationIntentFilter();\n+\n+    }\n+\n+    private void initLocationIntentFilter() {\n         filter = new IntentFilter();\n         filter.addAction(NovoCompass.LOCATION_UPDATE_ACTION);\n-\n-    };\n+    }\n \n     @Override\n     public void onResume() {\n         super.onResume();\n         registerReceiver(freshLocationReceiver, filter);\n+        registerAcclSensor();\n+        registerMagSensor();\n+        registerLocationUpdates();\n+    }\n+\n+    @Override\n+    protected void onPause() {\n+        super.onPause();\n+        unregisterReceiver(freshLocationReceiver);\n+        unRegisterAcclSensor();\n+        unRegisterMagSensor();\n+        unRegisterLocationUpdates();\n+    }\n+    \n+    private void registerAcclSensor() {\n+        if (sensorManager.getSensorList(Sensor.TYPE_ACCELEROMETER).size() > 0) {\n+            acclSensor = sensorManager.getSensorList(Sensor.TYPE_ACCELEROMETER).get(FIRST_SENSOR_ITEM);\n+            sensorManager.registerListener(this, acclSensor, SensorManager.SENSOR_DELAY_NORMAL);\n+        }\n+    };\n+\n+    private void registerMagSensor() {\n+        if (sensorManager.getSensorList(Sensor.TYPE_MAGNETIC_FIELD).size() > 0) {\n+            magFieldSensor = sensorManager.getSensorList(Sensor.TYPE_MAGNETIC_FIELD).get(FIRST_SENSOR_ITEM);\n+            sensorManager.registerListener(this, magFieldSensor, SensorManager.SENSOR_DELAY_NORMAL);\n+        }\n+    };\n+\n+    private void registerLocationUpdates() {\n         try {\n             NovoCompass.getLocator().startLocationUpdates();\n         } catch (NoProviderAvailable np) {\n@@ -48,6 +103,24 @@ public abstract class BasicSensorActivity extends SherlockFragmentActivity imple\n         }\n     }\n \n+    private void unRegisterLocationUpdates() {\n+        NovoCompass.getLocator().stopLocationUpdates();\n+    }\n+\n+    private void unRegisterAcclSensor() {\n+        if (acclSensor == null) {\n+            return;\n+        }\n+        sensorManager.unregisterListener(this, acclSensor);\n+    }\n+\n+    public void unRegisterMagSensor() {\n+        if (magFieldSensor == null) {\n+            return;\n+        }\n+        sensorManager.unregisterListener(this, magFieldSensor);\n+    }\n+\n     @Override\n     public void onAccuracyChanged(Sensor sensor, int accuracy) {\n         // TODO Auto-generated method stub\n@@ -56,8 +129,44 @@ public abstract class BasicSensorActivity extends SherlockFragmentActivity imple\n \n     @Override\n     public void onSensorChanged(SensorEvent event) {\n-        // TODO Auto-generated method stub\n+        if (!ATOMIC_BOOLEAN.compareAndSet(false, true))\n+            return;\n+\n+        updateSensorValues(event);\n+\n+        ATOMIC_BOOLEAN.set(false);\n+    }\n+\n+    private void updateSensorValues(SensorEvent event) {\n+        if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {\n+            setAcclValues(event);\n+        } else if (event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD) {\n+            setmagValues(event);\n+        }\n+\n+        SensorManager.getRotationMatrix(rotation, null, grav, mag);\n+        SensorManager.getOrientation(rotation, orientation);\n+        double floatBearing = orientation[0];\n+        floatBearing = Math.toDegrees(floatBearing); \n+        if (magField != null)\n+            floatBearing += magField.getDeclination();\n+        if (floatBearing < 0)\n+            floatBearing += 360;\n+        //GlobalData.setBearing((int) floatBearing);\n+    }\n+\n+    private void setmagValues(SensorEvent event) {\n+        smoothed = LowPassFilter.filter(event.values, mag);\n+        mag[0] = smoothed[0];\n+        mag[1] = smoothed[1];\n+        mag[2] = smoothed[2];\n+    }\n \n+    private void setAcclValues(SensorEvent event) {\n+        smoothed = LowPassFilter.filter(event.values, grav);\n+        grav[0] = smoothed[0];\n+        grav[1] = smoothed[1];\n+        grav[2] = smoothed[2];\n     }\n \n }\n"
    },
    {
        "commit hash": "9ffeb3e943a843f615b6909d721069cc751e36bf",
        "previous commit hash": "0eac14c496cd71674d3048e985c2f728ce801d8b",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/utils/LowPassFilter.java",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+package com.novoda.example.compass.utils;\n+\n+public class LowPassFilter {\n+\n+    private static final float ALPHA = 0.2f;\n+\n+    public static float[] filter(float[] input, float[] prev) {\n+        if (input == null || prev == null)\n+            throw new NullPointerException(\"input and prev float arrays must be non-NULL\");\n+        if (input.length != prev.length)\n+            throw new IllegalArgumentException(\"input and prev must be the same length\");\n+        for (int i = 0; i < input.length; i++) {\n+            prev[i] = prev[i] + ALPHA * (input[i] - prev[i]);\n+        }\n+        return prev;\n+    }\n+}\n"
    },
    {
        "commit hash": "0eac14c496cd71674d3048e985c2f728ce801d8b",
        "previous commit hash": "e6ea3f2fc94bd7619661e56e667e1249f45e3861",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/NovoCompass.java",
            "additions": 8,
            "deletions": 2
        },
        "diff content": "@@ -5,19 +5,21 @@ import com.novoda.location.LocatorFactory;\n import com.novoda.location.LocatorSettings;\n \n import android.app.Application;\n+import android.content.IntentFilter;\n \n public class NovoCompass extends Application {\n \n     public static final String PACKAGE_NAME = \"com.novoda.example.compass\";\n     public static final String LOCATION_UPDATE_ACTION = \"com.com.novoda.example.compas.ACTION_FRESH_LOCATION\";\n-    private Locator locator;\n+    private static Locator locator;\n \n     @Override\n     public void onCreate() {\n         super.onCreate();\n         initLocationListener();\n-    }\n \n+    }\n+ \n     private void initLocationListener() {\n         LocatorSettings settings = new LocatorSettings(PACKAGE_NAME, LOCATION_UPDATE_ACTION);\n         settings.setUpdatesInterval(3 * 60 * 1000);\n@@ -25,5 +27,9 @@ public class NovoCompass extends Application {\n         locator = LocatorFactory.getInstance();\n         locator.prepare(getApplicationContext(), settings);\n     }\n+    \n+    public static Locator getLocator(){\n+        return locator;\n+    }\n \n }\n"
    },
    {
        "commit hash": "0eac14c496cd71674d3048e985c2f728ce801d8b",
        "previous commit hash": "e6ea3f2fc94bd7619661e56e667e1249f45e3861",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 41,
            "deletions": 1
        },
        "diff content": "@@ -1,12 +1,52 @@\n package com.novoda.example.compass.activities;\n \n import com.actionbarsherlock.app.SherlockFragmentActivity;\n+import com.novoda.example.compass.NovoCompass;\n+import com.novoda.location.exception.NoProviderAvailable;\n \n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n import android.hardware.Sensor;\n import android.hardware.SensorEvent;\n import android.hardware.SensorEventListener;\n+import android.location.Location;\n+import android.os.Bundle;\n+import android.util.Log;\n \n-public class BasicSensorActivity extends SherlockFragmentActivity implements SensorEventListener {\n+public abstract class BasicSensorActivity extends SherlockFragmentActivity implements SensorEventListener {\n+\n+    private Location location;\n+\n+    public BroadcastReceiver freshLocationReceiver = new BroadcastReceiver() {\n+\n+        @Override\n+        public void onReceive(Context context, Intent intent) {\n+            location = NovoCompass.getLocator().getLocation();\n+            Log.i(\"Loc\", \" location = \" + location.getLatitude() + \" \" + location.getLongitude());\n+        }\n+    };\n+\n+    private IntentFilter filter;\n+\n+    protected void onCreate(Bundle bundle) {\n+        super.onCreate(bundle);\n+        filter = new IntentFilter();\n+        filter.addAction(NovoCompass.LOCATION_UPDATE_ACTION);\n+\n+    };\n+\n+    @Override\n+    public void onResume() {\n+        super.onResume();\n+        registerReceiver(freshLocationReceiver, filter);\n+        try {\n+            NovoCompass.getLocator().startLocationUpdates();\n+        } catch (NoProviderAvailable np) {\n+            // TODO add implementation\n+        }\n+    }\n \n     @Override\n     public void onAccuracyChanged(Sensor sensor, int accuracy) {\n"
    },
    {
        "commit hash": "0eac14c496cd71674d3048e985c2f728ce801d8b",
        "previous commit hash": "e6ea3f2fc94bd7619661e56e667e1249f45e3861",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/CompassActivity.java",
            "additions": 1,
            "deletions": 10
        },
        "diff content": "@@ -1,14 +1,10 @@\n package com.novoda.example.compass.activities;\n \n import com.novoda.example.compass.R;\n-import com.novoda.example.compass.R.layout;\n-import com.novoda.example.compass.R.menu;\n \n import android.os.Bundle;\n-import android.app.Activity;\n-import android.view.Menu;\n \n-public class CompassActivity extends Activity {\n+public class CompassActivity extends BasicSensorActivity {\n \n     @Override\n     public void onCreate(Bundle savedInstanceState) {\n@@ -16,10 +12,5 @@ public class CompassActivity extends Activity {\n         setContentView(R.layout.activity_compass);\n     }\n \n-    @Override\n-    public boolean onCreateOptionsMenu(Menu menu) {\n-        getMenuInflater().inflate(R.menu.activity_compass, menu);\n-        return true;\n-    }\n \n }\n"
    },
    {
        "commit hash": "e6ea3f2fc94bd7619661e56e667e1249f45e3861",
        "previous commit hash": "ab536dca9f865d173769d4314b79e2c20d65d144",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/NovoCompass.java",
            "additions": 2,
            "deletions": 3
        },
        "diff content": "@@ -7,12 +7,11 @@ import com.novoda.location.LocatorSettings;\n import android.app.Application;\n \n public class NovoCompass extends Application {\n-    \n-    \n+\n     public static final String PACKAGE_NAME = \"com.novoda.example.compass\";\n     public static final String LOCATION_UPDATE_ACTION = \"com.com.novoda.example.compas.ACTION_FRESH_LOCATION\";\n     private Locator locator;\n-    \n+\n     @Override\n     public void onCreate() {\n         super.onCreate();\n"
    },
    {
        "commit hash": "e6ea3f2fc94bd7619661e56e667e1249f45e3861",
        "previous commit hash": "ab536dca9f865d173769d4314b79e2c20d65d144",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -11,13 +11,13 @@ public class BasicSensorActivity extends SherlockFragmentActivity implements Sen\n     @Override\n     public void onAccuracyChanged(Sensor sensor, int accuracy) {\n         // TODO Auto-generated method stub\n-        \n+\n     }\n \n     @Override\n     public void onSensorChanged(SensorEvent event) {\n         // TODO Auto-generated method stub\n-        \n+\n     }\n \n }\n"
    },
    {
        "commit hash": "e6ea3f2fc94bd7619661e56e667e1249f45e3861",
        "previous commit hash": "ab536dca9f865d173769d4314b79e2c20d65d144",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/CompassActivity.java",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -22,5 +22,4 @@ public class CompassActivity extends Activity {\n         return true;\n     }\n \n-    \n }\n"
    },
    {
        "commit hash": "ab536dca9f865d173769d4314b79e2c20d65d144",
        "previous commit hash": "2c36d923607e464742f61a576de54f04e1fed746",
        "diff stats": {
            "file_path": "CompassExample/AndroidManifest.xml",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -12,9 +12,9 @@\n     <application\n         android:icon=\"@drawable/ic_launcher\"\n         android:label=\"@string/app_name\"\n-        android:theme=\"@style/AppTheme\" >\n+        android:theme=\"@style/AppTheme\" android:name=\"NovoCompass\">\n         <activity\n-            android:name=\".CompassActivity\"\n+            android:name=\".activities.CompassActivity\"\n             android:label=\"@string/title_activity_compass\" >\n             <intent-filter>\n                 <action android:name=\"android.intent.action.MAIN\" />\n"
    },
    {
        "commit hash": "ab536dca9f865d173769d4314b79e2c20d65d144",
        "previous commit hash": "2c36d923607e464742f61a576de54f04e1fed746",
        "diff stats": {
            "file_path": "CompassExample/project.properties",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -12,4 +12,4 @@\n \n # Project target.\n target=android-16\n-android.library.reference.1=../../Programming/ActionBarSherlock-2/library\n+android.library.reference.1=../../ActionBarSherlock-2/library\n"
    },
    {
        "commit hash": "ab536dca9f865d173769d4314b79e2c20d65d144",
        "previous commit hash": "2c36d923607e464742f61a576de54f04e1fed746",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/NovoCompass.java",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+package com.novoda.example.compass;\n+\n+import com.novoda.location.Locator;\n+import com.novoda.location.LocatorFactory;\n+import com.novoda.location.LocatorSettings;\n+\n+import android.app.Application;\n+\n+public class NovoCompass extends Application {\n+    \n+    \n+    public static final String PACKAGE_NAME = \"com.novoda.example.compass\";\n+    public static final String LOCATION_UPDATE_ACTION = \"com.com.novoda.example.compas.ACTION_FRESH_LOCATION\";\n+    private Locator locator;\n+    \n+    @Override\n+    public void onCreate() {\n+        super.onCreate();\n+        initLocationListener();\n+    }\n+\n+    private void initLocationListener() {\n+        LocatorSettings settings = new LocatorSettings(PACKAGE_NAME, LOCATION_UPDATE_ACTION);\n+        settings.setUpdatesInterval(3 * 60 * 1000);\n+        settings.setUpdatesDistance(50);\n+        locator = LocatorFactory.getInstance();\n+        locator.prepare(getApplicationContext(), settings);\n+    }\n+\n+}\n"
    },
    {
        "commit hash": "ab536dca9f865d173769d4314b79e2c20d65d144",
        "previous commit hash": "2c36d923607e464742f61a576de54f04e1fed746",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/BasicSensorActivity.java",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+package com.novoda.example.compass.activities;\n+\n+import com.actionbarsherlock.app.SherlockFragmentActivity;\n+\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+\n+public class BasicSensorActivity extends SherlockFragmentActivity implements SensorEventListener {\n+\n+    @Override\n+    public void onAccuracyChanged(Sensor sensor, int accuracy) {\n+        // TODO Auto-generated method stub\n+        \n+    }\n+\n+    @Override\n+    public void onSensorChanged(SensorEvent event) {\n+        // TODO Auto-generated method stub\n+        \n+    }\n+\n+}\n"
    },
    {
        "commit hash": "ab536dca9f865d173769d4314b79e2c20d65d144",
        "previous commit hash": "2c36d923607e464742f61a576de54f04e1fed746",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/activities/CompassActivity.java",
            "additions": 5,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,8 @@\n-package com.novoda.example.compass;\n+package com.novoda.example.compass.activities;\n+\n+import com.novoda.example.compass.R;\n+import com.novoda.example.compass.R.layout;\n+import com.novoda.example.compass.R.menu;\n \n import android.os.Bundle;\n import android.app.Activity;\n"
    },
    {
        "commit hash": "2c36d923607e464742f61a576de54f04e1fed746",
        "previous commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "diff stats": {
            "file_path": "CompassExample/AndroidManifest.xml",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -6,6 +6,8 @@\n     <uses-sdk\n         android:minSdkVersion=\"9\"\n         android:targetSdkVersion=\"15\" />\n+    \n+    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n \n     <application\n         android:icon=\"@drawable/ic_launcher\"\n@@ -20,6 +22,38 @@\n                 <category android:name=\"android.intent.category.LAUNCHER\" />\n             </intent-filter>\n         </activity>\n+        \n+        <!-- Receivers -->\n+\n+        <receiver android:name=\"com.novoda.location.receiver.LocationChanged\" >\n+            <intent-filter>\n+                <action android:name=\"com.novoda.location.ACTIVE_LOCATION_UPDATE_ACTION\" />\n+            </intent-filter>\n+        </receiver>\n+        \n+        <receiver android:name=\"com.novoda.location.receiver.PassiveLocationChanged\" />\n+        \n+        <receiver\n+            android:name=\"com.novoda.location.receiver.UnregisterPassiveListenerOnLostConnectivity\"\n+            enabled=\"false\" >\n+            <intent-filter>\n+                <action android:name=\"android.net.conn.CONNECTIVITY_CHANGE\" />\n+            </intent-filter>\n+        </receiver>\n+        \n+        <receiver android:name=\"com.novoda.location.receiver.UnregisterPassiveListenerOnLowBattery\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.BATTERY_LOW\" />\n+                <action android:name=\"android.intent.action.BATTERY_OKAY\" />\n+            </intent-filter>\n+        </receiver>\n+        \n+        <receiver android:name=\"com.novoda.location.receiver.RestorePassiveListenerBoot\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n+            </intent-filter>\n+        </receiver>\n+        \n     </application>\n \n </manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "2c36d923607e464742f61a576de54f04e1fed746",
        "previous commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "diff stats": {
            "file_path": "CompassExample/libs/novocation-core-1.0.8.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/libs/novocation-core-1.0.8.jar differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/AndroidManifest.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.novoda.example.compass\"\n+    android:versionCode=\"1\"\n+    android:versionName=\"1.0\" >\n+\n+    <uses-sdk\n+        android:minSdkVersion=\"9\"\n+        android:targetSdkVersion=\"15\" />\n+\n+    <application\n+        android:icon=\"@drawable/ic_launcher\"\n+        android:label=\"@string/app_name\"\n+        android:theme=\"@style/AppTheme\" >\n+        <activity\n+            android:name=\".CompassActivity\"\n+            android:label=\"@string/title_activity_compass\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/ic_launcher-web.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/ic_launcher-web.png differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/proguard-project.txt",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+# To enable ProGuard in your project, edit project.properties\n+# to define the proguard.config property as described in that file.\n+#\n+# Add project specific ProGuard rules here.\n+# By default, the flags in this file are appended to flags specified\n+# in ${sdk.dir}/tools/proguard/proguard-android.txt\n+# You can edit the include path and order by changing the ProGuard\n+# include property in project.properties.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# Add any project specific keep options here:\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/project.properties",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must be checked in Version Control Systems.\n+#\n+# To customize properties used by the Ant build system edit\n+# \"ant.properties\", and override values to adapt the script to your\n+# project structure.\n+#\n+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):\n+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n+\n+# Project target.\n+target=android-16\n+android.library.reference.1=../../Programming/ActionBarSherlock-2/library\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/drawable-hdpi/ic_action_search.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable-hdpi/ic_action_search.png differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/drawable-mdpi/ic_action_search.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable-mdpi/ic_action_search.png differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/drawable-xhdpi/ic_action_search.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable-xhdpi/ic_action_search.png differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CompassExample/res/drawable-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/layout/activity_compass.xml",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\" >\n+\n+    <TextView\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_centerHorizontal=\"true\"\n+        android:layout_centerVertical=\"true\"\n+        android:padding=\"@dimen/padding_medium\"\n+        android:text=\"@string/hello_world\"\n+        tools:context=\".CompassActivity\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/menu/activity_compass.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:id=\"@+id/menu_settings\"\n+        android:title=\"@string/menu_settings\"\n+        android:orderInCategory=\"100\"\n+        android:showAsAction=\"never\" />\n+</menu>\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/values-large/dimens.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<resources>\n+\n+    <dimen name=\"padding_small\">8dp</dimen>\n+    <dimen name=\"padding_medium\">16dp</dimen>\n+    <dimen name=\"padding_large\">16dp</dimen>\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/values-v11/styles.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<resources>\n+\n+    <style name=\"AppTheme\" parent=\"android:Theme.Holo.Light\" />\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/values-v14/styles.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<resources>\n+\n+    <style name=\"AppTheme\" parent=\"android:Theme.Holo.Light.DarkActionBar\" />\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/values/dimens.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<resources>\n+\n+    <dimen name=\"padding_small\">8dp</dimen>\n+    <dimen name=\"padding_medium\">8dp</dimen>\n+    <dimen name=\"padding_large\">16dp</dimen>\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/values/strings.xml",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+<resources>\n+\n+    <string name=\"app_name\">CompassExample</string>\n+    <string name=\"hello_world\">Hello world!</string>\n+    <string name=\"menu_settings\">Settings</string>\n+    <string name=\"title_activity_compass\">Compass</string>\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/res/values/styles.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<resources>\n+\n+    <style name=\"AppTheme\" parent=\"Theme.Sherlock.Light\" />\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c0ec8c03bd2ce6872c4961165bba2769a7368b",
        "previous commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "diff stats": {
            "file_path": "CompassExample/src/com/novoda/example/compass/CompassActivity.java",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+package com.novoda.example.compass;\n+\n+import android.os.Bundle;\n+import android.app.Activity;\n+import android.view.Menu;\n+\n+public class CompassActivity extends Activity {\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_compass);\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getMenuInflater().inflate(R.menu.activity_compass, menu);\n+        return true;\n+    }\n+\n+    \n+}\n"
    },
    {
        "commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "previous commit hash": "c047f7b702bace3872b214639458f47cf90f7417",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,7 @@\n   <parent>\n     <groupId>com.google.tv.leftnavbar</groupId>\n     <artifactId>leftnavbar-lib-parent</artifactId>\n-    <version>1.1</version>\n+    <version>1.2-SNAPSHOT</version>\n   </parent>\n \n   <artifactId>leftnavbar-lib</artifactId>\n"
    },
    {
        "commit hash": "8b53d87e0baefa8d1687a475a00952182aab00ac",
        "previous commit hash": "c047f7b702bace3872b214639458f47cf90f7417",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,7 @@\n \n   <groupId>com.google.tv.leftnavbar</groupId>\n   <artifactId>leftnavbar-lib-parent</artifactId>\n-  <version>1.1</version>\n+  <version>1.2-SNAPSHOT</version>\n   <packaging>pom</packaging>\n   <name>leftnavbar-lib-parent</name>\n \n"
    },
    {
        "commit hash": "c047f7b702bace3872b214639458f47cf90f7417",
        "previous commit hash": "0406548f2e9b0d15fb3253b336dec05348065ab2",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,7 @@\n   <parent>\n     <groupId>com.google.tv.leftnavbar</groupId>\n     <artifactId>leftnavbar-lib-parent</artifactId>\n-    <version>1.1-SNAPSHOT</version>\n+    <version>1.1</version>\n   </parent>\n \n   <artifactId>leftnavbar-lib</artifactId>\n"
    },
    {
        "commit hash": "c047f7b702bace3872b214639458f47cf90f7417",
        "previous commit hash": "0406548f2e9b0d15fb3253b336dec05348065ab2",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,7 @@\n \n   <groupId>com.google.tv.leftnavbar</groupId>\n   <artifactId>leftnavbar-lib-parent</artifactId>\n-  <version>1.1-SNAPSHOT</version>\n+  <version>1.1</version>\n   <packaging>pom</packaging>\n   <name>leftnavbar-lib-parent</name>\n \n"
    },
    {
        "commit hash": "0406548f2e9b0d15fb3253b336dec05348065ab2",
        "previous commit hash": "69428c1adcc8d0414231dd7e9ddcbb5e701d9451",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml.releaseBackup",
            "additions": 0,
            "deletions": 27
        },
        "diff content": "@@ -1,27 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-  <modelVersion>4.0.0</modelVersion>\n-  <parent>\n-    <groupId>com.google.tv.leftnavbar</groupId>\n-    <artifactId>leftnavbar-lib-parent</artifactId>\n-    <version>1.0-SNAPSHOT</version>\n-  </parent>\n-\n-  <artifactId>leftnavbar-lib</artifactId>\n-  <packaging>apklib</packaging>\n-  <name>leftnavbar-lib</name>\n-\n-<dependencies>\n-  <dependency>\n-      <groupId>android</groupId>\n-      <artifactId>android</artifactId>\n-      <version>3.2_r1</version>\n-      <scope>provided</scope>\n-  </dependency>\n-</dependencies>\n-\n-  <build>\n-    <sourceDirectory>src</sourceDirectory>\n-  </build>\n-</project>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "0406548f2e9b0d15fb3253b336dec05348065ab2",
        "previous commit hash": "69428c1adcc8d0414231dd7e9ddcbb5e701d9451",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_tab.xml",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -13,7 +13,7 @@\n      See the License for the specific language governing permissions and\n      limitations under the License.\n -->\n-<com.example.google.tv.leftnavbar.TabFrame xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+<com.google.tv.leftnavbar.TabFrame xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     android:id=\"@+id/leftnav_bar_tab\"\n     style=\"@style/Widget.ActionBarView_TabView\"\n     android:layout_width=\"match_parent\"\n@@ -42,4 +42,4 @@\n         android:duplicateParentState=\"true\"\n         />\n \n-</com.example.google.tv.leftnavbar.TabFrame>\n+</com.google.tv.leftnavbar.TabFrame>\n"
    },
    {
        "commit hash": "0406548f2e9b0d15fb3253b336dec05348065ab2",
        "previous commit hash": "69428c1adcc8d0414231dd7e9ddcbb5e701d9451",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_tabs.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -13,6 +13,6 @@\n      See the License for the specific language governing permissions and\n      limitations under the License.\n -->\n-<com.example.google.tv.leftnavbar.TabListView\n+<com.google.tv.leftnavbar.TabListView\n \txmlns:android=\"http://schemas.android.com/apk/res/android\" style=\"@style/Widget.ActionBarView_TabBar\"\n \tandroid:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" />\n"
    },
    {
        "commit hash": "0406548f2e9b0d15fb3253b336dec05348065ab2",
        "previous commit hash": "69428c1adcc8d0414231dd7e9ddcbb5e701d9451",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/lib_left_nav.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -15,7 +15,7 @@\n -->\n <merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n \n-  <com.example.google.tv.leftnavbar.LeftNavView xmlns:android=\"http://schemas.android.com/apk/res/android\"   android:id=\"@+id/left_nav\"\n+  <com.google.tv.leftnavbar.LeftNavView xmlns:android=\"http://schemas.android.com/apk/res/android\"   android:id=\"@+id/left_nav\"\n         style=\"@android:style/Widget.Holo.ActionBar\"\n         android:layout_width=\"@dimen/left_nav_collapsed_apparent_width\"\n         android:layout_height=\"match_parent\" \n"
    },
    {
        "commit hash": "0406548f2e9b0d15fb3253b336dec05348065ab2",
        "previous commit hash": "69428c1adcc8d0414231dd7e9ddcbb5e701d9451",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/lib_title_container.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -15,7 +15,7 @@\n -->\n  <merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n  \n- <com.example.google.tv.leftnavbar.TitleBarView xmlns:android=\"http://schemas.android.com/apk/res/android\"  android:id=\"@+id/title_container\"\n+ <com.google.tv.leftnavbar.TitleBarView xmlns:android=\"http://schemas.android.com/apk/res/android\"  android:id=\"@+id/title_container\"\n         style=\"?android:attr/windowTitleBackgroundStyle\"\n         android:layout_width=\"fill_parent\"\n         android:layout_height=\"@dimen/title_bar_height\"\n"
    },
    {
        "commit hash": "69428c1adcc8d0414231dd7e9ddcbb5e701d9451",
        "previous commit hash": "897851bcd2d03a530e6866203995a745ead249b5",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,7 @@\n   <parent>\n     <groupId>com.google.tv.leftnavbar</groupId>\n     <artifactId>leftnavbar-lib-parent</artifactId>\n-    <version>1.0</version>\n+    <version>1.1-SNAPSHOT</version>\n   </parent>\n \n   <artifactId>leftnavbar-lib</artifactId>\n"
    },
    {
        "commit hash": "69428c1adcc8d0414231dd7e9ddcbb5e701d9451",
        "previous commit hash": "897851bcd2d03a530e6866203995a745ead249b5",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,7 @@\n \n   <groupId>com.google.tv.leftnavbar</groupId>\n   <artifactId>leftnavbar-lib-parent</artifactId>\n-  <version>1.0</version>\n+  <version>1.1-SNAPSHOT</version>\n   <packaging>pom</packaging>\n   <name>leftnavbar-lib-parent</name>\n \n"
    },
    {
        "commit hash": "897851bcd2d03a530e6866203995a745ead249b5",
        "previous commit hash": "c73af91d8b9712c83f92c9bee06362dab23da9b1",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,7 @@\n   <parent>\n     <groupId>com.google.tv.leftnavbar</groupId>\n     <artifactId>leftnavbar-lib-parent</artifactId>\n-    <version>1.0-SNAPSHOT</version>\n+    <version>1.0</version>\n   </parent>\n \n   <artifactId>leftnavbar-lib</artifactId>\n"
    },
    {
        "commit hash": "897851bcd2d03a530e6866203995a745ead249b5",
        "previous commit hash": "c73af91d8b9712c83f92c9bee06362dab23da9b1",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,7 @@\n \n   <groupId>com.google.tv.leftnavbar</groupId>\n   <artifactId>leftnavbar-lib-parent</artifactId>\n-  <version>1.0-SNAPSHOT</version>\n+  <version>1.0</version>\n   <packaging>pom</packaging>\n   <name>leftnavbar-lib-parent</name>\n \n"
    },
    {
        "commit hash": "c73af91d8b9712c83f92c9bee06362dab23da9b1",
        "previous commit hash": "68fc81938b46834112a79c42f9acc27703d3e276",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -36,8 +36,8 @@\n \n   <scm>\n     <url>http://github.com/novoda/Commons/tree/${scm.branch}</url>\n-    <connection>scm:git:git://github.com/novoda/Commons.git</connection>\n-    <developerConnection>scm:git:ssh://git@github.com/novoda/Commons.git</developerConnection>\n+    <connection>scm:git:git://github.com/novoda/android.git</connection>\n+    <developerConnection>scm:git:ssh://git@github.com/novoda/android.git</developerConnection>\n   </scm>\n \n \n@@ -72,4 +72,4 @@\n   <modules>\n     <module>leftnavbar</module>\n   </modules>\n-</project>\n\\ No newline at end of file\n+</project>\n"
    },
    {
        "commit hash": "c73af91d8b9712c83f92c9bee06362dab23da9b1",
        "previous commit hash": "68fc81938b46834112a79c42f9acc27703d3e276",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml.releaseBackup",
            "additions": 0,
            "deletions": 76
        },
        "diff content": "@@ -1,76 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-  <modelVersion>4.0.0</modelVersion>\n-  <parent>\n-    <groupId>com.novoda</groupId>\n-    <artifactId>android</artifactId>\n-    <version>2.0.2</version>\n-  </parent>\n-\n-  <groupId>com.google.tv.leftnavbar</groupId>\n-  <artifactId>leftnavbar-lib-parent</artifactId>\n-  <version>1.0-SNAPSHOT</version>\n-  <packaging>pom</packaging>\n-  <name>leftnavbar-lib-parent</name>\n-\n-  <properties>\n-    <android.sdk.platform>13</android.sdk.platform>\n-  </properties>\n-\n-  <repositories>\n-    <repository>\n-      <id>public-mvn-repo-releases</id>\n-      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n-    </repository>\n- \n-  </repositories>\n-  <pluginRepositories>\n-    <pluginRepository>\n-      <id>public-mvn-repo.plugin-releases</id>\n-      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n-      <snapshots>\n-        <enabled>false</enabled>\n-      </snapshots>\n-    </pluginRepository>\n-  </pluginRepositories>\n-\n-  <scm>\n-    <url>http://github.com/novoda/Commons/tree/${scm.branch}</url>\n-    <connection>scm:git:git://github.com/novoda/Commons.git</connection>\n-    <developerConnection>scm:git:ssh://git@github.com/novoda/Commons.git</developerConnection>\n-  </scm>\n-\n-\n-  <distributionManagement>\n-    <repository>\n-      <id>local-public-mvn-repo</id>\n-      <name>local clone of https://github.com/novoda/public-mvn-repo</name>\n-      <url>${local.public.mvn.repo}</url>\n-    </repository>\n-  </distributionManagement>\n-\n-<build>\n-    <plugins>\n-      <plugin>\n-        <artifactId>maven-scm-plugin</artifactId>\n-        <configuration>\n-          <scmVersionType>branch</scmVersionType>\n-          <scmVersion>${scm.branch}</scmVersion>\n-        </configuration>\n-      </plugin>\n-      <plugin>\n-        <artifactId>maven-release-plugin</artifactId>\n-        <configuration>\n-          <autoVersionSubmodules>true</autoVersionSubmodules>\n-          <useReleaseProfile>false</useReleaseProfile>\n-        </configuration>\n-        <goals />\n-      </plugin>\n-    </plugins>\n-  </build>\n-\n-  <modules>\n-    <module>leftnavbar</module>\n-  </modules>\n-</project>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c73af91d8b9712c83f92c9bee06362dab23da9b1",
        "previous commit hash": "68fc81938b46834112a79c42f9acc27703d3e276",
        "diff stats": {
            "file_path": "LeftNavLibrary/release.properties",
            "additions": 0,
            "deletions": 21
        },
        "diff content": "@@ -1,21 +0,0 @@\n-#release configuration\n-#Wed Jul 11 11:59:01 BST 2012\n-scm.commentPrefix=[maven-release-plugin] \n-pushChanges=true\n-project.rel.com.google.tv.leftnavbar\\:leftnavbar-lib-parent=1.0\n-scm.tag=leftnavbar-lib-parent-1.0\n-remoteTagging=true\n-project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib.empty=true\n-exec.additionalArguments=-P localrelease\n-project.rel.com.google.tv.leftnavbar\\:leftnavbar-lib=1.0\n-project.dev.com.google.tv.leftnavbar\\:leftnavbar-lib=1.1-SNAPSHOT\n-scm.url=scm\\:git\\:ssh\\://git@github.com/novoda/Commons.git\n-scm.tagNameFormat=@{project.artifactId}-@{project.version}\n-preparationGoals=clean verify\n-project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib-parent.connection=scm\\:git\\:git\\://github.com/novoda/Commons.git\n-project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib-parent.developerConnection=scm\\:git\\:ssh\\://git@github.com/novoda/Commons.git\n-project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib-parent.tag=HEAD\n-exec.snapshotReleasePluginAllowed=false\n-completedPhase=run-preparation-goals\n-project.dev.com.google.tv.leftnavbar\\:leftnavbar-lib-parent=1.1-SNAPSHOT\n-project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib-parent.url=http\\://github.com/novoda/Commons/tree/master\n"
    },
    {
        "commit hash": "68fc81938b46834112a79c42f9acc27703d3e276",
        "previous commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -4,7 +4,7 @@\n   <parent>\n     <groupId>com.google.tv.leftnavbar</groupId>\n     <artifactId>leftnavbar-lib-parent</artifactId>\n-    <version>1.0</version>\n+    <version>1.0-SNAPSHOT</version>\n   </parent>\n \n   <artifactId>leftnavbar-lib</artifactId>\n"
    },
    {
        "commit hash": "68fc81938b46834112a79c42f9acc27703d3e276",
        "previous commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,7 @@\n \n   <groupId>com.google.tv.leftnavbar</groupId>\n   <artifactId>leftnavbar-lib-parent</artifactId>\n-  <version>1.0</version>\n+  <version>1.0-SNAPSHOT</version>\n   <packaging>pom</packaging>\n   <name>leftnavbar-lib-parent</name>\n \n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/AndroidManifest.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tpackage=\"com.google.tv.leftnavbar\">\n+\t\n+\t<uses-sdk android:minSdkVersion=\"11\" android:targetSdkVersion=\"12\" />\n+\t\n+\t<application android:label=\"LeftNavBarLibrary\">\n+\t\t\n+\t</application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/ant.properties",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+# This file is used to override default values used by the Ant build system.\n+#\n+# This file must be checked into Version Control Systems, as it is\n+# integral to the build system of your project.\n+\n+# This file is only used by the Ant script.\n+\n+# You can use this to override default values such as\n+#  'source.dir' for the location of your java source folder and\n+#  'out.dir' for the location of your output folder.\n+\n+# You can also use it define how the release builds are signed by declaring\n+# the following properties:\n+#  'key.store' for the location of your keystore and\n+#  'key.alias' for the name of the key to use.\n+# The password will be asked during the build when you use the 'release' target.\n+\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/build.xml",
            "additions": 92,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project name=\"LeftNavBarLibrary\" default=\"help\">\n+\n+    <!-- The local.properties file is created and updated by the 'android' tool.\n+         It contains the path to the SDK. It should *NOT* be checked into\n+         Version Control Systems. -->\n+    <property file=\"local.properties\" />\n+\n+    <!-- The ant.properties file can be created by you. It is only edited by the\n+         'android' tool to add properties to it.\n+         This is the place to change some Ant specific build properties.\n+         Here are some properties you may want to change/update:\n+\n+         source.dir\n+             The name of the source directory. Default is 'src'.\n+         out.dir\n+             The name of the output directory. Default is 'bin'.\n+\n+         For other overridable properties, look at the beginning of the rules\n+         files in the SDK, at tools/ant/build.xml\n+\n+         Properties related to the SDK location or the project target should\n+         be updated using the 'android' tool with the 'update' action.\n+\n+         This file is an integral part of the build system for your\n+         application and should be checked into Version Control Systems.\n+\n+         -->\n+    <property file=\"ant.properties\" />\n+\n+    <!-- if sdk.dir was not set from one of the property file, then\n+         get it from the ANDROID_HOME env var.\n+         This must be done before we load project.properties since\n+         the proguard config can use sdk.dir -->\n+    <property environment=\"env\" />\n+    <condition property=\"sdk.dir\" value=\"${env.ANDROID_HOME}\">\n+        <isset property=\"env.ANDROID_HOME\" />\n+    </condition>\n+\n+    <!-- The project.properties file is created and updated by the 'android'\n+         tool, as well as ADT.\n+\n+         This contains project specific properties such as project target, and library\n+         dependencies. Lower level build properties are stored in ant.properties\n+         (or in .classpath for Eclipse projects).\n+\n+         This file is an integral part of the build system for your\n+         application and should be checked into Version Control Systems. -->\n+    <loadproperties srcFile=\"project.properties\" />\n+\n+    <!-- quick check on sdk.dir -->\n+    <fail\n+            message=\"sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable.\"\n+            unless=\"sdk.dir\"\n+    />\n+\n+    <!--\n+        Import per project custom build rules if present at the root of the project.\n+        This is the place to put custom intermediary targets such as:\n+            -pre-build\n+            -pre-compile\n+            -post-compile (This is typically used for code obfuscation.\n+                           Compiled code location: ${out.classes.absolute.dir}\n+                           If this is not done in place, override ${out.dex.input.absolute.dir})\n+            -post-package\n+            -post-build\n+            -pre-clean\n+    -->\n+    <import file=\"custom_rules.xml\" optional=\"true\" />\n+\n+    <!-- Import the actual build file.\n+\n+         To customize existing targets, there are two options:\n+         - Customize only one target:\n+             - copy/paste the target into this file, *before* the\n+               <import> task.\n+             - customize it to your needs.\n+         - Customize the whole content of build.xml\n+             - copy/paste the content of the rules files (minus the top node)\n+               into this file, replacing the <import> task.\n+             - customize to your needs.\n+\n+         ***********************\n+         ****** IMPORTANT ******\n+         ***********************\n+         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n+         in order to avoid having your file be overridden by tools such as \"android update project\"\n+    -->\n+    <!-- version-tag: 1 -->\n+    <import file=\"${sdk.dir}/tools/ant/build.xml\" />\n+\n+</project>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/local.properties",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must *NOT* be checked into Version Control Systems,\n+# as it contains information specific to your local configuration.\n+\n+# location of the SDK. This is only used by Ant\n+# For customization when using a Version Control System, please read the\n+# header note.\n+sdk.dir=/home/adam/android-sdks\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.google.tv.leftnavbar</groupId>\n+    <artifactId>leftnavbar-lib-parent</artifactId>\n+    <version>1.0</version>\n+  </parent>\n+\n+  <artifactId>leftnavbar-lib</artifactId>\n+  <packaging>apklib</packaging>\n+  <name>leftnavbar-lib</name>\n+\n+<dependencies>\n+  <dependency>\n+      <groupId>android</groupId>\n+      <artifactId>android</artifactId>\n+      <version>3.2_r1</version>\n+      <scope>provided</scope>\n+  </dependency>\n+</dependencies>\n+\n+  <build>\n+    <sourceDirectory>src</sourceDirectory>\n+  </build>\n+</project>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/pom.xml.releaseBackup",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.google.tv.leftnavbar</groupId>\n+    <artifactId>leftnavbar-lib-parent</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>leftnavbar-lib</artifactId>\n+  <packaging>apklib</packaging>\n+  <name>leftnavbar-lib</name>\n+\n+<dependencies>\n+  <dependency>\n+      <groupId>android</groupId>\n+      <artifactId>android</artifactId>\n+      <version>3.2_r1</version>\n+      <scope>provided</scope>\n+  </dependency>\n+</dependencies>\n+\n+  <build>\n+    <sourceDirectory>src</sourceDirectory>\n+  </build>\n+</project>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/proguard-project.txt",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+# To enable ProGuard in your project, edit project.properties\n+# to define the proguard.config property as described in that file.\n+#\n+# Add project specific ProGuard rules here.\n+# By default, the flags in this file are appended to flags specified\n+# in ${sdk.dir}/tools/proguard/proguard-android.txt\n+# You can edit the include path and order by changing the ProGuard\n+# include property in project.properties.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# Add any project specific keep options here:\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/project.properties",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must be checked in Version Control Systems.\n+#\n+# To customize properties used by the Ant build system edit\n+# \"ant.properties\", and override values to adapt the script to your\n+# project structure.\n+#\n+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):\n+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n+\n+android.library=true\n+# Project target.\n+target=android-13\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/color/leftnav_bar_tab_text_dark.xml",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_enabled=\"false\"\n+        android:color=\"#999999\"\n+        />\n+    <item android:state_selected=\"true\"\n+        android:color=\"#6191F2\"\n+        />\n+    <item android:state_focused=\"true\"\n+        android:color=\"#FFFFFF\"\n+        />\n+    <item\n+        android:color=\"#999999\"\n+        />\n+</selector>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/color/leftnav_bar_tab_text_light.xml",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_enabled=\"false\"\n+        android:color=\"#666666\"\n+        />\n+    <item android:state_selected=\"true\"\n+        android:color=\"#6191F2\"\n+        />\n+    <item android:state_focused=\"true\"\n+        android:color=\"#222222\"\n+        />\n+    <item\n+        android:color=\"#666666\"\n+        />\n+</selector>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_background_dark.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_background_light.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-hdpi/leftnav_bar_tab_separator_light.9.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavLibrary/leftnavbar/res/drawable-xhdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/custom.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_activated=\"true\"\n+        android:drawable=\"@color/custom_activated\"\n+        />\n+    <item\n+        android:drawable=\"@color/custom_normal\"\n+        />\n+</selector>\n+\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/leftnav_bar_item_background_dark.xml",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:enterFadeDuration=\"@android:integer/config_shortAnimTime\"\n+    android:exitFadeDuration=\"@android:integer/config_shortAnimTime\"\n+    >\n+\n+    <item android:state_pressed=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_pressed_dark\"\n+        />\n+\n+    <item android:state_selected=\"true\"\n+        android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_selected_focused_dark\"\n+        />\n+\n+    <item android:state_selected=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_selected_dark\"\n+        />\n+\n+    <item android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_focused_dark\"\n+        />\n+\n+    <item android:drawable=\"@android:color/transparent\" />\n+\n+</selector>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/leftnav_bar_item_background_light.xml",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:enterFadeDuration=\"@android:integer/config_shortAnimTime\"\n+    android:exitFadeDuration=\"@android:integer/config_shortAnimTime\"\n+    >\n+\n+    <item android:state_pressed=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_pressed_light\"\n+        />\n+\n+    <item android:state_selected=\"true\"\n+        android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_selected_focused_light\"\n+        />\n+\n+    <item android:state_selected=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_selected_light\"\n+        />\n+\n+    <item android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_focused_light\"\n+        />\n+\n+    <item android:drawable=\"@android:color/transparent\" />\n+\n+</selector>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/leftnav_bar_option_icon_dark.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <item android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_option_icon_focused_dark\"\n+        />\n+\n+    <item android:drawable=\"@drawable/leftnav_bar_option_icon_normal_dark\" />\n+\n+</selector>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/leftnav_bar_option_icon_light.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <item android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_option_icon_focused_light\"\n+        />\n+\n+    <item android:drawable=\"@drawable/leftnav_bar_option_icon_normal_light\" />\n+\n+</selector>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/spinner_item_background.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_activated=\"true\"\n+        android:drawable=\"@color/list_activated\"\n+        />\n+    <item\n+        android:drawable=\"@color/list_normal\"\n+        />\n+</selector>\n+\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/drawable/spinner_list_item_background.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:drawable=\"@color/list_normal\" />\n+</selector>\n+\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/custom_tab.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<Button xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"?android:attr/listPreferredItemHeight\"\n+    />\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/custom_view.xml",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"@drawable/custom\"\n+    />\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/left_nav.xml",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <!-- Central section of the panel. -->\n+    <LinearLayout android:id=\"@+id/main\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"0dip\"\n+        android:layout_weight=\"1\"\n+        android:orientation=\"vertical\"\n+        />\n+\n+</merge>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_home.xml",
            "additions": 39,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/action_bar_home\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:addStatesFromChildren=\"true\"\n+    android:background=\"@drawable/leftnav_bar_item_background_dark\"\n+    >\n+\n+    <ImageView android:id=\"@+id/home\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"36dip\"\n+        android:scaleType=\"fitStart\"\n+        android:gravity=\"left\"\n+        \n+        />\n+\n+    <ImageView android:id=\"@+id/up\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:src=\"@drawable/leftnav_bar_home_up\"\n+        android:visibility=\"gone\"\n+        />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_option.xml",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\"\n+    android:gravity=\"center_vertical\"\n+    android:background=\"@drawable/leftnav_bar_item_background_dark\" >\n+\n+    <ImageView android:id=\"@+id/icon\"\n+        android:layout_width=\"@dimen/left_nav_icon_size\"\n+        android:layout_height=\"@dimen/left_nav_icon_size\"\n+        android:scaleType=\"centerInside\"\n+        android:src=\"@drawable/leftnav_bar_option_icon_dark\"\n+        />\n+\n+    <TextView android:id=\"@+id/title\"\n+        style=\"@style/Widget.ActionButton.Overflow_Text\"\n+        android:layout_width=\"0dip\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_weight=\"1\"\n+        android:layout_marginLeft=\"7dip\"\n+        android:layout_marginRight=\"7dip\"\n+        android:visibility=\"gone\"\n+        />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_options.xml",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"vertical\"\n+    android:gravity=\"center\"\n+    android:addStatesFromChildren=\"true\"\n+    >\n+\n+    <LinearLayout android:id=\"@+id/shown_options\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:gravity=\"center\"\n+        android:visibility=\"gone\"\n+        />\n+\n+    <include android:id=\"@+id/menu\"\n+        layout=\"@layout/leftnav_bar_option\"\n+        />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_spinner.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<Spinner xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:gravity=\"center\"\n+    android:focusable=\"true\"\n+    android:clickable=\"true\"\n+    />\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_tab.xml",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<com.example.google.tv.leftnavbar.TabFrame xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/leftnav_bar_tab\"\n+    style=\"@style/Widget.ActionBarView_TabView\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\"\n+    android:gravity=\"center_vertical\"\n+    android:focusable=\"true\"\n+    android:clickable=\"true\"\n+    >\n+\n+    <ImageView android:id=\"@+id/icon\"\n+        android:layout_width=\"@dimen/left_nav_icon_size\"\n+        android:layout_height=\"@dimen/left_nav_icon_size\"\n+        android:scaleType=\"centerInside\"\n+        android:duplicateParentState=\"true\"\n+        />\n+\n+    <TextView android:id=\"@+id/title\"\n+        style=\"@style/Widget.ActionBarView_TabText\"\n+        android:layout_width=\"0dip\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_weight=\"1\"\n+        android:layout_marginLeft=\"7dip\"\n+        android:layout_marginRight=\"7dip\"\n+        android:visibility=\"gone\"\n+        android:duplicateParentState=\"true\"\n+        />\n+\n+</com.example.google.tv.leftnavbar.TabFrame>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/leftnav_bar_tabs.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<com.example.google.tv.leftnavbar.TabListView\n+\txmlns:android=\"http://schemas.android.com/apk/res/android\" style=\"@style/Widget.ActionBarView_TabBar\"\n+\tandroid:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" />\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/lib_left_nav.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+  <com.example.google.tv.leftnavbar.LeftNavView xmlns:android=\"http://schemas.android.com/apk/res/android\"   android:id=\"@+id/left_nav\"\n+        style=\"@android:style/Widget.Holo.ActionBar\"\n+        android:layout_width=\"@dimen/left_nav_collapsed_apparent_width\"\n+        android:layout_height=\"match_parent\" \n+        />\n+</merge>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/lib_title_bar.xml",
            "additions": 91,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,91 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"@dimen/title_bar_height\"\n+        android:paddingLeft=\"8dip\"\n+        android:paddingRight=\"8dip\"\n+        android:gravity=\"center_vertical\"\n+        android:background=\"@drawable/leftnav_bar_item_background_dark\"\n+        >\n+\n+        <ImageView android:id=\"@+id/left_icon\"\n+            android:layout_width=\"36dip\"\n+            android:layout_height=\"36dip\"\n+            android:layout_marginRight=\"8dip\"\n+            android:visibility=\"gone\"\n+            android:scaleType=\"fitCenter\"\n+            />\n+\n+        <LinearLayout\n+            android:layout_width=\"0dip\"\n+            android:layout_height=\"@dimen/title_bar_height\"\n+            android:layout_weight=\"1\"\n+            android:layout_marginRight=\"8dip\"\n+            android:orientation=\"vertical\"\n+            android:gravity=\"center_vertical\"\n+            >\n+\n+            <TextView android:id=\"@+id/title\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"0dip\"\n+                android:layout_weight=\"1\"\n+                android:gravity=\"center_vertical\"\n+                android:singleLine=\"true\"\n+                android:ellipsize=\"end\"\n+                />\n+\n+            <TextView android:id=\"@+id/subtitle\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\"\n+                android:singleLine=\"true\"\n+                android:ellipsize=\"end\"\n+                android:visibility=\"gone\"\n+                />\n+\n+        </LinearLayout>\n+\n+        <ProgressBar android:id=\"@+id/progress_circular\"\n+            style=\"?android:attr/progressBarStyle\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginRight=\"8dip\"\n+            android:visibility=\"gone\"\n+            android:max=\"10000\"\n+            />\n+\n+        <ImageView android:id=\"@+id/right_icon\"\n+            android:layout_width=\"36dip\"\n+            android:layout_height=\"36dip\"\n+            android:layout_marginRight=\"8dip\"\n+            android:visibility=\"gone\"\n+            android:scaleType=\"fitCenter\"\n+            />\n+\n+    </LinearLayout>\n+\n+    <ProgressBar android:id=\"@+id/progress_horizontal\"\n+        style=\"?android:attr/progressBarStyle\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_alignParentBottom=\"true\"\n+        android:visibility=\"gone\"\n+        android:max=\"10000\"\n+        />\n+\n+</merge>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/lib_title_container.xml",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+ <merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+ \n+ <com.example.google.tv.leftnavbar.TitleBarView xmlns:android=\"http://schemas.android.com/apk/res/android\"  android:id=\"@+id/title_container\"\n+        style=\"?android:attr/windowTitleBackgroundStyle\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"@dimen/title_bar_height\"\n+        android:layout_marginLeft=\"@dimen/left_nav_collapsed_apparent_width\"\n+       android:layout_gravity=\"fill_horizontal\"\n+        android:visibility=\"gone\" \n+         />\n+         \n+</merge>      \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/main.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+<TextView\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:text=\"Hello World, ACTIVITY_ENTRY_NAME\"\n+    />\n+</LinearLayout>\n+\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/layout/spinner_item.xml",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\"\n+    android:padding=\"5dip\"\n+    android:gravity=\"center\"\n+    >\n+\n+    <ImageView android:id=\"@+id/picture\"\n+        android:layout_width=\"36dip\"\n+        android:layout_height=\"36dip\"\n+        android:scaleType=\"fitXY\"\n+        android:padding=\"2dip\"\n+        />\n+\n+    <TextView android:id=\"@+id/name\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:gravity=\"center\"\n+        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n+        android:singleLine=\"true\"\n+        android:ellipsize=\"end\"\n+        />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/attrs.xml",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<resources>\n+\n+    <!-- Background drawable for standalone items that need focus/pressed states. -->\n+    <attr name=\"selectableItemBackground\" format=\"reference\" />\n+\n+</resources>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/colors.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<resources xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <color name=\"custom_normal\">#3300FF00</color>\n+    <color name=\"custom_activated\">#33FF0000</color>\n+\n+    <color name=\"list_normal\">#999999</color>\n+    <color name=\"list_activated\">#000000</color>\n+\n+</resources>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/lib_leftnav_bar_dimens.xml",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+** Copyright 2011, The Android Open Source Project\n+**\n+** Licensed under the Apache License, Version 2.0 (the \"License\");\n+** you may not use this file except in compliance with the License.\n+** You may obtain a copy of the License at\n+**\n+**     http://www.apache.org/licenses/LICENSE-2.0\n+**\n+** Unless required by applicable law or agreed to in writing, software\n+** distributed under the License is distributed on an \"AS IS\" BASIS,\n+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+** See the License for the specific language governing permissions and\n+** limitations under the License.\n+*/\n+-->\n+<resources>  \n+    <dimen name=\"left_nav_collapsed_width\">62dip</dimen>\n+    <dimen name=\"left_nav_collapsed_apparent_width\">50dip</dimen>\n+    <dimen name=\"left_nav_expanded_width\">182dip</dimen>\n+    <dimen name=\"left_nav_expanded_apparent_width\">170dip</dimen>\n+    <dimen name=\"left_nav_icon_size\">36dip</dimen>\n+    <dimen name=\"title_bar_height\">59dip</dimen>\n+    <dimen name=\"title_bar_apparent_height\">52dip</dimen>\n+</resources>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/strings.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n+  \n+    <string name=\"lib_leftnav_bar_option_label\">Options</string>\n+</resources>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/res/values/styles.xml",
            "additions": 124,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<resources xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <style name=\"WithTitle\" parent=\"@android:style/Theme.Holo\">\n+        <item name=\"android:windowActionBar\">false</item>\n+        <item name=\"android:windowActionBarOverlay\">false</item>\n+        <item name=\"android:windowNoTitle\">false</item>\n+    </style>\n+\n+  \n+\n+    <style name=\"Widget\">\n+        <item name=\"android:textAppearance\">?android:textAppearance</item>\n+    </style>\n+\n+   \n+\n+    <style name=\"TextAppearance\">\n+        <item name=\"android:textColor\">?android:textColorPrimary</item>\n+        <item name=\"android:textColorHighlight\">?android:textColorHighlight</item>\n+        <item name=\"android:textColorHint\">?android:textColorHint</item>\n+        <item name=\"android:textColorLink\">?android:textColorLink</item>\n+        <item name=\"android:textSize\">16sp</item>\n+        <item name=\"android:textStyle\">normal</item>\n+    </style>\n+\n+   \n+\n+    <style name=\"Widget.ActionBar\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_background_dark</item>\n+        <item name=\"android:displayOptions\">useLogo|showHome</item>\n+        <item name=\"android:height\">0dip</item>\n+        <item name=\"android:homeLayout\">@layout/leftnav_bar_home</item>\n+        <item name=\"android:titleTextStyle\">@style/TextAppearance.ActionBar_Title</item>\n+        <item name=\"android:subtitleTextStyle\">@style/TextAppearance.ActionBar_Subtitle</item>\n+        <item name=\"selectableItemBackground\">@drawable/leftnav_bar_item_background_dark</item>\n+    </style>\n+\n+    <style name=\"TextAppearance.ActionBar_Title\">\n+        <item name=\"android:textSize\">20dip</item>\n+        <item name=\"android:textColor\">#FFFFFF</item>\n+    </style>\n+\n+    <style name=\"TextAppearance.ActionBar_Subtitle\">\n+        <item name=\"android:textSize\">14dip</item>\n+        <item name=\"android:textColor\">#999999</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionBarView_TabBar\">\n+        <item name=\"android:scrollbars\">none</item>\n+        <item name=\"android:divider\">@drawable/leftnav_bar_tab_separator_dark</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionBarView_TabView\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_item_background_dark</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionBarView_TabText\">\n+        <item name=\"android:textAppearance\">@android:style/TextAppearance.Medium</item>\n+        <item name=\"android:textColor\">@color/leftnav_bar_tab_text_dark</item>\n+        <item name=\"android:singleLine\">true</item>\n+        <item name=\"android:ellipsize\">end</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionButton\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_menu_background_top_dark</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionButton.Overflow\">\n+        <item name=\"android:src\">@drawable/leftnav_bar_option_icon_dark</item>\n+        <item name=\"android:background\">@drawable/leftnav_bar_item_background_dark</item>\n+        <item name=\"android:drawableTop\">@drawable/leftnav_bar_menu_background_top_dark</item>\n+        <item name=\"android:drawableBottom\">@drawable/leftnav_bar_menu_background_bottom_dark</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionButton.Overflow_Text\" parent=\"Widget.ActionBarView_TabText\" />\n+\n+    <style name=\"Widget.Holo.ActionBar\" parent=\"Widget.ActionBar\" />\n+    <style name=\"Widget.Holo.ActionBarView_TabBar\" parent=\"Widget.ActionBarView_TabBar\" />\n+    <style name=\"Widget.Holo.ActionBarView_TabView\" parent=\"Widget.ActionBarView_TabView\" />\n+    <style name=\"Widget.Holo.ActionBarView_TabText\" parent=\"Widget.ActionBarView_TabText\" />\n+    <style name=\"Widget.Holo.ActionButton\" parent=\"Widget.ActionButton\" />\n+    <style name=\"Widget.Holo.ActionButton.Overflow\" parent=\"Widget.ActionButton.Overflow\" />\n+    <style name=\"Widget.Holo.ActionButton.Overflow_Text\" parent=\"Widget.Holo.ActionBarView_TabText\" />\n+\n+    <style name=\"Widget.Holo.Light.ActionBar\" parent=\"Widget.Holo.ActionBar\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_background_light</item>\n+        <item name=\"selectableItemBackground\">@drawable/leftnav_bar_item_background_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionBarView_TabBar\" parent=\"Widget.Holo.ActionBarView_TabBar\">\n+        <item name=\"android:divider\">@drawable/leftnav_bar_tab_separator_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionBarView_TabView\" parent=\"Widget.Holo.ActionBarView_TabView\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_item_background_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionBarView_TabText\" parent=\"Widget.Holo.ActionBarView_TabText\">\n+        <item name=\"android:textColor\">@color/leftnav_bar_tab_text_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionButton\" parent=\"Widget.ActionButton\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_menu_background_top_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionButton.Overflow\" parent=\"Widget.ActionButton.Overflow\">\n+        <item name=\"android:src\">@drawable/leftnav_bar_option_icon_light</item>\n+        <item name=\"android:background\">@drawable/leftnav_bar_item_background_light</item>\n+        <item name=\"android:drawableTop\">@drawable/leftnav_bar_menu_background_top_light</item>\n+        <item name=\"android:drawableBottom\">@drawable/leftnav_bar_menu_background_bottom_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionButton.Overflow_Text\" parent=\"Widget.Holo.Light.ActionBarView_TabText\" />\n+  \n+</resources>\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/HomeDisplay.java",
            "additions": 132,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.pm.ApplicationInfo;\n+import android.content.pm.PackageManager;\n+import android.content.pm.PackageManager.NameNotFoundException;\n+import android.content.res.TypedArray;\n+import android.graphics.drawable.Drawable;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+\n+/**\n+ * Manages the \"home\" cue of the Left Navigation Bar.\n+ */\n+class HomeDisplay {\n+\n+    private static final String TAG = \"LeftNavBar-Home\";\n+\n+    enum Mode {\n+        ICON,\n+        LOGO,\n+        BOTH  // Icon when collapsed, logo when expanded.\n+    }\n+    private Mode mMode;\n+\n+    private final Context mContext;\n+    private Drawable mLogo;\n+    private Drawable mIcon;\n+    private View mView;\n+    private boolean mExpanded;\n+\n+    HomeDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n+        mContext = context;\n+        mMode = Mode.ICON;\n+        ApplicationInfo appInfo = context.getApplicationInfo();\n+        PackageManager pm = context.getPackageManager();\n+        loadLogo(attributes, pm, appInfo);\n+        loadIcon(attributes, pm, appInfo);\n+        createView(parent, attributes);\n+    }\n+\n+    private void loadLogo(TypedArray a, PackageManager pm, ApplicationInfo appInfo) {\n+        if (mContext instanceof Activity) {\n+            try {\n+                mLogo = pm.getActivityLogo(((Activity) mContext).getComponentName());\n+            } catch (NameNotFoundException e) {\n+                Log.e(TAG, \"Failed to load app logo.\", e);\n+            }\n+        }\n+        if (mLogo == null) {\n+            mLogo = appInfo.loadLogo(pm);\n+        }\n+    }\n+\n+    private void loadIcon(TypedArray a, PackageManager pm, ApplicationInfo appInfo) {\n+        if (mContext instanceof Activity) {\n+            try {\n+                mIcon = pm.getActivityIcon(((Activity) mContext).getComponentName());\n+            } catch (NameNotFoundException e) {\n+                Log.e(TAG, \"Failed to load app icon.\", e);\n+            }\n+        }\n+        if (mIcon == null) {\n+            mIcon = appInfo.loadIcon(pm);\n+        }\n+    }\n+\n+    public void setOnClickHomeListener(View.OnClickListener listener) {\n+        mView.setOnClickListener(listener);\n+    }\n+\n+    private void createView(ViewGroup parent, TypedArray attributes) {\n+        mView = LayoutInflater.from(mContext).inflate(R.layout.leftnav_bar_home, parent, false);\n+    }\n+\n+    private void updateImage() {\n+        boolean useIcon = mMode == Mode.ICON\n+                || mLogo == null\n+                || (mMode == Mode.BOTH && !mExpanded);\n+        ((ImageView) mView.findViewById(R.id.home)).setImageDrawable(useIcon ? mIcon : mLogo);\n+    }\n+\n+    View getView() {\n+        return mView;\n+    }\n+\n+    HomeDisplay setVisible(boolean visible) {\n+        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n+        return this;\n+    }\n+\n+    boolean isVisible() {\n+        return mView.getVisibility() == View.VISIBLE;\n+    }\n+\n+    HomeDisplay setExpanded(boolean expanded) {\n+        mExpanded = expanded;\n+        updateImage();\n+        return this;\n+    }\n+\n+    HomeDisplay setImageMode(Mode mode) {\n+        mMode = mode;\n+        updateImage();\n+        return this;\n+    }\n+\n+    HomeDisplay setAsUp(boolean asUp) {\n+        mView.findViewById(R.id.up).setVisibility(asUp ? View.VISIBLE : View.GONE);\n+        return this;\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/LeftNavBar.java",
            "additions": 504,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,504 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+\n+import android.app.ActionBar;\n+import android.app.Activity;\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+import android.view.ActionMode;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.ViewGroup.MarginLayoutParams;\n+import android.view.Window;\n+import android.widget.SpinnerAdapter;\n+\n+/**\n+ * TV-specific implementation of the ActionBar API, using the title bar and a\n+ * left navigation panel.\n+ */\n+public class LeftNavBar extends ActionBar {\n+\n+    /**\n+     * Always show an expanded version of the Left Navigation bar.\n+     *\n+     * @see #setDisplayOptions(int)\n+     * @see #setDisplayOptions(int, int)\n+     * @hide\n+     */\n+    public static final int DISPLAY_ALWAYS_EXPANDED = 0x20;\n+\n+    /**\n+     * Use the app logo when the Left Navigation bar is expanded.\n+     *\n+     * @see #setDisplayOptions(int)\n+     * @see #setDisplayOptions(int, int)\n+     * @hide\n+     */\n+    public static final int DISPLAY_USE_LOGO_WHEN_EXPANDED = 0x80;\n+\n+    /**\n+     * Show an indeterminate progress indicator.\n+     *\n+     * @see #setDisplayOptions(int)\n+     * @see #setDisplayOptions(int, int)\n+     * @hide\n+     */\n+    public static final int DISPLAY_SHOW_INDETERMINATE_PROGRESS = 0x100;\n+\n+    /**\n+     * Display option for the Left Navigation bar to automatically expand when\n+     * certain ev ents happen. This includes gaining focus but could also\n+     * include other events, such as mouse hover.\n+     *\n+     * @see #setDisplayOptions(int)\n+     * @see #setDisplayOptions(int, int)\n+     */\n+    public static final int DISPLAY_AUTO_EXPAND = 0x40;\n+\n+    /**\n+     * Display options applied by default.\n+     */\n+    public static final int DEFAULT_DISPLAY_OPTIONS = ActionBar.DISPLAY_SHOW_HOME\n+            | ActionBar.DISPLAY_USE_LOGO | ActionBar.DISPLAY_SHOW_TITLE\n+            | LeftNavBar.DISPLAY_ALWAYS_EXPANDED;\n+\n+    private Context mContext;\n+\n+    private boolean mIsOverlay;\n+\n+    private TitleBarView mTitleBar;\n+\n+    private LeftNavView mLeftNav;\n+\n+    private View mContent;\n+\n+    public LeftNavBar(Activity activity) {\n+        initialize(activity.getWindow(), activity);\n+    }\n+\n+    public LeftNavBar(Dialog dialog) {\n+        initialize(dialog.getWindow(), dialog.getContext());\n+    }\n+\n+    private void initialize(Window window, Context context) {\n+        View decor = window.getDecorView();\n+        ViewGroup group = (ViewGroup) window.getDecorView();\n+        LayoutInflater inflater = (LayoutInflater) decor.getContext().getSystemService(\n+                Context.LAYOUT_INFLATER_SERVICE);\n+        \n+        inflater.inflate(R.layout.lib_title_container,group,true);\n+        inflater.inflate(R.layout.lib_left_nav,group, true);\n+        mContext = decor.getContext();\n+        mIsOverlay = window.hasFeature(Window.FEATURE_ACTION_BAR_OVERLAY);\n+        mTitleBar = (TitleBarView) decor.findViewById(R.id.title_container);\n+       \n+        mLeftNav = (LeftNavView) decor.findViewById(R.id.left_nav);\n+       \n+        mContent = group.getChildAt(0);\n+\n+        if (mTitleBar == null || mLeftNav == null) {\n+            throw new IllegalStateException(\n+                    getClass().getSimpleName() + \": incompatible window decor!\");\n+        }\n+\n+        setDisplayOptions(DEFAULT_DISPLAY_OPTIONS);\n+        showOptionsMenu(true);\n+    }\n+\n+    private void updateWindowLayout(boolean animated) {\n+        updateTitleBar(animated);\n+        setLeftMargin(mTitleBar, mLeftNav.getApparentWidth(true) );\n+        if (!mIsOverlay) {\n+            setLeftMargin(mContent, mLeftNav.getApparentWidth(false));\n+            setTopMargin(mContent, mTitleBar.getApparentHeight());\n+        }\n+    }\n+\n+\n+    private void updateTitleBar(boolean animated) {\n+        int options = getDisplayOptions();\n+        boolean titleVisible = has(options, DISPLAY_SHOW_TITLE);\n+        boolean progressVisible = has(options, DISPLAY_SHOW_INDETERMINATE_PROGRESS);\n+        boolean horizontalProgressVisible = mTitleBar.isHorizontalProgressVisible();\n+        mTitleBar.setVisible(\n+                isShowing() && (titleVisible || progressVisible || horizontalProgressVisible),\n+                animated);\n+        mTitleBar.setProgressVisible(progressVisible);\n+    }\n+\n+    private void setLeftMargin(View view, int margin) {\n+        MarginLayoutParams params = (MarginLayoutParams) view.getLayoutParams();\n+        params.leftMargin = margin;\n+        view.setLayoutParams(params);\n+    }\n+\n+    private void setTopMargin(View view, int margin) {\n+        MarginLayoutParams params = (MarginLayoutParams) view.getLayoutParams();\n+        params.topMargin = margin;\n+        view.setLayoutParams(params);\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Visibility.\n+\n+    @Override\n+    public void show() {\n+        setVisible(true);\n+    }\n+\n+    @Override\n+    public void hide() {\n+        setVisible(false);\n+    }\n+\n+    private void setVisible(boolean visible) {\n+        boolean shouldAnimate = mIsOverlay;\n+        if (mLeftNav.setVisible(visible, shouldAnimate)) {\n+            updateWindowLayout(shouldAnimate);\n+        }\n+    }\n+\n+    @Override\n+    public boolean isShowing() {\n+        return mLeftNav.isVisible();\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Title / subtitle.\n+\n+    @Override\n+    public void setTitle(CharSequence title) {\n+        mTitleBar.setTitle(title);\n+    }\n+\n+    @Override\n+    public void setTitle(int resId) {\n+        setTitle(mContext.getString(resId));\n+    }\n+\n+    @Override\n+    public CharSequence getTitle() {\n+        return mTitleBar.getTitle();\n+    }\n+\n+    @Override\n+    public void setSubtitle(CharSequence subtitle) {\n+        mTitleBar.setSubtitle(subtitle);\n+    }\n+\n+    @Override\n+    public void setSubtitle(int resId) {\n+        setSubtitle(mContext.getString(resId));\n+    }\n+\n+    @Override\n+    public CharSequence getSubtitle() {\n+        return mTitleBar.getSubtitle();\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Tabs.\n+\n+    @Override\n+    public Tab newTab() {\n+        return new TabImpl(mContext) {\n+\n+            @Override\n+            public void select() {\n+                selectTab(this);\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Ensures the given tab is a valid object.\n+     */\n+    private TabImpl convertTab(Tab tab) {\n+        if (tab == null) {\n+            return null;\n+        }\n+        if (!(tab instanceof TabImpl)) {\n+            throw new IllegalArgumentException(\"Invalid tab object.\");\n+        }\n+        return (TabImpl) tab;\n+    }\n+\n+    @Override\n+    public void addTab(Tab tab) {\n+        addTab(tab, TabDisplay.LAST_POSITION);\n+    }\n+\n+    @Override\n+    public void addTab(Tab tab, boolean setSelected) {\n+        addTab(tab, TabDisplay.LAST_POSITION, setSelected);\n+    }\n+\n+    @Override\n+    public void addTab(Tab tab, int position) {\n+        addTab(tab, position, getTabCount() == 0);\n+    }\n+\n+    @Override\n+    public void addTab(Tab tab, int position, boolean setSelected) {\n+        mLeftNav.getTabs().add(convertTab(tab), position, setSelected);\n+    }\n+\n+    @Override\n+    public Tab getSelectedTab() {\n+        return mLeftNav.getTabs().getSelected();\n+    }\n+\n+    @Override\n+    public Tab getTabAt(int index) {\n+        return mLeftNav.getTabs().get(index);\n+    }\n+\n+    @Override\n+    public int getTabCount() {\n+        return mLeftNav.getTabs().getCount();\n+    }\n+\n+    @Override\n+    public void removeAllTabs() {\n+        mLeftNav.getTabs().removeAll();\n+    }\n+\n+    @Override\n+    public void removeTab(Tab tab) {\n+        mLeftNav.getTabs().remove(convertTab(tab));\n+    }\n+\n+    @Override\n+    public void removeTabAt(int position) {\n+        mLeftNav.getTabs().remove(position);\n+    }\n+\n+    @Override\n+    public void selectTab(Tab tab) {\n+        mLeftNav.getTabs().select(convertTab(tab));\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Navigation modes.\n+\n+    @Override\n+    public int getNavigationItemCount() {\n+        switch (getNavigationMode()) {\n+            case NAVIGATION_MODE_TABS:\n+                return getTabCount();\n+\n+            case NAVIGATION_MODE_LIST:\n+                return mLeftNav.getSpinner().getCount();\n+\n+            default:\n+                throw new IllegalStateException(\n+                        \"No count available for mode: \" + getNavigationMode());\n+        }\n+    }\n+\n+    @Override\n+    public int getNavigationMode() {\n+        return mLeftNav.getNavigationMode();\n+    }\n+\n+    @Override\n+    public int getSelectedNavigationIndex() {\n+        switch (getNavigationMode()) {\n+            case NAVIGATION_MODE_TABS:\n+                Tab selected = getSelectedTab();\n+                return selected != null ? selected.getPosition() : -1;\n+\n+            case NAVIGATION_MODE_LIST:\n+                return mLeftNav.getSpinner().getSelected();\n+\n+            default:\n+                throw new IllegalStateException(\n+                        \"No selection available for mode: \" + getNavigationMode());\n+        }\n+    }\n+\n+    @Override\n+    public void setListNavigationCallbacks(SpinnerAdapter adapter, OnNavigationListener callback) {\n+        mLeftNav.getSpinner().setContent(adapter, callback);\n+    }\n+\n+    @Override\n+    public void setNavigationMode(int mode) {\n+        mLeftNav.setNavigationMode(mode);\n+    }\n+\n+    @Override\n+    public void setSelectedNavigationItem(int position) {\n+        switch (getNavigationMode()) {\n+            case NAVIGATION_MODE_TABS:\n+                selectTab(getTabAt(position));\n+                break;\n+\n+            case NAVIGATION_MODE_LIST:\n+                mLeftNav.getSpinner().setSelected(position);\n+                break;\n+\n+            default:\n+                throw new IllegalStateException(\n+                        \"Cannot set selection on mode: \" + getNavigationMode());\n+        }\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Display options.\n+\n+    @Override\n+    public int getDisplayOptions() {\n+        return mLeftNav.getDisplayOptions();\n+    }\n+\n+    private static boolean has(int changes, int option) {\n+        return (changes & option) != 0;\n+    }\n+\n+    @Override\n+    public void setDisplayOptions(int options) {\n+        int changes = mLeftNav.setDisplayOptions(options);\n+        if (has(changes, DISPLAY_ALWAYS_EXPANDED) || has(changes, DISPLAY_AUTO_EXPAND)\n+                || has(changes, DISPLAY_SHOW_TITLE)\n+                || has(changes, DISPLAY_SHOW_INDETERMINATE_PROGRESS)) {\n+            updateWindowLayout(false);\n+        }\n+    }\n+\n+    @Override\n+    public void setDisplayOptions(int options, int mask) {\n+        int current = getDisplayOptions();\n+        int updated = ((options & mask) | (current & ~mask));\n+        setDisplayOptions(updated);\n+    }\n+\n+    @Override\n+    public void setDisplayHomeAsUpEnabled(boolean showHomeAsUp) {\n+        setDisplayOptions(showHomeAsUp ? DISPLAY_HOME_AS_UP : 0, DISPLAY_HOME_AS_UP);\n+    }\n+\n+    @Override\n+    public void setDisplayShowCustomEnabled(boolean showCustom) {\n+        setDisplayOptions(showCustom ? DISPLAY_SHOW_CUSTOM : 0, DISPLAY_SHOW_CUSTOM);\n+    }\n+\n+    @Override\n+    public void setDisplayShowHomeEnabled(boolean showHome) {\n+        setDisplayOptions(showHome ? DISPLAY_SHOW_HOME : 0, DISPLAY_SHOW_HOME);\n+    }\n+\n+    @Override\n+    public void setDisplayShowTitleEnabled(boolean showTitle) {\n+        setDisplayOptions(showTitle ? DISPLAY_SHOW_TITLE : 0, DISPLAY_SHOW_TITLE);\n+    }\n+\n+    @Override\n+    public void setDisplayUseLogoEnabled(boolean useLogo) {\n+        setDisplayOptions(useLogo ? DISPLAY_USE_LOGO : 0, DISPLAY_USE_LOGO);\n+    }\n+\n+    /**\n+     * Sets the horizontal progress indicator to the given value.\n+     */\n+    public void setShowHorizontalProgress(int value) {\n+        mTitleBar.setHorizontalProgress(value);\n+        updateWindowLayout(false);\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Custom view.\n+\n+    @Override\n+    public View getCustomView() {\n+        return mLeftNav.getCustomView();\n+    }\n+\n+    @Override\n+    public void setCustomView(View view) {\n+        mLeftNav.setCustomView(view);\n+    }\n+\n+    @Override\n+    public void setCustomView(View view, LayoutParams layoutParams) {\n+        view.setLayoutParams(layoutParams);\n+        setCustomView(view);\n+    }\n+\n+    @Override\n+    public void setCustomView(int resId) {\n+        setCustomView(LayoutInflater.from(mContext).inflate(resId, mLeftNav, false));\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Miscellaneous.\n+\n+    @Override\n+    public void addOnMenuVisibilityListener(OnMenuVisibilityListener listener) {\n+        // No use for that, apps should use the regular options menu API.\n+    }\n+\n+    @Override\n+    public void removeOnMenuVisibilityListener(OnMenuVisibilityListener listener) {\n+        // No use for that, apps should use the regular options menu API.\n+    }\n+\n+    @Override\n+    public void setBackgroundDrawable(Drawable d) {\n+        mLeftNav.setBackgroundDrawable(d);\n+    }\n+\n+    @Override\n+    public int getHeight() {\n+        // The height is completely irrelevant in our case.\n+        // Returning the left nav's width as this is what apps may want to\n+        // adjust to.\n+        return mLeftNav.getApparentWidth(true /*\n+                                               * ignore the fact that it may be\n+                                               * hidden\n+                                               */);\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Copies of ActionBarImpl methods.\n+    // This is to ensure this implementation can be easily swapped in.\n+\n+    public void setShowHideAnimationEnabled(boolean enabled) {\n+        mLeftNav.setAnimationsEnabled(enabled);\n+        mTitleBar.setAnimationsEnabled(enabled);\n+    }\n+\n+    public void dispatchMenuVisibilityChanged(boolean visible) {\n+    }\n+\n+    public ActionMode startActionMode(ActionMode.Callback callback) {\n+        return null;\n+    }\n+\n+    // Extra methods\n+    public void showOptionsMenu(boolean show) {\n+        mLeftNav.showOptionsMenu(show);\n+    }\n+\n+    public void setOnClickHomeListener(View.OnClickListener listener) {\n+        mLeftNav.setOnClickHomeListener(listener);\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/LeftNavBarService.java",
            "additions": 46,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (C) 2011 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.app.Activity;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/** This service maintains a single instance of LeftNavBar per Activity **/\n+public class LeftNavBarService {\n+\n+    private final Map<Integer, LeftNavBar> map;\n+\n+    private static final LeftNavBarService service = new LeftNavBarService();\n+\n+    private LeftNavBarService() {\n+        map = new HashMap<Integer, LeftNavBar>();\n+    }\n+\n+    public static LeftNavBarService instance() {\n+        return service;\n+    }\n+\n+    public LeftNavBar getLeftNavBar(Activity activity) {\n+        if (map.get(activity.hashCode()) == null) {\n+            LeftNavBar leftNavBar = new LeftNavBar(activity);           \n+            map.put(activity.hashCode(), leftNavBar);\n+        }\n+        return map.get(activity.hashCode());\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/LeftNavView.java",
            "additions": 622,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,622 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.animation.Animator;\n+import android.animation.AnimatorListenerAdapter;\n+import android.animation.ValueAnimator;\n+import android.app.ActionBar;\n+import android.content.Context;\n+import android.content.res.Resources;\n+import android.util.AttributeSet;\n+import android.view.FocusFinder;\n+import android.view.Gravity;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.LinearLayout;\n+\n+import java.util.ArrayList;\n+\n+\n+/**\n+ * Left navigation panel hosting various controls such as tabs.\n+ */\n+public class LeftNavView extends LinearLayout {\n+\t\n+    private final HomeDisplay mHome;\n+    private final TabDisplay mTabs;\n+    private final OptionsDisplay mOptions;\n+    private final SpinnerDisplay mSpinner;\n+\n+    private final int mWidthCollapsed;\n+    private final int mWidthExpanded;\n+    private final int mApparentWidthCollapsed;\n+    private final int mApparentWidthExpanded;\n+\n+    private final VisibilityController mVisibilityController;\n+\n+    private final int mAnimationDuration;\n+\n+    private int mDisplayOptions;\n+    private int mNavigationMode;\n+    private boolean mExpanded;\n+    private boolean mAnimationsEnabled;\n+    private ValueAnimator mWidthAnimator;\n+\n+    public LeftNavView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        mVisibilityController = new VisibilityController(this);\n+        LayoutInflater.from(context).inflate(R.layout.left_nav, this, true);\n+        setOrientation(VERTICAL);\n+\n+        mHome = new HomeDisplay(context, this, null).setVisible(false);\n+        mTabs = new TabDisplay(context, this, null).setVisible(false);\n+        mOptions = new OptionsDisplay(context, this, null).setVisible(false);\n+        mSpinner = new SpinnerDisplay(context, this, null).setVisible(false);\n+\n+        Resources res = context.getResources();\n+        mWidthCollapsed = res.getDimensionPixelSize(\n+                R.dimen.left_nav_collapsed_width);\n+        mWidthExpanded = res.getDimensionPixelSize(\n+                R.dimen.left_nav_expanded_width);\n+        mApparentWidthCollapsed = res.getDimensionPixelSize(\n+                R.dimen.left_nav_collapsed_apparent_width);\n+        mApparentWidthExpanded = res.getDimensionPixelSize(\n+                R.dimen.left_nav_expanded_apparent_width);\n+        mAnimationDuration = res.getInteger(        \t\t\n+        \t\tandroid.R.integer.config_shortAnimTime);\n+\n+        mNavigationMode = ActionBar.NAVIGATION_MODE_STANDARD;\n+        setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);\n+  }\n+\n+    @Override\n+    protected void onFinishInflate() {\n+        super.onFinishInflate();\n+\n+        // Add header / footer views.\n+        addView(mHome.getView(), 0);\n+        // Central section falls here.\n+        addView(mOptions.getView(), 2);\n+\n+        // Add views to the central section.\n+        ViewGroup main = getMainSection();\n+        main.addView(mTabs.getView());\n+        main.addView(mSpinner.getView());\n+    }\n+\n+    private ViewGroup getMainSection() {\n+        return (ViewGroup) findViewById(R.id.main);\n+    }\n+\n+    public boolean setVisible(boolean visible, boolean animated) {\n+        return mVisibilityController.setVisible(visible, animated && mAnimationsEnabled);\n+    }\n+\n+    public boolean isVisible() {\n+        return mVisibilityController.isVisible();\n+    }\n+\n+    public void setOnClickHomeListener(View.OnClickListener listener) {\n+        mHome.setOnClickHomeListener(listener);\n+    }\n+\n+    @Override\n+    public void addFocusables(ArrayList<View> views, int direction, int focusableMode) {\n+        if (direction == FOCUS_FORWARD) {\n+            // When setting the initial focus for the window, all views should be considered\n+            // focusable.\n+            super.addFocusables(views, direction, focusableMode);\n+            return;\n+        }\n+        if (direction != FOCUS_LEFT && !hasFocus()) {\n+            // We don't want to gain focus unless it's coming from the right or we already have\n+            // focus.\n+            return;\n+        }\n+        if (!hasFocus()) {\n+            // Try to focus a navigation mode first.\n+            int initialCount = views.size();\n+            switch (mNavigationMode) {\n+                case ActionBar.NAVIGATION_MODE_TABS:\n+                    mTabs.getView().addFocusables(views, direction, focusableMode);\n+                    break;\n+\n+                case ActionBar.NAVIGATION_MODE_LIST:\n+                    mSpinner.getView().addFocusables(views, direction, focusableMode);\n+                    break;\n+\n+                default:\n+                    if (hasCustomView()) {\n+                        getCustomView().addFocusables(views, direction, focusableMode);\n+                    }\n+                    break;\n+            }\n+            if (views.size() > initialCount) {\n+                // Some focusable elements were added.\n+                return;\n+            }\n+        }\n+        super.addFocusables(views, direction, focusableMode);\n+    }\n+\n+    @Override\n+    public View focusSearch(View focused, int direction) {\n+        if (hasFocus() && direction != FOCUS_RIGHT) {\n+            // If we have focus, we should only relinquish focus if it is moving to the right.\n+            // Otherwise we restrict the focus search to our children.\n+            return FocusFinder.getInstance().findNextFocus(this, focused, direction);\n+        } else {\n+            return super.focusSearch(focused, direction);\n+        }\n+    }\n+\n+    protected void onDescendantFocusChanged(boolean hasFocus) {\n+        super.onWindowFocusChanged(hasFocus);\n+        if (has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND)) {\n+            setExpanded(hasFocus);\n+        }\n+    }\n+    \n+    /*@Override\n+    protected void onDescendantFocusChanged(boolean hasFocus) {\n+        super.onDescendantFocusChanged(hasFocus);\n+        if (has(mDisplayOptions, ActionBar.DISPLAY_AUTO_EXPAND)) {\n+            setExpanded(hasFocus);\n+        }\n+    }*/\n+\n+    public int getDisplayOptions() {\n+        return mDisplayOptions;\n+    }\n+\n+    /**\n+     * Sets the display options and returns the options which have changed.\n+     */\n+    public int setDisplayOptions(int options) {\n+        int changes = options ^ mDisplayOptions;\n+        mDisplayOptions = options;\n+        if (has(changes, ActionBar.DISPLAY_SHOW_HOME)) {\n+            mHome.setVisible(has(options, ActionBar.DISPLAY_SHOW_HOME));\n+        }\n+        if (has(changes, ActionBar.DISPLAY_USE_LOGO) ||\n+                has(changes, LeftNavBar.DISPLAY_USE_LOGO_WHEN_EXPANDED)) {\n+            setHomeMode();\n+        }\n+        if (has(changes, ActionBar.DISPLAY_HOME_AS_UP)) {\n+            mHome.setAsUp(has(options, ActionBar.DISPLAY_HOME_AS_UP));\n+        }\n+        if (has(changes, ActionBar.DISPLAY_SHOW_CUSTOM)) {\n+            setCustomViewVisibility(has(mDisplayOptions, ActionBar.DISPLAY_SHOW_CUSTOM));\n+        }\n+        if (has(changes, LeftNavBar.DISPLAY_AUTO_EXPAND) ||\n+                has(changes, LeftNavBar.DISPLAY_ALWAYS_EXPANDED)) {\n+            setExpandedState();\n+        }\n+        return changes;\n+    }\n+\n+    private void setHomeMode() {\n+        HomeDisplay.Mode mode;\n+        if (has(mDisplayOptions, LeftNavBar.DISPLAY_USE_LOGO_WHEN_EXPANDED)) {\n+            mode = HomeDisplay.Mode.BOTH;\n+        } else if (has(mDisplayOptions, ActionBar.DISPLAY_USE_LOGO)) {\n+            mode = HomeDisplay.Mode.LOGO;\n+        } else {\n+            mode = HomeDisplay.Mode.ICON;\n+        }\n+        mHome.setImageMode(mode);\n+    }\n+\n+    private void setExpandedState() {\n+        if (has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND)) {\n+            setExpanded(hasFocus(), false);\n+        } else {\n+            setExpanded(has(mDisplayOptions, LeftNavBar.DISPLAY_ALWAYS_EXPANDED), false);\n+        }\n+    }\n+\n+    private void setExpanded(boolean expanded) {\n+        setExpanded(expanded, mAnimationsEnabled && isVisible());\n+    }\n+\n+    private void setExpanded(final boolean expanded, boolean animated) {\n+        if (mExpanded == expanded) {\n+            return;\n+        }\n+        if (animated) {\n+            if (mWidthAnimator != null) {\n+                mWidthAnimator.cancel();\n+            }\n+            mWidthAnimator = ValueAnimator.ofInt(\n+                    getLayoutParams().width,  // Starting value.\n+                    expanded ? mWidthExpanded : mWidthCollapsed);\n+            mWidthAnimator.setDuration(mAnimationDuration);\n+            mWidthAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n+                public void onAnimationUpdate(ValueAnimator animation) {\n+                    setViewWidth((Integer) animation.getAnimatedValue());\n+                }\n+            });\n+            mWidthAnimator.addListener(new AnimatorListenerAdapter() {\n+                @Override\n+                public void onAnimationStart(Animator animator) {\n+                    if (!expanded) {\n+                        setContentExpanded(false);\n+                    }\n+                }\n+                @Override\n+                public void onAnimationEnd(Animator animator) {\n+                    if (expanded) {\n+                        setContentExpanded(true);\n+                    }\n+                }\n+            });\n+            mWidthAnimator.start();\n+        } else {\n+            setViewWidth(expanded ? mWidthExpanded : mWidthCollapsed);\n+            setContentExpanded(expanded);\n+        }\n+        mExpanded = expanded;\n+    }\n+\n+    private void setContentExpanded(boolean expanded) {\n+        mTabs.setExpanded(expanded);\n+        mOptions.setExpanded(expanded);\n+        mHome.setExpanded(expanded);\n+        mSpinner.setExpanded(expanded);\n+        if (hasCustomView()) {\n+            getCustomView().setActivated(expanded);\n+        }\n+    }\n+\n+    private void setViewWidth(int width) {\n+        ViewGroup.LayoutParams params = getLayoutParams();\n+        params.width = width;\n+        setLayoutParams(params);\n+    }\n+\n+    /**\n+     * Returns the \"steady state\" width for the view, taking into account all shadowing effects.\n+     */\n+    public int getApparentWidth(boolean ignoreHiddenState) {\n+        if (!isVisible() && !ignoreHiddenState) {\n+            return 0;\n+        }\n+        boolean isCollapsed = has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND) ||\n+                !has(mDisplayOptions, LeftNavBar.DISPLAY_ALWAYS_EXPANDED);\n+        return isCollapsed ? mApparentWidthCollapsed : mApparentWidthExpanded;\n+    }\n+\n+    public void setAnimationsEnabled(boolean enabled) {\n+        mAnimationsEnabled = enabled;\n+    }\n+\n+    private static boolean has(int changes, int option) {\n+        return (changes & option) != 0;\n+    }\n+\n+    public TabDisplay getTabs() {\n+        return mTabs;\n+    }\n+\n+    public SpinnerDisplay getSpinner() {\n+        return mSpinner;\n+    }\n+\n+    public void setNavigationMode(int mode) {\n+        if (mNavigationMode == mode) {\n+            return;\n+        }\n+        setNavigationModeVisibility(mNavigationMode, false);\n+        setNavigationModeVisibility(mode, true);\n+        mNavigationMode = mode;\n+    }\n+\n+    private void setNavigationModeVisibility(int mode, boolean visible) {\n+        switch (mode) {\n+            case ActionBar.NAVIGATION_MODE_TABS:\n+                mTabs.setVisible(visible);\n+                break;\n+\n+            case ActionBar.NAVIGATION_MODE_LIST:\n+                mSpinner.setVisible(visible);\n+                break;\n+\n+            default:\n+                break;\n+        }\n+    }\n+\n+    public int getNavigationMode() {\n+        return mNavigationMode;\n+    }\n+\n+    public void showOptionsMenu(Boolean show) {\n+        mOptions.setVisible(show);\n+    }\n+\n+    public void setCustomView(View view) {\n+        ViewGroup main = getMainSection();\n+        CustomViewWrapper current = getCustomViewWrapper();\n+        if (current != null) {\n+            current.detach();\n+            main.removeView(current);\n+        }\n+        if (view != null) {\n+            view.setActivated(mExpanded);\n+            main.addView(new CustomViewWrapper(getContext(), view));\n+            setCustomViewVisibility(has(mDisplayOptions, ActionBar.DISPLAY_SHOW_CUSTOM));\n+        }\n+    }\n+\n+    private boolean hasCustomView() {\n+        return getCustomViewWrapper() != null;\n+    }\n+\n+    private boolean hasVisibleCustomView() {\n+        return hasCustomView() && getCustomViewWrapper().getVisibility() == VISIBLE;\n+    }\n+\n+    public View getCustomView() {\n+        CustomViewWrapper wrapper = getCustomViewWrapper();\n+        return wrapper != null ? wrapper.getView() : null;\n+    }\n+\n+    private CustomViewWrapper getCustomViewWrapper() {\n+        ViewGroup main = getMainSection();\n+        // The custom view comes after the tabs and the spinner.\n+        if (main.getChildCount() == 3) {\n+            return (CustomViewWrapper) main.getChildAt(2);\n+        }\n+        return null;\n+    }\n+\n+    private void setCustomViewVisibility(boolean visible) {\n+        View current = getCustomViewWrapper();\n+        if (current != null) {\n+            current.setVisibility(visible ? VISIBLE : GONE);\n+        }\n+    }\n+\n+    @Override\n+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n+        if (hasVisibleCustomView()) {\n+            getCustomViewWrapper().onPostMeasure(this);\n+        }\n+    }\n+\n+    @Override\n+    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n+        super.onLayout(changed, l, t, r, b);\n+        if (hasVisibleCustomView()) {\n+            getCustomViewWrapper().onPostLayout(this);\n+        }\n+    }\n+\n+    /**\n+     * Wrapper around custom views to allow them to use the layout parameters defined in the\n+     * ActionBar class and still be displayed within this view group.\n+     */\n+    private static final class CustomViewWrapper extends ViewGroup {\n+\n+        private final View mView;\n+\n+        CustomViewWrapper(Context context, View view) {\n+            super(context);\n+            setLayoutParams(new LinearLayout.LayoutParams(\n+                    ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\n+            mView = view;\n+            if (!(view.getLayoutParams() instanceof ActionBar.LayoutParams)) {\n+                view.setLayoutParams(generateDefaultLayoutParams());\n+            }\n+            addView(view);\n+        }\n+\n+        View getView() {\n+            return mView;\n+        }\n+\n+        void detach() {\n+            removeView(mView);\n+        }\n+\n+        /**\n+         * Locates the top bound of the space available for custom views, expressed in the\n+         * coordinate system of {@code parent}.\n+         */\n+        private int findTopOfAvailableSpace(LeftNavView parent) {\n+            //int top = parent.mPaddingTop;\n+        \tint top = parent.getPaddingTop();\n+            if (parent.mHome.isVisible()) {\n+                top += parent.mHome.getView().getMeasuredHeight();\n+            }\n+            switch (parent.mNavigationMode) {\n+                case ActionBar.NAVIGATION_MODE_TABS:\n+                    top += parent.mTabs.getView().getMeasuredHeight();\n+                    break;\n+\n+                case ActionBar.NAVIGATION_MODE_LIST:\n+                    top += parent.mSpinner.getView().getMeasuredHeight();\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+            return top;\n+        }\n+\n+        /**\n+         * Locates the bottom bound of the space available for custom views, expressed in the\n+         * coordinate system of {@code parent}.\n+         */\n+        private int findBottomOfAvailableSpace(LeftNavView parent) {\n+            //int bottom = parent.getMeasuredHeight() - parent.mPaddingBottom;\n+        \tint bottom = parent.getMeasuredHeight() - parent.getPaddingBottom();\n+            if (parent.mOptions.isVisible()) {\n+                bottom -= parent.mOptions.getView().getMeasuredHeight();\n+            }\n+            return bottom;\n+        }\n+\n+        private void checkDimensionsConsistency(int value, int expected) {\n+            if (value != expected) {\n+                throw new IllegalStateException(\"Inconsistent dimensions!\");\n+            }\n+        }\n+\n+        /**\n+         * Should be called after the rest of the left nav has been measured, so that custom views\n+         * can be sized according to the space left and the desired gravity.\n+         */\n+        void onPostMeasure(LeftNavView parent) {\n+            // Dimensions of the entire parent.\n+            int totalWidth = parent.getMeasuredWidth();\n+            int totalHeight = parent.getMeasuredHeight();\n+            // Coordinates of the top and bottom of the available space.\n+            int topOfAvailableSpace = findTopOfAvailableSpace(parent);\n+            int bottomOfAvailableSpace = findBottomOfAvailableSpace(parent);\n+            // Dimensions of the available space.\n+            int availableWidth = totalWidth - parent.getPaddingLeft() - parent.getPaddingRight();\n+            int availableHeight = bottomOfAvailableSpace - topOfAvailableSpace;\n+            // Space available in each half of the parent.\n+            // This is used when attempting to vertically center a custom view which has its height\n+            // as \"match parent\": in this case its size will be limited by the smallest of the two\n+            // spaces.\n+            int availableInTopHalf = totalHeight / 2 - topOfAvailableSpace;\n+            int availableInBottomHalf = bottomOfAvailableSpace - totalHeight / 2;\n+\n+            // Sanity checks.\n+            if (getMeasuredWidth() != 0) {\n+                checkDimensionsConsistency(availableWidth, getMeasuredWidth());\n+            }\n+            if (getMeasuredHeight() != 0) {\n+                checkDimensionsConsistency(availableHeight, getMeasuredHeight());\n+            }\n+\n+            ActionBar.LayoutParams params = (ActionBar.LayoutParams) mView.getLayoutParams();\n+            int horizontalMargin = params.leftMargin + params.rightMargin;\n+            int verticalMargin = params.topMargin + params.bottomMargin;\n+\n+            int widthMode = params.width != LayoutParams.WRAP_CONTENT ?\n+                    MeasureSpec.EXACTLY : MeasureSpec.AT_MOST;\n+            int widthValue = params.width >= 0 ?\n+                    Math.min(params.width, availableWidth) : availableWidth;\n+            widthValue = Math.max(0, widthValue - horizontalMargin);\n+\n+            int heightMode = params.height != LayoutParams.WRAP_CONTENT ?\n+                    MeasureSpec.EXACTLY : MeasureSpec.AT_MOST;\n+            int heightValue = params.height >= 0 ?\n+                    Math.min(params.height, availableHeight) : availableHeight;\n+            heightValue = Math.max(0, heightValue - verticalMargin);\n+\n+            int vGravity = params.gravity & Gravity.VERTICAL_GRAVITY_MASK;\n+            if (vGravity == Gravity.CENTER_VERTICAL &&\n+                    params.height == ViewGroup.LayoutParams.MATCH_PARENT &&\n+                    availableInTopHalf > 0 &&\n+                    availableInBottomHalf > 0) {\n+                // Attempt to center if there's enough space to center.\n+                heightValue = Math.min(availableInTopHalf, availableInBottomHalf) * 2;\n+            }\n+\n+            mView.measure(\n+                    MeasureSpec.makeMeasureSpec(widthValue, widthMode),\n+                    MeasureSpec.makeMeasureSpec(heightValue, heightMode));\n+        }\n+\n+        @Override\n+        protected void onLayout(boolean changed, int l, int t, int r, int b) {\n+            // Nothing to do here, all the work is done in onPostLayout.\n+        }\n+\n+        /**\n+         * Should be called as the last layout step to properly position the custom view.\n+         */\n+        void onPostLayout(LeftNavView parent) {\n+            int width = mView.getMeasuredWidth();\n+            int height = mView.getMeasuredHeight();\n+            ActionBar.LayoutParams params = (ActionBar.LayoutParams) mView.getLayoutParams();\n+\n+            // Expressed within the coordinate system of the present view.\n+            int xPosition = 0;\n+            // Horizontal alignment is always performed within the available space.\n+           // int containerWidth = mRight - mLeft;\n+            int containerWidth = getRight() - getLeft();\n+            switch (params.gravity & Gravity.HORIZONTAL_GRAVITY_MASK) {\n+                case Gravity.CENTER_HORIZONTAL:\n+                    xPosition = (containerWidth - width) / 2;\n+                    break;\n+                case Gravity.LEFT:\n+                    xPosition = params.leftMargin;\n+                    break;\n+                case Gravity.RIGHT:\n+                    xPosition = containerWidth - width - params.rightMargin;\n+                    break;\n+            }\n+\n+            int vGravity = params.gravity & Gravity.VERTICAL_GRAVITY_MASK;\n+            // For \"center vertical\" the view gets centered within the parent, not within the\n+            // available space.\n+           /* int superContainerHeight =\n+                    parent.mBottom - parent.mTop - parent.mPaddingTop - parent.mPaddingBottom;*/\n+            int superContainerHeight =\n+                parent.getBottom() - parent.getTop() - parent.getPaddingTop() - parent.getPaddingBottom();\n+            int superCenteredTop = (superContainerHeight - height) / 2 + parent.getPaddingTop();\n+            // The coordinates of the wrapper in parent's coordinate system.\n+            int top = findTopOfAvailableSpace(parent);\n+            int bottom = findBottomOfAvailableSpace(parent);\n+\n+            // Sanity checks.\n+            if (getBottom() - getTop() != 0) {\n+                checkDimensionsConsistency(bottom - top, getBottom() - getTop());\n+            }\n+\n+            // See if we actually have room to truly center; if not push against top or bottom.\n+            if (vGravity == Gravity.CENTER_VERTICAL) {\n+                if (superCenteredTop < top) {\n+                    vGravity = Gravity.TOP;\n+                } else if (superCenteredTop + height > bottom) {\n+                    vGravity = Gravity.BOTTOM;\n+                }\n+            }\n+\n+            // Expressed within the coordinate system of the present view.\n+            int yPosition = 0;\n+            int containerHeight = bottom - top;\n+            switch (vGravity) {\n+                case Gravity.CENTER_VERTICAL:\n+                    yPosition = superCenteredTop - top;\n+                    break;\n+                case Gravity.TOP:\n+                    yPosition = params.topMargin;\n+                    break;\n+                case Gravity.BOTTOM:\n+                    yPosition = containerHeight - height - params.bottomMargin;\n+                    break;\n+            }\n+\n+            mView.layout(xPosition, yPosition, xPosition + width, yPosition + height);\n+        }\n+\n+        @Override\n+        protected ViewGroup.LayoutParams generateDefaultLayoutParams() {\n+            return new ActionBar.LayoutParams(\n+                    ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/OptionsDisplay.java",
            "additions": 129,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,129 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+/**\n+ * Manages the visual cues related to the options menu.\n+ */\n+class OptionsDisplay {\n+\n+    private final Context mContext;\n+    private ViewGroup mView;\n+    private boolean mExpanded;\n+\n+    OptionsDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n+        mContext = context;\n+        createView(parent, attributes);\n+    }\n+\n+    View getView() {\n+        return mView;\n+    }\n+\n+    OptionsDisplay setVisible(boolean visible) {\n+        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n+        return this;\n+    }\n+\n+    boolean isVisible() {\n+        return mView.getVisibility() == View.VISIBLE;\n+    }\n+\n+    OptionsDisplay setExpanded(boolean expanded) {\n+        mExpanded = expanded;\n+        refreshExpandedState();\n+        return this;\n+    }\n+\n+    private void refreshExpandedState() {\n+        // Menu icon.\n+        setOptionExpanded(mView.getChildAt(1), mExpanded);\n+        // \"Show always\" options.\n+        ViewGroup optionsContainer = getOptionsContainer();\n+        for (int i = 0; i < optionsContainer.getChildCount(); ++i) {\n+            setOptionExpanded(optionsContainer.getChildAt(i), mExpanded);\n+        }\n+    }\n+\n+    private void createView(ViewGroup parent, TypedArray attributes) {\n+        mView = (ViewGroup) LayoutInflater.from(mContext).inflate(\n+                R.layout.leftnav_bar_options, parent, false);\n+        View menuOption = mView.findViewById(R.id.menu);\n+\n+        configureOption(menuOption,\n+                mContext.getResources().getString(R.string.lib_leftnav_bar_option_label),\n+                true);\n+        menuOption.setClickable(true);\n+        menuOption.setFocusable(true);\n+        menuOption.setOnClickListener(new View.OnClickListener() {\n+           public void onClick(View view) {\n+                if (mContext instanceof Activity) {\n+                    ((Activity) mContext).openOptionsMenu();\n+                }\n+            }\n+        });\n+        setDuplicateParentState(getOptionIcon(menuOption));\n+        setDuplicateParentState(getOptionTitle(menuOption));\n+    }\n+\n+    /**\n+     * Forces a view to duplicate its parent state, working around a bug whereby the attribute only\n+     * works if set before the view is added to its parent.\n+     */\n+    private void setDuplicateParentState(View view) {\n+        view.setDuplicateParentStateEnabled(true);\n+        ViewGroup parent = (ViewGroup) view.getParent();\n+        if (parent == null) {\n+            return;\n+        }\n+        int index = parent.indexOfChild(view);\n+        parent.removeViewAt(index);\n+        parent.addView(view, index);\n+    }\n+\n+    private View configureOption(View option, CharSequence title, boolean active) {\n+        ImageView iconView = getOptionIcon(option);\n+        iconView.setEnabled(active);\n+        getOptionTitle(option).setText(title);\n+        return option;\n+    }\n+\n+    private static void setOptionExpanded(View option, boolean expanded) {\n+        getOptionTitle(option).setVisibility(expanded ? View.VISIBLE : View.GONE);\n+    }\n+\n+    private static ImageView getOptionIcon(View option) {\n+        return (ImageView) option.findViewById(R.id.icon);\n+    }\n+\n+    private static TextView getOptionTitle(View option) {\n+        return (TextView) option.findViewById(R.id.title);\n+    }\n+\n+    private ViewGroup getOptionsContainer() {\n+        return (ViewGroup) mView.findViewById(R.id.shown_options);\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/SpinnerDisplay.java",
            "additions": 99,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.app.ActionBar.OnNavigationListener;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.AdapterView;\n+import android.widget.Spinner;\n+import android.widget.SpinnerAdapter;\n+\n+/**\n+ * A display for the \"navigation list\" feature.\n+ */\n+class SpinnerDisplay {\n+\n+    private final Context mContext;\n+    private Spinner mView;\n+    private OnNavigationListener mListener;\n+    private boolean mExpanded;\n+\n+    SpinnerDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n+        mContext = context;\n+        createView(parent, attributes);\n+    }\n+\n+    View getView() {\n+        return mView;\n+    }\n+\n+    SpinnerDisplay setVisible(boolean visible) {\n+        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n+        return this;\n+    }\n+\n+    SpinnerDisplay setExpanded(boolean expanded) {\n+        mExpanded = expanded;\n+        refreshSelectedItem();\n+        return this;\n+    }\n+\n+    void setContent(SpinnerAdapter adapter, OnNavigationListener listener) {\n+        mListener = listener;\n+        mView.setAdapter(adapter);\n+        refreshSelectedItem();\n+    }\n+\n+    void setSelected(int position) {\n+        mView.setSelection(position);\n+    }\n+\n+    int getSelected() {\n+        return mView.getSelectedItemPosition();\n+    }\n+\n+    int getCount() {\n+        return mView.getCount();\n+    }\n+\n+    private void refreshSelectedItem() {\n+        View selected = mView.getSelectedView();\n+        if (selected == null) {\n+            return;\n+        }\n+        selected.setActivated(mExpanded);\n+    }\n+\n+    private void createView(ViewGroup parent, TypedArray attributes) {\n+        mView = (Spinner) LayoutInflater.from(mContext).inflate(\n+                R.layout.leftnav_bar_spinner, parent, false);\n+        mView.setOnItemSelectedListener(new Spinner.OnItemSelectedListener() {\n+            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n+                if (mListener != null) {\n+                    mListener.onNavigationItemSelected(position, id);\n+                }\n+                refreshSelectedItem();\n+            }\n+\n+            public void onNothingSelected(AdapterView<?> parent) {}\n+        });\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TabDisplay.java",
            "additions": 319,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,319 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.app.ActionBar.Tab;\n+import android.app.Activity;\n+import android.app.FragmentTransaction;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Handles the tab navigation mode.\n+ */\n+class TabDisplay {\n+\n+    /**\n+     * Should be used to append a tab at the end of the list.\n+     *\n+     * @see #add(TabImpl, int, boolean)\n+     */\n+    public static final int LAST_POSITION = -2;\n+\n+    private static final TabImpl NONE = null;\n+\n+    private final Context mContext;\n+    private final TabAdapter mAdapter;\n+\n+    private TabListView mList;\n+    private boolean mExpanded;\n+\n+    TabDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n+        mContext = context;\n+        mAdapter = new TabAdapter(context);\n+        createView(parent);\n+    }\n+\n+    private void createView(ViewGroup parent) {\n+        int resource = R.layout.leftnav_bar_tabs;\n+        mList = (TabListView) LayoutInflater.from(mContext).inflate(resource, parent, false);\n+        mList.setAdapter(mAdapter);\n+        mList.setItemsCanFocus(true);\n+        mList.setDescendantFocusability(ViewGroup.FOCUS_BEFORE_DESCENDANTS);\n+    }\n+\n+    View getView() {\n+        return mList;\n+    }\n+\n+    TabDisplay setVisible(boolean visible) {\n+        mList.setVisibility(visible ? View.VISIBLE : View.GONE);\n+        mAdapter.setSelectionActive(visible);\n+        return this;\n+    }\n+\n+    TabDisplay setExpanded(boolean expanded) {\n+        mExpanded = expanded;\n+        mAdapter.refresh();\n+        return this;\n+    }\n+\n+    /**\n+     * @see #LAST_POSITION\n+     */\n+    void add(TabImpl tab, int position, boolean setSelected) {\n+        if (position == LAST_POSITION) {\n+            position = mAdapter.getCount();\n+        }\n+        mAdapter.insert(tab, position);\n+        if (setSelected) {\n+            select(tab);\n+        }\n+    }\n+\n+    TabImpl get(int position) {\n+        return mAdapter.getItem(position);\n+    }\n+\n+    void select(TabImpl tab) {\n+        mAdapter.setSelected(tab);\n+    }\n+\n+    TabImpl getSelected() {\n+        return mAdapter.getSelected();\n+    }\n+\n+    private void onSelectionChanged(TabImpl oldSelection, TabImpl newSelection) {\n+        FragmentTransaction transaction = null;\n+        if (mContext instanceof Activity) {\n+            transaction = ((Activity) mContext).getFragmentManager()\n+                    .beginTransaction()\n+                    .disallowAddToBackStack();\n+        }\n+        if (oldSelection == newSelection) {\n+            if (newSelection != NONE && newSelection.getCallback() != null) {\n+                newSelection.getCallback().onTabReselected(newSelection, transaction);\n+            }\n+        } else {\n+            if (oldSelection != NONE && oldSelection.getCallback() != null) {\n+                oldSelection.getCallback().onTabUnselected(oldSelection, transaction);\n+            }\n+            if (newSelection != NONE && newSelection.getCallback() != null) {\n+                newSelection.getCallback().onTabSelected(newSelection, transaction);\n+            }\n+        }\n+        if (transaction != null && !transaction.isEmpty()) {\n+            transaction.commit();\n+        }\n+\n+        mList.setHighlighted(mAdapter.getPosition(newSelection));\n+    }\n+\n+    int getCount() {\n+        return mAdapter.getCount();\n+    }\n+\n+    void removeAll() {\n+        mAdapter.clear();\n+    }\n+\n+    void remove(TabImpl tab) {\n+        mAdapter.remove(tab);\n+    }\n+\n+    void remove(int position) {\n+        remove(mAdapter.getItem(position));\n+    }\n+\n+    /**\n+     * Removes the given view from its parent if it has one.\n+     */\n+    private static void detachFromParent(View view) {\n+        if (view == null) {\n+            return;\n+        }\n+        ViewGroup parent = (ViewGroup) view.getParent();\n+        if (parent != null) {\n+            parent.removeView(view);\n+        }\n+    }\n+\n+    /**\n+     * Creates views for tabs, and handles the selection state.\n+     */\n+    private final class TabAdapter extends ArrayAdapter<TabImpl> {\n+\n+        /**\n+         * Holds the views created thus far.\n+         */\n+        private final Map<TabImpl, TabFrame> mCachedViews;\n+\n+        /**\n+         * The currently selected tab, or {@code TabDisplay#NONE} if none is selected.\n+         */\n+        private TabImpl mSelection;\n+\n+        /**\n+         * {@code true} if selection changes should trigger a callback and any visual change;\n+         * otherwise the selection is just remembered.\n+         */\n+        private boolean mIsSelectionActive;\n+\n+        /**\n+         * When selection is not active, this simply remembers which tab was selected.\n+         */\n+        private TabImpl mSavedSelection;\n+\n+        TabAdapter(Context context) {\n+            super(context, 0);\n+            mCachedViews = new HashMap<TabImpl, TabFrame>();\n+            mSelection = NONE;\n+            mSavedSelection = NONE;\n+            mIsSelectionActive = true;\n+        }\n+\n+        public void setSelectionActive(boolean active) {\n+            if (active == mIsSelectionActive) {\n+                return;\n+            }\n+            if (active) {\n+                // Restore the saved selection.\n+                mIsSelectionActive = true;\n+                setSelected(mSavedSelection);\n+                mSavedSelection = NONE;\n+            } else {\n+                // Save the selection and deselect the actual tab.\n+                mSavedSelection = mSelection;\n+                setSelected(NONE);\n+                mIsSelectionActive = false;\n+            }\n+        }\n+\n+        public void setSelected(TabImpl tab) {\n+            if (!mIsSelectionActive) {\n+                // In this case, simply storing the selected tab.\n+                mSavedSelection = tab;\n+                return;\n+            }\n+            TabImpl oldSelection = mSelection;\n+            mSelection = tab;\n+            if (oldSelection != mSelection) {\n+                setSelectionState(oldSelection, false);\n+                setSelectionState(mSelection, true);\n+            }\n+            onSelectionChanged(oldSelection, mSelection);\n+        }\n+\n+        public TabImpl getSelected() {\n+            return mIsSelectionActive ? mSelection : mSavedSelection;\n+        }\n+\n+        private boolean isSelected(TabImpl tab) {\n+            return tab != NONE && tab == getSelected();\n+        }\n+\n+        private void setSelectionState(TabImpl tab, boolean selected) {\n+            if (tab != NONE && mCachedViews.containsKey(tab)) {\n+                mCachedViews.get(tab).select(selected);\n+            }\n+        }\n+\n+        public void refresh() {\n+            for (TabFrame frame : mCachedViews.values()) {\n+                frame.expand(mExpanded);\n+            }\n+        }\n+\n+        @Override\n+        public int getItemViewType(int position) {\n+            // This ensures views are not recycled.\n+            return IGNORE_ITEM_VIEW_TYPE;\n+        }\n+\n+        @Override\n+        public void insert(TabImpl tab, int position) {\n+            super.insert(tab, position);\n+            updatePositions(false /* normal order */);\n+        }\n+\n+        @Override\n+        public void remove(TabImpl tab) {\n+            // Need to make sure custom views are properly removed from their parent.\n+            detachFromParent(tab.getCustomView());\n+            mCachedViews.remove(tab);\n+            super.remove(tab);\n+            updatePositions(false /* normal order */);\n+            if (isSelected(tab)) {\n+                setSelected(getCount() == 0 ? NONE : getItem(Math.max(0, tab.getPosition() - 1)));\n+            }\n+            tab.setPosition(Tab.INVALID_POSITION);\n+        }\n+\n+        @Override\n+        public void clear() {\n+            updatePositions(true /* all invalid */);\n+            for (int i = 0; i < getCount(); ++i) {\n+                detachFromParent(getItem(i).getCustomView());\n+            }\n+            mCachedViews.clear();\n+            setSelected(NONE);\n+            super.clear();\n+        }\n+\n+        @Override\n+        public View getView(int position, View convertView, ViewGroup parent) {\n+            final TabImpl tab = getItem(position);\n+            if (!mCachedViews.containsKey(tab)) {\n+                TabFrame frame = (TabFrame) LayoutInflater.from(getContext()).inflate(\n+                        R.layout.leftnav_bar_tab, parent, false);\n+                if (tab.hasCustomView()) {\n+                    frame.configureCustom(tab.getCustomView());\n+                } else {\n+                    frame.configureNormal(tab.getIcon(), tab.getText());\n+                }\n+                frame.setOnClickListener(new View.OnClickListener() {\n+                    public void onClick(View v) {\n+                        setSelected(tab);\n+                    }\n+                });\n+                mCachedViews.put(tab, frame);\n+            }\n+            setSelectionState(tab, isSelected(tab));\n+            TabFrame result = mCachedViews.get(tab);\n+            result.expand(mExpanded);\n+            return result;\n+        }\n+\n+        /**\n+         * Updates the tab objects so that they correctly report their position in the list.\n+         *\n+         * @param   allInvalid      {@code true} to set the position as \"invalid\" on all tabs\n+         */\n+        private void updatePositions(boolean allInvalid) {\n+            for (int i = 0; i < getCount(); ++i) {\n+                getItem(i).setPosition(allInvalid ? Tab.INVALID_POSITION : i);\n+            }\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TabFrame.java",
            "additions": 105,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+import android.util.AttributeSet;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+/**\n+ * Container for tabs, responsible for handling events and setting the correct state.\n+ */\n+class TabFrame extends LinearLayout {\n+\n+    private boolean mConfigured;\n+    private boolean mIsCustom;\n+\n+    public TabFrame(Context context, AttributeSet attributes) {\n+        super(context, attributes);\n+    }\n+\n+    @Override\n+    public void setSelected(boolean selected) {\n+        // No-op: the selected state is used to show that the tab is selected in the logical sense,\n+        // whereas ListView would attempt to use that state to show the tab as \"highlighted\" - we\n+        // use focus for that.\n+    }\n+\n+    /**\n+     * Sets the selected state of this view.\n+     */\n+    public void select(boolean selected) {\n+        super.setSelected(selected);\n+    }\n+\n+    /**\n+     * Expands the content of this tab.\n+     * <p>\n+     * For regular tabs, this will simply reveal the tab's title and mark the icon as activated.\n+     * For custom tabs, this will set their \"activated\" state.\n+     *\n+     * @see View#setActivated(boolean)\n+     */\n+    public void expand(boolean expanded) {\n+        if (!mIsCustom) {\n+            getTitle().setVisibility(expanded ? View.VISIBLE : View.GONE);\n+        }\n+        setActivated(expanded);\n+    }\n+\n+    private ImageView getIcon() {\n+        return (ImageView) findViewById(R.id.icon);\n+    }\n+\n+    private TextView getTitle() {\n+        return (TextView) findViewById(R.id.title);\n+    }\n+\n+    public void configureNormal(Drawable icon, CharSequence text) {\n+        markConfigured(false);\n+        getIcon().setImageDrawable(icon);\n+        getTitle().setText(text);\n+    }\n+\n+    public void configureCustom(View content) {\n+        markConfigured(true);\n+\n+        // The focused state should be rendered by the content.\n+        setBackgroundDrawable(null);\n+\n+        // Prevent the content from receiving events, but let it reflect the correct state.\n+        content.setFocusable(false);\n+        content.setFocusableInTouchMode(false);\n+        content.setClickable(false);\n+        content.setDuplicateParentStateEnabled(true);\n+\n+        removeAllViews();\n+        addView(content);\n+    }\n+\n+    private void markConfigured(boolean isCustom) {\n+        if (mConfigured) {\n+            throw new IllegalStateException(\"Frame already configured.\");\n+        }\n+        mConfigured = true;\n+        mIsCustom = isCustom;\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TabImpl.java",
            "additions": 137,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.app.ActionBar;\n+import android.app.ActionBar.Tab;\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+\n+/**\n+ * Basic implementation of the ActionBar.Tab type.\n+ * <p>\n+ * {@code select()} is left unimplemented so that the entity managing tabs can define the proper\n+ * selection flow.\n+ */\n+abstract class TabImpl extends Tab {\n+\n+    private final Context mContext;\n+\n+    private ActionBar.TabListener mCallback;\n+    private Object mTag;\n+    private Drawable mIcon;\n+    private CharSequence mText;\n+    private int mPosition;\n+    private View mCustomView;\n+\n+    public TabImpl(Context context) {\n+        mContext = context;\n+    }\n+\n+    @Override\n+    public Object getTag() {\n+        return mTag;\n+    }\n+\n+    @Override\n+    public Tab setTag(Object tag) {\n+        mTag = tag;\n+        return this;\n+    }\n+\n+    @Override\n+    public Tab setTabListener(ActionBar.TabListener callback) {\n+        mCallback = callback;\n+        return this;\n+    }\n+\n+    @Override\n+    public View getCustomView() {\n+        return mCustomView;\n+    }\n+\n+    @Override\n+    public Tab setCustomView(View view) {\n+        mCustomView = view;\n+        return this;\n+    }\n+\n+    @Override\n+    public Tab setCustomView(int layoutResId) {\n+        return setCustomView(LayoutInflater.from(mContext).inflate(layoutResId, null));\n+    }\n+\n+    @Override\n+    public Drawable getIcon() {\n+        return mIcon;\n+    }\n+\n+    @Override\n+    public int getPosition() {\n+        return mPosition;\n+    }\n+\n+    public void setPosition(int position) {\n+        mPosition = position;\n+    }\n+\n+    @Override\n+    public CharSequence getText() {\n+        return mText;\n+    }\n+\n+    @Override\n+    public Tab setIcon(Drawable icon) {\n+        mIcon = icon;\n+        return this;\n+    }\n+\n+    @Override\n+    public Tab setIcon(int resId) {\n+        return setIcon(mContext.getResources().getDrawable(resId));\n+    }\n+\n+    @Override\n+    public Tab setText(CharSequence text) {\n+        mText = text;\n+        return this;\n+    }\n+\n+    @Override\n+    public Tab setText(int resId) {\n+        return setText(mContext.getResources().getText(resId));\n+    }\n+\n+    //----------------------------------------------------------------------------------------------\n+    // Non-API.\n+\n+    public ActionBar.TabListener getCallback() {\n+        return mCallback;\n+    }\n+\n+    boolean hasCustomView() {\n+        return mCustomView != null;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        Object source = mTag != null ? mTag : mText;\n+        return \"Tab:\" + (source != null ? source.toString() : \"<no id>\");\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TabListView.java",
            "additions": 112,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Rect;\n+import android.graphics.drawable.Drawable;\n+import android.util.AttributeSet;\n+import android.view.View;\n+import android.widget.ListView;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Extension of ListView which better handles focus.\n+ */\n+public class TabListView extends ListView {\n+\n+    private int mHighlighted;\n+    private boolean mClearingFocus;\n+\n+    public TabListView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    /**\n+     * Sets the highlighted item which will receive focus whenever this list gains focus.\n+     */\n+    public void setHighlighted(int index) {\n+        mHighlighted = index;\n+    }\n+\n+    @Override\n+    public void addFocusables(ArrayList<View> views, int direction, int focusableMode) {\n+        int selectedIndex = mHighlighted - getFirstVisiblePosition();\n+        if (!hasFocus() &&\n+                selectedIndex >= 0 && selectedIndex < getChildCount() &&\n+                direction == FOCUS_LEFT) {\n+            // This will force focus on the highlighted item.\n+            setSelection(mHighlighted);\n+            getChildAt(selectedIndex).addFocusables(views, direction, focusableMode);\n+        } else {\n+            super.addFocusables(views, direction, focusableMode);\n+        }\n+    }\n+\n+    @Override\n+    public void clearFocus() {\n+        mClearingFocus = true;\n+        super.clearFocus();\n+        mClearingFocus = false;\n+    }\n+\n+    /**\n+     * Whenever the geometry of the list changes, focus gets cleared. This is problematic when the\n+     * list gets expanded. Instead of letting the focus go away, it simply gets reset slightly\n+     * later.\n+     */\n+    @Override\n+    public void clearChildFocus(View child) {\n+        if (mClearingFocus) {\n+            super.clearChildFocus(child);\n+        } else {\n+            post(new Runnable() {\n+                public void run() {\n+                    setSelection(mHighlighted);\n+                }\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Draws an extra divider at the top and bottom of the list.\n+     */\n+    @Override\n+    protected void dispatchDraw(Canvas canvas) {\n+        super.dispatchDraw(canvas);\n+        Drawable divider = getDivider();\n+        if (divider == null) {\n+            return;\n+        }\n+        \n+        Rect bounds = new Rect();\n+        bounds.left = getPaddingLeft();\n+        bounds.right = getRight() - getLeft() - getPaddingRight();\n+        // Top.\n+        bounds.top = getPaddingTop();\n+        bounds.bottom = getPaddingTop() + getDividerHeight();\n+        divider.setBounds(bounds);\n+        divider.draw(canvas);\n+        // Bottom.\n+        bounds.top = getBottom() - getTop() - getPaddingBottom() - getDividerHeight();\n+        bounds.bottom = getBottom() - getTop() - getPaddingBottom();\n+        divider.setBounds(bounds);\n+        divider.draw(canvas);\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/TitleBarView.java",
            "additions": 266,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,266 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.graphics.drawable.Drawable;\n+import android.text.TextUtils;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.ViewParent;\n+import android.view.Window;\n+import android.widget.ImageView;\n+import android.widget.ProgressBar;\n+import android.widget.RelativeLayout;\n+import android.widget.TextView;\n+\n+/**\n+ * Holds the various widgets of the title bar.\n+ */\n+public class TitleBarView extends RelativeLayout {\n+\n+    private final VisibilityController mVisibilityController;\n+\n+    private boolean mIsLegacy;\n+    private boolean mAnimationsEnabled;\n+\n+    private TextView mTitle;\n+    private TextView mSubtitle;\n+    private ImageView mLeftIcon;\n+    private ImageView mRightIcon;\n+    private ProgressBar mCircularProgress;\n+    private ProgressBar mHorizontalProgress;\n+\n+    private int mTitleResource;\n+    private int mSubtitleResource;\n+    Context mContext;\n+\n+    public TitleBarView(Context context, AttributeSet attrs) {\n+        super(context, attrs, 0);\n+        mContext=context;\n+        mVisibilityController = new VisibilityController(this);\n+        TypedArray a = context.obtainStyledAttributes(attrs, new int[] {\n+        \t\tandroid.R.attr.windowTitleStyle,\n+                android.R.attr.defaultValue });\n+        mIsLegacy = a.getBoolean(a.getIndex(1 /* defaultValue */), false);\n+        if (mIsLegacy) {\n+            mTitleResource = a.getResourceId(a.getIndex(0 /* windowTitleStyle */), 0);\n+        } else {\n+            a.recycle();\n+            a = context.obtainStyledAttributes(null,\n+                    new int[] { android.R.attr.titleTextStyle,\n+                            android.R.attr.subtitleTextStyle },\n+                    android.R.attr.actionBarStyle,\n+                    0);\n+            mTitleResource = a.getResourceId(a.getIndex(0 /* titleTextStyle */), 0);\n+            mSubtitleResource = a.getResourceId(a.getIndex(1 /* subtitleTextStyle */), 0);\n+        }\n+        a.recycle();\n+    }\n+\n+    @Override\n+    protected void onFinishInflate() {\n+        super.onFinishInflate();\n+        if (getChildCount() == 0) {\n+            // Set up the default content.\n+            LayoutInflater.from(mContext).inflate(R.layout.lib_title_bar, this, true);\n+        }\n+        mTitle = (TextView) findViewById(R.id.title);\n+        mSubtitle = (TextView) findViewById(R.id.subtitle);\n+        mLeftIcon = (ImageView) findViewById(R.id.left_icon);\n+        mRightIcon = (ImageView) findViewById(R.id.right_icon);\n+        mCircularProgress = (ProgressBar) findViewById(R.id.progress_circular);\n+        if (mCircularProgress != null) {\n+            mCircularProgress.setIndeterminate(true);  // Cannot be done in XML...\n+        }\n+        mHorizontalProgress = (ProgressBar) findViewById(R.id.progress_horizontal);\n+        if (mIsLegacy) {\n+            setTextStyle(mTitle, mTitleResource);\n+            disableSubtitle();\n+        } else {\n+            setTextStyle(mTitle, mTitleResource);\n+            setTextStyle(mSubtitle, mSubtitleResource);\n+            disableLeftIcon();\n+            disableRightIcon();\n+        }\n+    }\n+\n+    private void setTextStyle(TextView view, int style) {\n+        if (style != 0) {\n+            view.setTextAppearance(getContext(), style);\n+        }\n+    }\n+\n+    public void setTitle(CharSequence text) {\n+        mTitle.setText(text);\n+    }\n+\n+    public void setTitleColor(int color) {\n+        mTitle.setTextColor(color);\n+    }\n+\n+    public void setLeftIcon(Drawable drawable, int alpha) {\n+        setIcon(mLeftIcon, drawable, alpha);\n+    }\n+\n+    public void setRightIcon(Drawable drawable, int alpha) {\n+        setIcon(mRightIcon, drawable, alpha);\n+    }\n+\n+    private void setIcon(ImageView view, Drawable drawable, int alpha) {\n+        if (view == null) {\n+            return;\n+        }\n+        if (drawable != null) {\n+            drawable.setAlpha(alpha);\n+            view.setImageDrawable(drawable);\n+            view.setVisibility(View.VISIBLE);\n+        } else {\n+            view.setVisibility(View.GONE);\n+        }\n+    }\n+\n+    public void setHorizontalProgress(int value) {\n+        if (mHorizontalProgress == null) {\n+            return;\n+        }\n+        switch (value) {\n+            case Window.PROGRESS_VISIBILITY_ON:\n+                mHorizontalProgress.setVisibility(View.VISIBLE);\n+                break;\n+\n+            case Window.PROGRESS_VISIBILITY_OFF:\n+                mHorizontalProgress.setVisibility(View.GONE);\n+                break;\n+\n+            case Window.PROGRESS_INDETERMINATE_ON:\n+                mHorizontalProgress.setIndeterminate(true);\n+                break;\n+\n+            case Window.PROGRESS_INDETERMINATE_OFF:\n+                mHorizontalProgress.setIndeterminate(false);\n+                break;\n+\n+            default:\n+                if (Window.PROGRESS_START <= value && value <= Window.PROGRESS_END) {\n+                    mHorizontalProgress.setProgress(value - Window.PROGRESS_START);\n+                } else if (Window.PROGRESS_SECONDARY_START <= value &&\n+                        value <= Window.PROGRESS_SECONDARY_END) {\n+                    mHorizontalProgress.setSecondaryProgress(\n+                            value - Window.PROGRESS_SECONDARY_START);\n+                }\n+                break;\n+        }\n+    }\n+\n+    public boolean isHorizontalProgressVisible() {\n+        return mHorizontalProgress != null && mHorizontalProgress.getVisibility() == VISIBLE;\n+    }\n+\n+    public void setCircularProgress(int value) {\n+        if (mCircularProgress == null) {\n+            return;\n+        }\n+        switch (value) {\n+            case Window.PROGRESS_VISIBILITY_ON:\n+                mCircularProgress.setVisibility(View.VISIBLE);\n+                break;\n+\n+            case Window.PROGRESS_VISIBILITY_OFF:\n+                mCircularProgress.setVisibility(View.GONE);\n+                break;\n+\n+            default:\n+                break;\n+        }\n+    }\n+\n+    public void disableLeftIcon() {\n+        removeFromParent(mLeftIcon);\n+        mLeftIcon = null;\n+    }\n+\n+    public void disableRightIcon() {\n+        removeFromParent(mRightIcon);\n+        mRightIcon = null;\n+    }\n+\n+    public void disableHorizontalProgress() {\n+        removeFromParent(mHorizontalProgress);\n+        mHorizontalProgress = null;\n+    }\n+\n+    public void disableCircularProgress() {\n+        removeFromParent(mCircularProgress);\n+        mCircularProgress = null;\n+    }\n+\n+    private void disableSubtitle() {\n+        removeFromParent(mSubtitle);\n+        mSubtitle = null;\n+    }\n+\n+    private static void removeFromParent(View view) {\n+        if (view == null) {\n+            return;\n+        }\n+        ViewParent parent = view.getParent();\n+        if (parent != null) {\n+            ((ViewGroup) parent).removeView(view);\n+        }\n+    }\n+\n+    public CharSequence getTitle() {\n+        return mTitle.getText();\n+    }\n+\n+    public void setSubtitle(CharSequence text) {\n+        mSubtitle.setText(text);\n+        mSubtitle.setVisibility(TextUtils.isEmpty(text) ? GONE : VISIBLE);\n+    }\n+\n+    public CharSequence getSubtitle() {\n+        return mSubtitle.getText();\n+    }\n+\n+    public void setAnimationsEnabled(boolean enabled) {\n+        mAnimationsEnabled = enabled;\n+    }\n+\n+    public void setVisible(boolean visible, boolean animated) {\n+        mVisibilityController.setVisible(visible, animated && mAnimationsEnabled);\n+    }\n+\n+    public boolean isVisible() {\n+        return mVisibilityController.isVisible();\n+    }\n+\n+    public int getApparentHeight() {\n+        return isVisible() ?\n+                getContext().getResources().getDimensionPixelSize(R.dimen.title_bar_apparent_height) :\n+                0;\n+    }\n+\n+    public void setProgressVisible(boolean visible) {\n+        setCircularProgress(visible ?\n+                Window.PROGRESS_VISIBILITY_ON :\n+                Window.PROGRESS_VISIBILITY_OFF);\n+    }\n+}\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/leftnavbar/src/com/google/tv/leftnavbar/VisibilityController.java",
            "additions": 79,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.tv.leftnavbar;\n+\n+import android.animation.Animator;\n+import android.animation.AnimatorListenerAdapter;\n+import android.animation.ObjectAnimator;\n+import android.view.View;\n+\n+/**\n+ * Manages the visibility of a view, with optional animations.\n+ */\n+public class VisibilityController {\n+\n+    private final View mView;\n+    private final int mAnimationDuration;\n+    private boolean mVisible;\n+\n+    VisibilityController(View view) {\n+        mView = view;\n+\t\tmAnimationDuration = 10000; // view.getContext().getResources()\n+\t\t\t\t//.getInteger(android.R.integer.config_shortAnimTime);\n+        mVisible = view.getVisibility() == View.VISIBLE;\n+    }\n+\n+    boolean isVisible() {\n+        return mVisible;\n+    }\n+    boolean setVisible(final boolean visible, boolean animated) {\n+        if (isVisible() == visible) {\n+            return false;\n+        }\n+        mVisible = visible;\n+        if (animated) {\n+            float toAlpha = visible ? 1.0f : 0.0f;\n+            ObjectAnimator mAnimator = ObjectAnimator.ofFloat(mView, \"Alpha\", 1-toAlpha, toAlpha);\n+            mAnimator.setDuration(mAnimationDuration).\n+                addListener(new AnimatorListenerAdapter() {\n+\n+                @Override\n+                public void onAnimationStart(Animator animator) {\n+                    if (visible) {\n+                        setViewVisible(true);\n+                    }\n+                }\n+\n+                @Override\n+                public void onAnimationEnd(Animator animator) {\n+                    if (!visible) {\n+                        setViewVisible(false);\n+                    }\n+                }\n+            });\n+            mAnimator.start();\n+        } else {\n+            setViewVisible(visible);\n+        }\n+        return true;\n+    }\n+\n+    private void setViewVisible(boolean visible) {\n+        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n+    }\n+}\n+\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml",
            "additions": 75,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,75 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.novoda</groupId>\n+    <artifactId>android</artifactId>\n+    <version>2.0.2</version>\n+  </parent>\n+\n+  <groupId>com.google.tv.leftnavbar</groupId>\n+  <artifactId>leftnavbar-lib-parent</artifactId>\n+  <version>1.0</version>\n+  <packaging>pom</packaging>\n+  <name>leftnavbar-lib-parent</name>\n+\n+  <properties>\n+    <android.sdk.platform>13</android.sdk.platform>\n+  </properties>\n+\n+  <repositories>\n+    <repository>\n+      <id>public-mvn-repo-releases</id>\n+      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n+    </repository>\n+ \n+  </repositories>\n+  <pluginRepositories>\n+    <pluginRepository>\n+      <id>public-mvn-repo.plugin-releases</id>\n+      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n+      <snapshots>\n+        <enabled>false</enabled>\n+      </snapshots>\n+    </pluginRepository>\n+  </pluginRepositories>\n+\n+  <scm>\n+    <url>http://github.com/novoda/Commons/tree/${scm.branch}</url>\n+    <connection>scm:git:git://github.com/novoda/Commons.git</connection>\n+    <developerConnection>scm:git:ssh://git@github.com/novoda/Commons.git</developerConnection>\n+  </scm>\n+\n+\n+  <distributionManagement>\n+    <repository>\n+      <id>local-public-mvn-repo</id>\n+      <name>local clone of https://github.com/novoda/public-mvn-repo</name>\n+      <url>${local.public.mvn.repo}</url>\n+    </repository>\n+  </distributionManagement>\n+\n+<build>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-scm-plugin</artifactId>\n+        <configuration>\n+          <scmVersionType>branch</scmVersionType>\n+          <scmVersion>${scm.branch}</scmVersion>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-release-plugin</artifactId>\n+        <configuration>\n+          <autoVersionSubmodules>true</autoVersionSubmodules>\n+          <useReleaseProfile>false</useReleaseProfile>\n+        </configuration>\n+        <goals />\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <modules>\n+    <module>leftnavbar</module>\n+  </modules>\n+</project>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/pom.xml.releaseBackup",
            "additions": 76,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,76 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.novoda</groupId>\n+    <artifactId>android</artifactId>\n+    <version>2.0.2</version>\n+  </parent>\n+\n+  <groupId>com.google.tv.leftnavbar</groupId>\n+  <artifactId>leftnavbar-lib-parent</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+  <packaging>pom</packaging>\n+  <name>leftnavbar-lib-parent</name>\n+\n+  <properties>\n+    <android.sdk.platform>13</android.sdk.platform>\n+  </properties>\n+\n+  <repositories>\n+    <repository>\n+      <id>public-mvn-repo-releases</id>\n+      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n+    </repository>\n+ \n+  </repositories>\n+  <pluginRepositories>\n+    <pluginRepository>\n+      <id>public-mvn-repo.plugin-releases</id>\n+      <url>https://github.com/novoda/public-mvn-repo/raw/master/releases</url>\n+      <snapshots>\n+        <enabled>false</enabled>\n+      </snapshots>\n+    </pluginRepository>\n+  </pluginRepositories>\n+\n+  <scm>\n+    <url>http://github.com/novoda/Commons/tree/${scm.branch}</url>\n+    <connection>scm:git:git://github.com/novoda/Commons.git</connection>\n+    <developerConnection>scm:git:ssh://git@github.com/novoda/Commons.git</developerConnection>\n+  </scm>\n+\n+\n+  <distributionManagement>\n+    <repository>\n+      <id>local-public-mvn-repo</id>\n+      <name>local clone of https://github.com/novoda/public-mvn-repo</name>\n+      <url>${local.public.mvn.repo}</url>\n+    </repository>\n+  </distributionManagement>\n+\n+<build>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-scm-plugin</artifactId>\n+        <configuration>\n+          <scmVersionType>branch</scmVersionType>\n+          <scmVersion>${scm.branch}</scmVersion>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-release-plugin</artifactId>\n+        <configuration>\n+          <autoVersionSubmodules>true</autoVersionSubmodules>\n+          <useReleaseProfile>false</useReleaseProfile>\n+        </configuration>\n+        <goals />\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <modules>\n+    <module>leftnavbar</module>\n+  </modules>\n+</project>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "68527a610678c8406f3e19404dca8ea6877067d2",
        "previous commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "diff stats": {
            "file_path": "LeftNavLibrary/release.properties",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+#release configuration\n+#Wed Jul 11 11:59:01 BST 2012\n+scm.commentPrefix=[maven-release-plugin] \n+pushChanges=true\n+project.rel.com.google.tv.leftnavbar\\:leftnavbar-lib-parent=1.0\n+scm.tag=leftnavbar-lib-parent-1.0\n+remoteTagging=true\n+project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib.empty=true\n+exec.additionalArguments=-P localrelease\n+project.rel.com.google.tv.leftnavbar\\:leftnavbar-lib=1.0\n+project.dev.com.google.tv.leftnavbar\\:leftnavbar-lib=1.1-SNAPSHOT\n+scm.url=scm\\:git\\:ssh\\://git@github.com/novoda/Commons.git\n+scm.tagNameFormat=@{project.artifactId}-@{project.version}\n+preparationGoals=clean verify\n+project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib-parent.connection=scm\\:git\\:git\\://github.com/novoda/Commons.git\n+project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib-parent.developerConnection=scm\\:git\\:ssh\\://git@github.com/novoda/Commons.git\n+project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib-parent.tag=HEAD\n+exec.snapshotReleasePluginAllowed=false\n+completedPhase=run-preparation-goals\n+project.dev.com.google.tv.leftnavbar\\:leftnavbar-lib-parent=1.1-SNAPSHOT\n+project.scm.com.google.tv.leftnavbar\\:leftnavbar-lib-parent.url=http\\://github.com/novoda/Commons/tree/master\n"
    },
    {
        "commit hash": "a3d2e996d239ec5b7147bc6f2ba03b07d8f80037",
        "previous commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "diff stats": {
            "file_path": "LeftNavBarExample/README.md",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1 +1 @@\n-Make sure to link LeftNavBarlibrary to the LeftNavBarExample project!\n\\ No newline at end of file\n+Make sure to link LeftNavBarLibrary to the LeftNavBarExample project!\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk.res",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk.res and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk.unaligned",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk.unaligned and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/classes.dex and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk.res",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk.res and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk.unaligned",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk.unaligned and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/classes.dex and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk.res",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk.res and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk.unaligned",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk.unaligned and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/classes.dex and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_focused_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_normal_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/novoda_bot.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-ldpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-mdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-xhdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/app_icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/app_logo.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/placeholder.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_focused_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_normal_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/novoda_bot.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-ldpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-mdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-xhdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/app_icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/app_logo.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/placeholder.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_focused_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_normal_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/novoda_bot.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-ldpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-mdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-xhdpi/ic_launcher.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/app_icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/app_logo.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/placeholder.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "d9bf1067d01c134d4e1f1424c4e7cdb6c11569a1",
        "previous commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-xhdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/.name",
            "additions": 0,
            "deletions": 1
        },
        "diff content": "@@ -1 +0,0 @@\n-CarouselFragment\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/ant.xml",
            "additions": 0,
            "deletions": 7
        },
        "diff content": "@@ -1,7 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"AntConfiguration\">\n-    <defaultAnt bundledAnt=\"true\" />\n-  </component>\n-</project>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/artifacts/LeftNavBarLibrary_jar.xml",
            "additions": 0,
            "deletions": 8
        },
        "diff content": "@@ -1,8 +0,0 @@\n-<component name=\"ArtifactManager\">\n-  <artifact type=\"jar\" build-on-make=\"true\" name=\"LeftNavBarLibrary:jar\">\n-    <output-path>$USER_HOME$/Desktop</output-path>\n-    <root id=\"archive\" name=\"LeftNavBarLibrary.jar\">\n-      <element id=\"module-output\" name=\"LeftNavBarLibrary\" />\n-    </root>\n-  </artifact>\n-</component>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/compiler.xml",
            "additions": 0,
            "deletions": 25
        },
        "diff content": "@@ -1,25 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"CompilerConfiguration\">\n-    <option name=\"DEFAULT_COMPILER\" value=\"Javac\" />\n-    <excludeFromCompile>\n-      <directory url=\"file://$PROJECT_DIR$/gen\" includeSubdirectories=\"true\" />\n-      <directory url=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/gen\" includeSubdirectories=\"true\" />\n-    </excludeFromCompile>\n-    <resourceExtensions />\n-    <wildcardResourcePatterns>\n-      <entry name=\"?*.properties\" />\n-      <entry name=\"?*.xml\" />\n-      <entry name=\"?*.gif\" />\n-      <entry name=\"?*.png\" />\n-      <entry name=\"?*.jpeg\" />\n-      <entry name=\"?*.jpg\" />\n-      <entry name=\"?*.html\" />\n-      <entry name=\"?*.dtd\" />\n-      <entry name=\"?*.tld\" />\n-      <entry name=\"?*.ftl\" />\n-    </wildcardResourcePatterns>\n-    <annotationProcessing enabled=\"false\" useClasspath=\"true\" />\n-  </component>\n-</project>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/copyright/profiles_settings.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<component name=\"CopyrightManager\">\n-  <settings default=\"\">\n-    <module2copyright />\n-  </settings>\n-</component>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/encodings.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"Encoding\" useUTFGuessing=\"true\" native2AsciiForPropertiesFiles=\"false\" />\n-</project>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/misc.xml",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"EntryPointsManager\">\n-    <entry_points version=\"2.0\" />\n-  </component>\n-  <component name=\"ProjectResources\">\n-    <default-html-doctype>http://www.w3.org/1999/xhtml</default-html-doctype>\n-  </component>\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_6\" assert-keyword=\"true\" jdk-15=\"true\" project-jdk-name=\"Android 3.2 Platform\" project-jdk-type=\"Android SDK\">\n-    <output url=\"file://$PROJECT_DIR$/out\" />\n-  </component>\n-</project>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/modules.xml",
            "additions": 0,
            "deletions": 10
        },
        "diff content": "@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"ProjectModuleManager\">\n-    <modules>\n-      <module fileurl=\"file://$PROJECT_DIR$/LeftNavBarExample.iml\" filepath=\"$PROJECT_DIR$/LeftNavBarExample.iml\" />\n-      <module fileurl=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/LeftNavBarLibrary.iml\" filepath=\"$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/LeftNavBarLibrary.iml\" />\n-    </modules>\n-  </component>\n-</project>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/scopes/scope_settings.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<component name=\"DependencyValidationManager\">\n-  <state>\n-    <option name=\"SKIP_IMPORT_STATEMENTS\" value=\"false\" />\n-  </state>\n-</component>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/uiDesigner.xml",
            "additions": 0,
            "deletions": 125
        },
        "diff content": "@@ -1,125 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"Palette2\">\n-    <group name=\"Swing\">\n-      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n-      </item>\n-      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n-      </item>\n-      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n-      </item>\n-      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n-      </item>\n-      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n-        <initial-values>\n-          <property name=\"text\" value=\"Button\" />\n-        </initial-values>\n-      </item>\n-      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n-        <initial-values>\n-          <property name=\"text\" value=\"RadioButton\" />\n-        </initial-values>\n-      </item>\n-      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n-        <initial-values>\n-          <property name=\"text\" value=\"CheckBox\" />\n-        </initial-values>\n-      </item>\n-      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n-        <initial-values>\n-          <property name=\"text\" value=\"Label\" />\n-        </initial-values>\n-      </item>\n-      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"200\" height=\"200\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"200\" height=\"200\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n-      </item>\n-      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n-          <preferred-size width=\"-1\" height=\"20\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n-      </item>\n-    </group>\n-  </component>\n-</project>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/vcs.xml",
            "additions": 0,
            "deletions": 7
        },
        "diff content": "@@ -1,7 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"VcsDirectoryMappings\">\n-    <mapping directory=\"\" vcs=\"\" />\n-  </component>\n-</project>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/workspace.xml",
            "additions": 0,
            "deletions": 706
        },
        "diff content": "@@ -1,706 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"AnalysisUIOptions\">\n-    <option name=\"SCOPE_TYPE\" value=\"4\" />\n-  </component>\n-  <component name=\"AndroidLayoutPreviewToolWindow\">\n-    <option name=\"state\">\n-      <GlobalState>\n-        <option name=\"device\" value=\"2.7in QVGA\" />\n-        <option name=\"dockMode\" value=\"\" />\n-        <option name=\"nightMode\" value=\"notnight\" />\n-        <option name=\"targetHashString\" value=\"android-13\" />\n-        <option name=\"theme\" value=\"Theme\" />\n-        <option name=\"visible\" value=\"false\" />\n-      </GlobalState>\n-    </option>\n-  </component>\n-  <component name=\"BookmarkManager\">\n-    <bookmark url=\"file://$PROJECT_DIR$/src/novoda/demo/LeftNavBarExample.java\" line=\"61\" />\n-  </component>\n-  <component name=\"ChangeListManager\">\n-    <list default=\"true\" id=\"39891762-92bf-4772-a8ef-a9b4b09be0c6\" name=\"Default\" comment=\"\" />\n-    <ignored path=\"CarouselFragment.iws\" />\n-    <ignored path=\".idea/workspace.xml\" />\n-    <option name=\"TRACKING_ENABLED\" value=\"true\" />\n-    <option name=\"SHOW_DIALOG\" value=\"false\" />\n-    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n-    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n-    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n-  </component>\n-  <component name=\"ChangesViewManager\" flattened_view=\"true\" show_ignored=\"false\" />\n-  <component name=\"CreatePatchCommitExecutor\">\n-    <option name=\"PATCH_PATH\" value=\"\" />\n-  </component>\n-  <component name=\"DaemonCodeAnalyzer\">\n-    <disable_hints />\n-  </component>\n-  <component name=\"DebuggerManager\">\n-    <breakpoint_any>\n-      <breakpoint>\n-        <option name=\"NOTIFY_CAUGHT\" value=\"true\" />\n-        <option name=\"NOTIFY_UNCAUGHT\" value=\"true\" />\n-        <option name=\"ENABLED\" value=\"false\" />\n-        <option name=\"LOG_ENABLED\" value=\"false\" />\n-        <option name=\"LOG_EXPRESSION_ENABLED\" value=\"false\" />\n-        <option name=\"SUSPEND_POLICY\" value=\"SuspendAll\" />\n-        <option name=\"COUNT_FILTER_ENABLED\" value=\"false\" />\n-        <option name=\"COUNT_FILTER\" value=\"0\" />\n-        <option name=\"CONDITION_ENABLED\" value=\"false\" />\n-        <option name=\"CLASS_FILTERS_ENABLED\" value=\"false\" />\n-        <option name=\"INSTANCE_FILTERS_ENABLED\" value=\"false\" />\n-        <option name=\"CONDITION\" value=\"\" />\n-        <option name=\"LOG_MESSAGE\" value=\"\" />\n-      </breakpoint>\n-      <breakpoint>\n-        <option name=\"NOTIFY_CAUGHT\" value=\"true\" />\n-        <option name=\"NOTIFY_UNCAUGHT\" value=\"true\" />\n-        <option name=\"ENABLED\" value=\"false\" />\n-        <option name=\"LOG_ENABLED\" value=\"false\" />\n-        <option name=\"LOG_EXPRESSION_ENABLED\" value=\"false\" />\n-        <option name=\"SUSPEND_POLICY\" value=\"SuspendAll\" />\n-        <option name=\"COUNT_FILTER_ENABLED\" value=\"false\" />\n-        <option name=\"COUNT_FILTER\" value=\"0\" />\n-        <option name=\"CONDITION_ENABLED\" value=\"false\" />\n-        <option name=\"CLASS_FILTERS_ENABLED\" value=\"false\" />\n-        <option name=\"INSTANCE_FILTERS_ENABLED\" value=\"false\" />\n-        <option name=\"CONDITION\" value=\"\" />\n-        <option name=\"LOG_MESSAGE\" value=\"\" />\n-      </breakpoint>\n-    </breakpoint_any>\n-    <breakpoint_rules />\n-    <ui_properties />\n-  </component>\n-  <component name=\"FavoritesManager\">\n-    <favorites_list name=\"CarouselFragment\" />\n-  </component>\n-  <component name=\"FileEditorManager\">\n-    <leaf />\n-  </component>\n-  <component name=\"FindManager\">\n-    <FindUsagesManager>\n-      <setting name=\"OPEN_NEW_TAB\" value=\"false\" />\n-    </FindUsagesManager>\n-  </component>\n-  <component name=\"IdeDocumentHistory\">\n-    <option name=\"changedFiles\">\n-      <list>\n-        <option value=\"$PROJECT_DIR$/src/novoda/demo/GalleryAdapter.java\" />\n-        <option value=\"$PROJECT_DIR$/res/layout/row_fragment.xml\" />\n-        <option value=\"$PROJECT_DIR$/res/layout/carousel_gallery.xml\" />\n-        <option value=\"$PROJECT_DIR$/src/novoda/adam/GalleryAdapter.java\" />\n-        <option value=\"$PROJECT_DIR$/src/novoda/adam/Carousel.java\" />\n-        <option value=\"$PROJECT_DIR$/res/drawable/leftnav_bar_option_icon_light.xml\" />\n-        <option value=\"$PROJECT_DIR$/res/drawable-hdpi/image_background.xml\" />\n-        <option value=\"$PROJECT_DIR$/src/novoda/demo/Carousel.java\" />\n-        <option value=\"$PROJECT_DIR$/src/novoda/demo/GoogleTvLeftNavBar.java\" />\n-        <option value=\"$PROJECT_DIR$/src/novoda/demo/LeftNavBar.java\" />\n-        <option value=\"$PROJECT_DIR$/res/layout/act_carousel.xml\" />\n-        <option value=\"$PROJECT_DIR$/src/novoda/demo/LeftNavBarExample.java\" />\n-        <option value=\"$PROJECT_DIR$/src/novoda/demo/LeftNavBarWrapper.java\" />\n-        <option value=\"$PROJECT_DIR$/src/novoda/demo/GridViewAdapter.java\" />\n-        <option value=\"$PROJECT_DIR$/res/layout/grid_item.xml\" />\n-        <option value=\"$PROJECT_DIR$/res/values/strings.xml\" />\n-      </list>\n-    </option>\n-  </component>\n-  <component name=\"ProjectFrameBounds\">\n-    <option name=\"x\" value=\"-1\" />\n-    <option name=\"width\" value=\"1922\" />\n-    <option name=\"height\" value=\"1027\" />\n-  </component>\n-  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"false\">\n-    <OptionsSetting value=\"true\" id=\"Add\" />\n-    <OptionsSetting value=\"true\" id=\"Remove\" />\n-    <OptionsSetting value=\"true\" id=\"Checkout\" />\n-    <OptionsSetting value=\"true\" id=\"Update\" />\n-    <OptionsSetting value=\"true\" id=\"Status\" />\n-    <OptionsSetting value=\"true\" id=\"Edit\" />\n-    <ConfirmationsSetting value=\"0\" id=\"Add\" />\n-    <ConfirmationsSetting value=\"0\" id=\"Remove\" />\n-  </component>\n-  <component name=\"ProjectReloadState\">\n-    <option name=\"STATE\" value=\"0\" />\n-  </component>\n-  <component name=\"ProjectView\">\n-    <navigator currentView=\"ProjectPane\" proportions=\"\" version=\"1\" splitterProportion=\"0.5\">\n-      <flattenPackages />\n-      <showMembers />\n-      <showModules />\n-      <showLibraryContents />\n-      <hideEmptyPackages />\n-      <abbreviatePackageNames />\n-      <autoscrollToSource />\n-      <autoscrollFromSource />\n-      <sortByType />\n-    </navigator>\n-    <panes>\n-      <pane id=\"Scope\">\n-        <subPane subId=\"Project Files\">\n-          <PATH>\n-            <PATH_ELEMENT USER_OBJECT=\"Root\">\n-              <option name=\"myItemId\" value=\"\" />\n-              <option name=\"myItemType\" value=\"\" />\n-            </PATH_ELEMENT>\n-          </PATH>\n-        </subPane>\n-      </pane>\n-      <pane id=\"ProjectPane\">\n-        <subPane>\n-          <PATH>\n-            <PATH_ELEMENT>\n-              <option name=\"myItemId\" value=\"CarouselFragment\" />\n-              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n-            </PATH_ELEMENT>\n-          </PATH>\n-        </subPane>\n-      </pane>\n-      <pane id=\"PackagesPane\">\n-        <subPane>\n-          <PATH>\n-            <PATH_ELEMENT>\n-              <option name=\"myItemId\" value=\"CarouselFragment\" />\n-              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PackageViewProjectNode\" />\n-            </PATH_ELEMENT>\n-          </PATH>\n-        </subPane>\n-      </pane>\n-    </panes>\n-  </component>\n-  <component name=\"PropertiesComponent\">\n-    <property name=\"project.structure.last.edited\" value=\"Modules\" />\n-    <property name=\"GoToFile.includeJavaFiles\" value=\"false\" />\n-    <property name=\"OverrideImplement.combined\" value=\"true\" />\n-    <property name=\"project.structure.proportion\" value=\"0.15\" />\n-    <property name=\"options.splitter.main.proportions\" value=\"0.3\" />\n-    <property name=\"recentsLimit\" value=\"5\" />\n-    <property name=\"MemberChooser.sorted\" value=\"false\" />\n-    <property name=\"options.lastSelected\" value=\"preferences.externalResources\" />\n-    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n-    <property name=\"ANDROID_EXTENDED_DEVICE_CHOOSER_SERIALS\" value=\"028040c0435f6417\" />\n-    <property name=\"MemberChooser.copyJavadoc\" value=\"false\" />\n-    <property name=\"GoToClass.toSaveIncludeLibraries\" value=\"false\" />\n-    <property name=\"ANDROID_EXTENDED_DEVICE_CHOOSER_AVD\" value=\"modern\" />\n-    <property name=\"MemberChooser.showClasses\" value=\"true\" />\n-    <property name=\"GoToClass.includeLibraries\" value=\"false\" />\n-    <property name=\"options.searchVisible\" value=\"true\" />\n-    <property name=\"options.splitter.details.proportions\" value=\"0.2\" />\n-  </component>\n-  <component name=\"RecentsManager\">\n-    <key name=\"CopyClassDialog.RECENTS_KEY\">\n-      <recent name=\"novoda.demo\" />\n-    </key>\n-    <key name=\"CopyFile.RECENT_KEYS\">\n-      <recent name=\"$PROJECT_DIR$/res/drawable-hdpi\" />\n-      <recent name=\"$PROJECT_DIR$/res/drawable\" />\n-      <recent name=\"$PROJECT_DIR$/res\" />\n-      <recent name=\"$PROJECT_DIR$/libs\" />\n-      <recent name=\"$PROJECT_DIR$\" />\n-    </key>\n-    <key name=\"MoveFile.RECENT_KEYS\">\n-      <recent name=\"$PROJECT_DIR$/res/drawable\" />\n-    </key>\n-  </component>\n-  <component name=\"RunManager\" selected=\"Android Application.LeftNavBarExample\">\n-    <configuration default=\"true\" type=\"#org.jetbrains.idea.devkit.run.PluginConfigurationType\" factoryName=\"Plugin\">\n-      <module name=\"\" />\n-      <option name=\"VM_PARAMETERS\" value=\"-Xmx512m -Xms256m -XX:MaxPermSize=250m\" />\n-      <option name=\"PROGRAM_PARAMETERS\" />\n-      <method>\n-        <option name=\"AntTarget\" enabled=\"false\" />\n-        <option name=\"BuildArtifacts\" enabled=\"false\" />\n-        <option name=\"Make\" enabled=\"true\" />\n-        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n-      </method>\n-    </configuration>\n-    <configuration default=\"true\" type=\"AndroidTestRunConfigurationType\" factoryName=\"Android Tests\">\n-      <module name=\"\" />\n-      <option name=\"TESTING_TYPE\" value=\"0\" />\n-      <option name=\"INSTRUMENTATION_RUNNER_CLASS\" value=\"\" />\n-      <option name=\"METHOD_NAME\" value=\"\" />\n-      <option name=\"CLASS_NAME\" value=\"\" />\n-      <option name=\"PACKAGE_NAME\" value=\"\" />\n-      <option name=\"TARGET_SELECTION_MODE\" value=\"EMULATOR\" />\n-      <option name=\"PREFERRED_AVD\" value=\"\" />\n-      <option name=\"COMMAND_LINE\" value=\"\" />\n-      <option name=\"WIPE_USER_DATA\" value=\"false\" />\n-      <option name=\"DISABLE_BOOT_ANIMATION\" value=\"false\" />\n-      <option name=\"NETWORK_SPEED\" value=\"full\" />\n-      <option name=\"NETWORK_LATENCY\" value=\"none\" />\n-      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\n-      <method>\n-        <option name=\"AntTarget\" enabled=\"false\" />\n-        <option name=\"BuildArtifacts\" enabled=\"false\" />\n-        <option name=\"Make\" enabled=\"true\" />\n-        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n-      </method>\n-    </configuration>\n-    <configuration default=\"true\" type=\"Remote\" factoryName=\"Remote\">\n-      <option name=\"USE_SOCKET_TRANSPORT\" value=\"true\" />\n-      <option name=\"SERVER_MODE\" value=\"false\" />\n-      <option name=\"SHMEM_ADDRESS\" value=\"javadebug\" />\n-      <option name=\"HOST\" value=\"localhost\" />\n-      <option name=\"PORT\" value=\"5005\" />\n-      <method>\n-        <option name=\"AntTarget\" enabled=\"false\" />\n-        <option name=\"BuildArtifacts\" enabled=\"false\" />\n-        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n-      </method>\n-    </configuration>\n-    <configuration default=\"true\" type=\"TestNG\" factoryName=\"TestNG\">\n-      <module name=\"\" />\n-      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n-      <option name=\"ALTERNATIVE_JRE_PATH\" />\n-      <option name=\"SUITE_NAME\" />\n-      <option name=\"PACKAGE_NAME\" />\n-      <option name=\"MAIN_CLASS_NAME\" />\n-      <option name=\"METHOD_NAME\" />\n-      <option name=\"GROUP_NAME\" />\n-      <option name=\"TEST_OBJECT\" value=\"CLASS\" />\n-      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\n-      <option name=\"PARAMETERS\" />\n-      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n-      <option name=\"OUTPUT_DIRECTORY\" />\n-      <option name=\"ANNOTATION_TYPE\" />\n-      <option name=\"ENV_VARIABLES\" />\n-      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n-      <option name=\"TEST_SEARCH_SCOPE\">\n-        <value defaultName=\"moduleWithDependencies\" />\n-      </option>\n-      <option name=\"USE_DEFAULT_REPORTERS\" value=\"false\" />\n-      <option name=\"PROPERTIES_FILE\" />\n-      <envs />\n-      <properties />\n-      <listeners />\n-      <method>\n-        <option name=\"AntTarget\" enabled=\"false\" />\n-        <option name=\"BuildArtifacts\" enabled=\"false\" />\n-        <option name=\"Make\" enabled=\"true\" />\n-        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n-      </method>\n-    </configuration>\n-    <configuration default=\"true\" type=\"Applet\" factoryName=\"Applet\">\n-      <module name=\"\" />\n-      <option name=\"MAIN_CLASS_NAME\" />\n-      <option name=\"HTML_FILE_NAME\" />\n-      <option name=\"HTML_USED\" value=\"false\" />\n-      <option name=\"WIDTH\" value=\"400\" />\n-      <option name=\"HEIGHT\" value=\"300\" />\n-      <option name=\"POLICY_FILE\" value=\"$APPLICATION_HOME_DIR$/bin/appletviewer.policy\" />\n-      <option name=\"VM_PARAMETERS\" />\n-      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n-      <option name=\"ALTERNATIVE_JRE_PATH\" />\n-      <method>\n-        <option name=\"AntTarget\" enabled=\"false\" />\n-        <option name=\"BuildArtifacts\" enabled=\"false\" />\n-        <option name=\"Make\" enabled=\"true\" />\n-        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n-      </method>\n-    </configuration>\n-    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\n-      <option name=\"MAIN_CLASS_NAME\" />\n-      <option name=\"VM_PARAMETERS\" />\n-      <option name=\"PROGRAM_PARAMETERS\" />\n-      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n-      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n-      <option name=\"ALTERNATIVE_JRE_PATH\" />\n-      <option name=\"ENABLE_SWING_INSPECTOR\" value=\"false\" />\n-      <option name=\"ENV_VARIABLES\" />\n-      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n-      <module name=\"\" />\n-      <envs />\n-      <method>\n-        <option name=\"AntTarget\" enabled=\"false\" />\n-        <option name=\"BuildArtifacts\" enabled=\"false\" />\n-        <option name=\"Make\" enabled=\"true\" />\n-        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n-      </method>\n-    </configuration>\n-    <configuration default=\"true\" type=\"JUnit\" factoryName=\"JUnit\">\n-      <module name=\"\" />\n-      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n-      <option name=\"ALTERNATIVE_JRE_PATH\" />\n-      <option name=\"PACKAGE_NAME\" />\n-      <option name=\"MAIN_CLASS_NAME\" />\n-      <option name=\"METHOD_NAME\" />\n-      <option name=\"TEST_OBJECT\" value=\"class\" />\n-      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\n-      <option name=\"PARAMETERS\" />\n-      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n-      <option name=\"ENV_VARIABLES\" />\n-      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n-      <option name=\"TEST_SEARCH_SCOPE\">\n-        <value defaultName=\"moduleWithDependencies\" />\n-      </option>\n-      <envs />\n-      <patterns />\n-      <method>\n-        <option name=\"AntTarget\" enabled=\"false\" />\n-        <option name=\"BuildArtifacts\" enabled=\"false\" />\n-        <option name=\"Make\" enabled=\"true\" />\n-        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n-      </method>\n-    </configuration>\n-    <configuration default=\"true\" type=\"AndroidRunConfigurationType\" factoryName=\"Android Application\">\n-      <module name=\"\" />\n-      <option name=\"ACTIVITY_CLASS\" value=\"\" />\n-      <option name=\"MODE\" value=\"default_activity\" />\n-      <option name=\"DEPLOY\" value=\"true\" />\n-      <option name=\"TARGET_SELECTION_MODE\" value=\"EMULATOR\" />\n-      <option name=\"PREFERRED_AVD\" value=\"\" />\n-      <option name=\"COMMAND_LINE\" value=\"\" />\n-      <option name=\"WIPE_USER_DATA\" value=\"false\" />\n-      <option name=\"DISABLE_BOOT_ANIMATION\" value=\"false\" />\n-      <option name=\"NETWORK_SPEED\" value=\"full\" />\n-      <option name=\"NETWORK_LATENCY\" value=\"none\" />\n-      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\n-      <method>\n-        <option name=\"AntTarget\" enabled=\"false\" />\n-        <option name=\"BuildArtifacts\" enabled=\"false\" />\n-        <option name=\"Make\" enabled=\"true\" />\n-        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n-      </method>\n-    </configuration>\n-    <configuration default=\"false\" name=\"LeftNavBarExample\" type=\"AndroidRunConfigurationType\" factoryName=\"Android Application\">\n-      <module name=\"LeftNavBarExample\" />\n-      <option name=\"ACTIVITY_CLASS\" value=\"com.example.MyActivity\" />\n-      <option name=\"MODE\" value=\"default_activity\" />\n-      <option name=\"DEPLOY\" value=\"true\" />\n-      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\n-      <option name=\"PREFERRED_AVD\" value=\"\" />\n-      <option name=\"COMMAND_LINE\" value=\"\" />\n-      <option name=\"WIPE_USER_DATA\" value=\"false\" />\n-      <option name=\"DISABLE_BOOT_ANIMATION\" value=\"false\" />\n-      <option name=\"NETWORK_SPEED\" value=\"full\" />\n-      <option name=\"NETWORK_LATENCY\" value=\"none\" />\n-      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\n-      <RunnerSettings RunnerId=\"AndroidDebugRunner\" />\n-      <RunnerSettings RunnerId=\"Run\" />\n-      <ConfigurationWrapper RunnerId=\"AndroidDebugRunner\" />\n-      <ConfigurationWrapper RunnerId=\"Run\" />\n-      <method />\n-    </configuration>\n-    <list size=\"1\">\n-      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Android Application.LeftNavBarExample\" />\n-    </list>\n-    <configuration name=\"&lt;template&gt;\" type=\"WebApp\" default=\"true\" selected=\"false\">\n-      <Host>localhost</Host>\n-      <Port>5050</Port>\n-    </configuration>\n-  </component>\n-  <component name=\"ShelveChangesManager\" show_recycled=\"false\" />\n-  <component name=\"SvnConfiguration\" maxAnnotateRevisions=\"500\" myUseAcceleration=\"nothing\" myAutoUpdateAfterCommit=\"false\" cleanupOnStartRun=\"false\">\n-    <option name=\"USER\" value=\"\" />\n-    <option name=\"PASSWORD\" value=\"\" />\n-    <option name=\"mySSHConnectionTimeout\" value=\"30000\" />\n-    <option name=\"mySSHReadTimeout\" value=\"30000\" />\n-    <option name=\"LAST_MERGED_REVISION\" />\n-    <option name=\"MERGE_DRY_RUN\" value=\"false\" />\n-    <option name=\"MERGE_DIFF_USE_ANCESTRY\" value=\"true\" />\n-    <option name=\"UPDATE_LOCK_ON_DEMAND\" value=\"false\" />\n-    <option name=\"IGNORE_SPACES_IN_MERGE\" value=\"false\" />\n-    <option name=\"DETECT_NESTED_COPIES\" value=\"true\" />\n-    <option name=\"CHECK_NESTED_FOR_QUICK_MERGE\" value=\"false\" />\n-    <option name=\"IGNORE_SPACES_IN_ANNOTATE\" value=\"true\" />\n-    <option name=\"SHOW_MERGE_SOURCES_IN_ANNOTATE\" value=\"true\" />\n-    <option name=\"FORCE_UPDATE\" value=\"false\" />\n-    <configuration useDefault=\"false\">$USER_HOME$/.subversion_IDEA</configuration>\n-    <myIsUseDefaultProxy>false</myIsUseDefaultProxy>\n-  </component>\n-  <component name=\"TaskManager\">\n-    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n-      <changelist id=\"39891762-92bf-4772-a8ef-a9b4b09be0c6\" name=\"Default\" comment=\"\" />\n-      <created>1341583207084</created>\n-      <updated>1341583207084</updated>\n-    </task>\n-    <servers />\n-  </component>\n-  <component name=\"ToolWindowManager\">\n-    <frame x=\"-1\" y=\"0\" width=\"1922\" height=\"1027\" extended-state=\"6\" />\n-    <editor active=\"false\" />\n-    <layout>\n-      <window_info id=\"Changes\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"7\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"JetGradle\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Preview\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32977587\" sideWeight=\"0.670068\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Palette\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Ant Build\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.2497332\" sideWeight=\"0.670068\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Debug\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.39909297\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.49839914\" order=\"12\" side_tool=\"true\" content_ui=\"tabs\" />\n-      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"2\" side_tool=\"true\" content_ui=\"tabs\" />\n-      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"8\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Messages\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.5\" order=\"9\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Android\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.49786553\" order=\"11\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"true\" content_ui=\"tabs\" />\n-      <window_info id=\"Maven Projects\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Commander\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.4\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Project\" active=\"true\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" weight=\"0.2470651\" sideWeight=\"0.670068\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\n-      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.49786553\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Cvs\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.25\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Message\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Android Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.5\" order=\"10\" side_tool=\"false\" content_ui=\"tabs\" />\n-      <window_info id=\"Hierarchy\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.25\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"combo\" />\n-      <window_info id=\"Inspection\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.39909297\" sideWeight=\"0.5\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n-    </layout>\n-  </component>\n-  <component name=\"VcsContentAnnotationSettings\">\n-    <option name=\"myLimit\" value=\"2678400000\" />\n-  </component>\n-  <component name=\"VcsManagerConfiguration\">\n-    <option name=\"OFFER_MOVE_TO_ANOTHER_CHANGELIST_ON_PARTIAL_COMMIT\" value=\"true\" />\n-    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"true\" />\n-    <option name=\"CHECK_NEW_TODO\" value=\"true\" />\n-    <option name=\"myTodoPanelSettings\">\n-      <value>\n-        <are-packages-shown value=\"false\" />\n-        <are-modules-shown value=\"false\" />\n-        <flatten-packages value=\"false\" />\n-        <is-autoscroll-to-source value=\"false\" />\n-      </value>\n-    </option>\n-    <option name=\"PERFORM_UPDATE_IN_BACKGROUND\" value=\"true\" />\n-    <option name=\"PERFORM_COMMIT_IN_BACKGROUND\" value=\"true\" />\n-    <option name=\"PERFORM_EDIT_IN_BACKGROUND\" value=\"true\" />\n-    <option name=\"PERFORM_CHECKOUT_IN_BACKGROUND\" value=\"true\" />\n-    <option name=\"PERFORM_ADD_REMOVE_IN_BACKGROUND\" value=\"true\" />\n-    <option name=\"PERFORM_ROLLBACK_IN_BACKGROUND\" value=\"false\" />\n-    <option name=\"CHECK_LOCALLY_CHANGED_CONFLICTS_IN_BACKGROUND\" value=\"false\" />\n-    <option name=\"ENABLE_BACKGROUND_PROCESSES\" value=\"false\" />\n-    <option name=\"CHANGED_ON_SERVER_INTERVAL\" value=\"60\" />\n-    <option name=\"SHOW_ONLY_CHANGED_IN_SELECTION_DIFF\" value=\"true\" />\n-    <option name=\"CHECK_COMMIT_MESSAGE_SPELLING\" value=\"true\" />\n-    <option name=\"DEFAULT_PATCH_EXTENSION\" value=\"patch\" />\n-    <option name=\"SHORT_DIFF_HORISONTALLY\" value=\"true\" />\n-    <option name=\"SHORT_DIFF_EXTRA_LINES\" value=\"2\" />\n-    <option name=\"SOFT_WRAPS_IN_SHORT_DIFF\" value=\"true\" />\n-    <option name=\"INCLUDE_TEXT_INTO_PATCH\" value=\"false\" />\n-    <option name=\"INCLUDE_TEXT_INTO_SHELF\" value=\"false\" />\n-    <option name=\"CREATE_PATCH_EXPAND_DETAILS_DEFAULT\" value=\"true\" />\n-    <option name=\"SHOW_FILE_HISTORY_DETAILS\" value=\"true\" />\n-    <option name=\"SHOW_VCS_ERROR_NOTIFICATIONS\" value=\"false\" />\n-    <option name=\"FORCE_NON_EMPTY_COMMENT\" value=\"false\" />\n-    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"false\" />\n-    <option name=\"LAST_COMMIT_MESSAGE\" />\n-    <option name=\"MAKE_NEW_CHANGELIST_ACTIVE\" value=\"false\" />\n-    <option name=\"OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n-    <option name=\"CHECK_FILES_UP_TO_DATE_BEFORE_COMMIT\" value=\"false\" />\n-    <option name=\"REFORMAT_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n-    <option name=\"REFORMAT_BEFORE_FILE_COMMIT\" value=\"false\" />\n-    <option name=\"FILE_HISTORY_DIALOG_COMMENTS_SPLITTER_PROPORTION\" value=\"0.8\" />\n-    <option name=\"FILE_HISTORY_DIALOG_SPLITTER_PROPORTION\" value=\"0.5\" />\n-    <option name=\"ACTIVE_VCS_NAME\" />\n-    <option name=\"UPDATE_GROUP_BY_PACKAGES\" value=\"false\" />\n-    <option name=\"UPDATE_GROUP_BY_CHANGELIST\" value=\"false\" />\n-    <option name=\"SHOW_FILE_HISTORY_AS_TREE\" value=\"false\" />\n-    <option name=\"FILE_HISTORY_SPLITTER_PROPORTION\" value=\"0.6\" />\n-  </component>\n-  <component name=\"XDebuggerManager\">\n-    <breakpoint-manager />\n-  </component>\n-  <component name=\"antWorkspaceConfiguration\">\n-    <option name=\"IS_AUTOSCROLL_TO_SOURCE\" value=\"false\" />\n-    <option name=\"FILTER_TARGETS\" value=\"false\" />\n-  </component>\n-  <component name=\"editorHistoryManager\">\n-    <entry file=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/res/layout/left_nav.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/res/layout/spinner_item.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/res/values/attrs.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"18\" column=\"24\" selection-start=\"793\" selection-end=\"793\" vertical-scroll-proportion=\"0.31542057\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/AndroidManifest.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/res/layout/gridview.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/res/layout/main.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"21\" column=\"30\" selection-start=\"806\" selection-end=\"806\" vertical-scroll-proportion=\"0.36799064\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png\">\n-      <provider selected=\"true\" editor-type-id=\"images\">\n-        <state />\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png\">\n-      <provider selected=\"true\" editor-type-id=\"images\">\n-        <state />\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png\">\n-      <provider selected=\"true\" editor-type-id=\"images\">\n-        <state />\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png\">\n-      <provider selected=\"true\" editor-type-id=\"images\">\n-        <state />\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/src/novoda/demo/LeftNavBarExample.java\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"45\" column=\"77\" selection-start=\"1378\" selection-end=\"1378\" vertical-scroll-proportion=\"0.0\">\n-          <folding>\n-            <element signature=\"imports\" expanded=\"true\" />\n-          </folding>\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/AndroidManifest.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/res/values/strings.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"5\" column=\"33\" selection-start=\"205\" selection-end=\"205\" vertical-scroll-proportion=\"0.13274336\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/res/layout/grid_item.xml\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"27\" column=\"43\" selection-start=\"1211\" selection-end=\"1211\" vertical-scroll-proportion=\"0.71681416\">\n-          <folding />\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/src/novoda/demo/GridViewAdapter.java\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"8\" column=\"45\" selection-start=\"226\" selection-end=\"226\" vertical-scroll-proportion=\"0.21238938\">\n-          <folding>\n-            <element signature=\"imports\" expanded=\"true\" />\n-          </folding>\n-        </state>\n-      </provider>\n-    </entry>\n-    <entry file=\"file://$PROJECT_DIR$/src/novoda/demo/LeftNavBarWrapper.java\">\n-      <provider selected=\"true\" editor-type-id=\"text-editor\">\n-        <state line=\"129\" column=\"26\" selection-start=\"4134\" selection-end=\"4134\" vertical-scroll-proportion=\"1.7433628\">\n-          <folding>\n-            <element signature=\"imports\" expanded=\"true\" />\n-          </folding>\n-        </state>\n-      </provider>\n-    </entry>\n-  </component>\n-  <component name=\"masterDetails\">\n-    <states>\n-      <state key=\"ArtifactsStructureConfigurable.UI\">\n-        <settings>\n-          <artifact-editor />\n-          <last-edited>LeftNavBarLibrary:jar</last-edited>\n-          <splitter-proportions>\n-            <option name=\"proportions\">\n-              <list>\n-                <option value=\"0.2\" />\n-                <option value=\"0.5\" />\n-              </list>\n-            </option>\n-          </splitter-proportions>\n-        </settings>\n-      </state>\n-      <state key=\"FacetStructureConfigurable.UI\">\n-        <settings>\n-          <last-edited>Android (CarouselFragment)|Android</last-edited>\n-          <splitter-proportions>\n-            <option name=\"proportions\">\n-              <list>\n-                <option value=\"0.2\" />\n-              </list>\n-            </option>\n-          </splitter-proportions>\n-        </settings>\n-      </state>\n-      <state key=\"GlobalLibrariesConfigurable.UI\">\n-        <settings>\n-          <splitter-proportions>\n-            <option name=\"proportions\">\n-              <list>\n-                <option value=\"0.2\" />\n-              </list>\n-            </option>\n-          </splitter-proportions>\n-        </settings>\n-      </state>\n-      <state key=\"JdkListConfigurable.UI\">\n-        <settings>\n-          <last-edited>Android 3.2 Platform</last-edited>\n-          <splitter-proportions>\n-            <option name=\"proportions\">\n-              <list>\n-                <option value=\"0.2\" />\n-              </list>\n-            </option>\n-          </splitter-proportions>\n-        </settings>\n-      </state>\n-      <state key=\"ModuleStructureConfigurable.UI\">\n-        <settings>\n-          <last-edited>CarouselFragment</last-edited>\n-          <splitter-proportions>\n-            <option name=\"proportions\">\n-              <list>\n-                <option value=\"0.2\" />\n-              </list>\n-            </option>\n-          </splitter-proportions>\n-        </settings>\n-      </state>\n-      <state key=\"ProjectJDKs.UI\">\n-        <settings>\n-          <last-edited>1.6</last-edited>\n-          <splitter-proportions>\n-            <option name=\"proportions\">\n-              <list>\n-                <option value=\"0.20000002\" />\n-              </list>\n-            </option>\n-          </splitter-proportions>\n-        </settings>\n-      </state>\n-      <state key=\"ProjectLibrariesConfigurable.UI\">\n-        <settings>\n-          <splitter-proportions>\n-            <option name=\"proportions\">\n-              <list>\n-                <option value=\"0.2\" />\n-              </list>\n-            </option>\n-          </splitter-proportions>\n-        </settings>\n-      </state>\n-    </states>\n-  </component>\n-</project>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/LeftNavBarExample.iml",
            "additions": 0,
            "deletions": 44
        },
        "diff content": "@@ -1,44 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"FacetManager\">\n-    <facet type=\"android\" name=\"Android\">\n-      <configuration>\n-        <option name=\"GEN_FOLDER_RELATIVE_PATH_APT\" value=\"/gen\" />\n-        <option name=\"GEN_FOLDER_RELATIVE_PATH_AIDL\" value=\"/gen\" />\n-        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/AndroidManifest.xml\" />\n-        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/res\" />\n-        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/assets\" />\n-        <option name=\"LIBS_FOLDER_RELATIVE_PATH\" value=\"/libs\" />\n-        <option name=\"REGENERATE_R_JAVA\" value=\"true\" />\n-        <option name=\"REGENERATE_JAVA_BY_AIDL\" value=\"true\" />\n-        <option name=\"USE_CUSTOM_APK_RESOURCE_FOLDER\" value=\"false\" />\n-        <option name=\"CUSTOM_APK_RESOURCE_FOLDER\" value=\"\" />\n-        <option name=\"USE_CUSTOM_COMPILER_MANIFEST\" value=\"false\" />\n-        <option name=\"CUSTOM_COMPILER_MANIFEST\" value=\"\" />\n-        <option name=\"APK_PATH\" value=\"\" />\n-        <option name=\"LIBRARY_PROJECT\" value=\"false\" />\n-        <option name=\"RUN_PROCESS_RESOURCES_MAVEN_TASK\" value=\"true\" />\n-        <option name=\"GENERATE_UNSIGNED_APK\" value=\"false\" />\n-        <option name=\"CUSTOM_DEBUG_KEYSTORE_PATH\" value=\"\" />\n-        <option name=\"PACK_TEST_CODE\" value=\"false\" />\n-        <option name=\"RUN_PROGUARD\" value=\"false\" />\n-        <option name=\"PROGUARD_CFG_PATH\" value=\"/proguard-project.txt\" />\n-        <resOverlayFolders>\n-          <path>/res-overlay</path>\n-        </resOverlayFolders>\n-        <includeSystemProguardFile>true</includeSystemProguardFile>\n-      </configuration>\n-    </facet>\n-  </component>\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output />\n-    <content url=\"file://$MODULE_DIR$\">\n-      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n-      <sourceFolder url=\"file://$MODULE_DIR$/gen\" isTestSource=\"false\" />\n-    </content>\n-    <orderEntry type=\"jdk\" jdkName=\"Android 3.2 Platform\" jdkType=\"Android SDK\" />\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n-    <orderEntry type=\"module\" module-name=\"LeftNavBarLibrary\" />\n-  </component>\n-</module>\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/ant.properties",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,17 +0,0 @@\n-# This file is used to override default values used by the Ant build system.\n-#\n-# This file must be checked into Version Control Systems, as it is\n-# integral to the build system of your project.\n-\n-# This file is only used by the Ant script.\n-\n-# You can use this to override default values such as\n-#  'source.dir' for the location of your java source folder and\n-#  'out.dir' for the location of your output folder.\n-\n-# You can also use it define how the release builds are signed by declaring\n-# the following properties:\n-#  'key.store' for the location of your keystore and\n-#  'key.alias' for the name of the key to use.\n-# The password will be asked during the build when you use the 'release' target.\n-\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/build.xml",
            "additions": 0,
            "deletions": 92
        },
        "diff content": "@@ -1,92 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project name=\"CarouselFragment\" default=\"help\">\n-\n-    <!-- The local.properties file is created and updated by the 'android' tool.\n-         It contains the path to the SDK. It should *NOT* be checked into\n-         Version Control Systems. -->\n-    <property file=\"local.properties\" />\n-\n-    <!-- The ant.properties file can be created by you. It is only edited by the\n-         'android' tool to add properties to it.\n-         This is the place to change some Ant specific build properties.\n-         Here are some properties you may want to change/update:\n-\n-         source.dir\n-             The name of the source directory. Default is 'src'.\n-         out.dir\n-             The name of the output directory. Default is 'bin'.\n-\n-         For other overridable properties, look at the beginning of the rules\n-         files in the SDK, at tools/ant/build.xml\n-\n-         Properties related to the SDK location or the project target should\n-         be updated using the 'android' tool with the 'update' action.\n-\n-         This file is an integral part of the build system for your\n-         application and should be checked into Version Control Systems.\n-\n-         -->\n-    <property file=\"ant.properties\" />\n-\n-    <!-- if sdk.dir was not set from one of the property file, then\n-         get it from the ANDROID_HOME env var.\n-         This must be done before we load project.properties since\n-         the proguard config can use sdk.dir -->\n-    <property environment=\"env\" />\n-    <condition property=\"sdk.dir\" value=\"${env.ANDROID_HOME}\">\n-        <isset property=\"env.ANDROID_HOME\" />\n-    </condition>\n-\n-    <!-- The project.properties file is created and updated by the 'android'\n-         tool, as well as ADT.\n-\n-         This contains project specific properties such as project target, and library\n-         dependencies. Lower level build properties are stored in ant.properties\n-         (or in .classpath for Eclipse projects).\n-\n-         This file is an integral part of the build system for your\n-         application and should be checked into Version Control Systems. -->\n-    <loadproperties srcFile=\"project.properties\" />\n-\n-    <!-- quick check on sdk.dir -->\n-    <fail\n-            message=\"sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable.\"\n-            unless=\"sdk.dir\"\n-    />\n-\n-    <!--\n-        Import per project custom build rules if present at the root of the project.\n-        This is the place to put custom intermediary targets such as:\n-            -pre-build\n-            -pre-compile\n-            -post-compile (This is typically used for code obfuscation.\n-                           Compiled code location: ${out.classes.absolute.dir}\n-                           If this is not done in place, override ${out.dex.input.absolute.dir})\n-            -post-package\n-            -post-build\n-            -pre-clean\n-    -->\n-    <import file=\"custom_rules.xml\" optional=\"true\" />\n-\n-    <!-- Import the actual build file.\n-\n-         To customize existing targets, there are two options:\n-         - Customize only one target:\n-             - copy/paste the target into this file, *before* the\n-               <import> task.\n-             - customize it to your needs.\n-         - Customize the whole content of build.xml\n-             - copy/paste the content of the rules files (minus the top node)\n-               into this file, replacing the <import> task.\n-             - customize to your needs.\n-\n-         ***********************\n-         ****** IMPORTANT ******\n-         ***********************\n-         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n-         in order to avoid having your file be overridden by tools such as \"android update project\"\n-    -->\n-    <!-- version-tag: 1 -->\n-    <import file=\"${sdk.dir}/tools/ant/build.xml\" />\n-\n-</project>\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/local.properties",
            "additions": 0,
            "deletions": 10
        },
        "diff content": "@@ -1,10 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must *NOT* be checked into Version Control Systems,\n-# as it contains information specific to your local configuration.\n-\n-# location of the SDK. This is only used by Ant\n-# For customization when using a Version Control System, please read the\n-# header note.\n-sdk.dir=/home/adam/android-sdks\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/proguard-project.txt",
            "additions": 0,
            "deletions": 20
        },
        "diff content": "@@ -1,20 +0,0 @@\n-# To enable ProGuard in your project, edit project.properties\n-# to define the proguard.config property as described in that file.\n-#\n-# Add project specific ProGuard rules here.\n-# By default, the flags in this file are appended to flags specified\n-# in ${sdk.dir}/tools/proguard/proguard-android.txt\n-# You can edit the include path and order by changing the ProGuard\n-# include property in project.properties.\n-#\n-# For more details, see\n-#   http://developer.android.com/guide/developing/tools/proguard.html\n-\n-# Add any project specific keep options here:\n-\n-# If your project uses WebView with JS, uncomment the following\n-# and specify the fully qualified class name to the JavaScript interface\n-# class:\n-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n-#   public *;\n-#}\n"
    },
    {
        "commit hash": "b749f27e71dd14093cdc700ef1b341c2062c1036",
        "previous commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/project.properties",
            "additions": 0,
            "deletions": 15
        },
        "diff content": "@@ -1,15 +0,0 @@\n-# This file is automatically generated by Android Tools.\n-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n-#\n-# This file must be checked in Version Control Systems.\n-#\n-# To customize properties used by the Ant build system edit\n-# \"ant.properties\", and override values to adapt the script to your\n-# project structure.\n-#\n-# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):\n-#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n-\n-# Project target.\n-target=android-13\n-android.library.reference.1=../../googletv-android-samples/LeftNavBarLibrary\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/LeftNavBarLibrary.iml",
            "additions": 0,
            "deletions": 51
        },
        "diff content": "@@ -1,51 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"EclipseModuleManager\" forced_jdk=\"true\">\n-    <conelement value=\"com.android.ide.eclipse.adt.ANDROID_FRAMEWORK\" />\n-    <src_description expected_position=\"2\">\n-      <src_folder value=\"file://$MODULE_DIR$/src\" expected_position=\"0\" />\n-      <src_folder value=\"file://$MODULE_DIR$/gen\" expected_position=\"2\" />\n-    </src_description>\n-  </component>\n-  <component name=\"FacetManager\">\n-    <facet type=\"android\" name=\"Android\">\n-      <configuration>\n-        <option name=\"GEN_FOLDER_RELATIVE_PATH_APT\" value=\"/gen\" />\n-        <option name=\"GEN_FOLDER_RELATIVE_PATH_AIDL\" value=\"/gen\" />\n-        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/AndroidManifest.xml\" />\n-        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/res\" />\n-        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/assets\" />\n-        <option name=\"LIBS_FOLDER_RELATIVE_PATH\" value=\"/libs\" />\n-        <option name=\"REGENERATE_R_JAVA\" value=\"true\" />\n-        <option name=\"REGENERATE_JAVA_BY_AIDL\" value=\"true\" />\n-        <option name=\"USE_CUSTOM_APK_RESOURCE_FOLDER\" value=\"false\" />\n-        <option name=\"CUSTOM_APK_RESOURCE_FOLDER\" value=\"\" />\n-        <option name=\"USE_CUSTOM_COMPILER_MANIFEST\" value=\"false\" />\n-        <option name=\"CUSTOM_COMPILER_MANIFEST\" value=\"\" />\n-        <option name=\"APK_PATH\" value=\"\" />\n-        <option name=\"LIBRARY_PROJECT\" value=\"true\" />\n-        <option name=\"RUN_PROCESS_RESOURCES_MAVEN_TASK\" value=\"true\" />\n-        <option name=\"GENERATE_UNSIGNED_APK\" value=\"false\" />\n-        <option name=\"CUSTOM_DEBUG_KEYSTORE_PATH\" value=\"\" />\n-        <option name=\"PACK_TEST_CODE\" value=\"false\" />\n-        <option name=\"RUN_PROGUARD\" value=\"false\" />\n-        <option name=\"PROGUARD_CFG_PATH\" value=\"/proguard-project.txt\" />\n-        <resOverlayFolders>\n-          <path>/res-overlay</path>\n-        </resOverlayFolders>\n-        <includeSystemProguardFile>true</includeSystemProguardFile>\n-      </configuration>\n-    </facet>\n-  </component>\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"false\">\n-    <output url=\"file://$MODULE_DIR$/bin\" />\n-    <exclude-output />\n-    <content url=\"file://$MODULE_DIR$\">\n-      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n-      <sourceFolder url=\"file://$MODULE_DIR$/gen\" isTestSource=\"false\" />\n-    </content>\n-    <orderEntry type=\"inheritedJdk\" />\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n-  </component>\n-</module>\n-\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_background_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_background_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_focused_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_normal_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_tab_separator_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-xhdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/activity_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/activity_icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/app_icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/app_logo.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/content_img_1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/content_img_1.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/content_img_2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/content_img_2.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_a_disabled.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_a_disabled.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_a_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_b_disabled.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_b_disabled.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_b_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_c.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_c.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_d.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_d.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_e.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_e.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_focused.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_normal.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_selected.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_light.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_light.9.png and /dev/null differ\n"
    },
    {
        "commit hash": "bd201091340ffac195561db4c4c5f0fdb4771408",
        "previous commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-xhdpi/leftnav_bar_home_up.png and /dev/null differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/.name",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+CarouselFragment\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/ant.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"AntConfiguration\">\n+    <defaultAnt bundledAnt=\"true\" />\n+  </component>\n+</project>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/artifacts/LeftNavBarLibrary_jar.xml",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+<component name=\"ArtifactManager\">\n+  <artifact type=\"jar\" build-on-make=\"true\" name=\"LeftNavBarLibrary:jar\">\n+    <output-path>$USER_HOME$/Desktop</output-path>\n+    <root id=\"archive\" name=\"LeftNavBarLibrary.jar\">\n+      <element id=\"module-output\" name=\"LeftNavBarLibrary\" />\n+    </root>\n+  </artifact>\n+</component>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/compiler.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"CompilerConfiguration\">\n+    <option name=\"DEFAULT_COMPILER\" value=\"Javac\" />\n+    <excludeFromCompile>\n+      <directory url=\"file://$PROJECT_DIR$/gen\" includeSubdirectories=\"true\" />\n+      <directory url=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/gen\" includeSubdirectories=\"true\" />\n+    </excludeFromCompile>\n+    <resourceExtensions />\n+    <wildcardResourcePatterns>\n+      <entry name=\"?*.properties\" />\n+      <entry name=\"?*.xml\" />\n+      <entry name=\"?*.gif\" />\n+      <entry name=\"?*.png\" />\n+      <entry name=\"?*.jpeg\" />\n+      <entry name=\"?*.jpg\" />\n+      <entry name=\"?*.html\" />\n+      <entry name=\"?*.dtd\" />\n+      <entry name=\"?*.tld\" />\n+      <entry name=\"?*.ftl\" />\n+    </wildcardResourcePatterns>\n+    <annotationProcessing enabled=\"false\" useClasspath=\"true\" />\n+  </component>\n+</project>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/copyright/profiles_settings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<component name=\"CopyrightManager\">\n+  <settings default=\"\">\n+    <module2copyright />\n+  </settings>\n+</component>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/encodings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"Encoding\" useUTFGuessing=\"true\" native2AsciiForPropertiesFiles=\"false\" />\n+</project>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/misc.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"EntryPointsManager\">\n+    <entry_points version=\"2.0\" />\n+  </component>\n+  <component name=\"ProjectResources\">\n+    <default-html-doctype>http://www.w3.org/1999/xhtml</default-html-doctype>\n+  </component>\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_6\" assert-keyword=\"true\" jdk-15=\"true\" project-jdk-name=\"Android 3.2 Platform\" project-jdk-type=\"Android SDK\">\n+    <output url=\"file://$PROJECT_DIR$/out\" />\n+  </component>\n+</project>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/modules.xml",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectModuleManager\">\n+    <modules>\n+      <module fileurl=\"file://$PROJECT_DIR$/LeftNavBarExample.iml\" filepath=\"$PROJECT_DIR$/LeftNavBarExample.iml\" />\n+      <module fileurl=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/LeftNavBarLibrary.iml\" filepath=\"$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/LeftNavBarLibrary.iml\" />\n+    </modules>\n+  </component>\n+</project>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/scopes/scope_settings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<component name=\"DependencyValidationManager\">\n+  <state>\n+    <option name=\"SKIP_IMPORT_STATEMENTS\" value=\"false\" />\n+  </state>\n+</component>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/uiDesigner.xml",
            "additions": 125,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"Palette2\">\n+    <group name=\"Swing\">\n+      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Button\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"RadioButton\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"CheckBox\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Label\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n+          <preferred-size width=\"-1\" height=\"20\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+    </group>\n+  </component>\n+</project>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/vcs.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"\" vcs=\"\" />\n+  </component>\n+</project>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/.idea/workspace.xml",
            "additions": 706,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,706 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"AnalysisUIOptions\">\n+    <option name=\"SCOPE_TYPE\" value=\"4\" />\n+  </component>\n+  <component name=\"AndroidLayoutPreviewToolWindow\">\n+    <option name=\"state\">\n+      <GlobalState>\n+        <option name=\"device\" value=\"2.7in QVGA\" />\n+        <option name=\"dockMode\" value=\"\" />\n+        <option name=\"nightMode\" value=\"notnight\" />\n+        <option name=\"targetHashString\" value=\"android-13\" />\n+        <option name=\"theme\" value=\"Theme\" />\n+        <option name=\"visible\" value=\"false\" />\n+      </GlobalState>\n+    </option>\n+  </component>\n+  <component name=\"BookmarkManager\">\n+    <bookmark url=\"file://$PROJECT_DIR$/src/novoda/demo/LeftNavBarExample.java\" line=\"61\" />\n+  </component>\n+  <component name=\"ChangeListManager\">\n+    <list default=\"true\" id=\"39891762-92bf-4772-a8ef-a9b4b09be0c6\" name=\"Default\" comment=\"\" />\n+    <ignored path=\"CarouselFragment.iws\" />\n+    <ignored path=\".idea/workspace.xml\" />\n+    <option name=\"TRACKING_ENABLED\" value=\"true\" />\n+    <option name=\"SHOW_DIALOG\" value=\"false\" />\n+    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n+    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n+    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n+  </component>\n+  <component name=\"ChangesViewManager\" flattened_view=\"true\" show_ignored=\"false\" />\n+  <component name=\"CreatePatchCommitExecutor\">\n+    <option name=\"PATCH_PATH\" value=\"\" />\n+  </component>\n+  <component name=\"DaemonCodeAnalyzer\">\n+    <disable_hints />\n+  </component>\n+  <component name=\"DebuggerManager\">\n+    <breakpoint_any>\n+      <breakpoint>\n+        <option name=\"NOTIFY_CAUGHT\" value=\"true\" />\n+        <option name=\"NOTIFY_UNCAUGHT\" value=\"true\" />\n+        <option name=\"ENABLED\" value=\"false\" />\n+        <option name=\"LOG_ENABLED\" value=\"false\" />\n+        <option name=\"LOG_EXPRESSION_ENABLED\" value=\"false\" />\n+        <option name=\"SUSPEND_POLICY\" value=\"SuspendAll\" />\n+        <option name=\"COUNT_FILTER_ENABLED\" value=\"false\" />\n+        <option name=\"COUNT_FILTER\" value=\"0\" />\n+        <option name=\"CONDITION_ENABLED\" value=\"false\" />\n+        <option name=\"CLASS_FILTERS_ENABLED\" value=\"false\" />\n+        <option name=\"INSTANCE_FILTERS_ENABLED\" value=\"false\" />\n+        <option name=\"CONDITION\" value=\"\" />\n+        <option name=\"LOG_MESSAGE\" value=\"\" />\n+      </breakpoint>\n+      <breakpoint>\n+        <option name=\"NOTIFY_CAUGHT\" value=\"true\" />\n+        <option name=\"NOTIFY_UNCAUGHT\" value=\"true\" />\n+        <option name=\"ENABLED\" value=\"false\" />\n+        <option name=\"LOG_ENABLED\" value=\"false\" />\n+        <option name=\"LOG_EXPRESSION_ENABLED\" value=\"false\" />\n+        <option name=\"SUSPEND_POLICY\" value=\"SuspendAll\" />\n+        <option name=\"COUNT_FILTER_ENABLED\" value=\"false\" />\n+        <option name=\"COUNT_FILTER\" value=\"0\" />\n+        <option name=\"CONDITION_ENABLED\" value=\"false\" />\n+        <option name=\"CLASS_FILTERS_ENABLED\" value=\"false\" />\n+        <option name=\"INSTANCE_FILTERS_ENABLED\" value=\"false\" />\n+        <option name=\"CONDITION\" value=\"\" />\n+        <option name=\"LOG_MESSAGE\" value=\"\" />\n+      </breakpoint>\n+    </breakpoint_any>\n+    <breakpoint_rules />\n+    <ui_properties />\n+  </component>\n+  <component name=\"FavoritesManager\">\n+    <favorites_list name=\"CarouselFragment\" />\n+  </component>\n+  <component name=\"FileEditorManager\">\n+    <leaf />\n+  </component>\n+  <component name=\"FindManager\">\n+    <FindUsagesManager>\n+      <setting name=\"OPEN_NEW_TAB\" value=\"false\" />\n+    </FindUsagesManager>\n+  </component>\n+  <component name=\"IdeDocumentHistory\">\n+    <option name=\"changedFiles\">\n+      <list>\n+        <option value=\"$PROJECT_DIR$/src/novoda/demo/GalleryAdapter.java\" />\n+        <option value=\"$PROJECT_DIR$/res/layout/row_fragment.xml\" />\n+        <option value=\"$PROJECT_DIR$/res/layout/carousel_gallery.xml\" />\n+        <option value=\"$PROJECT_DIR$/src/novoda/adam/GalleryAdapter.java\" />\n+        <option value=\"$PROJECT_DIR$/src/novoda/adam/Carousel.java\" />\n+        <option value=\"$PROJECT_DIR$/res/drawable/leftnav_bar_option_icon_light.xml\" />\n+        <option value=\"$PROJECT_DIR$/res/drawable-hdpi/image_background.xml\" />\n+        <option value=\"$PROJECT_DIR$/src/novoda/demo/Carousel.java\" />\n+        <option value=\"$PROJECT_DIR$/src/novoda/demo/GoogleTvLeftNavBar.java\" />\n+        <option value=\"$PROJECT_DIR$/src/novoda/demo/LeftNavBar.java\" />\n+        <option value=\"$PROJECT_DIR$/res/layout/act_carousel.xml\" />\n+        <option value=\"$PROJECT_DIR$/src/novoda/demo/LeftNavBarExample.java\" />\n+        <option value=\"$PROJECT_DIR$/src/novoda/demo/LeftNavBarWrapper.java\" />\n+        <option value=\"$PROJECT_DIR$/src/novoda/demo/GridViewAdapter.java\" />\n+        <option value=\"$PROJECT_DIR$/res/layout/grid_item.xml\" />\n+        <option value=\"$PROJECT_DIR$/res/values/strings.xml\" />\n+      </list>\n+    </option>\n+  </component>\n+  <component name=\"ProjectFrameBounds\">\n+    <option name=\"x\" value=\"-1\" />\n+    <option name=\"width\" value=\"1922\" />\n+    <option name=\"height\" value=\"1027\" />\n+  </component>\n+  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"false\">\n+    <OptionsSetting value=\"true\" id=\"Add\" />\n+    <OptionsSetting value=\"true\" id=\"Remove\" />\n+    <OptionsSetting value=\"true\" id=\"Checkout\" />\n+    <OptionsSetting value=\"true\" id=\"Update\" />\n+    <OptionsSetting value=\"true\" id=\"Status\" />\n+    <OptionsSetting value=\"true\" id=\"Edit\" />\n+    <ConfirmationsSetting value=\"0\" id=\"Add\" />\n+    <ConfirmationsSetting value=\"0\" id=\"Remove\" />\n+  </component>\n+  <component name=\"ProjectReloadState\">\n+    <option name=\"STATE\" value=\"0\" />\n+  </component>\n+  <component name=\"ProjectView\">\n+    <navigator currentView=\"ProjectPane\" proportions=\"\" version=\"1\" splitterProportion=\"0.5\">\n+      <flattenPackages />\n+      <showMembers />\n+      <showModules />\n+      <showLibraryContents />\n+      <hideEmptyPackages />\n+      <abbreviatePackageNames />\n+      <autoscrollToSource />\n+      <autoscrollFromSource />\n+      <sortByType />\n+    </navigator>\n+    <panes>\n+      <pane id=\"Scope\">\n+        <subPane subId=\"Project Files\">\n+          <PATH>\n+            <PATH_ELEMENT USER_OBJECT=\"Root\">\n+              <option name=\"myItemId\" value=\"\" />\n+              <option name=\"myItemType\" value=\"\" />\n+            </PATH_ELEMENT>\n+          </PATH>\n+        </subPane>\n+      </pane>\n+      <pane id=\"ProjectPane\">\n+        <subPane>\n+          <PATH>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"CarouselFragment\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n+            </PATH_ELEMENT>\n+          </PATH>\n+        </subPane>\n+      </pane>\n+      <pane id=\"PackagesPane\">\n+        <subPane>\n+          <PATH>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"CarouselFragment\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PackageViewProjectNode\" />\n+            </PATH_ELEMENT>\n+          </PATH>\n+        </subPane>\n+      </pane>\n+    </panes>\n+  </component>\n+  <component name=\"PropertiesComponent\">\n+    <property name=\"project.structure.last.edited\" value=\"Modules\" />\n+    <property name=\"GoToFile.includeJavaFiles\" value=\"false\" />\n+    <property name=\"OverrideImplement.combined\" value=\"true\" />\n+    <property name=\"project.structure.proportion\" value=\"0.15\" />\n+    <property name=\"options.splitter.main.proportions\" value=\"0.3\" />\n+    <property name=\"recentsLimit\" value=\"5\" />\n+    <property name=\"MemberChooser.sorted\" value=\"false\" />\n+    <property name=\"options.lastSelected\" value=\"preferences.externalResources\" />\n+    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n+    <property name=\"ANDROID_EXTENDED_DEVICE_CHOOSER_SERIALS\" value=\"028040c0435f6417\" />\n+    <property name=\"MemberChooser.copyJavadoc\" value=\"false\" />\n+    <property name=\"GoToClass.toSaveIncludeLibraries\" value=\"false\" />\n+    <property name=\"ANDROID_EXTENDED_DEVICE_CHOOSER_AVD\" value=\"modern\" />\n+    <property name=\"MemberChooser.showClasses\" value=\"true\" />\n+    <property name=\"GoToClass.includeLibraries\" value=\"false\" />\n+    <property name=\"options.searchVisible\" value=\"true\" />\n+    <property name=\"options.splitter.details.proportions\" value=\"0.2\" />\n+  </component>\n+  <component name=\"RecentsManager\">\n+    <key name=\"CopyClassDialog.RECENTS_KEY\">\n+      <recent name=\"novoda.demo\" />\n+    </key>\n+    <key name=\"CopyFile.RECENT_KEYS\">\n+      <recent name=\"$PROJECT_DIR$/res/drawable-hdpi\" />\n+      <recent name=\"$PROJECT_DIR$/res/drawable\" />\n+      <recent name=\"$PROJECT_DIR$/res\" />\n+      <recent name=\"$PROJECT_DIR$/libs\" />\n+      <recent name=\"$PROJECT_DIR$\" />\n+    </key>\n+    <key name=\"MoveFile.RECENT_KEYS\">\n+      <recent name=\"$PROJECT_DIR$/res/drawable\" />\n+    </key>\n+  </component>\n+  <component name=\"RunManager\" selected=\"Android Application.LeftNavBarExample\">\n+    <configuration default=\"true\" type=\"#org.jetbrains.idea.devkit.run.PluginConfigurationType\" factoryName=\"Plugin\">\n+      <module name=\"\" />\n+      <option name=\"VM_PARAMETERS\" value=\"-Xmx512m -Xms256m -XX:MaxPermSize=250m\" />\n+      <option name=\"PROGRAM_PARAMETERS\" />\n+      <method>\n+        <option name=\"AntTarget\" enabled=\"false\" />\n+        <option name=\"BuildArtifacts\" enabled=\"false\" />\n+        <option name=\"Make\" enabled=\"true\" />\n+        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n+      </method>\n+    </configuration>\n+    <configuration default=\"true\" type=\"AndroidTestRunConfigurationType\" factoryName=\"Android Tests\">\n+      <module name=\"\" />\n+      <option name=\"TESTING_TYPE\" value=\"0\" />\n+      <option name=\"INSTRUMENTATION_RUNNER_CLASS\" value=\"\" />\n+      <option name=\"METHOD_NAME\" value=\"\" />\n+      <option name=\"CLASS_NAME\" value=\"\" />\n+      <option name=\"PACKAGE_NAME\" value=\"\" />\n+      <option name=\"TARGET_SELECTION_MODE\" value=\"EMULATOR\" />\n+      <option name=\"PREFERRED_AVD\" value=\"\" />\n+      <option name=\"COMMAND_LINE\" value=\"\" />\n+      <option name=\"WIPE_USER_DATA\" value=\"false\" />\n+      <option name=\"DISABLE_BOOT_ANIMATION\" value=\"false\" />\n+      <option name=\"NETWORK_SPEED\" value=\"full\" />\n+      <option name=\"NETWORK_LATENCY\" value=\"none\" />\n+      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\n+      <method>\n+        <option name=\"AntTarget\" enabled=\"false\" />\n+        <option name=\"BuildArtifacts\" enabled=\"false\" />\n+        <option name=\"Make\" enabled=\"true\" />\n+        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n+      </method>\n+    </configuration>\n+    <configuration default=\"true\" type=\"Remote\" factoryName=\"Remote\">\n+      <option name=\"USE_SOCKET_TRANSPORT\" value=\"true\" />\n+      <option name=\"SERVER_MODE\" value=\"false\" />\n+      <option name=\"SHMEM_ADDRESS\" value=\"javadebug\" />\n+      <option name=\"HOST\" value=\"localhost\" />\n+      <option name=\"PORT\" value=\"5005\" />\n+      <method>\n+        <option name=\"AntTarget\" enabled=\"false\" />\n+        <option name=\"BuildArtifacts\" enabled=\"false\" />\n+        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n+      </method>\n+    </configuration>\n+    <configuration default=\"true\" type=\"TestNG\" factoryName=\"TestNG\">\n+      <module name=\"\" />\n+      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n+      <option name=\"ALTERNATIVE_JRE_PATH\" />\n+      <option name=\"SUITE_NAME\" />\n+      <option name=\"PACKAGE_NAME\" />\n+      <option name=\"MAIN_CLASS_NAME\" />\n+      <option name=\"METHOD_NAME\" />\n+      <option name=\"GROUP_NAME\" />\n+      <option name=\"TEST_OBJECT\" value=\"CLASS\" />\n+      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\n+      <option name=\"PARAMETERS\" />\n+      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n+      <option name=\"OUTPUT_DIRECTORY\" />\n+      <option name=\"ANNOTATION_TYPE\" />\n+      <option name=\"ENV_VARIABLES\" />\n+      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n+      <option name=\"TEST_SEARCH_SCOPE\">\n+        <value defaultName=\"moduleWithDependencies\" />\n+      </option>\n+      <option name=\"USE_DEFAULT_REPORTERS\" value=\"false\" />\n+      <option name=\"PROPERTIES_FILE\" />\n+      <envs />\n+      <properties />\n+      <listeners />\n+      <method>\n+        <option name=\"AntTarget\" enabled=\"false\" />\n+        <option name=\"BuildArtifacts\" enabled=\"false\" />\n+        <option name=\"Make\" enabled=\"true\" />\n+        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n+      </method>\n+    </configuration>\n+    <configuration default=\"true\" type=\"Applet\" factoryName=\"Applet\">\n+      <module name=\"\" />\n+      <option name=\"MAIN_CLASS_NAME\" />\n+      <option name=\"HTML_FILE_NAME\" />\n+      <option name=\"HTML_USED\" value=\"false\" />\n+      <option name=\"WIDTH\" value=\"400\" />\n+      <option name=\"HEIGHT\" value=\"300\" />\n+      <option name=\"POLICY_FILE\" value=\"$APPLICATION_HOME_DIR$/bin/appletviewer.policy\" />\n+      <option name=\"VM_PARAMETERS\" />\n+      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n+      <option name=\"ALTERNATIVE_JRE_PATH\" />\n+      <method>\n+        <option name=\"AntTarget\" enabled=\"false\" />\n+        <option name=\"BuildArtifacts\" enabled=\"false\" />\n+        <option name=\"Make\" enabled=\"true\" />\n+        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n+      </method>\n+    </configuration>\n+    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\n+      <option name=\"MAIN_CLASS_NAME\" />\n+      <option name=\"VM_PARAMETERS\" />\n+      <option name=\"PROGRAM_PARAMETERS\" />\n+      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n+      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n+      <option name=\"ALTERNATIVE_JRE_PATH\" />\n+      <option name=\"ENABLE_SWING_INSPECTOR\" value=\"false\" />\n+      <option name=\"ENV_VARIABLES\" />\n+      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n+      <module name=\"\" />\n+      <envs />\n+      <method>\n+        <option name=\"AntTarget\" enabled=\"false\" />\n+        <option name=\"BuildArtifacts\" enabled=\"false\" />\n+        <option name=\"Make\" enabled=\"true\" />\n+        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n+      </method>\n+    </configuration>\n+    <configuration default=\"true\" type=\"JUnit\" factoryName=\"JUnit\">\n+      <module name=\"\" />\n+      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n+      <option name=\"ALTERNATIVE_JRE_PATH\" />\n+      <option name=\"PACKAGE_NAME\" />\n+      <option name=\"MAIN_CLASS_NAME\" />\n+      <option name=\"METHOD_NAME\" />\n+      <option name=\"TEST_OBJECT\" value=\"class\" />\n+      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\n+      <option name=\"PARAMETERS\" />\n+      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n+      <option name=\"ENV_VARIABLES\" />\n+      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n+      <option name=\"TEST_SEARCH_SCOPE\">\n+        <value defaultName=\"moduleWithDependencies\" />\n+      </option>\n+      <envs />\n+      <patterns />\n+      <method>\n+        <option name=\"AntTarget\" enabled=\"false\" />\n+        <option name=\"BuildArtifacts\" enabled=\"false\" />\n+        <option name=\"Make\" enabled=\"true\" />\n+        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n+      </method>\n+    </configuration>\n+    <configuration default=\"true\" type=\"AndroidRunConfigurationType\" factoryName=\"Android Application\">\n+      <module name=\"\" />\n+      <option name=\"ACTIVITY_CLASS\" value=\"\" />\n+      <option name=\"MODE\" value=\"default_activity\" />\n+      <option name=\"DEPLOY\" value=\"true\" />\n+      <option name=\"TARGET_SELECTION_MODE\" value=\"EMULATOR\" />\n+      <option name=\"PREFERRED_AVD\" value=\"\" />\n+      <option name=\"COMMAND_LINE\" value=\"\" />\n+      <option name=\"WIPE_USER_DATA\" value=\"false\" />\n+      <option name=\"DISABLE_BOOT_ANIMATION\" value=\"false\" />\n+      <option name=\"NETWORK_SPEED\" value=\"full\" />\n+      <option name=\"NETWORK_LATENCY\" value=\"none\" />\n+      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\n+      <method>\n+        <option name=\"AntTarget\" enabled=\"false\" />\n+        <option name=\"BuildArtifacts\" enabled=\"false\" />\n+        <option name=\"Make\" enabled=\"true\" />\n+        <option name=\"Maven.BeforeRunTask\" enabled=\"false\" />\n+      </method>\n+    </configuration>\n+    <configuration default=\"false\" name=\"LeftNavBarExample\" type=\"AndroidRunConfigurationType\" factoryName=\"Android Application\">\n+      <module name=\"LeftNavBarExample\" />\n+      <option name=\"ACTIVITY_CLASS\" value=\"com.example.MyActivity\" />\n+      <option name=\"MODE\" value=\"default_activity\" />\n+      <option name=\"DEPLOY\" value=\"true\" />\n+      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\n+      <option name=\"PREFERRED_AVD\" value=\"\" />\n+      <option name=\"COMMAND_LINE\" value=\"\" />\n+      <option name=\"WIPE_USER_DATA\" value=\"false\" />\n+      <option name=\"DISABLE_BOOT_ANIMATION\" value=\"false\" />\n+      <option name=\"NETWORK_SPEED\" value=\"full\" />\n+      <option name=\"NETWORK_LATENCY\" value=\"none\" />\n+      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\n+      <RunnerSettings RunnerId=\"AndroidDebugRunner\" />\n+      <RunnerSettings RunnerId=\"Run\" />\n+      <ConfigurationWrapper RunnerId=\"AndroidDebugRunner\" />\n+      <ConfigurationWrapper RunnerId=\"Run\" />\n+      <method />\n+    </configuration>\n+    <list size=\"1\">\n+      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Android Application.LeftNavBarExample\" />\n+    </list>\n+    <configuration name=\"&lt;template&gt;\" type=\"WebApp\" default=\"true\" selected=\"false\">\n+      <Host>localhost</Host>\n+      <Port>5050</Port>\n+    </configuration>\n+  </component>\n+  <component name=\"ShelveChangesManager\" show_recycled=\"false\" />\n+  <component name=\"SvnConfiguration\" maxAnnotateRevisions=\"500\" myUseAcceleration=\"nothing\" myAutoUpdateAfterCommit=\"false\" cleanupOnStartRun=\"false\">\n+    <option name=\"USER\" value=\"\" />\n+    <option name=\"PASSWORD\" value=\"\" />\n+    <option name=\"mySSHConnectionTimeout\" value=\"30000\" />\n+    <option name=\"mySSHReadTimeout\" value=\"30000\" />\n+    <option name=\"LAST_MERGED_REVISION\" />\n+    <option name=\"MERGE_DRY_RUN\" value=\"false\" />\n+    <option name=\"MERGE_DIFF_USE_ANCESTRY\" value=\"true\" />\n+    <option name=\"UPDATE_LOCK_ON_DEMAND\" value=\"false\" />\n+    <option name=\"IGNORE_SPACES_IN_MERGE\" value=\"false\" />\n+    <option name=\"DETECT_NESTED_COPIES\" value=\"true\" />\n+    <option name=\"CHECK_NESTED_FOR_QUICK_MERGE\" value=\"false\" />\n+    <option name=\"IGNORE_SPACES_IN_ANNOTATE\" value=\"true\" />\n+    <option name=\"SHOW_MERGE_SOURCES_IN_ANNOTATE\" value=\"true\" />\n+    <option name=\"FORCE_UPDATE\" value=\"false\" />\n+    <configuration useDefault=\"false\">$USER_HOME$/.subversion_IDEA</configuration>\n+    <myIsUseDefaultProxy>false</myIsUseDefaultProxy>\n+  </component>\n+  <component name=\"TaskManager\">\n+    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n+      <changelist id=\"39891762-92bf-4772-a8ef-a9b4b09be0c6\" name=\"Default\" comment=\"\" />\n+      <created>1341583207084</created>\n+      <updated>1341583207084</updated>\n+    </task>\n+    <servers />\n+  </component>\n+  <component name=\"ToolWindowManager\">\n+    <frame x=\"-1\" y=\"0\" width=\"1922\" height=\"1027\" extended-state=\"6\" />\n+    <editor active=\"false\" />\n+    <layout>\n+      <window_info id=\"Changes\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"7\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"JetGradle\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Preview\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32977587\" sideWeight=\"0.670068\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Palette\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Ant Build\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.2497332\" sideWeight=\"0.670068\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Debug\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.39909297\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.49839914\" order=\"12\" side_tool=\"true\" content_ui=\"tabs\" />\n+      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"2\" side_tool=\"true\" content_ui=\"tabs\" />\n+      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"8\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Messages\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.5\" order=\"9\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Android\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.49786553\" order=\"11\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"true\" content_ui=\"tabs\" />\n+      <window_info id=\"Maven Projects\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Commander\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.4\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Project\" active=\"true\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" weight=\"0.2470651\" sideWeight=\"0.670068\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\n+      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.49786553\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Cvs\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.25\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Message\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Android Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.32993197\" sideWeight=\"0.5\" order=\"10\" side_tool=\"false\" content_ui=\"tabs\" />\n+      <window_info id=\"Hierarchy\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.25\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"combo\" />\n+      <window_info id=\"Inspection\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" weight=\"0.39909297\" sideWeight=\"0.5\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n+    </layout>\n+  </component>\n+  <component name=\"VcsContentAnnotationSettings\">\n+    <option name=\"myLimit\" value=\"2678400000\" />\n+  </component>\n+  <component name=\"VcsManagerConfiguration\">\n+    <option name=\"OFFER_MOVE_TO_ANOTHER_CHANGELIST_ON_PARTIAL_COMMIT\" value=\"true\" />\n+    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"true\" />\n+    <option name=\"CHECK_NEW_TODO\" value=\"true\" />\n+    <option name=\"myTodoPanelSettings\">\n+      <value>\n+        <are-packages-shown value=\"false\" />\n+        <are-modules-shown value=\"false\" />\n+        <flatten-packages value=\"false\" />\n+        <is-autoscroll-to-source value=\"false\" />\n+      </value>\n+    </option>\n+    <option name=\"PERFORM_UPDATE_IN_BACKGROUND\" value=\"true\" />\n+    <option name=\"PERFORM_COMMIT_IN_BACKGROUND\" value=\"true\" />\n+    <option name=\"PERFORM_EDIT_IN_BACKGROUND\" value=\"true\" />\n+    <option name=\"PERFORM_CHECKOUT_IN_BACKGROUND\" value=\"true\" />\n+    <option name=\"PERFORM_ADD_REMOVE_IN_BACKGROUND\" value=\"true\" />\n+    <option name=\"PERFORM_ROLLBACK_IN_BACKGROUND\" value=\"false\" />\n+    <option name=\"CHECK_LOCALLY_CHANGED_CONFLICTS_IN_BACKGROUND\" value=\"false\" />\n+    <option name=\"ENABLE_BACKGROUND_PROCESSES\" value=\"false\" />\n+    <option name=\"CHANGED_ON_SERVER_INTERVAL\" value=\"60\" />\n+    <option name=\"SHOW_ONLY_CHANGED_IN_SELECTION_DIFF\" value=\"true\" />\n+    <option name=\"CHECK_COMMIT_MESSAGE_SPELLING\" value=\"true\" />\n+    <option name=\"DEFAULT_PATCH_EXTENSION\" value=\"patch\" />\n+    <option name=\"SHORT_DIFF_HORISONTALLY\" value=\"true\" />\n+    <option name=\"SHORT_DIFF_EXTRA_LINES\" value=\"2\" />\n+    <option name=\"SOFT_WRAPS_IN_SHORT_DIFF\" value=\"true\" />\n+    <option name=\"INCLUDE_TEXT_INTO_PATCH\" value=\"false\" />\n+    <option name=\"INCLUDE_TEXT_INTO_SHELF\" value=\"false\" />\n+    <option name=\"CREATE_PATCH_EXPAND_DETAILS_DEFAULT\" value=\"true\" />\n+    <option name=\"SHOW_FILE_HISTORY_DETAILS\" value=\"true\" />\n+    <option name=\"SHOW_VCS_ERROR_NOTIFICATIONS\" value=\"false\" />\n+    <option name=\"FORCE_NON_EMPTY_COMMENT\" value=\"false\" />\n+    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"false\" />\n+    <option name=\"LAST_COMMIT_MESSAGE\" />\n+    <option name=\"MAKE_NEW_CHANGELIST_ACTIVE\" value=\"false\" />\n+    <option name=\"OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n+    <option name=\"CHECK_FILES_UP_TO_DATE_BEFORE_COMMIT\" value=\"false\" />\n+    <option name=\"REFORMAT_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n+    <option name=\"REFORMAT_BEFORE_FILE_COMMIT\" value=\"false\" />\n+    <option name=\"FILE_HISTORY_DIALOG_COMMENTS_SPLITTER_PROPORTION\" value=\"0.8\" />\n+    <option name=\"FILE_HISTORY_DIALOG_SPLITTER_PROPORTION\" value=\"0.5\" />\n+    <option name=\"ACTIVE_VCS_NAME\" />\n+    <option name=\"UPDATE_GROUP_BY_PACKAGES\" value=\"false\" />\n+    <option name=\"UPDATE_GROUP_BY_CHANGELIST\" value=\"false\" />\n+    <option name=\"SHOW_FILE_HISTORY_AS_TREE\" value=\"false\" />\n+    <option name=\"FILE_HISTORY_SPLITTER_PROPORTION\" value=\"0.6\" />\n+  </component>\n+  <component name=\"XDebuggerManager\">\n+    <breakpoint-manager />\n+  </component>\n+  <component name=\"antWorkspaceConfiguration\">\n+    <option name=\"IS_AUTOSCROLL_TO_SOURCE\" value=\"false\" />\n+    <option name=\"FILTER_TARGETS\" value=\"false\" />\n+  </component>\n+  <component name=\"editorHistoryManager\">\n+    <entry file=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/res/layout/left_nav.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/res/layout/spinner_item.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/res/values/attrs.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"18\" column=\"24\" selection-start=\"793\" selection-end=\"793\" vertical-scroll-proportion=\"0.31542057\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$USER_HOME$/googletv-android-samples/LeftNavBarLibrary/AndroidManifest.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/res/layout/gridview.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/res/layout/main.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"21\" column=\"30\" selection-start=\"806\" selection-end=\"806\" vertical-scroll-proportion=\"0.36799064\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png\">\n+      <provider selected=\"true\" editor-type-id=\"images\">\n+        <state />\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png\">\n+      <provider selected=\"true\" editor-type-id=\"images\">\n+        <state />\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png\">\n+      <provider selected=\"true\" editor-type-id=\"images\">\n+        <state />\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png\">\n+      <provider selected=\"true\" editor-type-id=\"images\">\n+        <state />\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/src/novoda/demo/LeftNavBarExample.java\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"45\" column=\"77\" selection-start=\"1378\" selection-end=\"1378\" vertical-scroll-proportion=\"0.0\">\n+          <folding>\n+            <element signature=\"imports\" expanded=\"true\" />\n+          </folding>\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/AndroidManifest.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"0\" column=\"0\" selection-start=\"0\" selection-end=\"0\" vertical-scroll-proportion=\"0.0\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/res/values/strings.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"5\" column=\"33\" selection-start=\"205\" selection-end=\"205\" vertical-scroll-proportion=\"0.13274336\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/res/layout/grid_item.xml\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"27\" column=\"43\" selection-start=\"1211\" selection-end=\"1211\" vertical-scroll-proportion=\"0.71681416\">\n+          <folding />\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/src/novoda/demo/GridViewAdapter.java\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"8\" column=\"45\" selection-start=\"226\" selection-end=\"226\" vertical-scroll-proportion=\"0.21238938\">\n+          <folding>\n+            <element signature=\"imports\" expanded=\"true\" />\n+          </folding>\n+        </state>\n+      </provider>\n+    </entry>\n+    <entry file=\"file://$PROJECT_DIR$/src/novoda/demo/LeftNavBarWrapper.java\">\n+      <provider selected=\"true\" editor-type-id=\"text-editor\">\n+        <state line=\"129\" column=\"26\" selection-start=\"4134\" selection-end=\"4134\" vertical-scroll-proportion=\"1.7433628\">\n+          <folding>\n+            <element signature=\"imports\" expanded=\"true\" />\n+          </folding>\n+        </state>\n+      </provider>\n+    </entry>\n+  </component>\n+  <component name=\"masterDetails\">\n+    <states>\n+      <state key=\"ArtifactsStructureConfigurable.UI\">\n+        <settings>\n+          <artifact-editor />\n+          <last-edited>LeftNavBarLibrary:jar</last-edited>\n+          <splitter-proportions>\n+            <option name=\"proportions\">\n+              <list>\n+                <option value=\"0.2\" />\n+                <option value=\"0.5\" />\n+              </list>\n+            </option>\n+          </splitter-proportions>\n+        </settings>\n+      </state>\n+      <state key=\"FacetStructureConfigurable.UI\">\n+        <settings>\n+          <last-edited>Android (CarouselFragment)|Android</last-edited>\n+          <splitter-proportions>\n+            <option name=\"proportions\">\n+              <list>\n+                <option value=\"0.2\" />\n+              </list>\n+            </option>\n+          </splitter-proportions>\n+        </settings>\n+      </state>\n+      <state key=\"GlobalLibrariesConfigurable.UI\">\n+        <settings>\n+          <splitter-proportions>\n+            <option name=\"proportions\">\n+              <list>\n+                <option value=\"0.2\" />\n+              </list>\n+            </option>\n+          </splitter-proportions>\n+        </settings>\n+      </state>\n+      <state key=\"JdkListConfigurable.UI\">\n+        <settings>\n+          <last-edited>Android 3.2 Platform</last-edited>\n+          <splitter-proportions>\n+            <option name=\"proportions\">\n+              <list>\n+                <option value=\"0.2\" />\n+              </list>\n+            </option>\n+          </splitter-proportions>\n+        </settings>\n+      </state>\n+      <state key=\"ModuleStructureConfigurable.UI\">\n+        <settings>\n+          <last-edited>CarouselFragment</last-edited>\n+          <splitter-proportions>\n+            <option name=\"proportions\">\n+              <list>\n+                <option value=\"0.2\" />\n+              </list>\n+            </option>\n+          </splitter-proportions>\n+        </settings>\n+      </state>\n+      <state key=\"ProjectJDKs.UI\">\n+        <settings>\n+          <last-edited>1.6</last-edited>\n+          <splitter-proportions>\n+            <option name=\"proportions\">\n+              <list>\n+                <option value=\"0.20000002\" />\n+              </list>\n+            </option>\n+          </splitter-proportions>\n+        </settings>\n+      </state>\n+      <state key=\"ProjectLibrariesConfigurable.UI\">\n+        <settings>\n+          <splitter-proportions>\n+            <option name=\"proportions\">\n+              <list>\n+                <option value=\"0.2\" />\n+              </list>\n+            </option>\n+          </splitter-proportions>\n+        </settings>\n+      </state>\n+    </states>\n+  </component>\n+</project>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/AndroidManifest.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"novoda.demo\"\n+    android:versionCode=\"1\"\n+    android:versionName=\"1.0\" >\n+\n+    <uses-sdk android:minSdkVersion=\"11\" />\n+\n+    <application android:label=\"@string/app_name\" android:icon=\"@drawable/ic_launcher\"\n+                 android:theme=\"@android:style/Theme.NoTitleBar\">\n+\n+\n+    <activity android:name=\".LeftNavBarExample\" android:label=\"@string/app_name\"\n+              android:launchMode=\"singleTask\" android:theme=\"@android:style/Theme.Holo.NoActionBar\"\n+              android:taskAffinity=\"\">\n+\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/LeftNavBarExample.iml",
            "additions": 44,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"FacetManager\">\n+    <facet type=\"android\" name=\"Android\">\n+      <configuration>\n+        <option name=\"GEN_FOLDER_RELATIVE_PATH_APT\" value=\"/gen\" />\n+        <option name=\"GEN_FOLDER_RELATIVE_PATH_AIDL\" value=\"/gen\" />\n+        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/AndroidManifest.xml\" />\n+        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/res\" />\n+        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/assets\" />\n+        <option name=\"LIBS_FOLDER_RELATIVE_PATH\" value=\"/libs\" />\n+        <option name=\"REGENERATE_R_JAVA\" value=\"true\" />\n+        <option name=\"REGENERATE_JAVA_BY_AIDL\" value=\"true\" />\n+        <option name=\"USE_CUSTOM_APK_RESOURCE_FOLDER\" value=\"false\" />\n+        <option name=\"CUSTOM_APK_RESOURCE_FOLDER\" value=\"\" />\n+        <option name=\"USE_CUSTOM_COMPILER_MANIFEST\" value=\"false\" />\n+        <option name=\"CUSTOM_COMPILER_MANIFEST\" value=\"\" />\n+        <option name=\"APK_PATH\" value=\"\" />\n+        <option name=\"LIBRARY_PROJECT\" value=\"false\" />\n+        <option name=\"RUN_PROCESS_RESOURCES_MAVEN_TASK\" value=\"true\" />\n+        <option name=\"GENERATE_UNSIGNED_APK\" value=\"false\" />\n+        <option name=\"CUSTOM_DEBUG_KEYSTORE_PATH\" value=\"\" />\n+        <option name=\"PACK_TEST_CODE\" value=\"false\" />\n+        <option name=\"RUN_PROGUARD\" value=\"false\" />\n+        <option name=\"PROGUARD_CFG_PATH\" value=\"/proguard-project.txt\" />\n+        <resOverlayFolders>\n+          <path>/res-overlay</path>\n+        </resOverlayFolders>\n+        <includeSystemProguardFile>true</includeSystemProguardFile>\n+      </configuration>\n+    </facet>\n+  </component>\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output />\n+    <content url=\"file://$MODULE_DIR$\">\n+      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n+      <sourceFolder url=\"file://$MODULE_DIR$/gen\" isTestSource=\"false\" />\n+    </content>\n+    <orderEntry type=\"jdk\" jdkName=\"Android 3.2 Platform\" jdkType=\"Android SDK\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+    <orderEntry type=\"module\" module-name=\"LeftNavBarLibrary\" />\n+  </component>\n+</module>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/ant.properties",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+# This file is used to override default values used by the Ant build system.\n+#\n+# This file must be checked into Version Control Systems, as it is\n+# integral to the build system of your project.\n+\n+# This file is only used by the Ant script.\n+\n+# You can use this to override default values such as\n+#  'source.dir' for the location of your java source folder and\n+#  'out.dir' for the location of your output folder.\n+\n+# You can also use it define how the release builds are signed by declaring\n+# the following properties:\n+#  'key.store' for the location of your keystore and\n+#  'key.alias' for the name of the key to use.\n+# The password will be asked during the build when you use the 'release' target.\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/build.xml",
            "additions": 92,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project name=\"CarouselFragment\" default=\"help\">\n+\n+    <!-- The local.properties file is created and updated by the 'android' tool.\n+         It contains the path to the SDK. It should *NOT* be checked into\n+         Version Control Systems. -->\n+    <property file=\"local.properties\" />\n+\n+    <!-- The ant.properties file can be created by you. It is only edited by the\n+         'android' tool to add properties to it.\n+         This is the place to change some Ant specific build properties.\n+         Here are some properties you may want to change/update:\n+\n+         source.dir\n+             The name of the source directory. Default is 'src'.\n+         out.dir\n+             The name of the output directory. Default is 'bin'.\n+\n+         For other overridable properties, look at the beginning of the rules\n+         files in the SDK, at tools/ant/build.xml\n+\n+         Properties related to the SDK location or the project target should\n+         be updated using the 'android' tool with the 'update' action.\n+\n+         This file is an integral part of the build system for your\n+         application and should be checked into Version Control Systems.\n+\n+         -->\n+    <property file=\"ant.properties\" />\n+\n+    <!-- if sdk.dir was not set from one of the property file, then\n+         get it from the ANDROID_HOME env var.\n+         This must be done before we load project.properties since\n+         the proguard config can use sdk.dir -->\n+    <property environment=\"env\" />\n+    <condition property=\"sdk.dir\" value=\"${env.ANDROID_HOME}\">\n+        <isset property=\"env.ANDROID_HOME\" />\n+    </condition>\n+\n+    <!-- The project.properties file is created and updated by the 'android'\n+         tool, as well as ADT.\n+\n+         This contains project specific properties such as project target, and library\n+         dependencies. Lower level build properties are stored in ant.properties\n+         (or in .classpath for Eclipse projects).\n+\n+         This file is an integral part of the build system for your\n+         application and should be checked into Version Control Systems. -->\n+    <loadproperties srcFile=\"project.properties\" />\n+\n+    <!-- quick check on sdk.dir -->\n+    <fail\n+            message=\"sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable.\"\n+            unless=\"sdk.dir\"\n+    />\n+\n+    <!--\n+        Import per project custom build rules if present at the root of the project.\n+        This is the place to put custom intermediary targets such as:\n+            -pre-build\n+            -pre-compile\n+            -post-compile (This is typically used for code obfuscation.\n+                           Compiled code location: ${out.classes.absolute.dir}\n+                           If this is not done in place, override ${out.dex.input.absolute.dir})\n+            -post-package\n+            -post-build\n+            -pre-clean\n+    -->\n+    <import file=\"custom_rules.xml\" optional=\"true\" />\n+\n+    <!-- Import the actual build file.\n+\n+         To customize existing targets, there are two options:\n+         - Customize only one target:\n+             - copy/paste the target into this file, *before* the\n+               <import> task.\n+             - customize it to your needs.\n+         - Customize the whole content of build.xml\n+             - copy/paste the content of the rules files (minus the top node)\n+               into this file, replacing the <import> task.\n+             - customize to your needs.\n+\n+         ***********************\n+         ****** IMPORTANT ******\n+         ***********************\n+         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n+         in order to avoid having your file be overridden by tools such as \"android update project\"\n+    -->\n+    <!-- version-tag: 1 -->\n+    <import file=\"${sdk.dir}/tools/ant/build.xml\" />\n+\n+</project>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/local.properties",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must *NOT* be checked into Version Control Systems,\n+# as it contains information specific to your local configuration.\n+\n+# location of the SDK. This is only used by Ant\n+# For customization when using a Version Control System, please read the\n+# header note.\n+sdk.dir=/home/adam/android-sdks\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk.res",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk.res differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk.unaligned",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/CarouselFragment.apk.unaligned differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/CarouselFragment/classes.dex differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk.res",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk.res differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk.unaligned",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/LeftNavBar.apk.unaligned differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBar/classes.dex differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk.res",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk.res differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk.unaligned",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/LeftNavBarExample.apk.unaligned differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/production/LeftNavBarExample/classes.dex differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-hdpi/novoda_bot.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/app_icon.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/app_logo.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/placeholder.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_a_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_b_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_c_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/CarouselFragment/drawable/tab_d_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-hdpi/novoda_bot.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/app_icon.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/app_logo.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/placeholder.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_a_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_b_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_c_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBar/drawable/tab_d_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-hdpi/novoda_bot.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/app_icon.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/app_logo.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/placeholder.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_a_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_b_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_c_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarExample/drawable/tab_d_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/out/res-cache/LeftNavBarLibrary/drawable-xhdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/proguard-project.txt",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+# To enable ProGuard in your project, edit project.properties\n+# to define the proguard.config property as described in that file.\n+#\n+# Add project specific ProGuard rules here.\n+# By default, the flags in this file are appended to flags specified\n+# in ${sdk.dir}/tools/proguard/proguard-android.txt\n+# You can edit the include path and order by changing the ProGuard\n+# include property in project.properties.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# Add any project specific keep options here:\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/project.properties",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must be checked in Version Control Systems.\n+#\n+# To customize properties used by the Ant build system edit\n+# \"ant.properties\", and override values to adapt the script to your\n+# project structure.\n+#\n+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):\n+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n+\n+# Project target.\n+target=android-13\n+android.library.reference.1=../../googletv-android-samples/LeftNavBarLibrary\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-hdpi/novoda_bot.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/app_icon.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/app_logo.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/placeholder.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_a.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ * Copyright (C) 2011 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_selected=\"true\"\n+          android:drawable=\"@drawable/tab_a_selected\" />\n+    <item android:state_focused=\"true\"\n+          android:drawable=\"@drawable/tab_a_focused\" />\n+    <item android:drawable=\"@drawable/tab_a_normal\" />\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_a_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_a_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_a_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_b.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ * Copyright (C) 2011 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_selected=\"true\"\n+          android:drawable=\"@drawable/tab_b_selected\" />\n+    <item android:state_focused=\"true\"\n+          android:drawable=\"@drawable/tab_b_focused\" />\n+    <item android:drawable=\"@drawable/tab_b_normal\" />\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_b_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_b_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_b_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_c.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ * Copyright (C) 2011 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_selected=\"true\"\n+          android:drawable=\"@drawable/tab_c_selected\" />\n+    <item android:state_focused=\"true\"\n+          android:drawable=\"@drawable/tab_c_focused\" />\n+    <item android:drawable=\"@drawable/tab_c_normal\" />\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_c_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_c_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_c_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_d.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ * Copyright (C) 2011 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_selected=\"true\"\n+          android:drawable=\"@drawable/tab_d_selected\" />\n+    <item android:state_focused=\"true\"\n+          android:drawable=\"@drawable/tab_d_focused\" />\n+    <item android:drawable=\"@drawable/tab_d_normal\" />\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_d_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_d_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarExample/res/drawable/tab_d_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/layout/grid_item.xml",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+                android:id=\"@+id/item1\"\n+                android:layout_width=\"340dp\"\n+                android:layout_height=\"match_parent\"\n+                android:orientation=\"vertical\" >\n+\n+        <ImageView\n+                android:id=\"@+id/image1\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"240dp\"\n+                android:layout_margin=\"2dip\"\n+                android:scaleType=\"centerCrop\"\n+                android:src=\"@drawable/placeholder\"/>\n+\n+        <TextView\n+                android:id=\"@+id/testText1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_alignLeft=\"@+id/image1\"\n+                android:layout_alignTop=\"@+id/image1\"\n+                android:layout_alignRight=\"@+id/image1\"\n+                android:layout_alignBottom=\"@+id/image1\"\n+                android:layout_margin=\"1dp\"\n+                android:gravity=\"left\"\n+                android:text=\"@string/item_text\"\n+                android:textSize=\"25sp\"\n+                android:textColor=\"#000000\"/>\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/layout/gridview.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<GridView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+          android:id=\"@+id/gridview\"\n+          android:layout_width=\"fill_parent\"\n+          android:layout_height=\"fill_parent\"\n+          android:columnWidth=\"340dp\"\n+          android:numColumns=\"4\"\n+          android:verticalSpacing=\"10dp\"\n+          android:horizontalSpacing=\"10dp\"\n+          android:stretchMode=\"columnWidth\"\n+          android:gravity=\"center\"\n+        />\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/layout/main.xml",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+             android:id=\"@+id/content\"\n+             android:layout_width=\"fill_parent\"\n+             android:layout_height=\"fill_parent\"\n+             android:gravity=\"center_horizontal\">\n+\n+    <LinearLayout android:id=\"@+id/row_container\"\n+                  android:layout_height=\"match_parent\"\n+                  android:layout_width=\"match_parent\"\n+                  android:orientation=\"vertical\">\n+\n+            <fragment\n+                    android:id=\"@+id/row_one\"\n+                    android:layout_height=\"match_parent\"\n+                    android:layout_width=\"match_parent\"\n+                    android:name=\"novoda.demo.LeftNavBarExample$GridFragment\"/>\n+\n+    </LinearLayout>\n+\n+</FrameLayout>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/res/values/strings.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\n+    <string name=\"hello\">Hello World, CarouselActivity!</string>\n+    <string name=\"app_name\">LeftNavBarExample</string>\n+    <string name=\"item_text\">Item</string>\n+    <string name=\"taba\">Tab A</string>\n+    <string name=\"tabb\">Tab B</string>\n+    <string name=\"tabc\">Tab C</string>\n+    <string name=\"tabd\">Tab D</string>\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/novoda/demo/GridViewAdapter.java",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+package novoda.demo;\n+\n+import android.content.Context;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+\n+class GridViewAdapter extends BaseAdapter {\n+\n+    private final Context mContext;\n+\n+    public GridViewAdapter(Context c) {\n+        mContext = c;\n+    }\n+\n+    public int getCount() {\n+        return 16;\n+    }\n+\n+    public Object getItem(int position) {\n+        return new Object();\n+    }\n+\n+    public long getItemId(int position) {\n+        return position;\n+    }\n+\n+    public View getView(int position, View convertView, ViewGroup parent) {\n+        View view;\n+        if (convertView == null) {\n+            final LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(\n+                    Context.LAYOUT_INFLATER_SERVICE);\n+            view = inflater.inflate(R.layout.grid_item, null);\n+        } else {\n+            view = convertView;\n+        }\n+\n+        return view;\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/novoda/demo/LeftNavBarExample.java",
            "additions": 63,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package novoda.demo;\n+\n+import android.app.*;\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.view.*;\n+import android.widget.*;\n+import com.example.google.tv.leftnavbar.LeftNavBar;\n+\n+public class LeftNavBarExample extends Activity {\n+\n+    private static Context mContext;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        mContext = this;\n+        super.onCreate(savedInstanceState);\n+\n+        LeftNavBarWrapper leftNavBarWrapper = new LeftNavBarWrapper(this);\n+        LeftNavBar leftNavBar = leftNavBarWrapper.newInstance();\n+\n+        setContentView(R.layout.main);\n+\n+        leftNavBarWrapper.leftNarBarInit(leftNavBar);\n+    }\n+\n+    public static class GridFragment extends Fragment {\n+\n+\t    @Override\n+\t    public View onCreateView(\n+\t            LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+\t        super.onCreateView(inflater, container, savedInstanceState);\n+\n+            GridView gridView = (GridView) inflater.inflate(R.layout.gridview, null);\n+            gridView.setAdapter(new GridViewAdapter(mContext));\n+            gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n+                public void onItemClick(AdapterView<?> l, View v, int position, long id) {\n+\n+                }\n+            });\n+\n+            gridView.requestFocus();\n+\n+            return gridView;\n+\t    }\n+\t}\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarExample/src/novoda/demo/LeftNavBarWrapper.java",
            "additions": 149,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,149 @@\n+package novoda.demo;\n+\n+import android.app.ActionBar;\n+import android.app.Activity;\n+import android.app.FragmentTransaction;\n+import android.view.Gravity;\n+import android.view.View;\n+import com.example.google.tv.leftnavbar.LeftNavBar;\n+import com.example.google.tv.leftnavbar.LeftNavBarService;\n+\n+public class LeftNavBarWrapper {\n+\n+    private LeftNavBar mLeftNavBar = null;\n+\n+    private Activity mActivity = null;\n+\n+    private static final ActionBar.TabListener BLANK_LISTENER = new ActionBar.TabListener() {\n+\n+        @Override\n+        public void onTabSelected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {\n+        }\n+\n+        @Override\n+        public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {\n+        }\n+\n+        @Override\n+        public void onTabReselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {\n+        }\n+    };\n+\n+    LeftNavBarWrapper(Activity activity) {\n+\n+        this.mActivity = activity;\n+    }\n+\n+    public LeftNavBar newInstance() {\n+\n+        return (LeftNavBarService.instance()).getLeftNavBar(mActivity);\n+    }\n+\n+    public void leftNarBarInit(LeftNavBar bar) {\n+\n+        setupTopActionBar();\n+\n+        bar.setBackgroundDrawable(mActivity.getResources().getDrawable(R.drawable.leftnav_bar_background_dark));\n+\n+        bar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);\n+        bar.setDisplayOptions(LeftNavBar.DISPLAY_SHOW_HOME);\n+        bar.setDisplayOptions(LeftNavBar.DISPLAY_SHOW_TITLE);\n+        bar.setDisplayOptions(LeftNavBar.DISPLAY_AUTO_EXPAND);\n+\n+        bar.setDisplayShowHomeEnabled(true);\n+        bar.setDisplayShowTitleEnabled(true);\n+        bar.setShowHideAnimationEnabled(true);\n+    }\n+\n+    public LeftNavBar getLeftNavBar() {\n+        if (mLeftNavBar == null) {\n+            mLeftNavBar = new LeftNavBar(mActivity);\n+            mLeftNavBar.setOnClickHomeListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View v) {\n+                }\n+            });\n+        }\n+        return mLeftNavBar;\n+    }\n+\n+    private void setupTopActionBar() {\n+        ActionBar bar = getLeftNavBar();\n+        bar.setTitle(R.string.app_name);\n+        setupCustomNavBarView();\n+\n+        setupNavBarTabs();\n+    }\n+\n+    private void setupCustomNavBarView() {\n+        getLeftNavBar().setCustomView(R.layout.custom_view);\n+        ActionBar.LayoutParams params = new ActionBar.LayoutParams(0);\n+        params.width = params.height = nextDimension(0);\n+        params.gravity = nextGravity(nextGravity(0, true), false);\n+        applyCustomParams(params);\n+    }\n+\n+    private void applyCustomParams(ActionBar.LayoutParams params) {\n+        ActionBar bar = getLeftNavBar();\n+        bar.setCustomView(bar.getCustomView(), params);\n+    }\n+\n+    private static int nextDimension(int dimension) {\n+        switch (dimension) {\n+            case 40:\n+                return 100;\n+            case 100:\n+                return ActionBar.LayoutParams.MATCH_PARENT;\n+            case ActionBar.LayoutParams.MATCH_PARENT:\n+            default:\n+                return 40;\n+        }\n+    }\n+\n+    private static int nextGravity(int gravity, boolean horizontal) {\n+        int hGravity = gravity & Gravity.HORIZONTAL_GRAVITY_MASK;\n+        int vGravity = gravity & Gravity.VERTICAL_GRAVITY_MASK;\n+        if (horizontal) {\n+            switch (hGravity) {\n+                case Gravity.LEFT:\n+                    hGravity = Gravity.CENTER_HORIZONTAL;\n+                    break;\n+                case Gravity.CENTER_HORIZONTAL:\n+                    hGravity = Gravity.RIGHT;\n+                    break;\n+                case Gravity.RIGHT:\n+                default:\n+                    hGravity = Gravity.LEFT;\n+                    break;\n+            }\n+        } else {\n+            switch (vGravity) {\n+                case Gravity.TOP:\n+                    vGravity = Gravity.CENTER_VERTICAL;\n+                    break;\n+                case Gravity.CENTER_VERTICAL:\n+                    vGravity = Gravity.BOTTOM;\n+                    break;\n+                case Gravity.BOTTOM:\n+                default:\n+                    vGravity = Gravity.TOP;\n+                    break;\n+            }\n+        }\n+        return hGravity | vGravity;\n+    }\n+\n+    private void setupNavBarTabs() {\n+        ActionBar bar = getLeftNavBar();\n+        bar.removeAllTabs();\n+\n+        bar.addTab(bar.newTab().setText(R.string.taba).setIcon(R.drawable.tab_a)\n+                .setTabListener(BLANK_LISTENER), false);\n+        bar.addTab(bar.newTab().setText(R.string.tabb).setIcon(R.drawable.tab_b)\n+                .setTabListener(BLANK_LISTENER), false);\n+        bar.addTab(bar.newTab().setText(R.string.tabc).setIcon(R.drawable.tab_c)\n+                .setTabListener(BLANK_LISTENER), false);\n+        bar.addTab(bar.newTab().setText(R.string.tabd).setIcon(R.drawable.tab_d)\n+                .setTabListener(BLANK_LISTENER), false);\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/AndroidManifest.xml",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tpackage=\"com.example.google.tv.leftnavbar\">\n+\t\n+\t<uses-sdk android:minSdkVersion=\"11\" android:targetSdkVersion=\"12\" />\n+\t\n+\t<application android:label=\"LeftNavBarLibrary\">\n+\n+\t\t\n+\t</application>\n+\n+</manifest>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/LeftNavBarLibrary.iml",
            "additions": 51,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"EclipseModuleManager\" forced_jdk=\"true\">\n+    <conelement value=\"com.android.ide.eclipse.adt.ANDROID_FRAMEWORK\" />\n+    <src_description expected_position=\"2\">\n+      <src_folder value=\"file://$MODULE_DIR$/src\" expected_position=\"0\" />\n+      <src_folder value=\"file://$MODULE_DIR$/gen\" expected_position=\"2\" />\n+    </src_description>\n+  </component>\n+  <component name=\"FacetManager\">\n+    <facet type=\"android\" name=\"Android\">\n+      <configuration>\n+        <option name=\"GEN_FOLDER_RELATIVE_PATH_APT\" value=\"/gen\" />\n+        <option name=\"GEN_FOLDER_RELATIVE_PATH_AIDL\" value=\"/gen\" />\n+        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/AndroidManifest.xml\" />\n+        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/res\" />\n+        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/assets\" />\n+        <option name=\"LIBS_FOLDER_RELATIVE_PATH\" value=\"/libs\" />\n+        <option name=\"REGENERATE_R_JAVA\" value=\"true\" />\n+        <option name=\"REGENERATE_JAVA_BY_AIDL\" value=\"true\" />\n+        <option name=\"USE_CUSTOM_APK_RESOURCE_FOLDER\" value=\"false\" />\n+        <option name=\"CUSTOM_APK_RESOURCE_FOLDER\" value=\"\" />\n+        <option name=\"USE_CUSTOM_COMPILER_MANIFEST\" value=\"false\" />\n+        <option name=\"CUSTOM_COMPILER_MANIFEST\" value=\"\" />\n+        <option name=\"APK_PATH\" value=\"\" />\n+        <option name=\"LIBRARY_PROJECT\" value=\"true\" />\n+        <option name=\"RUN_PROCESS_RESOURCES_MAVEN_TASK\" value=\"true\" />\n+        <option name=\"GENERATE_UNSIGNED_APK\" value=\"false\" />\n+        <option name=\"CUSTOM_DEBUG_KEYSTORE_PATH\" value=\"\" />\n+        <option name=\"PACK_TEST_CODE\" value=\"false\" />\n+        <option name=\"RUN_PROGUARD\" value=\"false\" />\n+        <option name=\"PROGUARD_CFG_PATH\" value=\"/proguard-project.txt\" />\n+        <resOverlayFolders>\n+          <path>/res-overlay</path>\n+        </resOverlayFolders>\n+        <includeSystemProguardFile>true</includeSystemProguardFile>\n+      </configuration>\n+    </facet>\n+  </component>\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"false\">\n+    <output url=\"file://$MODULE_DIR$/bin\" />\n+    <exclude-output />\n+    <content url=\"file://$MODULE_DIR$\">\n+      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n+      <sourceFolder url=\"file://$MODULE_DIR$/gen\" isTestSource=\"false\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+  </component>\n+</module>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_background_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_background_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-hdpi/leftnav_bar_tab_separator_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable-xhdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/activity_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/activity_icon.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/app_icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/app_icon.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/app_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/app_logo.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/content_img_1.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/content_img_1.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/content_img_2.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/content_img_2.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_a_disabled.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_a_disabled.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_a_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_b_disabled.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_b_disabled.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_b_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_c.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_c.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_d.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_d.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_e.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/menu_icon_e.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_a_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_b_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_c_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_focused.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_focused.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_normal.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_normal.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarDemo/drawable/tab_d_selected.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_background_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-hdpi/leftnav_bar_tab_separator_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/classes/res-cache/LeftNavBarLibrary/drawable-xhdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/color/leftnav_bar_tab_text_dark.xml",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_enabled=\"false\"\n+        android:color=\"#999999\"\n+        />\n+    <item android:state_selected=\"true\"\n+        android:color=\"#6191F2\"\n+        />\n+    <item android:state_focused=\"true\"\n+        android:color=\"#FFFFFF\"\n+        />\n+    <item\n+        android:color=\"#999999\"\n+        />\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/color/leftnav_bar_tab_text_light.xml",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_enabled=\"false\"\n+        android:color=\"#666666\"\n+        />\n+    <item android:state_selected=\"true\"\n+        android:color=\"#6191F2\"\n+        />\n+    <item android:state_focused=\"true\"\n+        android:color=\"#222222\"\n+        />\n+    <item\n+        android:color=\"#666666\"\n+        />\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_background_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_background_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_background_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_background_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_focused_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_pressed_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_pressed_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_selected_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_selected_focused_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_item_background_selected_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_menu_background_bottom_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_menu_background_bottom_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_menu_background_top_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_menu_background_top_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_option_icon_focused_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_option_icon_focused_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_option_icon_normal_dark.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_option_icon_normal_light.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_tab_separator_dark.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_tab_separator_light.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-hdpi/leftnav_bar_tab_separator_light.9.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable-xhdpi/leftnav_bar_home_up.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/LeftNavBarExample/LeftNavBarLibrary/res/drawable-xhdpi/leftnav_bar_home_up.png differ\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable/custom.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_activated=\"true\"\n+        android:drawable=\"@color/custom_activated\"\n+        />\n+    <item\n+        android:drawable=\"@color/custom_normal\"\n+        />\n+</selector>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable/leftnav_bar_item_background_dark.xml",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:enterFadeDuration=\"@android:integer/config_shortAnimTime\"\n+    android:exitFadeDuration=\"@android:integer/config_shortAnimTime\"\n+    >\n+\n+    <item android:state_pressed=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_pressed_dark\"\n+        />\n+\n+    <item android:state_selected=\"true\"\n+        android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_selected_focused_dark\"\n+        />\n+\n+    <item android:state_selected=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_selected_dark\"\n+        />\n+\n+    <item android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_focused_dark\"\n+        />\n+\n+    <item android:drawable=\"@android:color/transparent\" />\n+\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable/leftnav_bar_item_background_light.xml",
            "additions": 41,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,41 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:enterFadeDuration=\"@android:integer/config_shortAnimTime\"\n+    android:exitFadeDuration=\"@android:integer/config_shortAnimTime\"\n+    >\n+\n+    <item android:state_pressed=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_pressed_light\"\n+        />\n+\n+    <item android:state_selected=\"true\"\n+        android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_selected_focused_light\"\n+        />\n+\n+    <item android:state_selected=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_selected_light\"\n+        />\n+\n+    <item android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_item_background_focused_light\"\n+        />\n+\n+    <item android:drawable=\"@android:color/transparent\" />\n+\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable/leftnav_bar_option_icon_dark.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <item android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_option_icon_focused_dark\"\n+        />\n+\n+    <item android:drawable=\"@drawable/leftnav_bar_option_icon_normal_dark\" />\n+\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable/leftnav_bar_option_icon_light.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <item android:state_focused=\"true\"\n+        android:drawable=\"@drawable/leftnav_bar_option_icon_focused_light\"\n+        />\n+\n+    <item android:drawable=\"@drawable/leftnav_bar_option_icon_normal_light\" />\n+\n+</selector>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable/spinner_item_background.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_activated=\"true\"\n+        android:drawable=\"@color/list_activated\"\n+        />\n+    <item\n+        android:drawable=\"@color/list_normal\"\n+        />\n+</selector>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/drawable/spinner_list_item_background.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:drawable=\"@color/list_normal\" />\n+</selector>\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/custom_tab.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<Button xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"?android:attr/listPreferredItemHeight\"\n+    />\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/custom_view.xml",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"@drawable/custom\"\n+    />\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/left_nav.xml",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <!-- Central section of the panel. -->\n+    <LinearLayout android:id=\"@+id/main\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"0dip\"\n+        android:layout_weight=\"1\"\n+        android:orientation=\"vertical\"\n+        />\n+\n+</merge>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/leftnav_bar_home.xml",
            "additions": 39,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/action_bar_home\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:addStatesFromChildren=\"true\"\n+    android:background=\"@drawable/leftnav_bar_item_background_dark\"\n+    >\n+\n+    <ImageView android:id=\"@+id/home\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"36dip\"\n+        android:scaleType=\"fitStart\"\n+        android:gravity=\"left\"\n+        \n+        />\n+\n+    <ImageView android:id=\"@+id/up\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:src=\"@drawable/leftnav_bar_home_up\"\n+        android:visibility=\"gone\"\n+        />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/leftnav_bar_option.xml",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\"\n+    android:gravity=\"center_vertical\"\n+    android:background=\"@drawable/leftnav_bar_item_background_dark\" >\n+\n+    <ImageView android:id=\"@+id/icon\"\n+        android:layout_width=\"@dimen/left_nav_icon_size\"\n+        android:layout_height=\"@dimen/left_nav_icon_size\"\n+        android:scaleType=\"centerInside\"\n+        android:src=\"@drawable/leftnav_bar_option_icon_dark\"\n+        />\n+\n+    <TextView android:id=\"@+id/title\"\n+        style=\"@style/Widget.ActionButton.Overflow_Text\"\n+        android:layout_width=\"0dip\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_weight=\"1\"\n+        android:layout_marginLeft=\"7dip\"\n+        android:layout_marginRight=\"7dip\"\n+        android:visibility=\"gone\"\n+        />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/leftnav_bar_options.xml",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"vertical\"\n+    android:gravity=\"center\"\n+    android:addStatesFromChildren=\"true\"\n+    >\n+\n+    <LinearLayout android:id=\"@+id/shown_options\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:gravity=\"center\"\n+        android:visibility=\"gone\"\n+        />\n+\n+    <include android:id=\"@+id/menu\"\n+        layout=\"@layout/leftnav_bar_option\"\n+        />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/leftnav_bar_spinner.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<Spinner xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:gravity=\"center\"\n+    android:focusable=\"true\"\n+    android:clickable=\"true\"\n+    />\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/leftnav_bar_tab.xml",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<com.example.google.tv.leftnavbar.TabFrame xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/leftnav_bar_tab\"\n+    style=\"@style/Widget.ActionBarView_TabView\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\"\n+    android:gravity=\"center_vertical\"\n+    android:focusable=\"true\"\n+    android:clickable=\"true\"\n+    >\n+\n+    <ImageView android:id=\"@+id/icon\"\n+        android:layout_width=\"@dimen/left_nav_icon_size\"\n+        android:layout_height=\"@dimen/left_nav_icon_size\"\n+        android:scaleType=\"centerInside\"\n+        android:duplicateParentState=\"true\"\n+        />\n+\n+    <TextView android:id=\"@+id/title\"\n+        style=\"@style/Widget.ActionBarView_TabText\"\n+        android:layout_width=\"0dip\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_weight=\"1\"\n+        android:layout_marginLeft=\"7dip\"\n+        android:layout_marginRight=\"7dip\"\n+        android:visibility=\"gone\"\n+        android:duplicateParentState=\"true\"\n+        />\n+\n+</com.example.google.tv.leftnavbar.TabFrame>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/leftnav_bar_tabs.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<com.example.google.tv.leftnavbar.TabListView\n+\txmlns:android=\"http://schemas.android.com/apk/res/android\" style=\"@style/Widget.ActionBarView_TabBar\"\n+\tandroid:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" />\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/lib_left_nav.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+  <com.example.google.tv.leftnavbar.LeftNavView xmlns:android=\"http://schemas.android.com/apk/res/android\"   android:id=\"@+id/left_nav\"\n+        style=\"@android:style/Widget.Holo.ActionBar\"\n+        android:layout_width=\"@dimen/left_nav_collapsed_apparent_width\"\n+        android:layout_height=\"match_parent\" \n+        />\n+</merge>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/lib_title_bar.xml",
            "additions": 91,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,91 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"@dimen/title_bar_height\"\n+        android:paddingLeft=\"8dip\"\n+        android:paddingRight=\"8dip\"\n+        android:gravity=\"center_vertical\"\n+        android:background=\"@drawable/leftnav_bar_item_background_dark\"\n+        >\n+\n+        <ImageView android:id=\"@+id/left_icon\"\n+            android:layout_width=\"36dip\"\n+            android:layout_height=\"36dip\"\n+            android:layout_marginRight=\"8dip\"\n+            android:visibility=\"gone\"\n+            android:scaleType=\"fitCenter\"\n+            />\n+\n+        <LinearLayout\n+            android:layout_width=\"0dip\"\n+            android:layout_height=\"@dimen/title_bar_height\"\n+            android:layout_weight=\"1\"\n+            android:layout_marginRight=\"8dip\"\n+            android:orientation=\"vertical\"\n+            android:gravity=\"center_vertical\"\n+            >\n+\n+            <TextView android:id=\"@+id/title\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"0dip\"\n+                android:layout_weight=\"1\"\n+                android:gravity=\"center_vertical\"\n+                android:singleLine=\"true\"\n+                android:ellipsize=\"end\"\n+                />\n+\n+            <TextView android:id=\"@+id/subtitle\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\"\n+                android:singleLine=\"true\"\n+                android:ellipsize=\"end\"\n+                android:visibility=\"gone\"\n+                />\n+\n+        </LinearLayout>\n+\n+        <ProgressBar android:id=\"@+id/progress_circular\"\n+            style=\"?android:attr/progressBarStyle\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginRight=\"8dip\"\n+            android:visibility=\"gone\"\n+            android:max=\"10000\"\n+            />\n+\n+        <ImageView android:id=\"@+id/right_icon\"\n+            android:layout_width=\"36dip\"\n+            android:layout_height=\"36dip\"\n+            android:layout_marginRight=\"8dip\"\n+            android:visibility=\"gone\"\n+            android:scaleType=\"fitCenter\"\n+            />\n+\n+    </LinearLayout>\n+\n+    <ProgressBar android:id=\"@+id/progress_horizontal\"\n+        style=\"?android:attr/progressBarStyle\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_alignParentBottom=\"true\"\n+        android:visibility=\"gone\"\n+        android:max=\"10000\"\n+        />\n+\n+</merge>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/lib_title_container.xml",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+ <merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+ \n+ <com.example.google.tv.leftnavbar.TitleBarView xmlns:android=\"http://schemas.android.com/apk/res/android\"  android:id=\"@+id/title_container\"\n+        style=\"?android:attr/windowTitleBackgroundStyle\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"@dimen/title_bar_height\"\n+        android:layout_marginLeft=\"@dimen/left_nav_collapsed_apparent_width\"\n+       android:layout_gravity=\"fill_horizontal\"\n+        android:visibility=\"gone\" \n+         />\n+         \n+</merge>      \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/layout/spinner_item.xml",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\"\n+    android:padding=\"5dip\"\n+    android:gravity=\"center\"\n+    >\n+\n+    <ImageView android:id=\"@+id/picture\"\n+        android:layout_width=\"36dip\"\n+        android:layout_height=\"36dip\"\n+        android:scaleType=\"fitXY\"\n+        android:padding=\"2dip\"\n+        />\n+\n+    <TextView android:id=\"@+id/name\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:gravity=\"center\"\n+        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n+        android:singleLine=\"true\"\n+        android:ellipsize=\"end\"\n+        />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/values/attrs.xml",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<resources>\n+\n+    <!-- Background drawable for standalone items that need focus/pressed states. -->\n+    <attr name=\"selectableItemBackground\" format=\"reference\" />\n+\n+</resources>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/values/colors.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<resources xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <color name=\"custom_normal\">#3300FF00</color>\n+    <color name=\"custom_activated\">#33FF0000</color>\n+\n+    <color name=\"list_normal\">#999999</color>\n+    <color name=\"list_activated\">#000000</color>\n+\n+</resources>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/values/lib_leftnav_bar_dimens.xml",
            "additions": 27,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+** Copyright 2011, The Android Open Source Project\n+**\n+** Licensed under the Apache License, Version 2.0 (the \"License\");\n+** you may not use this file except in compliance with the License.\n+** You may obtain a copy of the License at\n+**\n+**     http://www.apache.org/licenses/LICENSE-2.0\n+**\n+** Unless required by applicable law or agreed to in writing, software\n+** distributed under the License is distributed on an \"AS IS\" BASIS,\n+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+** See the License for the specific language governing permissions and\n+** limitations under the License.\n+*/\n+-->\n+<resources>  \n+    <dimen name=\"left_nav_collapsed_width\">62dip</dimen>\n+    <dimen name=\"left_nav_collapsed_apparent_width\">50dip</dimen>\n+    <dimen name=\"left_nav_expanded_width\">182dip</dimen>\n+    <dimen name=\"left_nav_expanded_apparent_width\">170dip</dimen>\n+    <dimen name=\"left_nav_icon_size\">36dip</dimen>\n+    <dimen name=\"title_bar_height\">59dip</dimen>\n+    <dimen name=\"title_bar_apparent_height\">52dip</dimen>\n+</resources>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/values/strings.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n+  \n+    <string name=\"lib_leftnav_bar_option_label\">Options</string>\n+</resources>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/res/values/styles.xml",
            "additions": 124,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<resources xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <style name=\"WithTitle\" parent=\"@android:style/Theme.Holo\">\n+        <item name=\"android:windowActionBar\">false</item>\n+        <item name=\"android:windowActionBarOverlay\">false</item>\n+        <item name=\"android:windowNoTitle\">false</item>\n+    </style>\n+\n+  \n+\n+    <style name=\"Widget\">\n+        <item name=\"android:textAppearance\">?android:textAppearance</item>\n+    </style>\n+\n+   \n+\n+    <style name=\"TextAppearance\">\n+        <item name=\"android:textColor\">?android:textColorPrimary</item>\n+        <item name=\"android:textColorHighlight\">?android:textColorHighlight</item>\n+        <item name=\"android:textColorHint\">?android:textColorHint</item>\n+        <item name=\"android:textColorLink\">?android:textColorLink</item>\n+        <item name=\"android:textSize\">16sp</item>\n+        <item name=\"android:textStyle\">normal</item>\n+    </style>\n+\n+   \n+\n+    <style name=\"Widget.ActionBar\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_background_dark</item>\n+        <item name=\"android:displayOptions\">useLogo|showHome</item>\n+        <item name=\"android:height\">0dip</item>\n+        <item name=\"android:homeLayout\">@layout/leftnav_bar_home</item>\n+        <item name=\"android:titleTextStyle\">@style/TextAppearance.ActionBar_Title</item>\n+        <item name=\"android:subtitleTextStyle\">@style/TextAppearance.ActionBar_Subtitle</item>\n+        <item name=\"selectableItemBackground\">@drawable/leftnav_bar_item_background_dark</item>\n+    </style>\n+\n+    <style name=\"TextAppearance.ActionBar_Title\">\n+        <item name=\"android:textSize\">20dip</item>\n+        <item name=\"android:textColor\">#FFFFFF</item>\n+    </style>\n+\n+    <style name=\"TextAppearance.ActionBar_Subtitle\">\n+        <item name=\"android:textSize\">14dip</item>\n+        <item name=\"android:textColor\">#999999</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionBarView_TabBar\">\n+        <item name=\"android:scrollbars\">none</item>\n+        <item name=\"android:divider\">@drawable/leftnav_bar_tab_separator_dark</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionBarView_TabView\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_item_background_dark</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionBarView_TabText\">\n+        <item name=\"android:textAppearance\">@android:style/TextAppearance.Medium</item>\n+        <item name=\"android:textColor\">@color/leftnav_bar_tab_text_dark</item>\n+        <item name=\"android:singleLine\">true</item>\n+        <item name=\"android:ellipsize\">end</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionButton\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_menu_background_top_dark</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionButton.Overflow\">\n+        <item name=\"android:src\">@drawable/leftnav_bar_option_icon_dark</item>\n+        <item name=\"android:background\">@drawable/leftnav_bar_item_background_dark</item>\n+        <item name=\"android:drawableTop\">@drawable/leftnav_bar_menu_background_top_dark</item>\n+        <item name=\"android:drawableBottom\">@drawable/leftnav_bar_menu_background_bottom_dark</item>\n+    </style>\n+\n+    <style name=\"Widget.ActionButton.Overflow_Text\" parent=\"Widget.ActionBarView_TabText\" />\n+\n+    <style name=\"Widget.Holo.ActionBar\" parent=\"Widget.ActionBar\" />\n+    <style name=\"Widget.Holo.ActionBarView_TabBar\" parent=\"Widget.ActionBarView_TabBar\" />\n+    <style name=\"Widget.Holo.ActionBarView_TabView\" parent=\"Widget.ActionBarView_TabView\" />\n+    <style name=\"Widget.Holo.ActionBarView_TabText\" parent=\"Widget.ActionBarView_TabText\" />\n+    <style name=\"Widget.Holo.ActionButton\" parent=\"Widget.ActionButton\" />\n+    <style name=\"Widget.Holo.ActionButton.Overflow\" parent=\"Widget.ActionButton.Overflow\" />\n+    <style name=\"Widget.Holo.ActionButton.Overflow_Text\" parent=\"Widget.Holo.ActionBarView_TabText\" />\n+\n+    <style name=\"Widget.Holo.Light.ActionBar\" parent=\"Widget.Holo.ActionBar\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_background_light</item>\n+        <item name=\"selectableItemBackground\">@drawable/leftnav_bar_item_background_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionBarView_TabBar\" parent=\"Widget.Holo.ActionBarView_TabBar\">\n+        <item name=\"android:divider\">@drawable/leftnav_bar_tab_separator_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionBarView_TabView\" parent=\"Widget.Holo.ActionBarView_TabView\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_item_background_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionBarView_TabText\" parent=\"Widget.Holo.ActionBarView_TabText\">\n+        <item name=\"android:textColor\">@color/leftnav_bar_tab_text_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionButton\" parent=\"Widget.ActionButton\">\n+        <item name=\"android:background\">@drawable/leftnav_bar_menu_background_top_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionButton.Overflow\" parent=\"Widget.ActionButton.Overflow\">\n+        <item name=\"android:src\">@drawable/leftnav_bar_option_icon_light</item>\n+        <item name=\"android:background\">@drawable/leftnav_bar_item_background_light</item>\n+        <item name=\"android:drawableTop\">@drawable/leftnav_bar_menu_background_top_light</item>\n+        <item name=\"android:drawableBottom\">@drawable/leftnav_bar_menu_background_bottom_light</item>\n+    </style>\n+    <style name=\"Widget.Holo.Light.ActionButton.Overflow_Text\" parent=\"Widget.Holo.Light.ActionBarView_TabText\" />\n+  \n+</resources>\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/HomeDisplay.java",
            "additions": 132,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.pm.ApplicationInfo;\n+import android.content.pm.PackageManager;\n+import android.content.pm.PackageManager.NameNotFoundException;\n+import android.content.res.TypedArray;\n+import android.graphics.drawable.Drawable;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+\n+/**\n+ * Manages the \"home\" cue of the Left Navigation Bar.\n+ */\n+class HomeDisplay {\n+\n+    private static final String TAG = \"LeftNavBar-Home\";\n+\n+    enum Mode {\n+        ICON,\n+        LOGO,\n+        BOTH  // Icon when collapsed, logo when expanded.\n+    }\n+    private Mode mMode;\n+\n+    private final Context mContext;\n+    private Drawable mLogo;\n+    private Drawable mIcon;\n+    private View mView;\n+    private boolean mExpanded;\n+\n+    HomeDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n+        mContext = context;\n+        mMode = Mode.ICON;\n+        ApplicationInfo appInfo = context.getApplicationInfo();\n+        PackageManager pm = context.getPackageManager();\n+        loadLogo(attributes, pm, appInfo);\n+        loadIcon(attributes, pm, appInfo);\n+        createView(parent, attributes);\n+    }\n+\n+    private void loadLogo(TypedArray a, PackageManager pm, ApplicationInfo appInfo) {\n+        if (mContext instanceof Activity) {\n+            try {\n+                mLogo = pm.getActivityLogo(((Activity) mContext).getComponentName());\n+            } catch (NameNotFoundException e) {\n+                Log.e(TAG, \"Failed to load app logo.\", e);\n+            }\n+        }\n+        if (mLogo == null) {\n+            mLogo = appInfo.loadLogo(pm);\n+        }\n+    }\n+\n+    private void loadIcon(TypedArray a, PackageManager pm, ApplicationInfo appInfo) {\n+        if (mContext instanceof Activity) {\n+            try {\n+                mIcon = pm.getActivityIcon(((Activity) mContext).getComponentName());\n+            } catch (NameNotFoundException e) {\n+                Log.e(TAG, \"Failed to load app icon.\", e);\n+            }\n+        }\n+        if (mIcon == null) {\n+            mIcon = appInfo.loadIcon(pm);\n+        }\n+    }\n+\n+    public void setOnClickHomeListener(View.OnClickListener listener) {\n+        mView.setOnClickListener(listener);\n+    }\n+\n+    private void createView(ViewGroup parent, TypedArray attributes) {\n+        mView = LayoutInflater.from(mContext).inflate(R.layout.leftnav_bar_home, parent, false);\n+    }\n+\n+    private void updateImage() {\n+        boolean useIcon = mMode == Mode.ICON\n+                || mLogo == null\n+                || (mMode == Mode.BOTH && !mExpanded);\n+        ((ImageView) mView.findViewById(R.id.home)).setImageDrawable(useIcon ? mIcon : mLogo);\n+    }\n+\n+    View getView() {\n+        return mView;\n+    }\n+\n+    HomeDisplay setVisible(boolean visible) {\n+        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n+        return this;\n+    }\n+\n+    boolean isVisible() {\n+        return mView.getVisibility() == View.VISIBLE;\n+    }\n+\n+    HomeDisplay setExpanded(boolean expanded) {\n+        mExpanded = expanded;\n+        updateImage();\n+        return this;\n+    }\n+\n+    HomeDisplay setImageMode(Mode mode) {\n+        mMode = mode;\n+        updateImage();\n+        return this;\n+    }\n+\n+    HomeDisplay setAsUp(boolean asUp) {\n+        mView.findViewById(R.id.up).setVisibility(asUp ? View.VISIBLE : View.GONE);\n+        return this;\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/LeftNavBar.java",
            "additions": 509,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,509 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+\n+import android.app.ActionBar;\n+import android.app.Activity;\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+import android.view.ActionMode;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.ViewGroup.MarginLayoutParams;\n+import android.view.Window;\n+import android.widget.SpinnerAdapter;\n+\n+/**\n+ * TV-specific implementation of the ActionBar API, using the title bar and a\n+ * left navigation panel.\n+ */\n+public class LeftNavBar extends ActionBar {\n+\n+    /**\n+     * Always show an expanded version of the Left Navigation bar.\n+     *\n+     * @hide\n+     * @see #setDisplayOptions(int)\n+     * @see #setDisplayOptions(int, int)\n+     */\n+    public static final int DISPLAY_ALWAYS_EXPANDED = 0x20;\n+\n+    /**\n+     * Use the app logo when the Left Navigation bar is expanded.\n+     *\n+     * @hide\n+     * @see #setDisplayOptions(int)\n+     * @see #setDisplayOptions(int, int)\n+     */\n+    public static final int DISPLAY_USE_LOGO_WHEN_EXPANDED = 0x80;\n+\n+    /**\n+     * Show an indeterminate progress indicator.\n+     *\n+     * @hide\n+     * @see #setDisplayOptions(int)\n+     * @see #setDisplayOptions(int, int)\n+     */\n+    public static final int DISPLAY_SHOW_INDETERMINATE_PROGRESS = 0x100;\n+\n+    /**\n+     * Display option for the Left Navigation bar to automatically expand when\n+     * certain ev ents happen. This includes gaining focus but could also\n+     * include other events, such as mouse hover.\n+     *\n+     * @see #setDisplayOptions(int)\n+     * @see #setDisplayOptions(int, int)\n+     */\n+    public static final int DISPLAY_AUTO_EXPAND = 0x40;\n+\n+    /**\n+     * Display options applied by default.\n+     */\n+    public static final int DEFAULT_DISPLAY_OPTIONS = ActionBar.DISPLAY_SHOW_HOME\n+            | ActionBar.DISPLAY_USE_LOGO | ActionBar.DISPLAY_SHOW_TITLE\n+            | LeftNavBar.DISPLAY_ALWAYS_EXPANDED;\n+\n+    private Context mContext;\n+\n+    private boolean mIsOverlay;\n+\n+    private TitleBarView mTitleBar;\n+\n+    private LeftNavView mLeftNav;\n+\n+    private View mContent;\n+\n+    public LeftNavBar(Activity activity) {\n+        initialize(activity.getWindow(), activity);\n+    }\n+\n+    public LeftNavBar(Dialog dialog) {\n+        initialize(dialog.getWindow(), dialog.getContext());\n+    }\n+\n+    private void initialize(Window window, Context context) {\n+        View decor = window.getDecorView();\n+        ViewGroup group = (ViewGroup) window.getDecorView();\n+        LayoutInflater inflater = (LayoutInflater) decor.getContext().getSystemService(\n+                Context.LAYOUT_INFLATER_SERVICE);\n+\n+        inflater.inflate(R.layout.lib_title_container, group, true);\n+        inflater.inflate(R.layout.lib_left_nav, group, true);\n+        mContext = decor.getContext();\n+        mIsOverlay = window.hasFeature(Window.FEATURE_ACTION_BAR_OVERLAY);\n+        mTitleBar = (TitleBarView) decor.findViewById(R.id.title_container);\n+\n+        mLeftNav = (LeftNavView) decor.findViewById(R.id.left_nav);\n+\n+        mContent = group.getChildAt(0);\n+\n+        if (mTitleBar == null || mLeftNav == null) {\n+            throw new IllegalStateException(\n+                    getClass().getSimpleName() + \": incompatible window decor!\");\n+        }\n+\n+        setDisplayOptions(DEFAULT_DISPLAY_OPTIONS);\n+        showOptionsMenu(true);\n+    }\n+\n+    private void updateWindowLayout(boolean animated) {\n+        updateTitleBar(animated);\n+        setLeftMargin(mTitleBar, mLeftNav.getApparentWidth(true));\n+        if (!mIsOverlay) {\n+            setLeftMargin(mContent, mLeftNav.getApparentWidth(false));\n+            setTopMargin(mContent, mTitleBar.getApparentHeight());\n+        }\n+    }\n+\n+\n+    private void updateTitleBar(boolean animated) {\n+        int options = getDisplayOptions();\n+        boolean titleVisible = has(options, DISPLAY_SHOW_TITLE);\n+        boolean progressVisible = has(options, DISPLAY_SHOW_INDETERMINATE_PROGRESS);\n+        boolean horizontalProgressVisible = mTitleBar.isHorizontalProgressVisible();\n+        mTitleBar.setVisible(\n+                isShowing() && (titleVisible || progressVisible || horizontalProgressVisible),\n+                animated);\n+        mTitleBar.setProgressVisible(progressVisible);\n+    }\n+\n+    private void setLeftMargin(View view, int margin) {\n+        MarginLayoutParams params = (MarginLayoutParams) view.getLayoutParams();\n+        params.leftMargin = margin;\n+        view.setLayoutParams(params);\n+    }\n+\n+    private void setTopMargin(View view, int margin) {\n+        MarginLayoutParams params = (MarginLayoutParams) view.getLayoutParams();\n+        params.topMargin = margin;\n+        view.setLayoutParams(params);\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Visibility.\n+\n+    @Override\n+    public void show() {\n+        setVisible(true);\n+    }\n+\n+    @Override\n+    public void hide() {\n+        setVisible(false);\n+    }\n+\n+    private void setVisible(boolean visible) {\n+        boolean shouldAnimate = mIsOverlay;\n+        if (mLeftNav.setVisible(visible, shouldAnimate)) {\n+            updateWindowLayout(shouldAnimate);\n+        }\n+    }\n+\n+    @Override\n+    public boolean isShowing() {\n+        return mLeftNav.isVisible();\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Title / subtitle.\n+\n+    @Override\n+    public void setTitle(CharSequence title) {\n+        mTitleBar.setTitle(title);\n+    }\n+\n+    @Override\n+    public void setTitle(int resId) {\n+        setTitle(mContext.getString(resId));\n+    }\n+\n+    @Override\n+    public CharSequence getTitle() {\n+        return mTitleBar.getTitle();\n+    }\n+\n+    @Override\n+    public void setSubtitle(CharSequence subtitle) {\n+        mTitleBar.setSubtitle(subtitle);\n+    }\n+\n+    @Override\n+    public void setSubtitle(int resId) {\n+        setSubtitle(mContext.getString(resId));\n+    }\n+\n+    @Override\n+    public CharSequence getSubtitle() {\n+        return mTitleBar.getSubtitle();\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Tabs.\n+\n+    @Override\n+    public Tab newTab() {\n+        return new TabImpl(mContext) {\n+\n+            @Override\n+            public void select() {\n+                selectTab(this);\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Ensures the given tab is a valid object.\n+     */\n+    private TabImpl convertTab(Tab tab) {\n+        if (tab == null) {\n+            return null;\n+        }\n+        if (!(tab instanceof TabImpl)) {\n+            throw new IllegalArgumentException(\"Invalid tab object.\");\n+        }\n+        return (TabImpl) tab;\n+    }\n+\n+    @Override\n+    public void addTab(Tab tab) {\n+        addTab(tab, TabDisplay.LAST_POSITION);\n+    }\n+\n+    @Override\n+    public void addTab(Tab tab, boolean setSelected) {\n+        addTab(tab, TabDisplay.LAST_POSITION, setSelected);\n+    }\n+\n+    @Override\n+    public void addTab(Tab tab, int position) {\n+        addTab(tab, position, getTabCount() == 0);\n+    }\n+\n+    @Override\n+    public void addTab(Tab tab, int position, boolean setSelected) {\n+        mLeftNav.getTabs().add(convertTab(tab), position, setSelected);\n+    }\n+\n+    @Override\n+    public Tab getSelectedTab() {\n+        return mLeftNav.getTabs().getSelected();\n+    }\n+\n+    @Override\n+    public Tab getTabAt(int index) {\n+        return mLeftNav.getTabs().get(index);\n+    }\n+\n+    @Override\n+    public int getTabCount() {\n+        return mLeftNav.getTabs().getCount();\n+    }\n+\n+    @Override\n+    public void removeAllTabs() {\n+        mLeftNav.getTabs().removeAll();\n+    }\n+\n+    @Override\n+    public void removeTab(Tab tab) {\n+        mLeftNav.getTabs().remove(convertTab(tab));\n+    }\n+\n+    @Override\n+    public void removeTabAt(int position) {\n+        mLeftNav.getTabs().remove(position);\n+    }\n+\n+    @Override\n+    public void selectTab(Tab tab) {\n+        mLeftNav.getTabs().select(convertTab(tab));\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Navigation modes.\n+\n+    @Override\n+    public int getNavigationItemCount() {\n+        switch (getNavigationMode()) {\n+            case NAVIGATION_MODE_TABS:\n+                return getTabCount();\n+\n+            case NAVIGATION_MODE_LIST:\n+                return mLeftNav.getSpinner().getCount();\n+\n+            default:\n+                throw new IllegalStateException(\n+                        \"No count available for mode: \" + getNavigationMode());\n+        }\n+    }\n+\n+    @Override\n+    public int getNavigationMode() {\n+        return mLeftNav.getNavigationMode();\n+    }\n+\n+    @Override\n+    public int getSelectedNavigationIndex() {\n+        switch (getNavigationMode()) {\n+            case NAVIGATION_MODE_TABS:\n+                Tab selected = getSelectedTab();\n+                return selected != null ? selected.getPosition() : -1;\n+\n+            case NAVIGATION_MODE_LIST:\n+                return mLeftNav.getSpinner().getSelected();\n+\n+            default:\n+                throw new IllegalStateException(\n+                        \"No selection available for mode: \" + getNavigationMode());\n+        }\n+    }\n+\n+    @Override\n+    public void setListNavigationCallbacks(SpinnerAdapter adapter, OnNavigationListener callback) {\n+        mLeftNav.getSpinner().setContent(adapter, callback);\n+    }\n+\n+    @Override\n+    public void setNavigationMode(int mode) {\n+        mLeftNav.setNavigationMode(mode);\n+    }\n+\n+    @Override\n+    public void setSelectedNavigationItem(int position) {\n+        switch (getNavigationMode()) {\n+            case NAVIGATION_MODE_TABS:\n+                selectTab(getTabAt(position));\n+                break;\n+\n+            case NAVIGATION_MODE_LIST:\n+                mLeftNav.getSpinner().setSelected(position);\n+                break;\n+\n+            default:\n+                throw new IllegalStateException(\n+                        \"Cannot set selection on mode: \" + getNavigationMode());\n+        }\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Display options.\n+\n+    @Override\n+    public int getDisplayOptions() {\n+        return mLeftNav.getDisplayOptions();\n+    }\n+\n+    private static boolean has(int changes, int option) {\n+        return (changes & option) != 0;\n+    }\n+\n+    @Override\n+    public void setDisplayOptions(int options) {\n+        int changes = mLeftNav.setDisplayOptions(options);\n+        if (has(changes, DISPLAY_ALWAYS_EXPANDED) || has(changes, DISPLAY_AUTO_EXPAND)\n+                || has(changes, DISPLAY_SHOW_TITLE)\n+                || has(changes, DISPLAY_SHOW_INDETERMINATE_PROGRESS)) {\n+            updateWindowLayout(false);\n+        }\n+    }\n+\n+    @Override\n+    public void setDisplayOptions(int options, int mask) {\n+        int current = getDisplayOptions();\n+        int updated = ((options & mask) | (current & ~mask));\n+        setDisplayOptions(updated);\n+    }\n+\n+    @Override\n+    public void setDisplayHomeAsUpEnabled(boolean showHomeAsUp) {\n+        setDisplayOptions(showHomeAsUp ? DISPLAY_HOME_AS_UP : 0, DISPLAY_HOME_AS_UP);\n+    }\n+\n+    @Override\n+    public void setDisplayShowCustomEnabled(boolean showCustom) {\n+        setDisplayOptions(showCustom ? DISPLAY_SHOW_CUSTOM : 0, DISPLAY_SHOW_CUSTOM);\n+    }\n+\n+    @Override\n+    public void setDisplayShowHomeEnabled(boolean showHome) {\n+        setDisplayOptions(showHome ? DISPLAY_SHOW_HOME : 0, DISPLAY_SHOW_HOME);\n+    }\n+\n+    @Override\n+    public void setDisplayShowTitleEnabled(boolean showTitle) {\n+        setDisplayOptions(showTitle ? DISPLAY_SHOW_TITLE : 0, DISPLAY_SHOW_TITLE);\n+    }\n+\n+    @Override\n+    public void setDisplayUseLogoEnabled(boolean useLogo) {\n+        setDisplayOptions(useLogo ? DISPLAY_USE_LOGO : 0, DISPLAY_USE_LOGO);\n+    }\n+\n+    /**\n+     * Sets the horizontal progress indicator to the given value.\n+     */\n+    public void setShowHorizontalProgress(int value) {\n+        mTitleBar.setHorizontalProgress(value);\n+        updateWindowLayout(false);\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Custom view.\n+\n+    @Override\n+    public View getCustomView() {\n+        return mLeftNav.getCustomView();\n+    }\n+\n+    @Override\n+    public void setCustomView(View view) {\n+        mLeftNav.setCustomView(view);\n+    }\n+\n+    @Override\n+    public void setCustomView(View view, LayoutParams layoutParams) {\n+        view.setLayoutParams(layoutParams);\n+        setCustomView(view);\n+    }\n+\n+    @Override\n+    public void setCustomView(int resId) {\n+        setCustomView(LayoutInflater.from(mContext).inflate(resId, mLeftNav, false));\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Miscellaneous.\n+\n+    @Override\n+    public void addOnMenuVisibilityListener(OnMenuVisibilityListener listener) {\n+        // No use for that, apps should use the regular options menu API.\n+    }\n+\n+    @Override\n+    public void removeOnMenuVisibilityListener(OnMenuVisibilityListener listener) {\n+        // No use for that, apps should use the regular options menu API.\n+    }\n+\n+    @Override\n+    public void setBackgroundDrawable(Drawable d) {\n+        mLeftNav.setBackgroundDrawable(d);\n+    }\n+\n+    @Override\n+    public int getHeight() {\n+        // The height is completely irrelevant in our case.\n+        // Returning the left nav's width as this is what apps may want to\n+        // adjust to.\n+        return mLeftNav.getApparentWidth(true /*\n+                                               * ignore the fact that it may be\n+                                               * hidden\n+                                               */);\n+    }\n+\n+    public void setExpandedSize(int s) {\n+        mLeftNav.setMinimumWidth(s);\n+\n+    }\n+\n+    // ----------------------------------------------------------------------------------------------\n+    // Copies of ActionBarImpl methods.\n+    // This is to ensure this implementation can be easily swapped in.\n+\n+    public void setShowHideAnimationEnabled(boolean enabled) {\n+        mLeftNav.setAnimationsEnabled(enabled);\n+        mTitleBar.setAnimationsEnabled(enabled);\n+    }\n+\n+    public void dispatchMenuVisibilityChanged(boolean visible) {\n+    }\n+\n+    public ActionMode startActionMode(ActionMode.Callback callback) {\n+        return null;\n+    }\n+\n+    // Extra methods\n+    public void showOptionsMenu(boolean show) {\n+        mLeftNav.showOptionsMenu(show);\n+    }\n+\n+    public void setOnClickHomeListener(View.OnClickListener listener) {\n+        mLeftNav.setOnClickHomeListener(listener);\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/LeftNavBarService.java",
            "additions": 46,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (C) 2011 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.app.Activity;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/** This service maintains a single instance of LeftNavBar per Activity **/\n+public class LeftNavBarService {\n+\n+    private final Map<Integer, LeftNavBar> map;\n+\n+    private static final LeftNavBarService service = new LeftNavBarService();\n+\n+    private LeftNavBarService() {\n+        map = new HashMap<Integer, LeftNavBar>();\n+    }\n+\n+    public static LeftNavBarService instance() {\n+        return service;\n+    }\n+\n+    public LeftNavBar getLeftNavBar(Activity activity) {\n+        if (map.get(activity.hashCode()) == null) {\n+            LeftNavBar leftNavBar = new LeftNavBar(activity);           \n+            map.put(activity.hashCode(), leftNavBar);\n+        }\n+        return map.get(activity.hashCode());\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/LeftNavView.java",
            "additions": 627,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,627 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.animation.Animator;\n+import android.animation.AnimatorListenerAdapter;\n+import android.animation.ValueAnimator;\n+import android.app.ActionBar;\n+import android.content.Context;\n+import android.content.res.Resources;\n+import android.util.AttributeSet;\n+import android.view.FocusFinder;\n+import android.view.Gravity;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.LinearLayout;\n+\n+import java.util.ArrayList;\n+\n+\n+/**\n+ * Left navigation panel hosting various controls such as tabs.\n+ */\n+public class LeftNavView extends LinearLayout {\n+\t\n+    private final HomeDisplay mHome;\n+    private final TabDisplay mTabs;\n+    private final OptionsDisplay mOptions;\n+    private final SpinnerDisplay mSpinner;\n+\n+    private final int mWidthCollapsed;\n+    private int mWidthExpanded;\n+    private final int mApparentWidthCollapsed;\n+    private final int mApparentWidthExpanded;\n+\n+\n+    public void setWidth(int a) {\n+         mWidthExpanded = a;\n+    }\n+\n+    private final VisibilityController mVisibilityController;\n+\n+    private final int mAnimationDuration;\n+\n+    private int mDisplayOptions;\n+    private int mNavigationMode;\n+    private boolean mExpanded;\n+    private boolean mAnimationsEnabled;\n+    private ValueAnimator mWidthAnimator;\n+\n+    public LeftNavView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        mVisibilityController = new VisibilityController(this);\n+        LayoutInflater.from(context).inflate(R.layout.left_nav, this, true);\n+        setOrientation(VERTICAL);\n+\n+        mHome = new HomeDisplay(context, this, null).setVisible(false);\n+        mTabs = new TabDisplay(context, this, null).setVisible(false);\n+        mOptions = new OptionsDisplay(context, this, null).setVisible(false);\n+        mSpinner = new SpinnerDisplay(context, this, null).setVisible(false);\n+\n+        Resources res = context.getResources();\n+        mWidthCollapsed = res.getDimensionPixelSize(\n+                R.dimen.left_nav_collapsed_width);\n+        mWidthExpanded = res.getDimensionPixelSize(\n+               (R.dimen.left_nav_expanded_width));\n+        mApparentWidthCollapsed = res.getDimensionPixelSize(\n+                R.dimen.left_nav_collapsed_apparent_width);\n+        mApparentWidthExpanded = res.getDimensionPixelSize(\n+                R.dimen.left_nav_expanded_apparent_width);\n+        mAnimationDuration = res.getInteger(        \t\t\n+        \t\tandroid.R.integer.config_shortAnimTime);\n+\n+        mNavigationMode = ActionBar.NAVIGATION_MODE_STANDARD;\n+        setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);\n+  }\n+\n+    @Override\n+    protected void onFinishInflate() {\n+        super.onFinishInflate();\n+\n+        // Add header / footer views.\n+        addView(mHome.getView(), 0);\n+        // Central section falls here.\n+        addView(mOptions.getView(), 2);\n+\n+        // Add views to the central section.\n+        ViewGroup main = getMainSection();\n+        main.addView(mTabs.getView());\n+        main.addView(mSpinner.getView());\n+    }\n+\n+    private ViewGroup getMainSection() {\n+        return (ViewGroup) findViewById(R.id.main);\n+    }\n+\n+    public boolean setVisible(boolean visible, boolean animated) {\n+        return mVisibilityController.setVisible(visible, animated && mAnimationsEnabled);\n+    }\n+\n+    public boolean isVisible() {\n+        return mVisibilityController.isVisible();\n+    }\n+\n+    public void setOnClickHomeListener(View.OnClickListener listener) {\n+        mHome.setOnClickHomeListener(listener);\n+    }\n+\n+    @Override\n+    public void addFocusables(ArrayList<View> views, int direction, int focusableMode) {\n+        if (direction == FOCUS_FORWARD) {\n+            // When setting the initial focus for the window, all views should be considered\n+            // focusable.\n+            super.addFocusables(views, direction, focusableMode);\n+            return;\n+        }\n+        if (direction != FOCUS_LEFT && !hasFocus()) {\n+            // We don't want to gain focus unless it's coming from the right or we already have\n+            // focus.\n+            return;\n+        }\n+        if (!hasFocus()) {\n+            // Try to focus a navigation mode first.\n+            int initialCount = views.size();\n+            switch (mNavigationMode) {\n+                case ActionBar.NAVIGATION_MODE_TABS:\n+                    mTabs.getView().addFocusables(views, direction, focusableMode);\n+                    break;\n+\n+                case ActionBar.NAVIGATION_MODE_LIST:\n+                    mSpinner.getView().addFocusables(views, direction, focusableMode);\n+                    break;\n+\n+                default:\n+                    if (hasCustomView()) {\n+                        getCustomView().addFocusables(views, direction, focusableMode);\n+                    }\n+                    break;\n+            }\n+            if (views.size() > initialCount) {\n+                // Some focusable elements were added.\n+                return;\n+            }\n+        }\n+        super.addFocusables(views, direction, focusableMode);\n+    }\n+\n+    @Override\n+    public View focusSearch(View focused, int direction) {\n+        if (hasFocus() && direction != FOCUS_RIGHT) {\n+            // If we have focus, we should only relinquish focus if it is moving to the right.\n+            // Otherwise we restrict the focus search to our children.\n+            return FocusFinder.getInstance().findNextFocus(this, focused, direction);\n+        } else {\n+            return super.focusSearch(focused, direction);\n+        }\n+    }\n+\n+    protected void onDescendantFocusChanged(boolean hasFocus) {\n+        super.onWindowFocusChanged(hasFocus);\n+        if (has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND)) {\n+            setExpanded(hasFocus);\n+        }\n+    }\n+    \n+    /*@Override\n+    protected void onDescendantFocusChanged(boolean hasFocus) {\n+        super.onDescendantFocusChanged(hasFocus);\n+        if (has(mDisplayOptions, ActionBar.DISPLAY_AUTO_EXPAND)) {\n+            setExpanded(hasFocus);\n+        }\n+    }*/\n+\n+    public int getDisplayOptions() {\n+        return mDisplayOptions;\n+    }\n+\n+    /**\n+     * Sets the display options and returns the options which have changed.\n+     */\n+    public int setDisplayOptions(int options) {\n+        int changes = options ^ mDisplayOptions;\n+        mDisplayOptions = options;\n+        if (has(changes, ActionBar.DISPLAY_SHOW_HOME)) {\n+            mHome.setVisible(has(options, ActionBar.DISPLAY_SHOW_HOME));\n+        }\n+        if (has(changes, ActionBar.DISPLAY_USE_LOGO) ||\n+                has(changes, LeftNavBar.DISPLAY_USE_LOGO_WHEN_EXPANDED)) {\n+            setHomeMode();\n+        }\n+        if (has(changes, ActionBar.DISPLAY_HOME_AS_UP)) {\n+            mHome.setAsUp(has(options, ActionBar.DISPLAY_HOME_AS_UP));\n+        }\n+        if (has(changes, ActionBar.DISPLAY_SHOW_CUSTOM)) {\n+            setCustomViewVisibility(has(mDisplayOptions, ActionBar.DISPLAY_SHOW_CUSTOM));\n+        }\n+        if (has(changes, LeftNavBar.DISPLAY_AUTO_EXPAND) ||\n+                has(changes, LeftNavBar.DISPLAY_ALWAYS_EXPANDED)) {\n+            setExpandedState();\n+        }\n+        return changes;\n+    }\n+\n+    private void setHomeMode() {\n+        HomeDisplay.Mode mode;\n+        if (has(mDisplayOptions, LeftNavBar.DISPLAY_USE_LOGO_WHEN_EXPANDED)) {\n+            mode = HomeDisplay.Mode.BOTH;\n+        } else if (has(mDisplayOptions, ActionBar.DISPLAY_USE_LOGO)) {\n+            mode = HomeDisplay.Mode.LOGO;\n+        } else {\n+            mode = HomeDisplay.Mode.ICON;\n+        }\n+        mHome.setImageMode(mode);\n+    }\n+\n+    private void setExpandedState() {\n+        if (has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND)) {\n+            setExpanded(hasFocus(), false);\n+        } else {\n+            setExpanded(has(mDisplayOptions, LeftNavBar.DISPLAY_ALWAYS_EXPANDED), false);\n+        }\n+    }\n+\n+    private void setExpanded(boolean expanded) {\n+        setExpanded(expanded, mAnimationsEnabled && isVisible());\n+    }\n+\n+    private void setExpanded(final boolean expanded, boolean animated) {\n+        if (mExpanded == expanded) {\n+            return;\n+        }\n+        if (animated) {\n+            if (mWidthAnimator != null) {\n+                mWidthAnimator.cancel();\n+            }\n+            mWidthAnimator = ValueAnimator.ofInt(\n+                    getLayoutParams().width,  // Starting value.\n+                    expanded ? mWidthExpanded : mWidthCollapsed);\n+            mWidthAnimator.setDuration(mAnimationDuration);\n+            mWidthAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n+                public void onAnimationUpdate(ValueAnimator animation) {\n+                    setViewWidth((Integer) animation.getAnimatedValue());\n+                }\n+            });\n+            mWidthAnimator.addListener(new AnimatorListenerAdapter() {\n+                @Override\n+                public void onAnimationStart(Animator animator) {\n+                    if (!expanded) {\n+                        setContentExpanded(false);\n+                    }\n+                }\n+                @Override\n+                public void onAnimationEnd(Animator animator) {\n+                    if (expanded) {\n+                        setContentExpanded(true);\n+                    }\n+                }\n+            });\n+            mWidthAnimator.start();\n+        } else {\n+            setViewWidth(expanded ? mWidthExpanded : mWidthCollapsed);\n+            setContentExpanded(expanded);\n+        }\n+        mExpanded = expanded;\n+    }\n+\n+    private void setContentExpanded(boolean expanded) {\n+        mTabs.setExpanded(expanded);\n+        mOptions.setExpanded(expanded);\n+        mHome.setExpanded(expanded);\n+        mSpinner.setExpanded(expanded);\n+        if (hasCustomView()) {\n+            getCustomView().setActivated(expanded);\n+        }\n+    }\n+\n+    private void setViewWidth(int width) {\n+        ViewGroup.LayoutParams params = getLayoutParams();\n+        params.width = width;\n+        setLayoutParams(params);\n+    }\n+\n+    /**\n+     * Returns the \"steady state\" width for the view, taking into account all shadowing effects.\n+     */\n+    public int getApparentWidth(boolean ignoreHiddenState) {\n+        if (!isVisible() && !ignoreHiddenState) {\n+            return 0;\n+        }\n+        boolean isCollapsed = has(mDisplayOptions, LeftNavBar.DISPLAY_AUTO_EXPAND) ||\n+                !has(mDisplayOptions, LeftNavBar.DISPLAY_ALWAYS_EXPANDED);\n+        return isCollapsed ? mApparentWidthCollapsed : mApparentWidthExpanded;\n+    }\n+\n+    public void setAnimationsEnabled(boolean enabled) {\n+        mAnimationsEnabled = enabled;\n+    }\n+\n+    private static boolean has(int changes, int option) {\n+        return (changes & option) != 0;\n+    }\n+\n+    public TabDisplay getTabs() {\n+        return mTabs;\n+    }\n+\n+    public SpinnerDisplay getSpinner() {\n+        return mSpinner;\n+    }\n+\n+    public void setNavigationMode(int mode) {\n+        if (mNavigationMode == mode) {\n+            return;\n+        }\n+        setNavigationModeVisibility(mNavigationMode, false);\n+        setNavigationModeVisibility(mode, true);\n+        mNavigationMode = mode;\n+    }\n+\n+    private void setNavigationModeVisibility(int mode, boolean visible) {\n+        switch (mode) {\n+            case ActionBar.NAVIGATION_MODE_TABS:\n+                mTabs.setVisible(visible);\n+                break;\n+\n+            case ActionBar.NAVIGATION_MODE_LIST:\n+                mSpinner.setVisible(visible);\n+                break;\n+\n+            default:\n+                break;\n+        }\n+    }\n+\n+    public int getNavigationMode() {\n+        return mNavigationMode;\n+    }\n+\n+    public void showOptionsMenu(Boolean show) {\n+        mOptions.setVisible(show);\n+    }\n+\n+    public void setCustomView(View view) {\n+        ViewGroup main = getMainSection();\n+        CustomViewWrapper current = getCustomViewWrapper();\n+        if (current != null) {\n+            current.detach();\n+            main.removeView(current);\n+        }\n+        if (view != null) {\n+            view.setActivated(mExpanded);\n+            main.addView(new CustomViewWrapper(getContext(), view));\n+            setCustomViewVisibility(has(mDisplayOptions, ActionBar.DISPLAY_SHOW_CUSTOM));\n+        }\n+    }\n+\n+    private boolean hasCustomView() {\n+        return getCustomViewWrapper() != null;\n+    }\n+\n+    private boolean hasVisibleCustomView() {\n+        return hasCustomView() && getCustomViewWrapper().getVisibility() == VISIBLE;\n+    }\n+\n+    public View getCustomView() {\n+        CustomViewWrapper wrapper = getCustomViewWrapper();\n+        return wrapper != null ? wrapper.getView() : null;\n+    }\n+\n+    private CustomViewWrapper getCustomViewWrapper() {\n+        ViewGroup main = getMainSection();\n+        // The custom view comes after the tabs and the spinner.\n+        if (main.getChildCount() == 3) {\n+            return (CustomViewWrapper) main.getChildAt(2);\n+        }\n+        return null;\n+    }\n+\n+    private void setCustomViewVisibility(boolean visible) {\n+        View current = getCustomViewWrapper();\n+        if (current != null) {\n+            current.setVisibility(visible ? VISIBLE : GONE);\n+        }\n+    }\n+\n+    @Override\n+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n+        if (hasVisibleCustomView()) {\n+            getCustomViewWrapper().onPostMeasure(this);\n+        }\n+    }\n+\n+    @Override\n+    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n+        super.onLayout(changed, l, t, r, b);\n+        if (hasVisibleCustomView()) {\n+            getCustomViewWrapper().onPostLayout(this);\n+        }\n+    }\n+\n+    /**\n+     * Wrapper around custom views to allow them to use the layout parameters defined in the\n+     * ActionBar class and still be displayed within this view group.\n+     */\n+    private static final class CustomViewWrapper extends ViewGroup {\n+\n+        private final View mView;\n+\n+        CustomViewWrapper(Context context, View view) {\n+            super(context);\n+            setLayoutParams(new LinearLayout.LayoutParams(\n+                    ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\n+            mView = view;\n+            if (!(view.getLayoutParams() instanceof ActionBar.LayoutParams)) {\n+                view.setLayoutParams(generateDefaultLayoutParams());\n+            }\n+            addView(view);\n+        }\n+\n+        View getView() {\n+            return mView;\n+        }\n+\n+        void detach() {\n+            removeView(mView);\n+        }\n+\n+        /**\n+         * Locates the top bound of the space available for custom views, expressed in the\n+         * coordinate system of {@code parent}.\n+         */\n+        private int findTopOfAvailableSpace(LeftNavView parent) {\n+            //int top = parent.mPaddingTop;\n+        \tint top = parent.getPaddingTop();\n+            if (parent.mHome.isVisible()) {\n+                top += parent.mHome.getView().getMeasuredHeight();\n+            }\n+            switch (parent.mNavigationMode) {\n+                case ActionBar.NAVIGATION_MODE_TABS:\n+                    top += parent.mTabs.getView().getMeasuredHeight();\n+                    break;\n+\n+                case ActionBar.NAVIGATION_MODE_LIST:\n+                    top += parent.mSpinner.getView().getMeasuredHeight();\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+            return top;\n+        }\n+\n+        /**\n+         * Locates the bottom bound of the space available for custom views, expressed in the\n+         * coordinate system of {@code parent}.\n+         */\n+        private int findBottomOfAvailableSpace(LeftNavView parent) {\n+            //int bottom = parent.getMeasuredHeight() - parent.mPaddingBottom;\n+        \tint bottom = parent.getMeasuredHeight() - parent.getPaddingBottom();\n+            if (parent.mOptions.isVisible()) {\n+                bottom -= parent.mOptions.getView().getMeasuredHeight();\n+            }\n+            return bottom;\n+        }\n+\n+        private void checkDimensionsConsistency(int value, int expected) {\n+            if (value != expected) {\n+                throw new IllegalStateException(\"Inconsistent dimensions!\");\n+            }\n+        }\n+\n+        /**\n+         * Should be called after the rest of the left nav has been measured, so that custom views\n+         * can be sized according to the space left and the desired gravity.\n+         */\n+        void onPostMeasure(LeftNavView parent) {\n+            // Dimensions of the entire parent.\n+            int totalWidth = parent.getMeasuredWidth();\n+            int totalHeight = parent.getMeasuredHeight();\n+            // Coordinates of the top and bottom of the available space.\n+            int topOfAvailableSpace = findTopOfAvailableSpace(parent);\n+            int bottomOfAvailableSpace = findBottomOfAvailableSpace(parent);\n+            // Dimensions of the available space.\n+            int availableWidth = totalWidth - parent.getPaddingLeft() - parent.getPaddingRight();\n+            int availableHeight = bottomOfAvailableSpace - topOfAvailableSpace;\n+            // Space available in each half of the parent.\n+            // This is used when attempting to vertically center a custom view which has its height\n+            // as \"match parent\": in this case its size will be limited by the smallest of the two\n+            // spaces.\n+            int availableInTopHalf = totalHeight / 2 - topOfAvailableSpace;\n+            int availableInBottomHalf = bottomOfAvailableSpace - totalHeight / 2;\n+\n+            // Sanity checks.\n+            if (getMeasuredWidth() != 0) {\n+                checkDimensionsConsistency(availableWidth, getMeasuredWidth());\n+            }\n+            if (getMeasuredHeight() != 0) {\n+                checkDimensionsConsistency(availableHeight, getMeasuredHeight());\n+            }\n+\n+            ActionBar.LayoutParams params = (ActionBar.LayoutParams) mView.getLayoutParams();\n+            int horizontalMargin = params.leftMargin + params.rightMargin;\n+            int verticalMargin = params.topMargin + params.bottomMargin;\n+\n+            int widthMode = params.width != LayoutParams.WRAP_CONTENT ?\n+                    MeasureSpec.EXACTLY : MeasureSpec.AT_MOST;\n+            int widthValue = params.width >= 0 ?\n+                    Math.min(params.width, availableWidth) : availableWidth;\n+            widthValue = Math.max(0, widthValue - horizontalMargin);\n+\n+            int heightMode = params.height != LayoutParams.WRAP_CONTENT ?\n+                    MeasureSpec.EXACTLY : MeasureSpec.AT_MOST;\n+            int heightValue = params.height >= 0 ?\n+                    Math.min(params.height, availableHeight) : availableHeight;\n+            heightValue = Math.max(0, heightValue - verticalMargin);\n+\n+            int vGravity = params.gravity & Gravity.VERTICAL_GRAVITY_MASK;\n+            if (vGravity == Gravity.CENTER_VERTICAL &&\n+                    params.height == ViewGroup.LayoutParams.MATCH_PARENT &&\n+                    availableInTopHalf > 0 &&\n+                    availableInBottomHalf > 0) {\n+                // Attempt to center if there's enough space to center.\n+                heightValue = Math.min(availableInTopHalf, availableInBottomHalf) * 2;\n+            }\n+\n+            mView.measure(\n+                    MeasureSpec.makeMeasureSpec(widthValue, widthMode),\n+                    MeasureSpec.makeMeasureSpec(heightValue, heightMode));\n+        }\n+\n+        @Override\n+        protected void onLayout(boolean changed, int l, int t, int r, int b) {\n+            // Nothing to do here, all the work is done in onPostLayout.\n+        }\n+\n+        /**\n+         * Should be called as the last layout step to properly position the custom view.\n+         */\n+        void onPostLayout(LeftNavView parent) {\n+            int width = mView.getMeasuredWidth();\n+            int height = mView.getMeasuredHeight();\n+            ActionBar.LayoutParams params = (ActionBar.LayoutParams) mView.getLayoutParams();\n+\n+            // Expressed within the coordinate system of the present view.\n+            int xPosition = 0;\n+            // Horizontal alignment is always performed within the available space.\n+           // int containerWidth = mRight - mLeft;\n+            int containerWidth = getRight() - getLeft();\n+            switch (params.gravity & Gravity.HORIZONTAL_GRAVITY_MASK) {\n+                case Gravity.CENTER_HORIZONTAL:\n+                    xPosition = (containerWidth - width) / 2;\n+                    break;\n+                case Gravity.LEFT:\n+                    xPosition = params.leftMargin;\n+                    break;\n+                case Gravity.RIGHT:\n+                    xPosition = containerWidth - width - params.rightMargin;\n+                    break;\n+            }\n+\n+            int vGravity = params.gravity & Gravity.VERTICAL_GRAVITY_MASK;\n+            // For \"center vertical\" the view gets centered within the parent, not within the\n+            // available space.\n+           /* int superContainerHeight =\n+                    parent.mBottom - parent.mTop - parent.mPaddingTop - parent.mPaddingBottom;*/\n+            int superContainerHeight =\n+                parent.getBottom() - parent.getTop() - parent.getPaddingTop() - parent.getPaddingBottom();\n+            int superCenteredTop = (superContainerHeight - height) / 2 + parent.getPaddingTop();\n+            // The coordinates of the wrapper in parent's coordinate system.\n+            int top = findTopOfAvailableSpace(parent);\n+            int bottom = findBottomOfAvailableSpace(parent);\n+\n+            // Sanity checks.\n+            if (getBottom() - getTop() != 0) {\n+                checkDimensionsConsistency(bottom - top, getBottom() - getTop());\n+            }\n+\n+            // See if we actually have room to truly center; if not push against top or bottom.\n+            if (vGravity == Gravity.CENTER_VERTICAL) {\n+                if (superCenteredTop < top) {\n+                    vGravity = Gravity.TOP;\n+                } else if (superCenteredTop + height > bottom) {\n+                    vGravity = Gravity.BOTTOM;\n+                }\n+            }\n+\n+            // Expressed within the coordinate system of the present view.\n+            int yPosition = 0;\n+            int containerHeight = bottom - top;\n+            switch (vGravity) {\n+                case Gravity.CENTER_VERTICAL:\n+                    yPosition = superCenteredTop - top;\n+                    break;\n+                case Gravity.TOP:\n+                    yPosition = params.topMargin;\n+                    break;\n+                case Gravity.BOTTOM:\n+                    yPosition = containerHeight - height - params.bottomMargin;\n+                    break;\n+            }\n+\n+            mView.layout(xPosition, yPosition, xPosition + width, yPosition + height);\n+        }\n+\n+        @Override\n+        protected ViewGroup.LayoutParams generateDefaultLayoutParams() {\n+            return new ActionBar.LayoutParams(\n+                    ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/OptionsDisplay.java",
            "additions": 129,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,129 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+/**\n+ * Manages the visual cues related to the options menu.\n+ */\n+class OptionsDisplay {\n+\n+    private final Context mContext;\n+    private ViewGroup mView;\n+    private boolean mExpanded;\n+\n+    OptionsDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n+        mContext = context;\n+        createView(parent, attributes);\n+    }\n+\n+    View getView() {\n+        return mView;\n+    }\n+\n+    OptionsDisplay setVisible(boolean visible) {\n+        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n+        return this;\n+    }\n+\n+    boolean isVisible() {\n+        return mView.getVisibility() == View.VISIBLE;\n+    }\n+\n+    OptionsDisplay setExpanded(boolean expanded) {\n+        mExpanded = expanded;\n+        refreshExpandedState();\n+        return this;\n+    }\n+\n+    private void refreshExpandedState() {\n+        // Menu icon.\n+        setOptionExpanded(mView.getChildAt(1), mExpanded);\n+        // \"Show always\" options.\n+        ViewGroup optionsContainer = getOptionsContainer();\n+        for (int i = 0; i < optionsContainer.getChildCount(); ++i) {\n+            setOptionExpanded(optionsContainer.getChildAt(i), mExpanded);\n+        }\n+    }\n+\n+    private void createView(ViewGroup parent, TypedArray attributes) {\n+        mView = (ViewGroup) LayoutInflater.from(mContext).inflate(\n+                R.layout.leftnav_bar_options, parent, false);\n+        View menuOption = mView.findViewById(R.id.menu);\n+\n+        configureOption(menuOption,\n+                mContext.getResources().getString(R.string.lib_leftnav_bar_option_label),\n+                true);\n+        menuOption.setClickable(true);\n+        menuOption.setFocusable(true);\n+        menuOption.setOnClickListener(new View.OnClickListener() {\n+           public void onClick(View view) {\n+                if (mContext instanceof Activity) {\n+                    ((Activity) mContext).openOptionsMenu();\n+                }\n+            }\n+        });\n+        setDuplicateParentState(getOptionIcon(menuOption));\n+        setDuplicateParentState(getOptionTitle(menuOption));\n+    }\n+\n+    /**\n+     * Forces a view to duplicate its parent state, working around a bug whereby the attribute only\n+     * works if set before the view is added to its parent.\n+     */\n+    private void setDuplicateParentState(View view) {\n+        view.setDuplicateParentStateEnabled(true);\n+        ViewGroup parent = (ViewGroup) view.getParent();\n+        if (parent == null) {\n+            return;\n+        }\n+        int index = parent.indexOfChild(view);\n+        parent.removeViewAt(index);\n+        parent.addView(view, index);\n+    }\n+\n+    private View configureOption(View option, CharSequence title, boolean active) {\n+        ImageView iconView = getOptionIcon(option);\n+        iconView.setEnabled(active);\n+        getOptionTitle(option).setText(title);\n+        return option;\n+    }\n+\n+    private static void setOptionExpanded(View option, boolean expanded) {\n+        getOptionTitle(option).setVisibility(expanded ? View.VISIBLE : View.GONE);\n+    }\n+\n+    private static ImageView getOptionIcon(View option) {\n+        return (ImageView) option.findViewById(R.id.icon);\n+    }\n+\n+    private static TextView getOptionTitle(View option) {\n+        return (TextView) option.findViewById(R.id.title);\n+    }\n+\n+    private ViewGroup getOptionsContainer() {\n+        return (ViewGroup) mView.findViewById(R.id.shown_options);\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/SpinnerDisplay.java",
            "additions": 99,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.app.ActionBar.OnNavigationListener;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.AdapterView;\n+import android.widget.Spinner;\n+import android.widget.SpinnerAdapter;\n+\n+/**\n+ * A display for the \"navigation list\" feature.\n+ */\n+class SpinnerDisplay {\n+\n+    private final Context mContext;\n+    private Spinner mView;\n+    private OnNavigationListener mListener;\n+    private boolean mExpanded;\n+\n+    SpinnerDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n+        mContext = context;\n+        createView(parent, attributes);\n+    }\n+\n+    View getView() {\n+        return mView;\n+    }\n+\n+    SpinnerDisplay setVisible(boolean visible) {\n+        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n+        return this;\n+    }\n+\n+    SpinnerDisplay setExpanded(boolean expanded) {\n+        mExpanded = expanded;\n+        refreshSelectedItem();\n+        return this;\n+    }\n+\n+    void setContent(SpinnerAdapter adapter, OnNavigationListener listener) {\n+        mListener = listener;\n+        mView.setAdapter(adapter);\n+        refreshSelectedItem();\n+    }\n+\n+    void setSelected(int position) {\n+        mView.setSelection(position);\n+    }\n+\n+    int getSelected() {\n+        return mView.getSelectedItemPosition();\n+    }\n+\n+    int getCount() {\n+        return mView.getCount();\n+    }\n+\n+    private void refreshSelectedItem() {\n+        View selected = mView.getSelectedView();\n+        if (selected == null) {\n+            return;\n+        }\n+        selected.setActivated(mExpanded);\n+    }\n+\n+    private void createView(ViewGroup parent, TypedArray attributes) {\n+        mView = (Spinner) LayoutInflater.from(mContext).inflate(\n+                R.layout.leftnav_bar_spinner, parent, false);\n+        mView.setOnItemSelectedListener(new Spinner.OnItemSelectedListener() {\n+            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n+                if (mListener != null) {\n+                    mListener.onNavigationItemSelected(position, id);\n+                }\n+                refreshSelectedItem();\n+            }\n+\n+            public void onNothingSelected(AdapterView<?> parent) {}\n+        });\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/TabDisplay.java",
            "additions": 319,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,319 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.app.ActionBar.Tab;\n+import android.app.Activity;\n+import android.app.FragmentTransaction;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Handles the tab navigation mode.\n+ */\n+class TabDisplay {\n+\n+    /**\n+     * Should be used to append a tab at the end of the list.\n+     *\n+     * @see #add(TabImpl, int, boolean)\n+     */\n+    public static final int LAST_POSITION = -2;\n+\n+    private static final TabImpl NONE = null;\n+\n+    private final Context mContext;\n+    private final TabAdapter mAdapter;\n+\n+    private TabListView mList;\n+    private boolean mExpanded;\n+\n+    TabDisplay(Context context, ViewGroup parent, TypedArray attributes) {\n+        mContext = context;\n+        mAdapter = new TabAdapter(context);\n+        createView(parent);\n+    }\n+\n+    private void createView(ViewGroup parent) {\n+        int resource = R.layout.leftnav_bar_tabs;\n+        mList = (TabListView) LayoutInflater.from(mContext).inflate(resource, parent, false);\n+        mList.setAdapter(mAdapter);\n+        mList.setItemsCanFocus(true);\n+        mList.setDescendantFocusability(ViewGroup.FOCUS_BEFORE_DESCENDANTS);\n+    }\n+\n+    View getView() {\n+        return mList;\n+    }\n+\n+    TabDisplay setVisible(boolean visible) {\n+        mList.setVisibility(visible ? View.VISIBLE : View.GONE);\n+        mAdapter.setSelectionActive(visible);\n+        return this;\n+    }\n+\n+    TabDisplay setExpanded(boolean expanded) {\n+        mExpanded = expanded;\n+        mAdapter.refresh();\n+        return this;\n+    }\n+\n+    /**\n+     * @see #LAST_POSITION\n+     */\n+    void add(TabImpl tab, int position, boolean setSelected) {\n+        if (position == LAST_POSITION) {\n+            position = mAdapter.getCount();\n+        }\n+        mAdapter.insert(tab, position);\n+        if (setSelected) {\n+            select(tab);\n+        }\n+    }\n+\n+    TabImpl get(int position) {\n+        return mAdapter.getItem(position);\n+    }\n+\n+    void select(TabImpl tab) {\n+        mAdapter.setSelected(tab);\n+    }\n+\n+    TabImpl getSelected() {\n+        return mAdapter.getSelected();\n+    }\n+\n+    private void onSelectionChanged(TabImpl oldSelection, TabImpl newSelection) {\n+        FragmentTransaction transaction = null;\n+        if (mContext instanceof Activity) {\n+            transaction = ((Activity) mContext).getFragmentManager()\n+                    .beginTransaction()\n+                    .disallowAddToBackStack();\n+        }\n+        if (oldSelection == newSelection) {\n+            if (newSelection != NONE && newSelection.getCallback() != null) {\n+                newSelection.getCallback().onTabReselected(newSelection, transaction);\n+            }\n+        } else {\n+            if (oldSelection != NONE && oldSelection.getCallback() != null) {\n+                oldSelection.getCallback().onTabUnselected(oldSelection, transaction);\n+            }\n+            if (newSelection != NONE && newSelection.getCallback() != null) {\n+                newSelection.getCallback().onTabSelected(newSelection, transaction);\n+            }\n+        }\n+        if (transaction != null && !transaction.isEmpty()) {\n+            transaction.commit();\n+        }\n+\n+        mList.setHighlighted(mAdapter.getPosition(newSelection));\n+    }\n+\n+    int getCount() {\n+        return mAdapter.getCount();\n+    }\n+\n+    void removeAll() {\n+        mAdapter.clear();\n+    }\n+\n+    void remove(TabImpl tab) {\n+        mAdapter.remove(tab);\n+    }\n+\n+    void remove(int position) {\n+        remove(mAdapter.getItem(position));\n+    }\n+\n+    /**\n+     * Removes the given view from its parent if it has one.\n+     */\n+    private static void detachFromParent(View view) {\n+        if (view == null) {\n+            return;\n+        }\n+        ViewGroup parent = (ViewGroup) view.getParent();\n+        if (parent != null) {\n+            parent.removeView(view);\n+        }\n+    }\n+\n+    /**\n+     * Creates views for tabs, and handles the selection state.\n+     */\n+    private final class TabAdapter extends ArrayAdapter<TabImpl> {\n+\n+        /**\n+         * Holds the views created thus far.\n+         */\n+        private final Map<TabImpl, TabFrame> mCachedViews;\n+\n+        /**\n+         * The currently selected tab, or {@code TabDisplay#NONE} if none is selected.\n+         */\n+        private TabImpl mSelection;\n+\n+        /**\n+         * {@code true} if selection changes should trigger a callback and any visual change;\n+         * otherwise the selection is just remembered.\n+         */\n+        private boolean mIsSelectionActive;\n+\n+        /**\n+         * When selection is not active, this simply remembers which tab was selected.\n+         */\n+        private TabImpl mSavedSelection;\n+\n+        TabAdapter(Context context) {\n+            super(context, 0);\n+            mCachedViews = new HashMap<TabImpl, TabFrame>();\n+            mSelection = NONE;\n+            mSavedSelection = NONE;\n+            mIsSelectionActive = true;\n+        }\n+\n+        public void setSelectionActive(boolean active) {\n+            if (active == mIsSelectionActive) {\n+                return;\n+            }\n+            if (active) {\n+                // Restore the saved selection.\n+                mIsSelectionActive = true;\n+                setSelected(mSavedSelection);\n+                mSavedSelection = NONE;\n+            } else {\n+                // Save the selection and deselect the actual tab.\n+                mSavedSelection = mSelection;\n+                setSelected(NONE);\n+                mIsSelectionActive = false;\n+            }\n+        }\n+\n+        public void setSelected(TabImpl tab) {\n+            if (!mIsSelectionActive) {\n+                // In this case, simply storing the selected tab.\n+                mSavedSelection = tab;\n+                return;\n+            }\n+            TabImpl oldSelection = mSelection;\n+            mSelection = tab;\n+            if (oldSelection != mSelection) {\n+                setSelectionState(oldSelection, false);\n+                setSelectionState(mSelection, true);\n+            }\n+            onSelectionChanged(oldSelection, mSelection);\n+        }\n+\n+        public TabImpl getSelected() {\n+            return mIsSelectionActive ? mSelection : mSavedSelection;\n+        }\n+\n+        private boolean isSelected(TabImpl tab) {\n+            return tab != NONE && tab == getSelected();\n+        }\n+\n+        private void setSelectionState(TabImpl tab, boolean selected) {\n+            if (tab != NONE && mCachedViews.containsKey(tab)) {\n+                mCachedViews.get(tab).select(selected);\n+            }\n+        }\n+\n+        public void refresh() {\n+            for (TabFrame frame : mCachedViews.values()) {\n+                frame.expand(mExpanded);\n+            }\n+        }\n+\n+        @Override\n+        public int getItemViewType(int position) {\n+            // This ensures views are not recycled.\n+            return IGNORE_ITEM_VIEW_TYPE;\n+        }\n+\n+        @Override\n+        public void insert(TabImpl tab, int position) {\n+            super.insert(tab, position);\n+            updatePositions(false /* normal order */);\n+        }\n+\n+        @Override\n+        public void remove(TabImpl tab) {\n+            // Need to make sure custom views are properly removed from their parent.\n+            detachFromParent(tab.getCustomView());\n+            mCachedViews.remove(tab);\n+            super.remove(tab);\n+            updatePositions(false /* normal order */);\n+            if (isSelected(tab)) {\n+                setSelected(getCount() == 0 ? NONE : getItem(Math.max(0, tab.getPosition() - 1)));\n+            }\n+            tab.setPosition(Tab.INVALID_POSITION);\n+        }\n+\n+        @Override\n+        public void clear() {\n+            updatePositions(true /* all invalid */);\n+            for (int i = 0; i < getCount(); ++i) {\n+                detachFromParent(getItem(i).getCustomView());\n+            }\n+            mCachedViews.clear();\n+            setSelected(NONE);\n+            super.clear();\n+        }\n+\n+        @Override\n+        public View getView(int position, View convertView, ViewGroup parent) {\n+            final TabImpl tab = getItem(position);\n+            if (!mCachedViews.containsKey(tab)) {\n+                TabFrame frame = (TabFrame) LayoutInflater.from(getContext()).inflate(\n+                        R.layout.leftnav_bar_tab, parent, false);\n+                if (tab.hasCustomView()) {\n+                    frame.configureCustom(tab.getCustomView());\n+                } else {\n+                    frame.configureNormal(tab.getIcon(), tab.getText());\n+                }\n+                frame.setOnClickListener(new View.OnClickListener() {\n+                    public void onClick(View v) {\n+                        setSelected(tab);\n+                    }\n+                });\n+                mCachedViews.put(tab, frame);\n+            }\n+            setSelectionState(tab, isSelected(tab));\n+            TabFrame result = mCachedViews.get(tab);\n+            result.expand(mExpanded);\n+            return result;\n+        }\n+\n+        /**\n+         * Updates the tab objects so that they correctly report their position in the list.\n+         *\n+         * @param   allInvalid      {@code true} to set the position as \"invalid\" on all tabs\n+         */\n+        private void updatePositions(boolean allInvalid) {\n+            for (int i = 0; i < getCount(); ++i) {\n+                getItem(i).setPosition(allInvalid ? Tab.INVALID_POSITION : i);\n+            }\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/TabFrame.java",
            "additions": 105,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+import android.util.AttributeSet;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+/**\n+ * Container for tabs, responsible for handling events and setting the correct state.\n+ */\n+class TabFrame extends LinearLayout {\n+\n+    private boolean mConfigured;\n+    private boolean mIsCustom;\n+\n+    public TabFrame(Context context, AttributeSet attributes) {\n+        super(context, attributes);\n+    }\n+\n+    @Override\n+    public void setSelected(boolean selected) {\n+        // No-op: the selected state is used to show that the tab is selected in the logical sense,\n+        // whereas ListView would attempt to use that state to show the tab as \"highlighted\" - we\n+        // use focus for that.\n+    }\n+\n+    /**\n+     * Sets the selected state of this view.\n+     */\n+    public void select(boolean selected) {\n+        super.setSelected(selected);\n+    }\n+\n+    /**\n+     * Expands the content of this tab.\n+     * <p>\n+     * For regular tabs, this will simply reveal the tab's title and mark the icon as activated.\n+     * For custom tabs, this will set their \"activated\" state.\n+     *\n+     * @see View#setActivated(boolean)\n+     */\n+    public void expand(boolean expanded) {\n+        if (!mIsCustom) {\n+            getTitle().setVisibility(expanded ? View.VISIBLE : View.GONE);\n+        }\n+        setActivated(expanded);\n+    }\n+\n+    private ImageView getIcon() {\n+        return (ImageView) findViewById(R.id.icon);\n+    }\n+\n+    private TextView getTitle() {\n+        return (TextView) findViewById(R.id.title);\n+    }\n+\n+    public void configureNormal(Drawable icon, CharSequence text) {\n+        markConfigured(false);\n+        getIcon().setImageDrawable(icon);\n+        getTitle().setText(text);\n+    }\n+\n+    public void configureCustom(View content) {\n+        markConfigured(true);\n+\n+        // The focused state should be rendered by the content.\n+        setBackgroundDrawable(null);\n+\n+        // Prevent the content from receiving events, but let it reflect the correct state.\n+        content.setFocusable(false);\n+        content.setFocusableInTouchMode(false);\n+        content.setClickable(false);\n+        content.setDuplicateParentStateEnabled(true);\n+\n+        removeAllViews();\n+        addView(content);\n+    }\n+\n+    private void markConfigured(boolean isCustom) {\n+        if (mConfigured) {\n+            throw new IllegalStateException(\"Frame already configured.\");\n+        }\n+        mConfigured = true;\n+        mIsCustom = isCustom;\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/TabImpl.java",
            "additions": 137,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.app.ActionBar;\n+import android.app.ActionBar.Tab;\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+\n+/**\n+ * Basic implementation of the ActionBar.Tab type.\n+ * <p>\n+ * {@code select()} is left unimplemented so that the entity managing tabs can define the proper\n+ * selection flow.\n+ */\n+abstract class TabImpl extends Tab {\n+\n+    private final Context mContext;\n+\n+    private ActionBar.TabListener mCallback;\n+    private Object mTag;\n+    private Drawable mIcon;\n+    private CharSequence mText;\n+    private int mPosition;\n+    private View mCustomView;\n+\n+    public TabImpl(Context context) {\n+        mContext = context;\n+    }\n+\n+    @Override\n+    public Object getTag() {\n+        return mTag;\n+    }\n+\n+    @Override\n+    public Tab setTag(Object tag) {\n+        mTag = tag;\n+        return this;\n+    }\n+\n+    @Override\n+    public Tab setTabListener(ActionBar.TabListener callback) {\n+        mCallback = callback;\n+        return this;\n+    }\n+\n+    @Override\n+    public View getCustomView() {\n+        return mCustomView;\n+    }\n+\n+    @Override\n+    public Tab setCustomView(View view) {\n+        mCustomView = view;\n+        return this;\n+    }\n+\n+    @Override\n+    public Tab setCustomView(int layoutResId) {\n+        return setCustomView(LayoutInflater.from(mContext).inflate(layoutResId, null));\n+    }\n+\n+    @Override\n+    public Drawable getIcon() {\n+        return mIcon;\n+    }\n+\n+    @Override\n+    public int getPosition() {\n+        return mPosition;\n+    }\n+\n+    public void setPosition(int position) {\n+        mPosition = position;\n+    }\n+\n+    @Override\n+    public CharSequence getText() {\n+        return mText;\n+    }\n+\n+    @Override\n+    public Tab setIcon(Drawable icon) {\n+        mIcon = icon;\n+        return this;\n+    }\n+\n+    @Override\n+    public Tab setIcon(int resId) {\n+        return setIcon(mContext.getResources().getDrawable(resId));\n+    }\n+\n+    @Override\n+    public Tab setText(CharSequence text) {\n+        mText = text;\n+        return this;\n+    }\n+\n+    @Override\n+    public Tab setText(int resId) {\n+        return setText(mContext.getResources().getText(resId));\n+    }\n+\n+    //----------------------------------------------------------------------------------------------\n+    // Non-API.\n+\n+    public ActionBar.TabListener getCallback() {\n+        return mCallback;\n+    }\n+\n+    boolean hasCustomView() {\n+        return mCustomView != null;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        Object source = mTag != null ? mTag : mText;\n+        return \"Tab:\" + (source != null ? source.toString() : \"<no id>\");\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/TabListView.java",
            "additions": 112,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Rect;\n+import android.graphics.drawable.Drawable;\n+import android.util.AttributeSet;\n+import android.view.View;\n+import android.widget.ListView;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Extension of ListView which better handles focus.\n+ */\n+public class TabListView extends ListView {\n+\n+    private int mHighlighted;\n+    private boolean mClearingFocus;\n+\n+    public TabListView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    /**\n+     * Sets the highlighted item which will receive focus whenever this list gains focus.\n+     */\n+    public void setHighlighted(int index) {\n+        mHighlighted = index;\n+    }\n+\n+    @Override\n+    public void addFocusables(ArrayList<View> views, int direction, int focusableMode) {\n+        int selectedIndex = mHighlighted - getFirstVisiblePosition();\n+        if (!hasFocus() &&\n+                selectedIndex >= 0 && selectedIndex < getChildCount() &&\n+                direction == FOCUS_LEFT) {\n+            // This will force focus on the highlighted item.\n+            setSelection(mHighlighted);\n+            getChildAt(selectedIndex).addFocusables(views, direction, focusableMode);\n+        } else {\n+            super.addFocusables(views, direction, focusableMode);\n+        }\n+    }\n+\n+    @Override\n+    public void clearFocus() {\n+        mClearingFocus = true;\n+        super.clearFocus();\n+        mClearingFocus = false;\n+    }\n+\n+    /**\n+     * Whenever the geometry of the list changes, focus gets cleared. This is problematic when the\n+     * list gets expanded. Instead of letting the focus go away, it simply gets reset slightly\n+     * later.\n+     */\n+    @Override\n+    public void clearChildFocus(View child) {\n+        if (mClearingFocus) {\n+            super.clearChildFocus(child);\n+        } else {\n+            post(new Runnable() {\n+                public void run() {\n+                    setSelection(mHighlighted);\n+                }\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Draws an extra divider at the top and bottom of the list.\n+     */\n+    @Override\n+    protected void dispatchDraw(Canvas canvas) {\n+        super.dispatchDraw(canvas);\n+        Drawable divider = getDivider();\n+        if (divider == null) {\n+            return;\n+        }\n+        \n+        Rect bounds = new Rect();\n+        bounds.left = getPaddingLeft();\n+        bounds.right = getRight() - getLeft() - getPaddingRight();\n+        // Top.\n+        bounds.top = getPaddingTop();\n+        bounds.bottom = getPaddingTop() + getDividerHeight();\n+        divider.setBounds(bounds);\n+        divider.draw(canvas);\n+        // Bottom.\n+        bounds.top = getBottom() - getTop() - getPaddingBottom() - getDividerHeight();\n+        bounds.bottom = getBottom() - getTop() - getPaddingBottom();\n+        divider.setBounds(bounds);\n+        divider.draw(canvas);\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/TitleBarView.java",
            "additions": 266,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,266 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.graphics.drawable.Drawable;\n+import android.text.TextUtils;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.ViewParent;\n+import android.view.Window;\n+import android.widget.ImageView;\n+import android.widget.ProgressBar;\n+import android.widget.RelativeLayout;\n+import android.widget.TextView;\n+\n+/**\n+ * Holds the various widgets of the title bar.\n+ */\n+public class TitleBarView extends RelativeLayout {\n+\n+    private final VisibilityController mVisibilityController;\n+\n+    private boolean mIsLegacy;\n+    private boolean mAnimationsEnabled;\n+\n+    private TextView mTitle;\n+    private TextView mSubtitle;\n+    private ImageView mLeftIcon;\n+    private ImageView mRightIcon;\n+    private ProgressBar mCircularProgress;\n+    private ProgressBar mHorizontalProgress;\n+\n+    private int mTitleResource;\n+    private int mSubtitleResource;\n+    Context mContext;\n+\n+    public TitleBarView(Context context, AttributeSet attrs) {\n+        super(context, attrs, 0);\n+        mContext=context;\n+        mVisibilityController = new VisibilityController(this);\n+        TypedArray a = context.obtainStyledAttributes(attrs, new int[] {\n+        \t\tandroid.R.attr.windowTitleStyle,\n+                android.R.attr.defaultValue });\n+        mIsLegacy = a.getBoolean(a.getIndex(1 /* defaultValue */), false);\n+        if (mIsLegacy) {\n+            mTitleResource = a.getResourceId(a.getIndex(0 /* windowTitleStyle */), 0);\n+        } else {\n+            a.recycle();\n+            a = context.obtainStyledAttributes(null,\n+                    new int[] { android.R.attr.titleTextStyle,\n+                            android.R.attr.subtitleTextStyle },\n+                    android.R.attr.actionBarStyle,\n+                    0);\n+            mTitleResource = a.getResourceId(a.getIndex(0 /* titleTextStyle */), 0);\n+            mSubtitleResource = a.getResourceId(a.getIndex(1 /* subtitleTextStyle */), 0);\n+        }\n+        a.recycle();\n+    }\n+\n+    @Override\n+    protected void onFinishInflate() {\n+        super.onFinishInflate();\n+        if (getChildCount() == 0) {\n+            // Set up the default content.\n+            LayoutInflater.from(mContext).inflate(R.layout.lib_title_bar, this, true);\n+        }\n+        mTitle = (TextView) findViewById(R.id.title);\n+        mSubtitle = (TextView) findViewById(R.id.subtitle);\n+        mLeftIcon = (ImageView) findViewById(R.id.left_icon);\n+        mRightIcon = (ImageView) findViewById(R.id.right_icon);\n+        mCircularProgress = (ProgressBar) findViewById(R.id.progress_circular);\n+        if (mCircularProgress != null) {\n+            mCircularProgress.setIndeterminate(true);  // Cannot be done in XML...\n+        }\n+        mHorizontalProgress = (ProgressBar) findViewById(R.id.progress_horizontal);\n+        if (mIsLegacy) {\n+            setTextStyle(mTitle, mTitleResource);\n+            disableSubtitle();\n+        } else {\n+            setTextStyle(mTitle, mTitleResource);\n+            setTextStyle(mSubtitle, mSubtitleResource);\n+            disableLeftIcon();\n+            disableRightIcon();\n+        }\n+    }\n+\n+    private void setTextStyle(TextView view, int style) {\n+        if (style != 0) {\n+            view.setTextAppearance(getContext(), style);\n+        }\n+    }\n+\n+    public void setTitle(CharSequence text) {\n+        mTitle.setText(text);\n+    }\n+\n+    public void setTitleColor(int color) {\n+        mTitle.setTextColor(color);\n+    }\n+\n+    public void setLeftIcon(Drawable drawable, int alpha) {\n+        setIcon(mLeftIcon, drawable, alpha);\n+    }\n+\n+    public void setRightIcon(Drawable drawable, int alpha) {\n+        setIcon(mRightIcon, drawable, alpha);\n+    }\n+\n+    private void setIcon(ImageView view, Drawable drawable, int alpha) {\n+        if (view == null) {\n+            return;\n+        }\n+        if (drawable != null) {\n+            drawable.setAlpha(alpha);\n+            view.setImageDrawable(drawable);\n+            view.setVisibility(View.VISIBLE);\n+        } else {\n+            view.setVisibility(View.GONE);\n+        }\n+    }\n+\n+    public void setHorizontalProgress(int value) {\n+        if (mHorizontalProgress == null) {\n+            return;\n+        }\n+        switch (value) {\n+            case Window.PROGRESS_VISIBILITY_ON:\n+                mHorizontalProgress.setVisibility(View.VISIBLE);\n+                break;\n+\n+            case Window.PROGRESS_VISIBILITY_OFF:\n+                mHorizontalProgress.setVisibility(View.GONE);\n+                break;\n+\n+            case Window.PROGRESS_INDETERMINATE_ON:\n+                mHorizontalProgress.setIndeterminate(true);\n+                break;\n+\n+            case Window.PROGRESS_INDETERMINATE_OFF:\n+                mHorizontalProgress.setIndeterminate(false);\n+                break;\n+\n+            default:\n+                if (Window.PROGRESS_START <= value && value <= Window.PROGRESS_END) {\n+                    mHorizontalProgress.setProgress(value - Window.PROGRESS_START);\n+                } else if (Window.PROGRESS_SECONDARY_START <= value &&\n+                        value <= Window.PROGRESS_SECONDARY_END) {\n+                    mHorizontalProgress.setSecondaryProgress(\n+                            value - Window.PROGRESS_SECONDARY_START);\n+                }\n+                break;\n+        }\n+    }\n+\n+    public boolean isHorizontalProgressVisible() {\n+        return mHorizontalProgress != null && mHorizontalProgress.getVisibility() == VISIBLE;\n+    }\n+\n+    public void setCircularProgress(int value) {\n+        if (mCircularProgress == null) {\n+            return;\n+        }\n+        switch (value) {\n+            case Window.PROGRESS_VISIBILITY_ON:\n+                mCircularProgress.setVisibility(View.VISIBLE);\n+                break;\n+\n+            case Window.PROGRESS_VISIBILITY_OFF:\n+                mCircularProgress.setVisibility(View.GONE);\n+                break;\n+\n+            default:\n+                break;\n+        }\n+    }\n+\n+    public void disableLeftIcon() {\n+        removeFromParent(mLeftIcon);\n+        mLeftIcon = null;\n+    }\n+\n+    public void disableRightIcon() {\n+        removeFromParent(mRightIcon);\n+        mRightIcon = null;\n+    }\n+\n+    public void disableHorizontalProgress() {\n+        removeFromParent(mHorizontalProgress);\n+        mHorizontalProgress = null;\n+    }\n+\n+    public void disableCircularProgress() {\n+        removeFromParent(mCircularProgress);\n+        mCircularProgress = null;\n+    }\n+\n+    private void disableSubtitle() {\n+        removeFromParent(mSubtitle);\n+        mSubtitle = null;\n+    }\n+\n+    private static void removeFromParent(View view) {\n+        if (view == null) {\n+            return;\n+        }\n+        ViewParent parent = view.getParent();\n+        if (parent != null) {\n+            ((ViewGroup) parent).removeView(view);\n+        }\n+    }\n+\n+    public CharSequence getTitle() {\n+        return mTitle.getText();\n+    }\n+\n+    public void setSubtitle(CharSequence text) {\n+        mSubtitle.setText(text);\n+        mSubtitle.setVisibility(TextUtils.isEmpty(text) ? GONE : VISIBLE);\n+    }\n+\n+    public CharSequence getSubtitle() {\n+        return mSubtitle.getText();\n+    }\n+\n+    public void setAnimationsEnabled(boolean enabled) {\n+        mAnimationsEnabled = enabled;\n+    }\n+\n+    public void setVisible(boolean visible, boolean animated) {\n+        mVisibilityController.setVisible(visible, animated && mAnimationsEnabled);\n+    }\n+\n+    public boolean isVisible() {\n+        return mVisibilityController.isVisible();\n+    }\n+\n+    public int getApparentHeight() {\n+        return isVisible() ?\n+                getContext().getResources().getDimensionPixelSize(R.dimen.title_bar_apparent_height) :\n+                0;\n+    }\n+\n+    public void setProgressVisible(boolean visible) {\n+        setCircularProgress(visible ?\n+                Window.PROGRESS_VISIBILITY_ON :\n+                Window.PROGRESS_VISIBILITY_OFF);\n+    }\n+}\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/LeftNavBarLibrary/src/com/example/google/tv/leftnavbar/VisibilityController.java",
            "additions": 79,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.google.tv.leftnavbar;\n+\n+import android.animation.Animator;\n+import android.animation.AnimatorListenerAdapter;\n+import android.animation.ObjectAnimator;\n+import android.view.View;\n+\n+/**\n+ * Manages the visibility of a view, with optional animations.\n+ */\n+public class VisibilityController {\n+\n+    private final View mView;\n+    private final int mAnimationDuration;\n+    private boolean mVisible;\n+\n+    VisibilityController(View view) {\n+        mView = view;\n+\t\tmAnimationDuration = 10000; // view.getContext().getResources()\n+\t\t\t\t//.getInteger(android.R.integer.config_shortAnimTime);\n+        mVisible = view.getVisibility() == View.VISIBLE;\n+    }\n+\n+    boolean isVisible() {\n+        return mVisible;\n+    }\n+    boolean setVisible(final boolean visible, boolean animated) {\n+        if (isVisible() == visible) {\n+            return false;\n+        }\n+        mVisible = visible;\n+        if (animated) {\n+            float toAlpha = visible ? 1.0f : 0.0f;\n+            ObjectAnimator mAnimator = ObjectAnimator.ofFloat(mView, \"Alpha\", 1-toAlpha, toAlpha);\n+            mAnimator.setDuration(mAnimationDuration).\n+                addListener(new AnimatorListenerAdapter() {\n+\n+                @Override\n+                public void onAnimationStart(Animator animator) {\n+                    if (visible) {\n+                        setViewVisible(true);\n+                    }\n+                }\n+\n+                @Override\n+                public void onAnimationEnd(Animator animator) {\n+                    if (!visible) {\n+                        setViewVisible(false);\n+                    }\n+                }\n+            });\n+            mAnimator.start();\n+        } else {\n+            setViewVisible(visible);\n+        }\n+        return true;\n+    }\n+\n+    private void setViewVisible(boolean visible) {\n+        mView.setVisibility(visible ? View.VISIBLE : View.GONE);\n+    }\n+}\n+\n"
    },
    {
        "commit hash": "c1f69793b4a994495dc8c884bc65803dc5702680",
        "previous commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "diff stats": {
            "file_path": "LeftNavBarExample/README.md",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+Make sure to link LeftNavBarlibrary to the LeftNavBarExample project!\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "previous commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "diff stats": {
            "file_path": "CarouselFragment/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -10,7 +10,7 @@\n         android:icon=\"@drawable/ic_launcher\"\n         android:label=\"Carousel\" >\n         <activity\n-            android:name=\".CarouselActivity\"\n+            android:name=\".Carousel\"\n             android:label=\"@string/app_name\" >\n             <intent-filter>\n                 <action android:name=\"android.intent.action.MAIN\" />\n"
    },
    {
        "commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "previous commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "diff stats": {
            "file_path": "CarouselFragment/res/layout/act_carousel.xml",
            "additions": 28,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/content\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    android:gravity=\"center_horizontal\" >\n+\n+    <TextView\n+        android:id=\"@+id/featured\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"fill_parent\"\n+        android:background=\"#FFFFFF\"\n+        android:textColor=\"#000000\"\n+        android:gravity=\"center\"\n+        android:textSize=\"200sp\"\n+        android:text=\"1\"\n+        android:clickable=\"true\"\n+        android:focusable=\"true\" />\n+\n+    <FrameLayout\n+        android:id=\"@+id/carousel\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:background=\"#88000000\"\n+        android:layout_gravity=\"bottom\"\n+        android:focusable=\"true\" />\n+\n+</FrameLayout>\n"
    },
    {
        "commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "previous commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "diff stats": {
            "file_path": "CarouselFragment/res/layout/carousel_gallery.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "previous commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "diff stats": {
            "file_path": "CarouselFragment/res/layout/carousel_gallery_li.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -15,7 +15,7 @@\n      limitations under the License.\n -->\n <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:id=\"@+id/PanoramioItem\"\n+    android:id=\"@+id/CarouselItem\"\n     android:layout_width=\"fill_parent\"\n     android:layout_height=\"fill_parent\"\n     android:background=\"@drawable/image_background\"\n"
    },
    {
        "commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "previous commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "diff stats": {
            "file_path": "CarouselFragment/res/layout/view_image.xml",
            "additions": 0,
            "deletions": 114
        },
        "diff content": "@@ -1,115 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-     Copyright (C) 2011 The Android Open Source Project\n-\n-     Licensed under the Apache License, Version 2.0 (the \"License\");\n-     you may not use this file except in compliance with the License.\n-     You may obtain a copy of the License at\n-\n-          http://www.apache.org/licenses/LICENSE-2.0\n-\n-     Unless required by applicable law or agreed to in writing, software\n-     distributed under the License is distributed on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-     See the License for the specific language governing permissions and\n-     limitations under the License.\n--->\n-<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:id=\"@+id/content\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    android:gravity=\"center_horizontal\" >\n-\n-    <ImageView\n-        android:id=\"@+id/image_1\"\n-        android:layout_width=\"fill_parent\"\n-        android:layout_height=\"fill_parent\"\n-        android:clickable=\"true\"\n-        android:focusable=\"true\"\n-        android:scaleType=\"centerInside\" />\n-\n-    <ImageView\n-        android:id=\"@+id/image_2\"\n-        android:layout_width=\"fill_parent\"\n-        android:layout_height=\"fill_parent\"\n-        android:clickable=\"true\"\n-        android:focusable=\"true\"\n-        android:scaleType=\"centerInside\" />\n-\n-    <ImageView\n-        android:id=\"@+id/image_logo\"\n-        android:layout_width=\"50dip\"\n-        android:layout_height=\"40dip\"\n-        android:background=\"#cc000000\"\n-        android:scaleType=\"fitXY\"\n-        android:src=\"@drawable/novoda_bot\" />\n-\n-    <TextView\n-        android:id=\"@+id/title_1\"\n-        android:layout_width=\"fill_parent\"\n-        android:layout_height=\"50dip\"\n-        android:layout_gravity=\"center_horizontal\"\n-        android:layout_marginLeft=\"34dip\"\n-        android:background=\"#88000000\"\n-        android:padding=\"10dip\"\n-        android:textSize=\"16dip\"\n-        android:typeface=\"sans\"\n-        android:ellipsize=\"end\"\n-        android:singleLine=\"true\" />\n-\n-    <TextView\n-        android:id=\"@+id/title_2\"\n-        android:layout_width=\"fill_parent\"\n-        android:layout_height=\"50dip\"\n-        android:layout_gravity=\"center_horizontal\"\n-        android:layout_marginLeft=\"34dip\"\n-        android:background=\"#88000000\"\n-        android:padding=\"10dip\"\n-        android:textSize=\"16dip\"\n-        android:typeface=\"sans\"\n-        android:ellipsize=\"end\"\n-        android:singleLine=\"true\"  />\n-\n-    <TextView\n-        android:id=\"@+id/footer_1\"\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"40dip\"\n-        android:layout_gravity=\"bottom|right\"\n-        android:background=\"#88000000\"\n-        android:clickable=\"true\"\n-        android:focusable=\"true\"\n-        android:gravity=\"top\"\n-        android:padding=\"5dip\"\n-        android:textSize=\"14dip\"\n-        android:typeface=\"sans\"\n-        android:paddingRight=\"20dip\" />\n-\n-    <TextView\n-        android:id=\"@+id/footer_2\"\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"40dip\"\n-        android:layout_gravity=\"bottom|right\"\n-        android:background=\"#88000000\"\n-        android:clickable=\"true\"\n-        android:focusable=\"true\"\n-        android:gravity=\"top\"\n-        android:padding=\"5dip\"\n-        android:textSize=\"14dip\"\n-        android:typeface=\"sans\"\n-        android:paddingRight=\"20dip\" />\n-\n-    <FrameLayout\n-        android:id=\"@+id/carousel\"\n-        android:layout_width=\"fill_parent\"\n-        android:layout_height=\"120dip\"\n-        android:layout_gravity=\"bottom\"\n-        android:focusable=\"true\" />\n-\n-    <ProgressBar\n-        android:id=\"@+id/a_progressbar\"\n-        style=\"@android:style/Widget.ProgressBar.Large\"\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_gravity=\"center\" />\n-\n-</FrameLayout>\n"
    },
    {
        "commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "previous commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "diff stats": {
            "file_path": "CarouselFragment/src/novoda/demo/Carousel.java",
            "additions": 16,
            "deletions": 17
        },
        "diff content": "@@ -28,12 +28,15 @@ import android.view.ViewGroup;\n import android.widget.AdapterView;\n import android.widget.AdapterView.OnItemClickListener;\n import android.widget.Gallery;\n+import android.widget.TextView;\n \n-public class CarouselActivity extends Activity {\n+public class Carousel extends Activity {\n \n     private static int count;\n \n-    private int visibleItemIndex;\n+    private int selectedCarouselItemIndex;\n+\n+\tprivate TextView featuredId;\n \n     private static Context mContext;\n \n@@ -44,7 +47,8 @@ public class CarouselActivity extends Activity {\n     protected void onCreate(Bundle savedInstanceState) {\n         mContext = this;\n         super.onCreate(savedInstanceState);\n-        setContentView(R.layout.view_image);\n+        setContentView(R.layout.act_carousel);\n+        featuredId = (TextView)findViewById(R.id.featured);\n     }\n \n     @Override\n@@ -52,10 +56,7 @@ public class CarouselActivity extends Activity {\n \t    switch (keyCode) {\n \t    case KeyEvent.KEYCODE_MEDIA_REWIND:\n \t    case KeyEvent.KEYCODE_DPAD_LEFT: {\n-\t        fragment = CarouselFragment.newInstance(visibleItemIndex - 1);\n-\t\n-\t        // Execute a transaction, replacing any existing fragment\n-\t        // with this one inside the frame.\n+\t        fragment = CarouselFragment.newInstance(selectedCarouselItemIndex - 1);\n \t        FragmentTransaction ft = getFragmentManager().beginTransaction();\n \t        ft.replace(R.id.carousel, fragment);\n \t        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);\n@@ -66,10 +67,7 @@ public class CarouselActivity extends Activity {\n \t    case KeyEvent.KEYCODE_MEDIA_FAST_FORWARD:\n \t    case KeyEvent.KEYCODE_DPAD_RIGHT: {\n \t       \n-\t        fragment = CarouselFragment.newInstance(visibleItemIndex + 1);\n-\t\n-\t        // Execute a transaction, replacing any existing fragment\n-\t        // with this one inside the frame.\n+\t        fragment = CarouselFragment.newInstance(selectedCarouselItemIndex + 1);\n \t        FragmentTransaction ft = getFragmentManager().beginTransaction();\n \t        ft.replace(R.id.carousel, fragment);\n \t        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);\n@@ -79,10 +77,7 @@ public class CarouselActivity extends Activity {\n \t    }\n \t    case KeyEvent.KEYCODE_DPAD_DOWN: {\n \t        \n-\t        fragment = CarouselFragment.newInstance(visibleItemIndex);\n-\t\n-\t        // Execute a transaction, replacing any existing fragment\n-\t        // with this one inside the frame.\n+\t        fragment = CarouselFragment.newInstance(selectedCarouselItemIndex);\n \t        FragmentTransaction ft = getFragmentManager().beginTransaction();\n \t        ft.replace(R.id.carousel, fragment);\n \t        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);\n@@ -117,14 +112,14 @@ public class CarouselActivity extends Activity {\n \t    public View onCreateView(\n \t            LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n \t        super.onCreateView(inflater, container, savedInstanceState);\n-\t        Gallery gallery = (Gallery) inflater.inflate(R.layout.image_gallery, null);\n+\t        Gallery gallery = (Gallery) inflater.inflate(R.layout.carousel_gallery, null);\n \t\n \t        // In dual-pane mode, the list view highlights the selected item.\n \t        gallery.setAdapter(new GalleryAdapter(mContext));\n \t        gallery.setOnItemClickListener(new OnItemClickListener() {\n \t            public void onItemClick(AdapterView<?> l, View v, int position, long id) {\n \t                count = position;\n-//\t                ((CarouselActivity) mContext).showImage();\n+\t                ((Carousel) mContext).setSelectedId(id);\n \t                FragmentTransaction ft = getFragmentManager().beginTransaction();\n \t                ft.hide(fragment);\n \t                ft.commit();\n@@ -137,4 +132,8 @@ public class CarouselActivity extends Activity {\n \t        return gallery;\n \t    }\n \t}\n+\n+\tprotected void setSelectedId(long id) {\n+\t\tfeaturedId.setText(Long.toString(id));\n+\t}\n }\n"
    },
    {
        "commit hash": "f60a269d2eecad6cb705da0d6d94c6efe37cf73c",
        "previous commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "diff stats": {
            "file_path": "CarouselFragment/src/novoda/demo/GalleryAdapter.java",
            "additions": 2,
            "deletions": 4
        },
        "diff content": "@@ -29,18 +29,16 @@ class GalleryAdapter extends BaseAdapter {\n     }\n \n     public long getItemId(int position) {\n-        return 987654l;\n+        return position;\n     }\n \n     public View getView(int position, View convertView, ViewGroup parent) {\n         View view;\n         if (convertView == null) {\n-            // Make up a new view\n             final LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(\n                     Context.LAYOUT_INFLATER_SERVICE);\n-            view = inflater.inflate(R.layout.gallery_item, null);\n+            view = inflater.inflate(R.layout.carousel_gallery_li, null);\n         } else {\n-            // Use convertView if it is available\n             view = convertView;\n         }\n         final ImageView imageView = (ImageView) view.findViewById(R.id.image);\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/assets/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CarouselFragment/assets/placeholder.png and b/CarouselFragment/assets/placeholder.png differ\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/project.properties",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -11,4 +11,4 @@\n #proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n \n # Project target.\n-target=android-15\n+target=android-12\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CarouselFragment/res/drawable-hdpi/ic_launcher.png and b/CarouselFragment/res/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-hdpi/novoda_bot.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/res/drawable-hdpi/novoda_bot.png differ\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-hdpi/panoramio_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CarouselFragment/res/drawable-hdpi/panoramio_logo.png and /dev/null differ\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CarouselFragment/res/drawable-ldpi/ic_launcher.png and b/CarouselFragment/res/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CarouselFragment/res/drawable-mdpi/ic_launcher.png and b/CarouselFragment/res/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/CarouselFragment/res/drawable-xhdpi/ic_launcher.png and b/CarouselFragment/res/drawable-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "6daa2323bf5040d3e63a973afad42dbd8473f97a",
        "previous commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "diff stats": {
            "file_path": "CarouselFragment/res/layout/view_image.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -42,7 +42,7 @@\n         android:layout_height=\"40dip\"\n         android:background=\"#cc000000\"\n         android:scaleType=\"fitXY\"\n-        android:src=\"@drawable/panoramio_logo\" />\n+        android:src=\"@drawable/novoda_bot\" />\n \n     <TextView\n         android:id=\"@+id/title_1\"\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/AndroidManifest.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"novoda.demo\"\n+    android:versionCode=\"1\"\n+    android:versionName=\"1.0\" >\n+\n+    <uses-sdk android:minSdkVersion=\"11\" />\n+\n+    <application\n+        android:icon=\"@drawable/ic_launcher\"\n+        android:label=\"Carousel\" >\n+        <activity\n+            android:name=\".CarouselActivity\"\n+            android:label=\"@string/app_name\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/assets/placeholder.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/assets/placeholder.png differ\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/proguard-project.txt",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+# To enable ProGuard in your project, edit project.properties\n+# to define the proguard.config property as described in that file.\n+#\n+# Add project specific ProGuard rules here.\n+# By default, the flags in this file are appended to flags specified\n+# in ${sdk.dir}/tools/proguard/proguard-android.txt\n+# You can edit the include path and order by changing the ProGuard\n+# include property in project.properties.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# Add any project specific keep options here:\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/project.properties",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must be checked in Version Control Systems.\n+#\n+# To customize properties used by the Ant build system edit\n+# \"ant.properties\", and override values to adapt the script to your\n+# project structure.\n+#\n+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):\n+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt\n+\n+# Project target.\n+target=android-15\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/res/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-hdpi/image_background.xml",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:drawable=\"@drawable/item_focused\" android:state_enabled=\"false\"\n+         android:state_focused=\"true\"/>\n+    <item android:drawable=\"@drawable/item_focused\" android:state_pressed=\"true\"/>\n+    <item android:drawable=\"@drawable/item_focused\" android:state_focused=\"true\"/>\n+    <item android:drawable=\"@drawable/item_focused\" android:state_activated=\"true\"/>\n+    <item android:drawable=\"@drawable/item_focused\" android:state_checked=\"true\"/>\n+</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-hdpi/item_focused.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/res/drawable-hdpi/item_focused.9.png differ\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-hdpi/panoramio_logo.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/res/drawable-hdpi/panoramio_logo.png differ\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/res/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/res/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/drawable-xhdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CarouselFragment/res/drawable-xhdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/layout/gallery_item.xml",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+     Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/PanoramioItem\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    android:background=\"@drawable/image_background\"\n+    android:padding=\"10dip\" >\n+\n+    <ImageView\n+        android:id=\"@+id/image\"\n+        android:layout_width=\"120dp\"\n+        android:layout_height=\"120dp\"\n+        android:layout_margin=\"2dip\"\n+        android:scaleType=\"centerCrop\" />\n+\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/layout/image_gallery.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<Gallery xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/gallery\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"120dip\"\n+    android:alpha=\"1.0\"\n+    android:background=\"#99000000\"\n+    android:clipChildren=\"true\"\n+    android:paddingTop=\"10dp\"\n+    android:spacing=\"5dp\" />\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/layout/view_image.xml",
            "additions": 115,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,115 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+     Copyright (C) 2011 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/content\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    android:gravity=\"center_horizontal\" >\n+\n+    <ImageView\n+        android:id=\"@+id/image_1\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"fill_parent\"\n+        android:clickable=\"true\"\n+        android:focusable=\"true\"\n+        android:scaleType=\"centerInside\" />\n+\n+    <ImageView\n+        android:id=\"@+id/image_2\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"fill_parent\"\n+        android:clickable=\"true\"\n+        android:focusable=\"true\"\n+        android:scaleType=\"centerInside\" />\n+\n+    <ImageView\n+        android:id=\"@+id/image_logo\"\n+        android:layout_width=\"50dip\"\n+        android:layout_height=\"40dip\"\n+        android:background=\"#cc000000\"\n+        android:scaleType=\"fitXY\"\n+        android:src=\"@drawable/panoramio_logo\" />\n+\n+    <TextView\n+        android:id=\"@+id/title_1\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"50dip\"\n+        android:layout_gravity=\"center_horizontal\"\n+        android:layout_marginLeft=\"34dip\"\n+        android:background=\"#88000000\"\n+        android:padding=\"10dip\"\n+        android:textSize=\"16dip\"\n+        android:typeface=\"sans\"\n+        android:ellipsize=\"end\"\n+        android:singleLine=\"true\" />\n+\n+    <TextView\n+        android:id=\"@+id/title_2\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"50dip\"\n+        android:layout_gravity=\"center_horizontal\"\n+        android:layout_marginLeft=\"34dip\"\n+        android:background=\"#88000000\"\n+        android:padding=\"10dip\"\n+        android:textSize=\"16dip\"\n+        android:typeface=\"sans\"\n+        android:ellipsize=\"end\"\n+        android:singleLine=\"true\"  />\n+\n+    <TextView\n+        android:id=\"@+id/footer_1\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"40dip\"\n+        android:layout_gravity=\"bottom|right\"\n+        android:background=\"#88000000\"\n+        android:clickable=\"true\"\n+        android:focusable=\"true\"\n+        android:gravity=\"top\"\n+        android:padding=\"5dip\"\n+        android:textSize=\"14dip\"\n+        android:typeface=\"sans\"\n+        android:paddingRight=\"20dip\" />\n+\n+    <TextView\n+        android:id=\"@+id/footer_2\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"40dip\"\n+        android:layout_gravity=\"bottom|right\"\n+        android:background=\"#88000000\"\n+        android:clickable=\"true\"\n+        android:focusable=\"true\"\n+        android:gravity=\"top\"\n+        android:padding=\"5dip\"\n+        android:textSize=\"14dip\"\n+        android:typeface=\"sans\"\n+        android:paddingRight=\"20dip\" />\n+\n+    <FrameLayout\n+        android:id=\"@+id/carousel\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"120dip\"\n+        android:layout_gravity=\"bottom\"\n+        android:focusable=\"true\" />\n+\n+    <ProgressBar\n+        android:id=\"@+id/a_progressbar\"\n+        style=\"@android:style/Widget.ProgressBar.Large\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_gravity=\"center\" />\n+\n+</FrameLayout>\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/res/values/strings.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\n+    <string name=\"hello\">Hello World, CarouselActivity!</string>\n+    <string name=\"app_name\">Carousel</string>\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/src/novoda/demo/CarouselActivity.java",
            "additions": 140,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,140 @@\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package novoda.demo;\n+\n+import android.app.Activity;\n+import android.app.Fragment;\n+import android.app.FragmentTransaction;\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.AdapterView;\n+import android.widget.AdapterView.OnItemClickListener;\n+import android.widget.Gallery;\n+\n+public class CarouselActivity extends Activity {\n+\n+    private static int count;\n+\n+    private int visibleItemIndex;\n+\n+    private static Context mContext;\n+\n+    private static CarouselFragment fragment;\n+\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        mContext = this;\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.view_image);\n+    }\n+\n+    @Override\n+\tpublic boolean onKeyDown(int keyCode, KeyEvent event) {\n+\t    switch (keyCode) {\n+\t    case KeyEvent.KEYCODE_MEDIA_REWIND:\n+\t    case KeyEvent.KEYCODE_DPAD_LEFT: {\n+\t        fragment = CarouselFragment.newInstance(visibleItemIndex - 1);\n+\t\n+\t        // Execute a transaction, replacing any existing fragment\n+\t        // with this one inside the frame.\n+\t        FragmentTransaction ft = getFragmentManager().beginTransaction();\n+\t        ft.replace(R.id.carousel, fragment);\n+\t        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);\n+\t        ft.commit();\n+\t\n+\t        break;\n+\t    }\n+\t    case KeyEvent.KEYCODE_MEDIA_FAST_FORWARD:\n+\t    case KeyEvent.KEYCODE_DPAD_RIGHT: {\n+\t       \n+\t        fragment = CarouselFragment.newInstance(visibleItemIndex + 1);\n+\t\n+\t        // Execute a transaction, replacing any existing fragment\n+\t        // with this one inside the frame.\n+\t        FragmentTransaction ft = getFragmentManager().beginTransaction();\n+\t        ft.replace(R.id.carousel, fragment);\n+\t        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);\n+\t        ft.commit();\n+\t\n+\t        break;\n+\t    }\n+\t    case KeyEvent.KEYCODE_DPAD_DOWN: {\n+\t        \n+\t        fragment = CarouselFragment.newInstance(visibleItemIndex);\n+\t\n+\t        // Execute a transaction, replacing any existing fragment\n+\t        // with this one inside the frame.\n+\t        FragmentTransaction ft = getFragmentManager().beginTransaction();\n+\t        ft.replace(R.id.carousel, fragment);\n+\t        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);\n+\t        ft.commit();\n+\t\n+\t        break;\n+\t    }\n+\t    case KeyEvent.KEYCODE_DPAD_UP: {\n+\t        FragmentTransaction ft = getFragmentManager().beginTransaction();\n+\t        ft.hide(fragment);\n+\t        ft.commit();\n+\t        break;\n+\t    }\n+\t    }\n+\t    return super.onKeyDown(keyCode, event);\n+\t}\n+\n+    public static class CarouselFragment extends Fragment {\n+\t    static int mCurCheckPosition = 0;\n+\t    @Override\n+\t    public void onActivityCreated(Bundle savedInstanceState) {\n+\t        super.onActivityCreated(savedInstanceState);\n+\t    }\n+\t\n+\t    public static CarouselFragment newInstance(int index) {\n+\t        CarouselFragment f = new CarouselFragment();\n+\t        mCurCheckPosition = index;\n+\t        return f;\n+\t    }\n+\t\n+\t    @Override\n+\t    public View onCreateView(\n+\t            LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+\t        super.onCreateView(inflater, container, savedInstanceState);\n+\t        Gallery gallery = (Gallery) inflater.inflate(R.layout.image_gallery, null);\n+\t\n+\t        // In dual-pane mode, the list view highlights the selected item.\n+\t        gallery.setAdapter(new GalleryAdapter(mContext));\n+\t        gallery.setOnItemClickListener(new OnItemClickListener() {\n+\t            public void onItemClick(AdapterView<?> l, View v, int position, long id) {\n+\t                count = position;\n+//\t                ((CarouselActivity) mContext).showImage();\n+\t                FragmentTransaction ft = getFragmentManager().beginTransaction();\n+\t                ft.hide(fragment);\n+\t                ft.commit();\n+\t            }\n+\t        });\n+\t\n+\t        gallery.requestFocus();\n+\t        gallery.setSelection(mCurCheckPosition);\n+\t\n+\t        return gallery;\n+\t    }\n+\t}\n+}\n"
    },
    {
        "commit hash": "f46828bf0706a6284b2ee2bd7dddf8a5c03cd87f",
        "previous commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "diff stats": {
            "file_path": "CarouselFragment/src/novoda/demo/GalleryAdapter.java",
            "additions": 59,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,59 @@\n+package novoda.demo;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.ImageView;\n+\n+class GalleryAdapter extends BaseAdapter {\n+\n+    private final Context mContext;\n+\n+    public GalleryAdapter(Context c) {\n+        mContext = c;\n+    }\n+\n+    public int getCount() {\n+        return 15;\n+    }\n+\n+    public Object getItem(int position) {\n+        return new Object();\n+    }\n+\n+    public long getItemId(int position) {\n+        return 987654l;\n+    }\n+\n+    public View getView(int position, View convertView, ViewGroup parent) {\n+        View view;\n+        if (convertView == null) {\n+            // Make up a new view\n+            final LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(\n+                    Context.LAYOUT_INFLATER_SERVICE);\n+            view = inflater.inflate(R.layout.gallery_item, null);\n+        } else {\n+            // Use convertView if it is available\n+            view = convertView;\n+        }\n+        final ImageView imageView = (ImageView) view.findViewById(R.id.image);\n+        \n+        Bitmap image = null;\n+        try {\n+            InputStream bitmap=mContext.getAssets().open(\"placeholder.png\");\n+            image=BitmapFactory.decodeStream(bitmap);\n+        } catch (IOException e1) {\n+            e1.printStackTrace();\n+        }\n+        \n+        imageView.setImageBitmap(image);\n+        return view;\n+    }\n+}\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/AndroidManifest.xml",
            "additions": 31,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<manifest\n+\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tpackage=\"novoda.demo.fragments.list\"\n+\tandroid:versionCode=\"55\"\n+\tandroid:versionName=\"3.5.1\">\n+\n+    <uses-sdk\n+    \tandroid:minSdkVersion=\"4\"\n+    \tandroid:targetSdkVersion=\"13\"/>\n+\n+    <application\n+    \tandroid:icon=\"@drawable/ic_launcher\"\n+    \tandroid:label=\"@string/application_label\"\n+\t\tandroid:theme=\"@android:style/Theme.NoTitleBar\">\n+\n+\t\t<activity\n+\t\t\tandroid:name=\".activities.List\"\n+\t\t\tandroid:label=\"@string/application_label\">\n+\t\t\t\n+\t\t\t<intent-filter>\n+\t\t\t\t<action android:name=\"android.intent.action.MAIN\" />\n+\t\t\t\t<category android:name=\"android.intent.category.LAUNCHER\" />\n+\t\t\t</intent-filter>\n+\t\t</activity>\n+\t\t\n+\t\t<activity android:name=\".activities.Details\" />\n+\t\t\n+    </application>\n+</manifest>\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/README.md",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+ActionBarSherlock Sample: Shakespeare\n+=====================================\n+\n+See [actionbarsherlock.com/samples.html][1] for information on the sample\n+contained in this folder.\n+\n+\n+\n+\n+\n+\n+\n+ [1]: http://actionbarsherlock.com/samples.html\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/libs/android-support-v4.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Fragments/simple/libs/android-support-v4.jar differ\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/pom.xml",
            "additions": 103,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,103 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\n+\t<groupId>com.actionbarsherlock</groupId>\n+\t<artifactId>sample-shakespeare</artifactId>\n+\t<name>Sample: Shakespeare</name>\n+\t<packaging>apk</packaging>\n+\n+\t<parent>\n+\t\t<groupId>com.actionbarsherlock</groupId>\n+\t\t<artifactId>parent-sample</artifactId>\n+\t\t<version>3.5.1</version>\n+\t\t<relativePath>../pom.xml</relativePath>\n+\t</parent>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>android</groupId>\n+\t\t\t<artifactId>android</artifactId>\n+\t\t\t<scope>provided</scope>\n+\t\t</dependency>\n+\t\t\n+\t\t<dependency>\n+\t\t\t<groupId>com.actionbarsherlock</groupId>\n+\t\t\t<artifactId>library</artifactId>\n+\t\t\t<version>${project.version}</version>\n+\t\t\t<type>apklib</type>\n+\t\t</dependency>\n+\t</dependencies>\n+\n+\t<build>\n+\t\t<sourceDirectory>src</sourceDirectory>\n+\t\t<finalName>${apk.prefix}-${project.artifactId}-unaligned</finalName>\n+\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>com.jayway.maven.plugins.android.generation2</groupId>\n+\t\t\t\t<artifactId>maven-android-plugin</artifactId>\n+\t\t\t\t<extensions>true</extensions>\n+\t\t\t</plugin>\n+\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<skip>true</skip>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+\t<profiles>\n+\t\t<profile>\n+\t\t\t<id>release</id>\n+\t\t\t<activation>\n+\t\t\t\t<property>\n+\t\t\t\t\t<name>performRelease</name>\n+\t\t\t\t\t<value>true</value>\n+\t\t\t\t</property>\n+\t\t\t</activation>\n+\t\t\t<build>\n+\t\t\t\t<plugins>\n+\t\t\t\t\t<plugin>\n+\t\t\t\t\t\t<groupId>com.jayway.maven.plugins.android.generation2</groupId>\n+\t\t\t\t\t\t<artifactId>maven-android-plugin</artifactId>\n+\t\t\t\t\t\t<inherited>true</inherited>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<zipalign>\n+\t\t\t\t\t\t\t\t<inputApk>${project.build.directory}/${project.build.finalName}.apk</inputApk>\n+\t\t\t\t\t\t\t\t<outputApk>${project.build.directory}/${apk.prefix}-${project.artifactId}.apk</outputApk>\n+\t\t\t\t\t\t\t</zipalign>\n+\t\t\t\t\t\t</configuration>\n+\t\t\t\t\t\t<executions>\n+\t\t\t\t\t\t\t<execution>\n+\t\t\t\t\t\t\t\t<id>alignApk</id>\n+\t\t\t\t\t\t\t\t<phase>package</phase>\n+\t\t\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t\t\t<goal>zipalign</goal>\n+\t\t\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t\t</execution>\n+\t\t\t\t\t\t</executions>\n+\t\t\t\t\t</plugin>\n+\n+\t\t\t\t\t<plugin>\n+\t\t\t\t\t\t<groupId>com.jakewharton</groupId>\n+\t\t\t\t\t\t<artifactId>github-deploy-maven-plugin</artifactId>\n+\t\t\t\t\t\t<version>1.0.1</version>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<types>\n+\t\t\t\t\t\t\t\t<type>aligned</type>\n+\t\t\t\t\t\t\t</types>\n+\t\t\t\t\t\t</configuration>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>deploy</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</plugin>\n+\t\t\t\t</plugins>\n+\t\t\t</build>\n+\t\t</profile>\n+\t</profiles>\n+</project>\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/project.properties",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must be checked in Version Control Systems.\n+#\n+# To customize properties used by the Ant build system use,\n+# \"ant.properties\", and override values to adapt the script to your\n+# project structure.\n+\n+# Project target.\n+target=android-14\n+android.library.reference.1=../../library\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/res/drawable-hdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Fragments/simple/res/drawable-hdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/res/drawable-ldpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Fragments/simple/res/drawable-ldpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/res/drawable-mdpi/ic_launcher.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Fragments/simple/res/drawable-mdpi/ic_launcher.png differ\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/res/drawable-xhdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Fragments/simple/res/drawable-xhdpi/icon.png differ\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/res/layout-land/act_list.xml",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2010 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+  \n+          http://www.apache.org/licenses/LICENSE-2.0\n+  \n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<!-- Top-level content view for the layout fragment sample.  This version is\n+     for display when in landscape: we can fit both titles and dialog. -->\n+\n+\n+<LinearLayout\n+\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:orientation=\"horizontal\"\n+\tandroid:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\">\n+\n+\t<fragment\n+\t\tclass=\"novoda.demo.fragments.list.frags.List\"\n+\t\tandroid:id=\"@+id/fragment_titles\"\n+\t\tandroid:layout_weight=\"2\"\n+\t\tandroid:layout_width=\"0px\"\n+\t\tandroid:layout_height=\"fill_parent\" />\n+\n+\t<FrameLayout\n+\t\tandroid:id=\"@+id/frame_details\"\n+\t\tandroid:layout_weight=\"3\"\n+\t\tandroid:layout_width=\"0px\"\n+\t\tandroid:layout_height=\"fill_parent\" />\n+    \n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/res/layout-xlarge-land/act_list.xml",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2010 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+  \n+          http://www.apache.org/licenses/LICENSE-2.0\n+  \n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<!-- Top-level content view for the layout fragment sample.  This version is\n+     for display when in landscape: we can fit both titles and dialog. -->\n+\n+\n+<LinearLayout\n+\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:orientation=\"horizontal\"\n+\tandroid:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\">\n+\n+\t<fragment\n+\t\tclass=\"novoda.demo.fragments.list.frags.List\"\n+\t\tandroid:id=\"@+id/fragment_titles\"\n+\t\tandroid:layout_weight=\"1\"\n+\t\tandroid:layout_width=\"0px\"\n+\t\tandroid:layout_height=\"fill_parent\" />\n+\n+\t<FrameLayout\n+\t\tandroid:id=\"@+id/frame_details\"\n+\t\tandroid:layout_weight=\"3\"\n+\t\tandroid:layout_width=\"0px\"\n+\t\tandroid:layout_height=\"fill_parent\" />\n+    \n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/res/layout/act_list.xml",
            "additions": 33,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2010 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+  \n+          http://www.apache.org/licenses/LICENSE-2.0\n+  \n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+\n+<!-- Top-level content view for the layout fragment sample.  This version is\n+     for display when not in landscape: we can only fit the list of titles. -->\n+\n+\n+<FrameLayout\n+\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\">\n+\n+\t<fragment\n+\t\tclass=\"novoda.demo.fragments.list.frags.List\"\n+\t\tandroid:id=\"@+id/fragment_titles\"\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"fill_parent\" />\n+\n+</FrameLayout>\n+\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/res/values/strings.xml",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"application_label\">Demo: Frags List</string>\n+</resources>\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/src/novoda/demo/fragments/list/Constants.java",
            "additions": 66,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,66 @@\n+package novoda.demo.fragments.list;\n+\n+public final class Constants {\n+    public static final String[] ITEMS = \n+    {\n+            \"Item 1\",   \n+            \"Item 2\",\n+            \"Item 3\",       \n+            \"Item 4\",\n+    };\n+    \n+    public static final String[] DETAILS = \n+    {\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\" +\n+            \"Item 1, Item 1, Item 1, Item 1, Item 1, Item 1,\",\n+            \n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\" +\n+            \"Item 2, Item 2, Item 2, Item 2, Item 2, Item 2,\",\n+            \n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\" +\n+            \"Item 3, Item 3, Item 3, Item 3, Item 3, Item 3,\",\n+            \n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\" +\n+            \"Item 4, Item 4, Item 4, Item 4, Item 4, Item 4,\"\n+    };\n+}\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/src/novoda/demo/fragments/list/activities/Details.java",
            "additions": 60,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,60 @@\n+package novoda.demo.fragments.list.activities;\n+\n+import novoda.demo.fragments.list.frags.Detail;\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.content.res.Configuration;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.support.v4.app.FragmentActivity;\n+\n+\n+public class Details extends FragmentActivity {\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+\n+        if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {\n+            // If the screen is now in landscape mode, we can show the\n+            // dialog in-line with the list so we don't need this activity.\n+            finish();\n+            return;\n+        }\n+\n+        if (savedInstanceState == null) {\n+            // During initial setup, plug in the details fragment.\n+            Detail details = new Detail();\n+            details.setArguments(getIntent().getExtras());\n+            \n+            getSupportFragmentManager()\n+            \t.beginTransaction()\n+            \t.add(android.R.id.content, details)\n+            \t.commit();\n+        }\n+        \n+//        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n+    }\n+    \n+    @Override\n+\tpublic boolean onOptionsItemSelected(android.view.MenuItem item) {\n+\t\tswitch (item.getItemId()) {\n+\t\t\tcase android.R.id.home:\n+\t\t\t\tIntent intent = new Intent(this, List.class);\n+\t\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n+\t\t\t\tstartActivity(intent);\n+\t\t\t\t\n+\t\t\t\t//Get rid of the slide-in animation, if possible\n+\t            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ECLAIR) {\n+\t                OverridePendingTransition.invoke(this);\n+\t            }\n+\t\t}\n+\t\t\n+\t\treturn super.onOptionsItemSelected(item);\n+\t}\n+\n+    private static final class OverridePendingTransition {\n+        static void invoke(Activity activity) {\n+            activity.overridePendingTransition(0, 0);\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/src/novoda/demo/fragments/list/activities/List.java",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package novoda.demo.fragments.list.activities;\n+\n+import novoda.demo.fragments.list.R;\n+import android.os.Bundle;\n+import android.support.v4.app.FragmentActivity;\n+\n+public class List extends FragmentActivity {\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.act_list);\n+    }\n+}\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/src/novoda/demo/fragments/list/frags/Detail.java",
            "additions": 38,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,38 @@\n+package novoda.demo.fragments.list.frags;\n+\n+import novoda.demo.fragments.list.Constants;\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ScrollView;\n+import android.widget.TextView;\n+\n+public class Detail extends Fragment {\n+    public static Detail newInstance(int index) {\n+        Bundle args = new Bundle();\n+        args.putInt(\"index\", index);\n+        \n+        Detail f = new Detail();\n+        f.setArguments(args);\n+\n+        return f;\n+    }\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        if (container == null) {\n+            return null;\n+        }\n+\n+        ScrollView scroller = new ScrollView(getActivity());\n+        TextView text = new TextView(getActivity());\n+        int padding = (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 4, getActivity().getResources().getDisplayMetrics());\n+        text.setPadding(padding, padding, padding, padding);\n+        scroller.addView(text);\n+        text.setText(Constants.DETAILS[getArguments().getInt(\"index\", 0)]);\n+        return scroller;\n+    }\n+}\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "Fragments/simple/src/novoda/demo/fragments/list/frags/List.java",
            "additions": 74,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,74 @@\n+package novoda.demo.fragments.list.frags;\n+\n+import novoda.demo.fragments.list.R;\n+import novoda.demo.fragments.list.Constants;\n+import novoda.demo.fragments.list.activities.Details;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.support.v4.app.FragmentTransaction;\n+import android.support.v4.app.ListFragment;\n+import android.view.View;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListView;\n+\n+public class List extends ListFragment {\n+    boolean mHasDetailsFrame;\n+    int mPositionChecked = 0;\n+    int mPositionShown = -1;\n+\n+    @Override\n+    public void onActivityCreated(Bundle savedInstanceState) {\n+        super.onActivityCreated(savedInstanceState);\n+        setListAdapter(new ArrayAdapter<String>(getActivity(), android.R.layout.simple_list_item_1, Constants.ITEMS));\n+\n+        View detailsFrame = getActivity().findViewById(R.id.frame_details);\n+        mHasDetailsFrame = (detailsFrame != null) && (detailsFrame.getVisibility() == View.VISIBLE);\n+\n+        if (savedInstanceState != null) {\n+            mPositionChecked = savedInstanceState.getInt(\"curChoice\", 0);\n+            mPositionShown = savedInstanceState.getInt(\"shownChoice\", -1);\n+        }\n+\n+        if (mHasDetailsFrame) {\n+            getListView().setChoiceMode(ListView.CHOICE_MODE_SINGLE);\n+            upateDetailsFragment(mPositionChecked);\n+        }\n+    }\n+\n+    @Override\n+    public void onSaveInstanceState(Bundle outState) {\n+        super.onSaveInstanceState(outState);\n+        outState.putInt(\"curChoice\", mPositionChecked);\n+        outState.putInt(\"shownChoice\", mPositionShown);\n+    }\n+\n+    @Override\n+    public void onListItemClick(ListView l, View v, int position, long id) {\n+        upateDetailsFragment(position);\n+    }\n+\n+    void upateDetailsFragment(int index) {\n+        mPositionChecked = index;\n+\n+        if (mHasDetailsFrame) {\n+            getListView().setItemChecked(index, true);\n+\n+            if (mPositionShown != mPositionChecked) {\n+                Detail df = Detail.newInstance(index);\n+                getFragmentManager()\n+                \t.beginTransaction()\n+                \t.replace(R.id.frame_details, df)\n+                \t.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+                \t.commit();\n+                \n+                mPositionShown = index;\n+            }\n+\n+        } else {\n+            Intent intent = new Intent();\n+            intent.setClass(getActivity(), Details.class);\n+            intent.putExtra(\"index\", index);\n+            startActivity(intent);\n+        }\n+    }\n+}\n"
    },
    {
        "commit hash": "32d57e0e6a8b3f88740560bd5bcf31abcab99d61",
        "previous commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "diff stats": {
            "file_path": "GsonJsonWebservice/project.properties",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+#\n+# This file must be checked in Version Control Systems.\n+#\n+# To customize properties used by the Ant build system use,\n+# \"ant.properties\", and override values to adapt the script to your\n+# project structure.\n+\n+# Indicates whether an apk should be generated for each density.\n+split.density=false\n+# Project target.\n+target=android-3\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/AndroidManifest.xml",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\" package=\"com.novoda\">\n+      \n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\"com.novoda.activity.JsonRequest\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+\n+    </application>\n+    \n+    <uses-sdk android:minSdkVersion=\"3\" />\n+    <uses-permission android:name=\"android.permission.INTERNET\"></uses-permission>\n+\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/lib/gson-1.6.jar",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/GsonJsonWebservice/lib/gson-1.6.jar differ\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/GsonJsonWebservice/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/res/layout/main.xml",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\" >\n+\t<TextView  \n+\t\tandroid:id=\"@+id/search\"\n+    \tandroid:layout_width=\"fill_parent\" \n+    \tandroid:layout_height=\"wrap_content\"  />\n+    <ListView\n+    \tandroid:id=\"@+id/list\"\n+    \tandroid:layout_width=\"fill_parent\"\n+    \tandroid:layout_height=\"fill_parent\" />\n+    \n+</LinearLayout>\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, JsonParsingActivity!</string>\n+    <string name=\"app_name\">JsonParser</string>\n+</resources>\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/com/novoda/activity/JsonRequest.java",
            "additions": 89,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,89 @@\n+package com.novoda.activity;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.DefaultHttpClient;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListView;\n+import android.widget.SimpleAdapter;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import com.google.gson.Gson;\n+import com.novoda.R;\n+import com.novoda.model.Result;\n+import com.novoda.model.SearchResponse;\n+\n+public class JsonRequest extends Activity {\n+\t\n+\tprivate static final String SEARCH = \"Droidcon\";\n+\tString url = \"http://search.twitter.com/search.json?q=\" + SEARCH;\n+\t\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.main);\n+        ((TextView)findViewById(R.id.search)).setText(\"Searching for: \" + SEARCH);\n+    }\n+    \n+    @Override\n+    protected void onResume() {\n+    \tsuper.onResume();\n+    \tToast.makeText(this, \"Querying droidcon on Twitter\", Toast.LENGTH_SHORT).show();\n+    \t\n+        Reader reader = new InputStreamReader(retrieveStream(url));\n+        SearchResponse response = new Gson().fromJson(reader, SearchResponse.class);\n+        \n+        List<String> searches = new ArrayList<String>();\n+        Iterator<Result> i = response.results.iterator();\n+        while(i.hasNext()){\n+        \tResult res = (Result )i.next();\n+        \tsearches.add(res.text);\n+        }\n+        \n+        ListView v = (ListView)findViewById(R.id.list);\n+        v.setAdapter(new ArrayAdapter<String>(this,\n+        \t\tandroid.R.layout.simple_list_item_1, searches.toArray(new String[searches.size()])));\n+    }\n+    \n+    private InputStream retrieveStream(String url) {\n+    \t\n+    \tDefaultHttpClient client = new DefaultHttpClient(); \n+        HttpGet getRequest = new HttpGet(url);\n+          \n+        try {\n+           \n+           HttpResponse getResponse = client.execute(getRequest);\n+           final int statusCode = getResponse.getStatusLine().getStatusCode();\n+           \n+           if (statusCode != HttpStatus.SC_OK) { \n+              Log.w(getClass().getSimpleName(), \"Error \" + statusCode + \" for URL \" + url); \n+              return null;\n+           }\n+\n+           HttpEntity getResponseEntity = getResponse.getEntity();\n+           return getResponseEntity.getContent();\n+           \n+        } \n+        catch (IOException e) {\n+           getRequest.abort();\n+           Log.w(getClass().getSimpleName(), \"Error for URL \" + url, e);\n+        }\n+        return null;\n+     }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/com/novoda/model/Metadata.java",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.model;\r\n+\r\n+import com.google.gson.annotations.SerializedName;\r\n+\r\n+public class Metadata {\r\n+\t\r\n+\t@SerializedName(\"result_type\")\r\n+\tpublic String resultType;\r\n+\r\n+}\r\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/com/novoda/model/Result.java",
            "additions": 42,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,42 @@\n+package com.novoda.model;\r\n+\r\n+import com.google.gson.annotations.SerializedName;\r\n+\r\n+public class Result {\r\n+\t\r\n+\t@SerializedName(\"from_user_id_str\")\r\n+\tpublic String fromUserIdStr;\r\n+\t\r\n+\t@SerializedName(\"profile_image_url\")\r\n+\tpublic String profileImageUrl;\r\n+\t\r\n+\t@SerializedName(\"created_at\")\r\n+\tpublic String createdAt;\r\n+\t\r\n+\t@SerializedName(\"from_user\")\r\n+\tpublic String fromUser;\r\n+\t\r\n+\t@SerializedName(\"id_str\")\r\n+\tpublic String idStr;\r\n+\t\r\n+\tpublic Metadata metadata;\r\n+\t\r\n+\t@SerializedName(\"to_user_id\")\r\n+\tpublic String toUserId;\r\n+\t\r\n+\tpublic String text;\r\n+\t\r\n+\tpublic long id;\r\n+\t\r\n+\t@SerializedName(\"from_user_id\")\r\n+\tpublic String from_user_id;\r\n+\r\n+\t@SerializedName(\"iso_language_code\")\r\n+\tpublic String isoLanguageCode;\r\n+\r\n+\t@SerializedName(\"to_user_id_str\")\r\n+\tpublic String toUserIdStr;\r\n+\r\n+\tpublic String source;\r\n+\t\r\n+}\r\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/src/com/novoda/model/SearchResponse.java",
            "additions": 39,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,39 @@\n+package com.novoda.model;\r\n+\r\n+import java.util.List;\r\n+\r\n+import com.google.gson.annotations.SerializedName;\r\n+\r\n+public class SearchResponse {\r\n+\t\r\n+\tpublic List<Result> results;\r\n+\t\r\n+\t@SerializedName(\"max_id\")\r\n+\tpublic long maxId;\r\n+\t\r\n+\t@SerializedName(\"since_id\")\r\n+\tpublic int sinceId;\r\n+\t\r\n+\t@SerializedName(\"refresh_url\")\r\n+\tpublic String refreshUrl;\r\n+\t\r\n+\t@SerializedName(\"next_page\")\r\n+\tpublic String nextPage;\r\n+\t\r\n+\t@SerializedName(\"results_per_page\")\r\n+\tpublic int resultsPerPage;\r\n+\t\r\n+\tpublic int page;\r\n+\t\r\n+\t@SerializedName(\"completed_in\")\r\n+\tpublic double completedIn;\r\n+\t\r\n+\t@SerializedName(\"since_id_str\")\r\n+\tpublic String sinceIdStr;\r\n+\t\r\n+\t@SerializedName(\"max_id_str\")\r\n+\tpublic String maxIdStr;\r\n+\t\r\n+\tpublic String query;\r\n+\t\r\n+}\r\n"
    },
    {
        "commit hash": "b07230504b083b66c85915f8ed479b77d0738844",
        "previous commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "diff stats": {
            "file_path": "GsonJsonWebservice/twitter_search.json",
            "additions": 284,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,284 @@\n+{\r\n+    \"results\":[\r\n+        {\r\n+            \"from_user_id_str\":\"166411715\",\r\n+            \"profile_image_url\":\"http://a2.twimg.com/sticky/default_profile_images/default_profile_5_normal.png\",\r\n+            \"created_at\":\"Sat, 29 Jan 2011 12:55:53 +0000\",\r\n+            \"from_user\":\"javinpaul\",\r\n+            \"id_str\":\"31334717215215616\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Cajo, the easiest way to accomplish distributed computing in Java http://t.co/lRVcMIB via @AddThis\",\r\n+            \"id\":31334717215215616,\r\n+            \"from_user_id\":166411715,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://twitter.com/tweetbutton&quot; rel=&quot;nofollow&quot;&gt;Tweet Button&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"156448494\",\r\n+            \"profile_image_url\":\"http://a0.twimg.com/profile_images/332590072/me_normal.jpg\",\r\n+            \"created_at\":\"Sat, 29 Jan 2011 12:13:29 +0000\",\r\n+            \"from_user\":\"stoimenpopov\",\r\n+            \"id_str\":\"31324047023284224\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Programming Android Online Book http://t.co/2hcqGYI\",\r\n+            \"id\":31324047023284224,\r\n+            \"from_user_id\":156448494,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"nl\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://twitter.com/tweetbutton&quot; rel=&quot;nofollow&quot;&gt;Tweet Button&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"27450865\",\r\n+            \"profile_image_url\":\"http://a0.twimg.com/profile_images/742522411/me-grey_normal.jpg\",\r\n+            \"created_at\":\"Fri, 28 Jan 2011 20:13:30 +0000\",\r\n+            \"from_user\":\"trevorhinson\",\r\n+            \"id_str\":\"31082460104097792\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Java Code Geeks Aspect Oriented Programming with Spring AOP ... http://bit.ly/gBaRoe\",\r\n+            \"id\":31082460104097792,\r\n+            \"from_user_id\":27450865,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://www.trevorhinson.com&quot; rel=&quot;nofollow&quot;&gt;Trevor Hinson&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"142160370\",\r\n+            \"profile_image_url\":\"http://a0.twimg.com/profile_images/1107027237/fsznajdermanAvatar_normal.jpg\",\r\n+            \"created_at\":\"Fri, 28 Jan 2011 15:04:21 +0000\",\r\n+            \"from_user\":\"fsznajderman\",\r\n+            \"id_str\":\"31004660080836608\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"#FF @Yapiroo @antoine_sd @Abderrazakk @aheritier @fsarradin @SlimTebourbi @jverrecchia @javacodegeeks @chanezon\",\r\n+            \"id\":31004660080836608,\r\n+            \"from_user_id\":142160370,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"fr\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://seesmic.com/app&quot; rel=&quot;nofollow&quot;&gt;Seesmic Web&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"26704\",\r\n+            \"profile_image_url\":\"http://a2.twimg.com/profile_images/54576135/glider_normal.png\",\r\n+            \"created_at\":\"Fri, 28 Jan 2011 12:20:19 +0000\",\r\n+            \"from_user\":\"yamanetoshi\",\r\n+            \"id_str\":\"30963377899569153\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Java Code Geeks: Programming Android Online Book: Java Code Geeks: Programming Android Online BookWednesday, 26 ... http://bit.ly/gZ0BOD\",\r\n+            \"id\":30963377899569153,\r\n+            \"from_user_id\":26704,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"nl\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://twitterfeed.com&quot; rel=&quot;nofollow&quot;&gt;twitterfeed&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"24851557\",\r\n+            \"profile_image_url\":\"http://a2.twimg.com/profile_images/935457246/3-Speed_Intestellar_Cruiser-Layout1_normal.jpg\",\r\n+            \"created_at\":\"Fri, 28 Jan 2011 08:39:00 +0000\",\r\n+            \"from_user\":\"rpreibold\",\r\n+            \"id_str\":\"30907683796156416\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Cajo, the easiest way to accomplish distributed computing in Java ...: \\u201cDistributed computing is becoming increa... http://bit.ly/e7krIx\",\r\n+            \"id\":30907683796156416,\r\n+            \"from_user_id\":24851557,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://twitterfeed.com&quot; rel=&quot;nofollow&quot;&gt;twitterfeed&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"175079023\",\r\n+            \"profile_image_url\":\"http://a3.twimg.com/profile_images/1175975504/DukeWithRedStrat-small_normal.png\",\r\n+            \"created_at\":\"Fri, 28 Jan 2011 05:44:09 +0000\",\r\n+            \"from_user\":\"marceldullaart\",\r\n+            \"id_str\":\"30863681898151937\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Google humor: &quot;@javacodegeeks: Android API includes a WTF log method! It stands for What a Terrible Failure, lol http://bit.ly/9XhrcG\\u201d\",\r\n+            \"id\":30863681898151937,\r\n+            \"from_user_id\":175079023,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://twitter.com/&quot; rel=&quot;nofollow&quot;&gt;Twitter for iPhone&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"8617734\",\r\n+            \"profile_image_url\":\"http://a3.twimg.com/profile_images/344837501/ChipAnd_Rufus_normal.jpg\",\r\n+            \"created_at\":\"Thu, 27 Jan 2011 23:48:56 +0000\",\r\n+            \"from_user\":\"chipzt\",\r\n+            \"id_str\":\"30774288508260352\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"RT @javacodegeeks: Cajo, the easiest way to accomplish distributed computing in Java http://goo.gl/fb/q4R5R\",\r\n+            \"id\":30774288508260352,\r\n+            \"from_user_id\":8617734,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://www.google.com/support/youtube/bin/answer.py?hl=en&amp;answer=164577&quot; rel=&quot;nofollow&quot;&gt;Google&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"153214018\",\r\n+            \"profile_image_url\":\"http://a1.twimg.com/profile_images/1228115665/avatar-fear-the-bunny_normal.jpg\",\r\n+            \"created_at\":\"Thu, 27 Jan 2011 22:37:22 +0000\",\r\n+            \"from_user\":\"pen7agram\",\r\n+            \"id_str\":\"30756277718097920\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Java Code Geeks: Programming Android Online Book http://t.co/q2u87eU\",\r\n+            \"id\":30756277718097920,\r\n+            \"from_user_id\":153214018,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"nl\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://twitter.com/tweetbutton&quot; rel=&quot;nofollow&quot;&gt;Tweet Button&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"122831839\",\r\n+            \"profile_image_url\":\"http://a2.twimg.com/profile_images/1177403124/logo_jcg_73x73_normal.png\",\r\n+            \"created_at\":\"Thu, 27 Jan 2011 21:46:30 +0000\",\r\n+            \"from_user\":\"javacodegeeks\",\r\n+            \"id_str\":\"30743475129417728\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Cajo, the easiest way to accomplish distributed computing in Java http://goo.gl/fb/q4R5R\",\r\n+            \"id\":30743475129417728,\r\n+            \"from_user_id\":122831839,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://www.google.com/support/youtube/bin/answer.py?hl=en&amp;answer=164577&quot; rel=&quot;nofollow&quot;&gt;Google&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"167141194\",\r\n+            \"profile_image_url\":\"http://a0.twimg.com/profile_images/1148255502/BLiNC_logo_normal.png\",\r\n+            \"created_at\":\"Thu, 27 Jan 2011 19:03:07 +0000\",\r\n+            \"from_user\":\"baselogic\",\r\n+            \"id_str\":\"30702359977918464\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"#java Aspect Oriented Programming with Spring AOP: Java Code Geeks http://bit.ly/dYaWm5 jb\",\r\n+            \"id\":30702359977918464,\r\n+            \"from_user_id\":167141194,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://twitterfeed.com&quot; rel=&quot;nofollow&quot;&gt;twitterfeed&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"122831839\",\r\n+            \"profile_image_url\":\"http://a2.twimg.com/profile_images/1177403124/logo_jcg_73x73_normal.png\",\r\n+            \"created_at\":\"Thu, 27 Jan 2011 18:43:25 +0000\",\r\n+            \"from_user\":\"javacodegeeks\",\r\n+            \"id_str\":\"30697402478370817\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Aspect Oriented Programming Spring AOP http://goo.gl/fb/Ag8GD\",\r\n+            \"id\":30697402478370817,\r\n+            \"from_user_id\":122831839,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://www.google.com/support/youtube/bin/answer.py?hl=en&amp;answer=164577&quot; rel=&quot;nofollow&quot;&gt;Google&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"146737491\",\r\n+            \"profile_image_url\":\"http://a1.twimg.com/profile_images/1160209343/maggy_avatar_hand_normal.png\",\r\n+            \"created_at\":\"Thu, 27 Jan 2011 18:10:10 +0000\",\r\n+            \"from_user\":\"maggyX84\",\r\n+            \"id_str\":\"30689035584282624\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"RT @javacodegeeks: Programming Android Online Book http://goo.gl/fb/4bFjG\",\r\n+            \"id\":30689035584282624,\r\n+            \"from_user_id\":146737491,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"nl\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://www.google.com/support/youtube/bin/answer.py?hl=en&amp;answer=164577&quot; rel=&quot;nofollow&quot;&gt;Google&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"142160370\",\r\n+            \"profile_image_url\":\"http://a0.twimg.com/profile_images/1107027237/fsznajdermanAvatar_normal.jpg\",\r\n+            \"created_at\":\"Thu, 27 Jan 2011 17:43:10 +0000\",\r\n+            \"from_user\":\"fsznajderman\",\r\n+            \"id_str\":\"30682238626562048\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"Android Quick Preferences Tutorial http://bit.ly/hyNSEE\",\r\n+            \"id\":30682238626562048,\r\n+            \"from_user_id\":142160370,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"en\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://twitter.com/&quot;&gt;web&lt;/a&gt;\"\r\n+        },\r\n+        {\r\n+            \"from_user_id_str\":\"15058226\",\r\n+            \"profile_image_url\":\"http://a1.twimg.com/profile_images/461496225/marcoerikestrada3wb_normal.jpg\",\r\n+            \"created_at\":\"Thu, 27 Jan 2011 15:21:05 +0000\",\r\n+            \"from_user\":\"Han_Cholo\",\r\n+            \"id_str\":\"30646481841033216\",\r\n+            \"metadata\":{\r\n+                \"result_type\":\"recent\"\r\n+            },\r\n+            \"to_user_id\":null,\r\n+            \"text\":\"RT @javacodegeeks: Programming Android Online Book http://goo.gl/fb/4bFjG\",\r\n+            \"id\":30646481841033216,\r\n+            \"from_user_id\":15058226,\r\n+            \"geo\":null,\r\n+            \"iso_language_code\":\"nl\",\r\n+            \"to_user_id_str\":null,\r\n+            \"source\":\"&lt;a href=&quot;http://www.twittergadget.com&quot; rel=&quot;nofollow&quot;&gt;tGadget&lt;/a&gt;\"\r\n+        }\r\n+    ],\r\n+    \"max_id\":31335751476056064,\r\n+    \"since_id\":0,\r\n+    \"refresh_url\":\"?since_id=31335751476056064&q=javacodegeeks\",\r\n+    \"next_page\":\"?page=2&max_id=31335751476056064&q=javacodegeeks\",\r\n+    \"results_per_page\":15,\r\n+    \"page\":1,\r\n+    \"completed_in\":0.169141,\r\n+    \"since_id_str\":\"0\",\r\n+    \"max_id_str\":\"31335751476056064\",\r\n+    \"query\":\"javacodegeeks\"\r\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/AndroidManifest.xml",
            "additions": 0,
            "deletions": 28
        },
        "diff content": "@@ -1,28 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-      package=\"com.novoda.demos.activitylaunchmode\"\n-      android:versionCode=\"101\"\n-      android:versionName=\"1.1\">\n-    <uses-sdk android:minSdkVersion=\"4\" />\n-\n-    <application android:icon=\"@drawable/icon\" android:label=\"Activities launchMode Demo\"\n-     android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\"\n-     android:name=\".BaseApplication\">\n-    \n-        <activity android:name=\".Standard\" >\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity>\n-        \n-        <activity android:name=\".SingleTop\" android:launchMode=\"singleTop\" />\n-        \n-        <activity android:name=\".SingleTask\" android:launchMode=\"singleTask\" />\n-        \n-        <activity android:name=\".SingleInstance\" android:launchMode=\"singleInstance\" />\n-\n-    </application>\n-    \n-    <uses-permission android:name=\"android.permission.GET_TASKS\"/>\n-</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/market_resources/512x512icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/ActivitesLaunchModes/market_resources/512x512icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/proguard.cfg",
            "additions": 0,
            "deletions": 40
        },
        "diff content": "@@ -1,40 +0,0 @@\n--optimizationpasses 5\n--dontusemixedcaseclassnames\n--dontskipnonpubliclibraryclasses\n--dontpreverify\n--verbose\n--optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n-\n--keep public class * extends android.app.Activity\n--keep public class * extends android.app.Application\n--keep public class * extends android.app.Service\n--keep public class * extends android.content.BroadcastReceiver\n--keep public class * extends android.content.ContentProvider\n--keep public class * extends android.app.backup.BackupAgentHelper\n--keep public class * extends android.preference.Preference\n--keep public class com.android.vending.licensing.ILicensingService\n-\n--keepclasseswithmembernames class * {\n-    native <methods>;\n-}\n-\n--keepclasseswithmembers class * {\n-    public <init>(android.content.Context, android.util.AttributeSet);\n-}\n-\n--keepclasseswithmembers class * {\n-    public <init>(android.content.Context, android.util.AttributeSet, int);\n-}\n-\n--keepclassmembers class * extends android.app.Activity {\n-   public void *(android.view.View);\n-}\n-\n--keepclassmembers enum * {\n-    public static **[] values();\n-    public static ** valueOf(java.lang.String);\n-}\n-\n--keep class * implements android.os.Parcelable {\n-  public static final android.os.Parcelable$Creator *;\n-}\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/ActivitesLaunchModes/res/drawable-hdpi/icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/layout/main.xml",
            "additions": 0,
            "deletions": 99
        },
        "diff content": "@@ -1,99 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<RelativeLayout\n-\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n-\tandroid:layout_width=\"fill_parent\"\n-\tandroid:layout_height=\"fill_parent\"\n-\tandroid:id=\"@+id/main_layout\">\n-\n-\t<TextView\n-\t\tandroid:layout_width=\"fill_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:layout_alignParentTop=\"true\"\n-\t\tandroid:id=\"@+id/header\"\n-\t\tandroid:textSize=\"18sp\"\n-\t\tandroid:textStyle=\"bold\"\n-\t\tandroid:textColor=\"@android:color/white\"\n-\t\tandroid:padding=\"4dp\" />\n-\n-\t<TextView\n-\t\tandroid:layout_width=\"wrap_content\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:layout_below=\"@+id/header\"\n-\t\tandroid:layout_above=\"@+id/btn_standard\"\n-\t\tandroid:id=\"@+id/lifecycle_content\"\n-\t\tandroid:padding=\"4dp\"\n-\t\tandroid:textSize=\"15sp\"\n-\t\tandroid:scrollbars=\"vertical\"\n-\t\tandroid:textColor=\"@android:color/white\" />\n-\n-\t<LinearLayout\n-\t\tandroid:layout_width=\"100dp\"\n-\t\tandroid:layout_height=\"fill_parent\"\n-\t\tandroid:layout_below=\"@+id/header\"\n-\t\tandroid:layout_above=\"@+id/btn_standard\"\n-\t\tandroid:background=\"@android:color/white\"\n-\t\tandroid:layout_alignParentRight=\"true\"\n-\t\tandroid:layout_margin=\"4dp\"\n-\t\tandroid:padding=\"2dp\"\n-\t\tandroid:gravity=\"bottom\"\n-\t\tandroid:orientation=\"vertical\"\n-\t\tandroid:id=\"@+id/current_stack_view\">\n-<!--\t\t<ImageView-->\n-<!--\t\t\tandroid:layout_width=\"fill_parent\"-->\n-<!--\t\t\tandroid:layout_height=\"10dp\"-->\n-<!--\t\t\tandroid:background=\"@color/red\"-->\n-<!--\t\t\tandroid:layout_margin=\"2dp\" />-->\n-<!--\t\t<ImageView-->\n-<!--\t\t\tandroid:layout_width=\"fill_parent\"-->\n-<!--\t\t\tandroid:layout_height=\"10dp\"-->\n-<!--\t\t\tandroid:background=\"@color/yellow\"-->\n-<!--\t\t\tandroid:layout_margin=\"2dp\"/>-->\n-<!--\t\t<ImageView-->\n-<!--\t\t\tandroid:layout_width=\"fill_parent\"-->\n-<!--\t\t\tandroid:layout_height=\"10dp\"-->\n-<!--\t\t\tandroid:background=\"@color/blue\"-->\n-<!--\t\t\tandroid:layout_margin=\"2dp\" />-->\n-<!--\t\t<ImageView-->\n-<!--\t\t\tandroid:layout_width=\"fill_parent\"-->\n-<!--\t\t\tandroid:layout_height=\"10dp\"-->\n-<!--\t\t\tandroid:background=\"@color/green\" -->\n-<!--\t\t\tandroid:layout_margin=\"2dp\"/>-->\n-\t</LinearLayout>\n-\n-\t<Button\n-\t\tandroid:layout_width=\"fill_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:layout_above=\"@+id/btn_singletop\"\n-\t\tandroid:onClick=\"generalOnClick\"\n-\t\tandroid:id=\"@+id/btn_standard\"\n-\t\tandroid:text=\"standard\"\n-\t\tandroid:textColor=\"@color/green\" />\n-\n-\t<Button\n-\t\tandroid:layout_width=\"fill_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:layout_above=\"@+id/btn_singletask\"\n-\t\tandroid:onClick=\"generalOnClick\"\n-\t\tandroid:id=\"@+id/btn_singletop\"\n-\t\tandroid:text=\"singleTop\"\n-\t\tandroid:textColor=\"@color/blue\" />\n-\n-\t<Button\n-\t\tandroid:layout_width=\"fill_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:layout_above=\"@+id/btn_singleInstance\"\n-\t\tandroid:onClick=\"generalOnClick\"\n-\t\tandroid:id=\"@+id/btn_singletask\"\n-\t\tandroid:text=\"singleTask\"\n-\t\tandroid:textColor=\"#ff6600\" />\n-\n-\t<Button\n-\t\tandroid:layout_width=\"fill_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:layout_alignParentBottom=\"true\"\n-\t\tandroid:onClick=\"generalOnClick\"\n-\t\tandroid:id=\"@+id/btn_singleInstance\"\n-\t\tandroid:text=\"singleInstance\"\n-\t\tandroid:textColor=\"@color/red\" />\n-\n-</RelativeLayout>\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/menu/base_activity.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\t<item android:id=\"@+id/menuitem_intentfilter_mode\" \n-\t\tandroid:title=\"IntentFilter mode\" />\n-</menu>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/values/colors.xml",
            "additions": 0,
            "deletions": 7
        },
        "diff content": "@@ -1,7 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-\t<color name=\"red\">#cc0000</color>\n-\t<color name=\"blue\">#6699ff</color>\n-\t<color name=\"green\">#00cc00</color>\n-\t<color name=\"yellow\">#ffcc00</color>    \n-</resources>\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/BaseActivity.java",
            "additions": 0,
            "deletions": 298
        },
        "diff content": "@@ -1,298 +0,0 @@\n-package com.novoda.demos.activitylaunchmode;\n-\n-import java.util.Stack;\n-\n-import android.app.Activity;\n-import android.app.AlertDialog.Builder;\n-import android.content.DialogInterface;\n-import android.content.Intent;\n-import android.content.DialogInterface.OnClickListener;\n-import android.content.DialogInterface.OnMultiChoiceClickListener;\n-import android.os.Bundle;\n-import android.os.Handler;\n-import android.text.method.ScrollingMovementMethod;\n-import android.util.Log;\n-import android.view.Menu;\n-import android.view.MenuInflater;\n-import android.view.MenuItem;\n-import android.view.View;\n-import android.widget.ImageView;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.LinearLayout.LayoutParams;\n-\n-public abstract class BaseActivity extends Activity {\n-\t\n-\tprivate String [] intentFlagsText = {\n-\t\t\t\t\t\t\t \"CLEAR_TOP\"\n-\t\t\t\t\t\t\t, \"CLEAR_WHEN_TASK_RESET\"\n-\t\t\t\t\t\t\t, \"EXCLUDE_FROM_RECENTS\"\n-\t\t\t\t\t\t\t, \"FORWARD_RESULT\"\n-\t\t\t\t\t\t\t, \"MULTIPLE_TASK\"\n-\t\t\t\t\t\t\t, \"NEW_TASK\"\n-\t\t\t\t\t\t\t, \"NO_HISTORY\"\n-\t\t\t\t\t\t\t, \"NO_USER_ACTION\"\n-\t\t\t\t\t\t\t, \"PREVIOUS_IS_TOP\"\n-\t\t\t\t\t\t\t, \"REORDER_TO_FRONT\"\n-\t\t\t\t\t\t\t, \"RESET_TASK_IF_NEEDED\"\n-\t\t\t\t\t\t\t, \"SINGLE_TOP\"};\n-\t\n-\tprivate int [] intentFlags = {\n-\t\tIntent.FLAG_ACTIVITY_CLEAR_TOP,\n-\t\tIntent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET,\n-\t\tIntent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS,\n-\t\tIntent.FLAG_ACTIVITY_FORWARD_RESULT,\n-\t\tIntent.FLAG_ACTIVITY_MULTIPLE_TASK,\n-\t\tIntent.FLAG_ACTIVITY_NEW_TASK,\n-\t\tIntent.FLAG_ACTIVITY_NO_HISTORY,\n-\t\tIntent.FLAG_ACTIVITY_NO_USER_ACTION,\n-\t\tIntent.FLAG_ACTIVITY_PREVIOUS_IS_TOP,\n-\t\tIntent.FLAG_ACTIVITY_REORDER_TO_FRONT,\n-\t\tIntent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED,\n-\t\tIntent.FLAG_ACTIVITY_SINGLE_TOP\n-\t};\n-\t\n-\tprivate int chosenFlags;\n-\t\n-\tprivate static final String LOG_TAG = \"ActivitesLaunchDemo\";\n-\t\n-\tprivate final int DISPLAY_STACK_DELAY = 500;\n-\t\n-\tprivate TextView lifecycle;\n-\t\n-\tprivate StringBuilder lifecycleFlow = new StringBuilder();\n-\t\n-\tprivate Handler handler = new Handler();\n-\n-\tprivate LinearLayout currentStackView;\n-\n-\tprivate Runnable displayStack = new Runnable() {\n-\n-\t\tpublic void run() {\n-\t\t\tLog.v(LOG_TAG,\"===============================\");\n-\t\t\tBaseApplication app = (BaseApplication)getApplication();\n-\t\t\tStack<BaseActivity> currentStack = app.getCurrentStack();\n-\t\t\tfor(int location = currentStack.size() - 1; location >= 0 ; location--){\n-\t\t\t\tBaseActivity activity = currentStack.get(location);\n-\t\t\t\tLog.v(LOG_TAG,activity.getClass().getSimpleName());\n-\t\t\t\tImageView activityImage = new ImageView(BaseActivity.this);\n-\t\t\t\tactivityImage.setBackgroundResource(activity.getBackgroundColour());\n-\t\t\t\tLinearLayout.LayoutParams params = new LayoutParams(LinearLayout.LayoutParams.FILL_PARENT, 10);\n-\t\t\t\tparams.setMargins(2, 2, 2, 2);\n-\t\t\t\tactivityImage.setLayoutParams(params);\n-\t\t\t\tcurrentStackView.addView(activityImage);\n-\t\t\t}\n-\t\t\tLog.v(LOG_TAG,\"===============================\");\n-\t\t}\n-\t\t\n-\t};\n-\n-\t@Override\n-\tpublic void onContentChanged() {\n-\t\tlog();\n-\t\tsuper.onContentChanged();\n-\t}\n-\n-\t@Override\n-\tprotected void onDestroy() {\n-\t\tlog();\n-\t\tremoveFromStack();\n-\t\tsuper.onDestroy();\n-\t}\n-\n-\t@Override\n-\tprotected void onNewIntent(Intent intent) {\n-\t\tlog();\n-\t\tsuper.onNewIntent(intent);\n-\t}\n-\n-\t@Override\n-\tprotected void onPause() {\n-\t\tlog();\n-\t\tsuper.onPause();\n-\t}\n-\n-\t@Override\n-\tprotected void onPostCreate(Bundle savedInstanceState) {\n-\t\tlog();\n-\t\tsuper.onPostCreate(savedInstanceState);\n-\t}\n-\n-\t@Override\n-\tprotected void onPostResume() {\n-\t\tlog();\n-\t\tsuper.onPostResume();\n-\t}\n-\n-\t@Override\n-\tprotected void onRestart() {\n-\t\tlog();\n-\t\tsuper.onRestart();\n-\t}\n-\n-\t@Override\n-\tprotected void onRestoreInstanceState(Bundle savedInstanceState) {\n-\t\tlog();\n-\t\tsuper.onRestoreInstanceState(savedInstanceState);\n-\t}\n-\n-\t@Override\n-\tprotected void onResume() {\n-\t\tlog();\n-\t\tcurrentStackView.removeAllViews();\n-\t\thandler.postDelayed(displayStack, DISPLAY_STACK_DELAY);\n-\t\tsuper.onResume();\n-\t}\n-\n-\t@Override\n-\tpublic Object onRetainNonConfigurationInstance() {\n-\t\tlog();\n-\t\treturn super.onRetainNonConfigurationInstance();\n-\t}\n-\n-\t@Override\n-\tprotected void onSaveInstanceState(Bundle outState) {\n-\t\tlog();\n-\t\tsuper.onSaveInstanceState(outState);\n-\t}\n-\n-\t@Override\n-\tprotected void onStart() {\n-\t\tlog();\n-\t\tsuper.onStart();\n-\t}\n-\n-\t@Override\n-\tprotected void onStop() {\n-\t\tlog();\n-\t\tsuper.onStop();\n-\t}\n-\t\n-\tprivate void log() {\n-    \tThread current = Thread.currentThread();\n-    \tStackTraceElement trace = current.getStackTrace()[3];\n-    \tString method = trace.getMethodName();\n-    \tLog.v(LOG_TAG,getLaunchMode() + \": \" + method);\n-    \tlifecycleFlow.append(method).append(\"\\n\");\n-    \tif(lifecycle != null){\n-    \t\tlifecycle.setText(lifecycleFlow.toString());\n-    \t}\n-\t}\n-\t\n-    @Override\n-    public void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-        setContentView(R.layout.main);\n-        findViewById(R.id.main_layout).setBackgroundResource(getBackgroundColour());\n-        TextView header = (TextView)findViewById(R.id.header);\n-        header.setText(getLaunchMode());\n-        lifecycle = (TextView)findViewById(R.id.lifecycle_content);\n-        lifecycle.setMovementMethod(new ScrollingMovementMethod());\n-        currentStackView = (LinearLayout) findViewById(R.id.current_stack_view);\n-        log();\n-\t\taddToStack();\n-    }\n-\n-    private void addToStack() {\n-    \tBaseApplication app = (BaseApplication)getApplication();\n-    \tapp.pushToStack(this);\n-\t}\n-    \n-\tprivate void removeFromStack() {\n-\t\tBaseApplication app = (BaseApplication)getApplication();\n-\t\tapp.removeFromStack(this);\n-\t}\n-\n-\tprivate String getLaunchMode(){\n-    \treturn \"[\" + hashCode() + \"] \" + getClass().getSimpleName();\n-    }\n-\t\n-\tpublic void generalOnClick(View v){\n-\t\tif(isIntentFilterMode()){\n-\t\t\tshowIntentFilterDialog(v);\n-\t\t}else{\n-\t\t\tstartActivity(getNextIntent(v));\n-\t\t}\n-\t}\n-\n-\tprivate void showIntentFilterDialog(final View nextActivityBtn) {\n-\t\tchosenFlags = 0;\n-\t    final Builder build = new Builder(this);\n-\t    build.setTitle(\"List selection\");\n-\t    build.setCancelable(true);\n-\t    final OnMultiChoiceClickListener onClick =\n-\t      new OnMultiChoiceClickListener() {\n-\t    \t@Override \n-\t\t\tpublic void onClick(DialogInterface dialog, int which, boolean isChecked) {\n-\t\t\t\tchosenFlags |= intentFlags[which];\n-\t\t\t}\n-\t      };\n-\t    build.setMultiChoiceItems(intentFlagsText, null, onClick);\n-\t    build.setPositiveButton(\"Done\", new OnClickListener() {\n-\t      @Override public void onClick(final DialogInterface dialog, final int which) {\n-\t    \t  Intent intent = getNextIntent(nextActivityBtn);\n-\t    \t  intent.setFlags(chosenFlags);\n-\t    \t  startActivity(intent);\n-\t      }\n-\t    });\n-\t    build.show();\n-\t}\n-\n-\tprivate boolean isIntentFilterMode() {\n-\t\tBaseApplication app = (BaseApplication)getApplication();\n-\t\treturn app.isIntentFilterMode();\n-\t}\n-\t\n-\tprivate void setIntentFilterMode(boolean mode) {\n-\t\tBaseApplication app = (BaseApplication)getApplication();\n-\t\tapp.setIntentFilterMode(mode);\n-\t}\n-\n-\tprivate Intent getNextIntent(View v){\n-\t\tClass<? extends BaseActivity> nextActivity = null;\n-\t\tswitch(v.getId()){\n-\t\tcase R.id.btn_standard:\n-\t\t\tnextActivity = Standard.class;\n-\t\t\tbreak;\n-\t\tcase R.id.btn_singletop:\n-\t\t\tnextActivity = SingleTop.class;\n-\t\t\tbreak;\n-\t\tcase R.id.btn_singletask:\n-\t\t\tnextActivity = SingleTask.class;\n-\t\t\tbreak;\n-\t\tcase R.id.btn_singleInstance:\n-\t\t\tnextActivity = SingleInstance.class;\n-\t\t\tbreak;\n-\t\t}\n-\t\treturn new Intent(this, nextActivity);\n-\t}\n-\t\n-\t@Override\n-\tpublic boolean onCreateOptionsMenu(Menu menu) {\n-\t    MenuInflater inflater = getMenuInflater();\n-\t    inflater.inflate(R.menu.base_activity, menu);\n-\t    log();\n-\t    return true;\n-\t}\n-\t\n-\t@Override\n-\tpublic boolean onPrepareOptionsMenu(Menu menu) {\n-\t\tMenuItem filterOption = menu.findItem(R.id.menuitem_intentfilter_mode);\n-\t\tString title = \"Turn \" + (isIntentFilterMode() ? \"off\" : \"on\") + \" IntentFilter mode\"; \n-\t\tfilterOption.setTitle(title);\n-\t\treturn super.onPrepareOptionsMenu(menu);\n-\t}\n-\n-\t@Override\n-\tpublic boolean onOptionsItemSelected(MenuItem item) {\n-\t    switch (item.getItemId()) {\n-\t    case R.id.menuitem_intentfilter_mode:\n-\t        setIntentFilterMode(!isIntentFilterMode());\n-\t        return true;\n-\t    default:\n-\t        return super.onOptionsItemSelected(item);\n-\t    }\n-\t}\n-    \n-    public abstract int getBackgroundColour();\n-}\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/BaseApplication.java",
            "additions": 0,
            "deletions": 60
        },
        "diff content": "@@ -1,60 +0,0 @@\n-package com.novoda.demos.activitylaunchmode;\n-\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Stack;\n-\n-import android.app.ActivityManager;\n-import android.app.Application;\n-import android.app.ActivityManager.RunningTaskInfo;\n-\n-public class BaseApplication extends Application{\n-\n-\tprivate HashMap<Integer, Stack<BaseActivity>> tasks;\n-\t\n-\tprivate ActivityManager manager;\n-\t\n-\tprivate boolean intentFilterMode;\n-\t\n-\t@Override\n-\tpublic void onCreate() {\n-\t\tsuper.onCreate();\n-\t\tmanager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);\n-\t\ttasks = new HashMap<Integer, Stack<BaseActivity>>();\n-\t}\n-\t\n-\tpublic void pushToStack(BaseActivity activity){\n-\t\tint currentTaskId = getCurrentTaskId();\n-\t\tif(!tasks.containsKey(currentTaskId)){\n-\t\t\ttasks.put(currentTaskId, new Stack<BaseActivity>());\n-\t\t}\n-\t\tStack<BaseActivity> stack = tasks.get(currentTaskId);\n-\t\tstack.add(activity);\n-\t}\n-\t\n-\tprivate int getCurrentTaskId() {\n-\t\tList<RunningTaskInfo> runningTasks = manager.getRunningTasks(1);\n-\t\tRunningTaskInfo runningTask = runningTasks.get(0);\n-\t\treturn runningTask.id;\n-\t}\n-\n-\tpublic void removeFromStack(BaseActivity activity){\n-\t\tStack<BaseActivity> stack = tasks.get(getCurrentTaskId());\n-\t\tif(stack != null){\n-\t\t\tstack.remove(activity);\n-\t\t}\n-\t}\n-\t\n-\tpublic Stack<BaseActivity> getCurrentStack(){\n-\t\treturn tasks.get(getCurrentTaskId());\n-\t}\n-\t\n-\tpublic void setIntentFilterMode(boolean mode){\n-\t\tintentFilterMode = mode;\n-\t}\n-\t\n-\tpublic boolean isIntentFilterMode(){\n-\t\treturn intentFilterMode;\n-\t}\n-\t\n-}\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/SingleInstance.java",
            "additions": 0,
            "deletions": 11
        },
        "diff content": "@@ -1,11 +0,0 @@\n-package com.novoda.demos.activitylaunchmode;\n-\n-\n-public class SingleInstance extends BaseActivity {\n-\n-\t@Override\n-\tpublic int getBackgroundColour() {\n-\t\treturn R.color.red;\n-\t}\n-\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/SingleTask.java",
            "additions": 0,
            "deletions": 11
        },
        "diff content": "@@ -1,11 +0,0 @@\n-package com.novoda.demos.activitylaunchmode;\n-\n-\n-public class SingleTask extends BaseActivity {\n-\n-\t@Override\n-\tpublic int getBackgroundColour() {\n-\t\treturn R.color.yellow;\n-\t}\n-\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/SingleTop.java",
            "additions": 0,
            "deletions": 11
        },
        "diff content": "@@ -1,11 +0,0 @@\n-package com.novoda.demos.activitylaunchmode;\n-\n-\n-public class SingleTop extends BaseActivity {\n-\n-\t@Override\n-\tpublic int getBackgroundColour() {\n-\t\treturn R.color.blue;\n-\t}\n-\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "053d7ca9ea5a778da6c0df9b4efcd2e9c266e2c1",
        "previous commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/Standard.java",
            "additions": 0,
            "deletions": 10
        },
        "diff content": "@@ -1,10 +0,0 @@\n-package com.novoda.demos.activitylaunchmode;\n-\n-\n-public class Standard extends BaseActivity {\n-\n-\t@Override\n-\tpublic int getBackgroundColour() {\n-\t\treturn R.color.green;\n-\t}\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/AndroidManifest.xml",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\" package=\"novoda.demo\">\n+    <uses-sdk android:minSdkVersion=\"4\" />\n+\n+    <application android:icon=\"@drawable/icon\" android:theme=\"@style/Theme.Demo\" android:label=\"@string/app_name\">\n+        <activity android:name=\".TransitionFromThis\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+        <activity android:name=\".ToThis\"\n+                  android:label=\"@string/app_name\">\n+        </activity>\n+\n+    </application>\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/proguard.cfg",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+-optimizationpasses 5\n+-dontusemixedcaseclassnames\n+-dontskipnonpubliclibraryclasses\n+-dontpreverify\n+-verbose\n+-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n+\n+-keep public class * extends android.app.Activity\n+-keep public class * extends android.app.Application\n+-keep public class * extends android.app.Service\n+-keep public class * extends android.content.BroadcastReceiver\n+-keep public class * extends android.content.ContentProvider\n+-keep public class * extends android.app.backup.BackupAgentHelper\n+-keep public class * extends android.preference.Preference\n+-keep public class com.android.vending.licensing.ILicensingService\n+\n+-keepclasseswithmembernames class * {\n+    native <methods>;\n+}\n+\n+-keepclasseswithmembers class * {\n+    public <init>(android.content.Context, android.util.AttributeSet);\n+}\n+\n+-keepclasseswithmembers class * {\n+    public <init>(android.content.Context, android.util.AttributeSet, int);\n+}\n+\n+-keepclassmembers class * extends android.app.Activity {\n+   public void *(android.view.View);\n+}\n+\n+-keepclassmembers enum * {\n+    public static **[] values();\n+    public static ** valueOf(java.lang.String);\n+}\n+\n+-keep class * implements android.os.Parcelable {\n+  public static final android.os.Parcelable$Creator *;\n+}\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/anim/activity_close_enter.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+** Copyright 2009, The Android Open Source Project\n+**\n+** Licensed under the Apache License, Version 2.0 (the \"License\");\n+** you may not use this file except in compliance with the License.\n+** You may obtain a copy of the License at\n+**\n+**     http://www.apache.org/licenses/LICENSE-2.0\n+**\n+** Unless required by applicable law or agreed to in writing, software\n+** distributed under the License is distributed on an \"AS IS\" BASIS,\n+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+** See the License for the specific language governing permissions and\n+** limitations under the License.\n+*/\n+-->\n+\n+<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        android:interpolator=\"@anim/decelerate_interpolator\"\n+        android:zAdjustment=\"top\">\n+        <translate android:fromXDelta=\"-100%\" android:toXDelta=\"0\"\n+        android:duration=\"@android:integer/config_shortAnimTime\"/>\n+</set>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/anim/activity_close_exit.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+** Copyright 2009, The Android Open Source Project\n+**\n+** Licensed under the Apache License, Version 2.0 (the \"License\");\n+** you may not use this file except in compliance with the License.\n+** You may obtain a copy of the License at\n+**\n+**     http://www.apache.org/licenses/LICENSE-2.0\n+**\n+** Unless required by applicable law or agreed to in writing, software\n+** distributed under the License is distributed on an \"AS IS\" BASIS,\n+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+** See the License for the specific language governing permissions and\n+** limitations under the License.\n+*/\n+-->\n+\n+<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        android:interpolator=\"@anim/decelerate_interpolator\">\n+        <translate android:fromXDelta=\"0%\" android:toXDelta=\"33%\"\n+        android:duration=\"@android:integer/config_shortAnimTime\"/>\n+</set>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/anim/activity_open_enter.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+** Copyright 2009, The Android Open Source Project\n+**\n+** Licensed under the Apache License, Version 2.0 (the \"License\");\n+** you may not use this file except in compliance with the License.\n+** You may obtain a copy of the License at\n+**\n+**     http://www.apache.org/licenses/LICENSE-2.0\n+**\n+** Unless required by applicable law or agreed to in writing, software\n+** distributed under the License is distributed on an \"AS IS\" BASIS,\n+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+** See the License for the specific language governing permissions and\n+** limitations under the License.\n+*/\n+-->\n+\n+<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        android:interpolator=\"@anim/decelerate_interpolator\">\n+        <translate android:fromXDelta=\"33%\" android:toXDelta=\"0\"\n+        android:duration=\"@android:integer/config_shortAnimTime\"/>\n+</set>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/anim/activity_open_exit.xml",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+** Copyright 2009, The Android Open Source Project\n+**\n+** Licensed under the Apache License, Version 2.0 (the \"License\");\n+** you may not use this file except in compliance with the License.\n+** You may obtain a copy of the License at\n+**\n+**     http://www.apache.org/licenses/LICENSE-2.0\n+**\n+** Unless required by applicable law or agreed to in writing, software\n+** distributed under the License is distributed on an \"AS IS\" BASIS,\n+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+** See the License for the specific language governing permissions and\n+** limitations under the License.\n+*/\n+-->\n+\n+<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        android:interpolator=\"@anim/decelerate_interpolator\"\n+        android:zAdjustment=\"top\">\n+        <translate android:fromXDelta=\"0%\" android:toXDelta=\"-100%\"\n+        android:duration=\"@android:integer/config_shortAnimTime\"/>\n+</set>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/anim/decelerate_interpolator.xml",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/* //device/apps/common/res/anim/ease_in_out_interpolator.xml\n+**\n+** Copyright 2007, The Android Open Source Project\n+**\n+** Licensed under the Apache License, Version 2.0 (the \"License\");\n+** you may not use this file except in compliance with the License.\n+** You may obtain a copy of the License at\n+**\n+**     http://www.apache.org/licenses/LICENSE-2.0\n+**\n+** Unless required by applicable law or agreed to in writing, software\n+** distributed under the License is distributed on an \"AS IS\" BASIS,\n+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+** See the License for the specific language governing permissions and\n+** limitations under the License.\n+*/\n+-->\n+\n+<accelerateDecelerateInterpolator />\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/anim/fadein.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<set xmlns:android=\"http://schemas.android.com/apk/res/android\" \n+     android:fillAfter=\"true\">\n+     <alpha android:fromAlpha=\"1.0\" \n+            android:toAlpha=\"0.0\"\n+            android:duration=\"500\"/> //Time in milliseconds\n+</set>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/anim/fadeout.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+           android:fillAfter=\"true\">\n+  <alpha android:fromAlpha=\"0.0\"\n+         android:toAlpha=\"1.0\"\n+         android:duration=\"500\"/>\n+</set>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CustomActivityTransition/res/drawable-hdpi/icon.png differ\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CustomActivityTransition/res/drawable-ldpi/icon.png differ\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CustomActivityTransition/res/drawable-mdpi/icon.png differ\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/layout/act_transition_from_this.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\">\n+\t\n+\t<Button\n+\t\tandroid:id=\"@+id/btn\"  \n+\t\tandroid:text=\"transition animation\"\n+\t\tandroid:layout_width=\"fill_parent\" \n+\t\tandroid:layout_height=\"wrap_content\" />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/layout/act_transition_to_this.xml",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+<TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"@string/hello\"\n+    />\n+    <TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"@string/hello\"\n+    />\n+    \n+    <TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"@string/hello\"\n+    />\n+    \n+    <TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"@string/hello\"\n+    />\n+    \n+    <TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"@string/hello\"\n+    />\n+    \n+</LinearLayout>\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, ActivityTransitionActivity!</string>\n+    <string name=\"app_name\">ActivityTransition</string>\n+</resources>\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/res/values/styles_master.xml",
            "additions": 47,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,47 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+<!-- \n+STLYING KEY\n+\n+\t_THEME\n+\t_WIDTH_HEIGHT  \t\n+-->\n+\t<!-- _THEME -->\n+    <style name=\"Theme\" parent=\"android:Theme\" />\n+    <style name=\"Theme.Demo\" parent=\"android:style/Theme.Light\">\n+        <item name=\"android:windowNoTitle\">true</item>\n+        <!-- <item name=\"android:windowContentOverlay\">@null</item> -->\n+        <item name=\"android:layout_width\">wrap_content</item>\n+\t\t<item name=\"android:layout_height\">wrap_content</item>\n+\t\t<item name=\"android:windowAnimationStyle\">@style/Animation.ActivityTransition</item>\n+    </style>\n+\n+\n+    <!-- Base style for animations.  This style specifies no animations. -->\n+    <style name=\"Animation\" />\n+    \n+\t<!-- Standard animations for a full-screen window or activity. -->\n+    <style name=\"Animation.ActivityTransition\" parent=\"@android:style/Animation.Activity\">\n+\t\t<item name=\"android:activityOpenEnterAnimation\">@null</item>\n+        <item name=\"android:activityOpenExitAnimation\">@null</item>\n+        <item name=\"android:activityCloseEnterAnimation\">@anim/activity_close_enter</item>\n+ \t\t<item name=\"android:activityCloseExitAnimation\">@anim/activity_close_exit</item>\n+<!--        <item name=\"android:taskOpenEnterAnimation\">@android:anim/task_open_enter</item> -->\n+<!--        <item name=\"android:taskOpenExitAnimation\">@android:anim/task_open_exit</item> -->\n+<!--        <item name=\"android:taskCloseEnterAnimation\">@android:anim/task_close_enter</item> -->\n+<!--        <item name=\"android:taskCloseExitAnimation\">@android:anim/task_close_exit</item> -->\n+<!--        <item name=\"android:taskToFrontEnterAnimation\">@android:anim/task_open_enter</item> -->\n+<!--        <item name=\"android:taskToFrontExitAnimation\">@android:anim/task_open_exit</item> -->\n+<!--        <item name=\"android:taskToBackEnterAnimation\">@android:anim/task_close_enter</item> -->\n+<!--        <item name=\"android:taskToBackExitAnimation\">@android:anim/task_close_exit</item> -->\n+<!--        <item name=\"android:wallpaperOpenEnterAnimation\">@android:anim/wallpaper_open_enter</item> -->\n+<!--        <item name=\"android:wallpaperOpenExitAnimation\">@android:anim/wallpaper_open_exit</item> -->\n+<!--        <item name=\"android:wallpaperCloseEnterAnimation\">@android:anim/wallpaper_close_enter</item> -->\n+<!--        <item name=\"android:wallpaperCloseExitAnimation\">@android:anim/wallpaper_close_exit</item> -->\n+<!--        <item name=\"android:wallpaperIntraOpenEnterAnimation\">@android:anim/wallpaper_intra_open_enter</item> -->\n+<!--        <item name=\"android:wallpaperIntraOpenExitAnimation\">@android:anim/wallpaper_intra_open_exit</item> -->\n+<!--        <item name=\"android:wallpaperIntraCloseEnterAnimation\">@android:anim/wallpaper_intra_close_enter</item> -->\n+<!--        <item name=\"android:wallpaperIntraCloseExitAnimation\">@android:anim/wallpaper_intra_close_exit</item> -->\n+    </style>\n+    \n+</resources>\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/novoda/demo/ToThis.java",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+package novoda.demo;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+\n+public class ToThis extends Activity{\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.act_transition_to_this);\n+    }\n+}\n"
    },
    {
        "commit hash": "87af9a88cfed0e0ebf725c873992811fcd4a7fb8",
        "previous commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "diff stats": {
            "file_path": "CustomActivityTransition/src/novoda/demo/TransitionFromThis.java",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+package novoda.demo;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+\n+public class TransitionFromThis extends Activity {\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.act_transition_from_this);\n+        \n+        findViewById(R.id.btn).setOnClickListener(new OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tstartActivity(new Intent(TransitionFromThis.this, ToThis.class));\n+\t\t\t}\n+\t\t});\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "previous commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/AndroidManifest.xml",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       package=\"com.novoda.demos.activitylaunchmode\"\n-      android:versionCode=\"1\"\n-      android:versionName=\"1.0\">\n+      android:versionCode=\"101\"\n+      android:versionName=\"1.1\">\n     <uses-sdk android:minSdkVersion=\"4\" />\n \n     <application android:icon=\"@drawable/icon\" android:label=\"Activities launchMode Demo\"\n"
    },
    {
        "commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "previous commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/market_resources/512x512icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ActivitesLaunchModes/market_resources/512x512icon.png differ\n"
    },
    {
        "commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "previous commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/layout/main.xml",
            "additions": 4,
            "deletions": 4
        },
        "diff content": "@@ -64,7 +64,7 @@\n \t\tandroid:layout_width=\"fill_parent\"\n \t\tandroid:layout_height=\"wrap_content\"\n \t\tandroid:layout_above=\"@+id/btn_singletop\"\n-\t\tandroid:onClick=\"onStandardClick\"\n+\t\tandroid:onClick=\"generalOnClick\"\n \t\tandroid:id=\"@+id/btn_standard\"\n \t\tandroid:text=\"standard\"\n \t\tandroid:textColor=\"@color/green\" />\n@@ -73,7 +73,7 @@\n \t\tandroid:layout_width=\"fill_parent\"\n \t\tandroid:layout_height=\"wrap_content\"\n \t\tandroid:layout_above=\"@+id/btn_singletask\"\n-\t\tandroid:onClick=\"onSingleTopClick\"\n+\t\tandroid:onClick=\"generalOnClick\"\n \t\tandroid:id=\"@+id/btn_singletop\"\n \t\tandroid:text=\"singleTop\"\n \t\tandroid:textColor=\"@color/blue\" />\n@@ -82,7 +82,7 @@\n \t\tandroid:layout_width=\"fill_parent\"\n \t\tandroid:layout_height=\"wrap_content\"\n \t\tandroid:layout_above=\"@+id/btn_singleInstance\"\n-\t\tandroid:onClick=\"onSingleTaskClick\"\n+\t\tandroid:onClick=\"generalOnClick\"\n \t\tandroid:id=\"@+id/btn_singletask\"\n \t\tandroid:text=\"singleTask\"\n \t\tandroid:textColor=\"#ff6600\" />\n@@ -91,7 +91,7 @@\n \t\tandroid:layout_width=\"fill_parent\"\n \t\tandroid:layout_height=\"wrap_content\"\n \t\tandroid:layout_alignParentBottom=\"true\"\n-\t\tandroid:onClick=\"onSingleInstanceClick\"\n+\t\tandroid:onClick=\"generalOnClick\"\n \t\tandroid:id=\"@+id/btn_singleInstance\"\n \t\tandroid:text=\"singleInstance\"\n \t\tandroid:textColor=\"@color/red\" />\n"
    },
    {
        "commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "previous commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/menu/base_activity.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\t<item android:id=\"@+id/menuitem_intentfilter_mode\" \n+\t\tandroid:title=\"IntentFilter mode\" />\n+</menu>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "previous commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/BaseActivity.java",
            "additions": 132,
            "deletions": 19
        },
        "diff content": "@@ -3,11 +3,18 @@ package com.novoda.demos.activitylaunchmode;\n import java.util.Stack;\n \n import android.app.Activity;\n+import android.app.AlertDialog.Builder;\n+import android.content.DialogInterface;\n import android.content.Intent;\n+import android.content.DialogInterface.OnClickListener;\n+import android.content.DialogInterface.OnMultiChoiceClickListener;\n import android.os.Bundle;\n import android.os.Handler;\n import android.text.method.ScrollingMovementMethod;\n import android.util.Log;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n+import android.view.MenuItem;\n import android.view.View;\n import android.widget.ImageView;\n import android.widget.LinearLayout;\n@@ -16,6 +23,37 @@ import android.widget.LinearLayout.LayoutParams;\n \n public abstract class BaseActivity extends Activity {\n \t\n+\tprivate String [] intentFlagsText = {\n+\t\t\t\t\t\t\t \"CLEAR_TOP\"\n+\t\t\t\t\t\t\t, \"CLEAR_WHEN_TASK_RESET\"\n+\t\t\t\t\t\t\t, \"EXCLUDE_FROM_RECENTS\"\n+\t\t\t\t\t\t\t, \"FORWARD_RESULT\"\n+\t\t\t\t\t\t\t, \"MULTIPLE_TASK\"\n+\t\t\t\t\t\t\t, \"NEW_TASK\"\n+\t\t\t\t\t\t\t, \"NO_HISTORY\"\n+\t\t\t\t\t\t\t, \"NO_USER_ACTION\"\n+\t\t\t\t\t\t\t, \"PREVIOUS_IS_TOP\"\n+\t\t\t\t\t\t\t, \"REORDER_TO_FRONT\"\n+\t\t\t\t\t\t\t, \"RESET_TASK_IF_NEEDED\"\n+\t\t\t\t\t\t\t, \"SINGLE_TOP\"};\n+\t\n+\tprivate int [] intentFlags = {\n+\t\tIntent.FLAG_ACTIVITY_CLEAR_TOP,\n+\t\tIntent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET,\n+\t\tIntent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS,\n+\t\tIntent.FLAG_ACTIVITY_FORWARD_RESULT,\n+\t\tIntent.FLAG_ACTIVITY_MULTIPLE_TASK,\n+\t\tIntent.FLAG_ACTIVITY_NEW_TASK,\n+\t\tIntent.FLAG_ACTIVITY_NO_HISTORY,\n+\t\tIntent.FLAG_ACTIVITY_NO_USER_ACTION,\n+\t\tIntent.FLAG_ACTIVITY_PREVIOUS_IS_TOP,\n+\t\tIntent.FLAG_ACTIVITY_REORDER_TO_FRONT,\n+\t\tIntent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED,\n+\t\tIntent.FLAG_ACTIVITY_SINGLE_TOP\n+\t};\n+\t\n+\tprivate int chosenFlags;\n+\t\n \tprivate static final String LOG_TAG = \"ActivitesLaunchDemo\";\n \t\n \tprivate final int DISPLAY_STACK_DELAY = 500;\n@@ -48,7 +86,7 @@ public abstract class BaseActivity extends Activity {\n \t\t}\n \t\t\n \t};\n-\t\n+\n \t@Override\n \tpublic void onContentChanged() {\n \t\tlog();\n@@ -58,8 +96,7 @@ public abstract class BaseActivity extends Activity {\n \t@Override\n \tprotected void onDestroy() {\n \t\tlog();\n-\t\tBaseApplication app = (BaseApplication)getApplication();\n-\t\tapp.removeFromStack(this);\n+\t\tremoveFromStack();\n \t\tsuper.onDestroy();\n \t}\n \n@@ -160,26 +197,102 @@ public abstract class BaseActivity extends Activity {\n     \tBaseApplication app = (BaseApplication)getApplication();\n     \tapp.pushToStack(this);\n \t}\n+    \n+\tprivate void removeFromStack() {\n+\t\tBaseApplication app = (BaseApplication)getApplication();\n+\t\tapp.removeFromStack(this);\n+\t}\n \n \tprivate String getLaunchMode(){\n     \treturn \"[\" + hashCode() + \"] \" + getClass().getSimpleName();\n     }\n-    \n-\tpublic void onStandardClick(View v){\n-    \tstartActivity(new Intent(this, Standard.class));\n-    }\n-    \n-    public void onSingleTopClick(View v){\n-    \tstartActivity(new Intent(this, SingleTop.class));\n-    }\n-    \n-    public void onSingleTaskClick(View v){\n-    \tstartActivity(new Intent(this, SingleTask.class));\n-    }\n-    \n-    public void onSingleInstanceClick(View v){\n-    \tstartActivity(new Intent(this, SingleInstance.class));\n-    }\n+\t\n+\tpublic void generalOnClick(View v){\n+\t\tif(isIntentFilterMode()){\n+\t\t\tshowIntentFilterDialog(v);\n+\t\t}else{\n+\t\t\tstartActivity(getNextIntent(v));\n+\t\t}\n+\t}\n+\n+\tprivate void showIntentFilterDialog(final View nextActivityBtn) {\n+\t\tchosenFlags = 0;\n+\t    final Builder build = new Builder(this);\n+\t    build.setTitle(\"List selection\");\n+\t    build.setCancelable(true);\n+\t    final OnMultiChoiceClickListener onClick =\n+\t      new OnMultiChoiceClickListener() {\n+\t    \t@Override \n+\t\t\tpublic void onClick(DialogInterface dialog, int which, boolean isChecked) {\n+\t\t\t\tchosenFlags |= intentFlags[which];\n+\t\t\t}\n+\t      };\n+\t    build.setMultiChoiceItems(intentFlagsText, null, onClick);\n+\t    build.setPositiveButton(\"Done\", new OnClickListener() {\n+\t      @Override public void onClick(final DialogInterface dialog, final int which) {\n+\t    \t  Intent intent = getNextIntent(nextActivityBtn);\n+\t    \t  intent.setFlags(chosenFlags);\n+\t    \t  startActivity(intent);\n+\t      }\n+\t    });\n+\t    build.show();\n+\t}\n+\n+\tprivate boolean isIntentFilterMode() {\n+\t\tBaseApplication app = (BaseApplication)getApplication();\n+\t\treturn app.isIntentFilterMode();\n+\t}\n+\t\n+\tprivate void setIntentFilterMode(boolean mode) {\n+\t\tBaseApplication app = (BaseApplication)getApplication();\n+\t\tapp.setIntentFilterMode(mode);\n+\t}\n+\n+\tprivate Intent getNextIntent(View v){\n+\t\tClass<? extends BaseActivity> nextActivity = null;\n+\t\tswitch(v.getId()){\n+\t\tcase R.id.btn_standard:\n+\t\t\tnextActivity = Standard.class;\n+\t\t\tbreak;\n+\t\tcase R.id.btn_singletop:\n+\t\t\tnextActivity = SingleTop.class;\n+\t\t\tbreak;\n+\t\tcase R.id.btn_singletask:\n+\t\t\tnextActivity = SingleTask.class;\n+\t\t\tbreak;\n+\t\tcase R.id.btn_singleInstance:\n+\t\t\tnextActivity = SingleInstance.class;\n+\t\t\tbreak;\n+\t\t}\n+\t\treturn new Intent(this, nextActivity);\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean onCreateOptionsMenu(Menu menu) {\n+\t    MenuInflater inflater = getMenuInflater();\n+\t    inflater.inflate(R.menu.base_activity, menu);\n+\t    log();\n+\t    return true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean onPrepareOptionsMenu(Menu menu) {\n+\t\tMenuItem filterOption = menu.findItem(R.id.menuitem_intentfilter_mode);\n+\t\tString title = \"Turn \" + (isIntentFilterMode() ? \"off\" : \"on\") + \" IntentFilter mode\"; \n+\t\tfilterOption.setTitle(title);\n+\t\treturn super.onPrepareOptionsMenu(menu);\n+\t}\n+\n+\t@Override\n+\tpublic boolean onOptionsItemSelected(MenuItem item) {\n+\t    switch (item.getItemId()) {\n+\t    case R.id.menuitem_intentfilter_mode:\n+\t        setIntentFilterMode(!isIntentFilterMode());\n+\t        return true;\n+\t    default:\n+\t        return super.onOptionsItemSelected(item);\n+\t    }\n+\t}\n     \n     public abstract int getBackgroundColour();\n }\n"
    },
    {
        "commit hash": "6997f74319810a6611ce50f3bbe78245a2f3b4f8",
        "previous commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/BaseApplication.java",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -14,6 +14,8 @@ public class BaseApplication extends Application{\n \t\n \tprivate ActivityManager manager;\n \t\n+\tprivate boolean intentFilterMode;\n+\t\n \t@Override\n \tpublic void onCreate() {\n \t\tsuper.onCreate();\n@@ -47,4 +49,12 @@ public class BaseApplication extends Application{\n \t\treturn tasks.get(getCurrentTaskId());\n \t}\n \t\n+\tpublic void setIntentFilterMode(boolean mode){\n+\t\tintentFilterMode = mode;\n+\t}\n+\t\n+\tpublic boolean isIntentFilterMode(){\n+\t\treturn intentFilterMode;\n+\t}\n+\t\n }\n"
    },
    {
        "commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "previous commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "diff stats": {
            "file_path": ".gitignore",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -7,6 +7,7 @@ gen\n .project\n default.*\n .settings/*\n+**/.settings/*\n build.properties\n .DS_Store\n *.class\n"
    },
    {
        "commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "previous commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/ActivitesLaunchModes/res/drawable-hdpi/icon.png and b/ActivitesLaunchModes/res/drawable-hdpi/icon.png differ\n"
    },
    {
        "commit hash": "070785b234ab09dd4fcb7bb0f6186e5277edc3af",
        "previous commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/BaseActivity.java",
            "additions": 0,
            "deletions": 6
        },
        "diff content": "@@ -49,12 +49,6 @@ public abstract class BaseActivity extends Activity {\n \t\t\n \t};\n \t\n-\t@Override\n-\tpublic void onBackPressed() {\n-\t\tlog();\n-\t\tsuper.onBackPressed();\n-\t}\n-\n \t@Override\n \tpublic void onContentChanged() {\n \t\tlog();\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/AndroidManifest.xml",
            "additions": 28,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda.demos.activitylaunchmode\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <uses-sdk android:minSdkVersion=\"4\" />\n+\n+    <application android:icon=\"@drawable/icon\" android:label=\"Activities launchMode Demo\"\n+     android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\"\n+     android:name=\".BaseApplication\">\n+    \n+        <activity android:name=\".Standard\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+        \n+        <activity android:name=\".SingleTop\" android:launchMode=\"singleTop\" />\n+        \n+        <activity android:name=\".SingleTask\" android:launchMode=\"singleTask\" />\n+        \n+        <activity android:name=\".SingleInstance\" android:launchMode=\"singleInstance\" />\n+\n+    </application>\n+    \n+    <uses-permission android:name=\"android.permission.GET_TASKS\"/>\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/proguard.cfg",
            "additions": 40,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,40 @@\n+-optimizationpasses 5\n+-dontusemixedcaseclassnames\n+-dontskipnonpubliclibraryclasses\n+-dontpreverify\n+-verbose\n+-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n+\n+-keep public class * extends android.app.Activity\n+-keep public class * extends android.app.Application\n+-keep public class * extends android.app.Service\n+-keep public class * extends android.content.BroadcastReceiver\n+-keep public class * extends android.content.ContentProvider\n+-keep public class * extends android.app.backup.BackupAgentHelper\n+-keep public class * extends android.preference.Preference\n+-keep public class com.android.vending.licensing.ILicensingService\n+\n+-keepclasseswithmembernames class * {\n+    native <methods>;\n+}\n+\n+-keepclasseswithmembers class * {\n+    public <init>(android.content.Context, android.util.AttributeSet);\n+}\n+\n+-keepclasseswithmembers class * {\n+    public <init>(android.content.Context, android.util.AttributeSet, int);\n+}\n+\n+-keepclassmembers class * extends android.app.Activity {\n+   public void *(android.view.View);\n+}\n+\n+-keepclassmembers enum * {\n+    public static **[] values();\n+    public static ** valueOf(java.lang.String);\n+}\n+\n+-keep class * implements android.os.Parcelable {\n+  public static final android.os.Parcelable$Creator *;\n+}\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ActivitesLaunchModes/res/drawable-hdpi/icon.png differ\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/layout/main.xml",
            "additions": 99,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,99 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout\n+\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\"\n+\tandroid:id=\"@+id/main_layout\">\n+\n+\t<TextView\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_alignParentTop=\"true\"\n+\t\tandroid:id=\"@+id/header\"\n+\t\tandroid:textSize=\"18sp\"\n+\t\tandroid:textStyle=\"bold\"\n+\t\tandroid:textColor=\"@android:color/white\"\n+\t\tandroid:padding=\"4dp\" />\n+\n+\t<TextView\n+\t\tandroid:layout_width=\"wrap_content\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_below=\"@+id/header\"\n+\t\tandroid:layout_above=\"@+id/btn_standard\"\n+\t\tandroid:id=\"@+id/lifecycle_content\"\n+\t\tandroid:padding=\"4dp\"\n+\t\tandroid:textSize=\"15sp\"\n+\t\tandroid:scrollbars=\"vertical\"\n+\t\tandroid:textColor=\"@android:color/white\" />\n+\n+\t<LinearLayout\n+\t\tandroid:layout_width=\"100dp\"\n+\t\tandroid:layout_height=\"fill_parent\"\n+\t\tandroid:layout_below=\"@+id/header\"\n+\t\tandroid:layout_above=\"@+id/btn_standard\"\n+\t\tandroid:background=\"@android:color/white\"\n+\t\tandroid:layout_alignParentRight=\"true\"\n+\t\tandroid:layout_margin=\"4dp\"\n+\t\tandroid:padding=\"2dp\"\n+\t\tandroid:gravity=\"bottom\"\n+\t\tandroid:orientation=\"vertical\"\n+\t\tandroid:id=\"@+id/current_stack_view\">\n+<!--\t\t<ImageView-->\n+<!--\t\t\tandroid:layout_width=\"fill_parent\"-->\n+<!--\t\t\tandroid:layout_height=\"10dp\"-->\n+<!--\t\t\tandroid:background=\"@color/red\"-->\n+<!--\t\t\tandroid:layout_margin=\"2dp\" />-->\n+<!--\t\t<ImageView-->\n+<!--\t\t\tandroid:layout_width=\"fill_parent\"-->\n+<!--\t\t\tandroid:layout_height=\"10dp\"-->\n+<!--\t\t\tandroid:background=\"@color/yellow\"-->\n+<!--\t\t\tandroid:layout_margin=\"2dp\"/>-->\n+<!--\t\t<ImageView-->\n+<!--\t\t\tandroid:layout_width=\"fill_parent\"-->\n+<!--\t\t\tandroid:layout_height=\"10dp\"-->\n+<!--\t\t\tandroid:background=\"@color/blue\"-->\n+<!--\t\t\tandroid:layout_margin=\"2dp\" />-->\n+<!--\t\t<ImageView-->\n+<!--\t\t\tandroid:layout_width=\"fill_parent\"-->\n+<!--\t\t\tandroid:layout_height=\"10dp\"-->\n+<!--\t\t\tandroid:background=\"@color/green\" -->\n+<!--\t\t\tandroid:layout_margin=\"2dp\"/>-->\n+\t</LinearLayout>\n+\n+\t<Button\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_above=\"@+id/btn_singletop\"\n+\t\tandroid:onClick=\"onStandardClick\"\n+\t\tandroid:id=\"@+id/btn_standard\"\n+\t\tandroid:text=\"standard\"\n+\t\tandroid:textColor=\"@color/green\" />\n+\n+\t<Button\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_above=\"@+id/btn_singletask\"\n+\t\tandroid:onClick=\"onSingleTopClick\"\n+\t\tandroid:id=\"@+id/btn_singletop\"\n+\t\tandroid:text=\"singleTop\"\n+\t\tandroid:textColor=\"@color/blue\" />\n+\n+\t<Button\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_above=\"@+id/btn_singleInstance\"\n+\t\tandroid:onClick=\"onSingleTaskClick\"\n+\t\tandroid:id=\"@+id/btn_singletask\"\n+\t\tandroid:text=\"singleTask\"\n+\t\tandroid:textColor=\"#ff6600\" />\n+\n+\t<Button\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_alignParentBottom=\"true\"\n+\t\tandroid:onClick=\"onSingleInstanceClick\"\n+\t\tandroid:id=\"@+id/btn_singleInstance\"\n+\t\tandroid:text=\"singleInstance\"\n+\t\tandroid:textColor=\"@color/red\" />\n+\n+</RelativeLayout>\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/res/values/colors.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\t<color name=\"red\">#cc0000</color>\n+\t<color name=\"blue\">#6699ff</color>\n+\t<color name=\"green\">#00cc00</color>\n+\t<color name=\"yellow\">#ffcc00</color>    \n+</resources>\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/BaseActivity.java",
            "additions": 191,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,191 @@\n+package com.novoda.demos.activitylaunchmode;\n+\n+import java.util.Stack;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.text.method.ScrollingMovementMethod;\n+import android.util.Log;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+import android.widget.LinearLayout.LayoutParams;\n+\n+public abstract class BaseActivity extends Activity {\n+\t\n+\tprivate static final String LOG_TAG = \"ActivitesLaunchDemo\";\n+\t\n+\tprivate final int DISPLAY_STACK_DELAY = 500;\n+\t\n+\tprivate TextView lifecycle;\n+\t\n+\tprivate StringBuilder lifecycleFlow = new StringBuilder();\n+\t\n+\tprivate Handler handler = new Handler();\n+\n+\tprivate LinearLayout currentStackView;\n+\n+\tprivate Runnable displayStack = new Runnable() {\n+\n+\t\tpublic void run() {\n+\t\t\tLog.v(LOG_TAG,\"===============================\");\n+\t\t\tBaseApplication app = (BaseApplication)getApplication();\n+\t\t\tStack<BaseActivity> currentStack = app.getCurrentStack();\n+\t\t\tfor(int location = currentStack.size() - 1; location >= 0 ; location--){\n+\t\t\t\tBaseActivity activity = currentStack.get(location);\n+\t\t\t\tLog.v(LOG_TAG,activity.getClass().getSimpleName());\n+\t\t\t\tImageView activityImage = new ImageView(BaseActivity.this);\n+\t\t\t\tactivityImage.setBackgroundResource(activity.getBackgroundColour());\n+\t\t\t\tLinearLayout.LayoutParams params = new LayoutParams(LinearLayout.LayoutParams.FILL_PARENT, 10);\n+\t\t\t\tparams.setMargins(2, 2, 2, 2);\n+\t\t\t\tactivityImage.setLayoutParams(params);\n+\t\t\t\tcurrentStackView.addView(activityImage);\n+\t\t\t}\n+\t\t\tLog.v(LOG_TAG,\"===============================\");\n+\t\t}\n+\t\t\n+\t};\n+\t\n+\t@Override\n+\tpublic void onBackPressed() {\n+\t\tlog();\n+\t\tsuper.onBackPressed();\n+\t}\n+\n+\t@Override\n+\tpublic void onContentChanged() {\n+\t\tlog();\n+\t\tsuper.onContentChanged();\n+\t}\n+\n+\t@Override\n+\tprotected void onDestroy() {\n+\t\tlog();\n+\t\tBaseApplication app = (BaseApplication)getApplication();\n+\t\tapp.removeFromStack(this);\n+\t\tsuper.onDestroy();\n+\t}\n+\n+\t@Override\n+\tprotected void onNewIntent(Intent intent) {\n+\t\tlog();\n+\t\tsuper.onNewIntent(intent);\n+\t}\n+\n+\t@Override\n+\tprotected void onPause() {\n+\t\tlog();\n+\t\tsuper.onPause();\n+\t}\n+\n+\t@Override\n+\tprotected void onPostCreate(Bundle savedInstanceState) {\n+\t\tlog();\n+\t\tsuper.onPostCreate(savedInstanceState);\n+\t}\n+\n+\t@Override\n+\tprotected void onPostResume() {\n+\t\tlog();\n+\t\tsuper.onPostResume();\n+\t}\n+\n+\t@Override\n+\tprotected void onRestart() {\n+\t\tlog();\n+\t\tsuper.onRestart();\n+\t}\n+\n+\t@Override\n+\tprotected void onRestoreInstanceState(Bundle savedInstanceState) {\n+\t\tlog();\n+\t\tsuper.onRestoreInstanceState(savedInstanceState);\n+\t}\n+\n+\t@Override\n+\tprotected void onResume() {\n+\t\tlog();\n+\t\tcurrentStackView.removeAllViews();\n+\t\thandler.postDelayed(displayStack, DISPLAY_STACK_DELAY);\n+\t\tsuper.onResume();\n+\t}\n+\n+\t@Override\n+\tpublic Object onRetainNonConfigurationInstance() {\n+\t\tlog();\n+\t\treturn super.onRetainNonConfigurationInstance();\n+\t}\n+\n+\t@Override\n+\tprotected void onSaveInstanceState(Bundle outState) {\n+\t\tlog();\n+\t\tsuper.onSaveInstanceState(outState);\n+\t}\n+\n+\t@Override\n+\tprotected void onStart() {\n+\t\tlog();\n+\t\tsuper.onStart();\n+\t}\n+\n+\t@Override\n+\tprotected void onStop() {\n+\t\tlog();\n+\t\tsuper.onStop();\n+\t}\n+\t\n+\tprivate void log() {\n+    \tThread current = Thread.currentThread();\n+    \tStackTraceElement trace = current.getStackTrace()[3];\n+    \tString method = trace.getMethodName();\n+    \tLog.v(LOG_TAG,getLaunchMode() + \": \" + method);\n+    \tlifecycleFlow.append(method).append(\"\\n\");\n+    \tif(lifecycle != null){\n+    \t\tlifecycle.setText(lifecycleFlow.toString());\n+    \t}\n+\t}\n+\t\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.main);\n+        findViewById(R.id.main_layout).setBackgroundResource(getBackgroundColour());\n+        TextView header = (TextView)findViewById(R.id.header);\n+        header.setText(getLaunchMode());\n+        lifecycle = (TextView)findViewById(R.id.lifecycle_content);\n+        lifecycle.setMovementMethod(new ScrollingMovementMethod());\n+        currentStackView = (LinearLayout) findViewById(R.id.current_stack_view);\n+        log();\n+\t\taddToStack();\n+    }\n+\n+    private void addToStack() {\n+    \tBaseApplication app = (BaseApplication)getApplication();\n+    \tapp.pushToStack(this);\n+\t}\n+\n+\tprivate String getLaunchMode(){\n+    \treturn \"[\" + hashCode() + \"] \" + getClass().getSimpleName();\n+    }\n+    \n+\tpublic void onStandardClick(View v){\n+    \tstartActivity(new Intent(this, Standard.class));\n+    }\n+    \n+    public void onSingleTopClick(View v){\n+    \tstartActivity(new Intent(this, SingleTop.class));\n+    }\n+    \n+    public void onSingleTaskClick(View v){\n+    \tstartActivity(new Intent(this, SingleTask.class));\n+    }\n+    \n+    public void onSingleInstanceClick(View v){\n+    \tstartActivity(new Intent(this, SingleInstance.class));\n+    }\n+    \n+    public abstract int getBackgroundColour();\n+}\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/BaseApplication.java",
            "additions": 50,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,50 @@\n+package com.novoda.demos.activitylaunchmode;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Stack;\n+\n+import android.app.ActivityManager;\n+import android.app.Application;\n+import android.app.ActivityManager.RunningTaskInfo;\n+\n+public class BaseApplication extends Application{\n+\n+\tprivate HashMap<Integer, Stack<BaseActivity>> tasks;\n+\t\n+\tprivate ActivityManager manager;\n+\t\n+\t@Override\n+\tpublic void onCreate() {\n+\t\tsuper.onCreate();\n+\t\tmanager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);\n+\t\ttasks = new HashMap<Integer, Stack<BaseActivity>>();\n+\t}\n+\t\n+\tpublic void pushToStack(BaseActivity activity){\n+\t\tint currentTaskId = getCurrentTaskId();\n+\t\tif(!tasks.containsKey(currentTaskId)){\n+\t\t\ttasks.put(currentTaskId, new Stack<BaseActivity>());\n+\t\t}\n+\t\tStack<BaseActivity> stack = tasks.get(currentTaskId);\n+\t\tstack.add(activity);\n+\t}\n+\t\n+\tprivate int getCurrentTaskId() {\n+\t\tList<RunningTaskInfo> runningTasks = manager.getRunningTasks(1);\n+\t\tRunningTaskInfo runningTask = runningTasks.get(0);\n+\t\treturn runningTask.id;\n+\t}\n+\n+\tpublic void removeFromStack(BaseActivity activity){\n+\t\tStack<BaseActivity> stack = tasks.get(getCurrentTaskId());\n+\t\tif(stack != null){\n+\t\t\tstack.remove(activity);\n+\t\t}\n+\t}\n+\t\n+\tpublic Stack<BaseActivity> getCurrentStack(){\n+\t\treturn tasks.get(getCurrentTaskId());\n+\t}\n+\t\n+}\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/SingleInstance.java",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+package com.novoda.demos.activitylaunchmode;\n+\n+\n+public class SingleInstance extends BaseActivity {\n+\n+\t@Override\n+\tpublic int getBackgroundColour() {\n+\t\treturn R.color.red;\n+\t}\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/SingleTask.java",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+package com.novoda.demos.activitylaunchmode;\n+\n+\n+public class SingleTask extends BaseActivity {\n+\n+\t@Override\n+\tpublic int getBackgroundColour() {\n+\t\treturn R.color.yellow;\n+\t}\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/SingleTop.java",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+package com.novoda.demos.activitylaunchmode;\n+\n+\n+public class SingleTop extends BaseActivity {\n+\n+\t@Override\n+\tpublic int getBackgroundColour() {\n+\t\treturn R.color.blue;\n+\t}\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "ba40b90116c191d3cde453e66d53839f8f88b4c2",
        "previous commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "diff stats": {
            "file_path": "ActivitesLaunchModes/src/com/novoda/demos/activitylaunchmode/Standard.java",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package com.novoda.demos.activitylaunchmode;\n+\n+\n+public class Standard extends BaseActivity {\n+\n+\t@Override\n+\tpublic int getBackgroundColour() {\n+\t\treturn R.color.green;\n+\t}\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "65897000ca04d58f2b2b538e5c07893063a306c6",
        "previous commit hash": "3d647543c7c67be64f2848a7c3a0b7545af557f3",
        "diff stats": {
            "file_path": "encryption/src/com/novoda/Encrypt.java",
            "additions": 22,
            "deletions": 16
        },
        "diff content": "@@ -22,8 +22,22 @@ import android.widget.TextView;\n public class Encrypt extends Activity {\n \n \tprivate static final String SECRET_PASSWORD_TO_ENCRYPT = \"secretPassword\";\n-\tprivate static final String TAG = Encrypt.class.getSimpleName();\n+\tprivate static final String TAG = \"Encrypt\";\n \t\n+    final String CIPHER_TYPE = \"PBEWithMD5AndDES/CBC/PKCS5Padding\";\n+    final String ALGORITHM = \"PBEWithMD5AndDES\";\n+    final String CHARSET = \"UTF-8\";\n+\n+    /*\n+     * Change string for your app. How you secure this key is up to yourself.\n+     * I'm all ears as too suggestions for best practices in securing this key within the app programatically.\n+     */\n+    final String SECRET_KEY = \"some_string\";\n+    \n+    final byte[] SALT = {\n+    \t\t(byte) 0x03, (byte) 0x64\n+    };\n+    \n \t@Override\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n@@ -56,32 +70,24 @@ public class Encrypt extends Activity {\n     }\n     \n     \n-    public String crypt(int mode, String subject) throws Base64DecoderException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,  InvalidAlgorithmParameterException, InvalidKeyException, InvalidKeySpecException, NoSuchPaddingException,  BadPaddingException, UnsupportedEncodingException, IllegalBlockSizeException {\n-        byte[] salt = {\n-        \t\t(byte) 0x03, (byte) 0x64\n-        };\n-        \n-        final String cipherType = \"PBEWithMD5AndDES/CBC/PKCS5Padding\";\n-        final String secretKey = \"some_string\";\n-        final String algorithm = \"PBEWithMD5AndDES\";\n-        final String charset = \"UTF-8\";\n+    public String crypt(int mode, String encryption_subject) throws Base64DecoderException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,  InvalidAlgorithmParameterException, InvalidKeyException, InvalidKeySpecException, NoSuchPaddingException,  BadPaddingException, UnsupportedEncodingException, IllegalBlockSizeException {\n \n-        final PBEParameterSpec ps = new javax.crypto.spec.PBEParameterSpec(salt, 20);\n-\t\tfinal SecretKeyFactory kf = SecretKeyFactory.getInstance(algorithm);\n-\t\tfinal SecretKey k = kf.generateSecret(new javax.crypto.spec.PBEKeySpec(secretKey.toCharArray()));\n-        final Cipher crypter = Cipher.getInstance(cipherType);\n+        final PBEParameterSpec ps = new javax.crypto.spec.PBEParameterSpec(SALT, 20);\n+\t\tfinal SecretKeyFactory kf = SecretKeyFactory.getInstance(ALGORITHM);\n+\t\tfinal SecretKey k = kf.generateSecret(new javax.crypto.spec.PBEKeySpec(SECRET_KEY.toCharArray()));\n+        final Cipher crypter = Cipher.getInstance(CIPHER_TYPE);\n         \n         String result;\n         \n \t\tswitch(mode){\n \t        case Cipher.DECRYPT_MODE:\n \t        \tcrypter.init(Cipher.DECRYPT_MODE, k, ps);\n-\t            result = new String(crypter.doFinal(Base64.decode(subject)), charset);\n+\t            result = new String(crypter.doFinal(Base64.decode(encryption_subject)), CHARSET);\n \t        \tbreak;\n \t        case Cipher.ENCRYPT_MODE:\n \t        default:\n \t        \tcrypter.init(Cipher.ENCRYPT_MODE, k, ps);\n-\t            result = Base64.encode(crypter.doFinal(subject.getBytes(charset)));\n+\t            result = Base64.encode(crypter.doFinal(encryption_subject.getBytes(CHARSET)));\n         }\n         \n         return result;\n"
    },
    {
        "commit hash": "3d647543c7c67be64f2848a7c3a0b7545af557f3",
        "previous commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "diff stats": {
            "file_path": "encryption/src/com/novoda/Encrypt.java",
            "additions": 2,
            "deletions": 2
        },
        "diff content": "@@ -38,10 +38,10 @@ public class Encrypt extends Activity {\n     public String getAsHash(String var) {\n         String passwordHashed;\n         try {\n-            passwordHashed = crypt(Cipher.ENCRYPT_MODE, SECRET_PASSWORD_TO_ENCRYPT);\n+            passwordHashed = crypt(Cipher.ENCRYPT_MODE, var);\n         } catch (Exception e) {\n         \tLog.e(TAG, \"Problem encrypting string\" ,e);\n-            passwordHashed = SECRET_PASSWORD_TO_ENCRYPT;\n+            passwordHashed = \"you should not see this\";\n \t\t}\n     \treturn passwordHashed;\n     }\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/AndroidManifest.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+\n+\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\" android:theme=\"@style/Theme.Demo\" >\n+        <activity android:name=\".Encrypt\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+\n+    </application>\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/proguard.cfg",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+-optimizationpasses 5\n+-dontusemixedcaseclassnames\n+-dontskipnonpubliclibraryclasses\n+-dontpreverify\n+-verbose\n+-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n+\n+-keep public class * extends android.app.Activity\n+-keep public class * extends android.app.Application\n+-keep public class * extends android.app.Service\n+-keep public class * extends android.content.BroadcastReceiver\n+-keep public class * extends android.content.ContentProvider\n+-keep public class * extends android.app.backup.BackupAgentHelper\n+-keep public class * extends android.preference.Preference\n+-keep public class com.android.vending.licensing.ILicensingService\n+\n+-keepclasseswithmembernames class * {\n+    native <methods>;\n+}\n+\n+-keepclasseswithmembernames class * {\n+    public <init>(android.content.Context, android.util.AttributeSet);\n+}\n+\n+-keepclasseswithmembernames class * {\n+    public <init>(android.content.Context, android.util.AttributeSet, int);\n+}\n+\n+-keepclassmembers enum * {\n+    public static **[] values();\n+    public static ** valueOf(java.lang.String);\n+}\n+\n+-keep class * implements android.os.Parcelable {\n+  public static final android.os.Parcelable$Creator *;\n+}\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/encryption/res/drawable-hdpi/icon.png differ\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/encryption/res/drawable-ldpi/icon.png differ\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/encryption/res/drawable-mdpi/icon.png differ\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/res/layout/main.xml",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    style=\"@style/Fill\">\n+    \n+    <LinearLayout style=\"@style/Fill.Width.Horizontal\">\n+\t\t<TextView android:text=\"Encrypted: \" />\n+    \t<TextView android:id=\"@+id/txt_encrypted\" />\n+    </LinearLayout>\n+\n+    <LinearLayout style=\"@style/Fill.Width.Horizontal\">\n+    \t<TextView android:text=\"After: \" />\n+    \t<TextView android:id=\"@+id/txt_unencrypted\" />\n+    </LinearLayout>\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, Encrypt!</string>\n+    <string name=\"app_name\">Encrypt</string>\n+</resources>\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/res/values/styles_activities.xml",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\n+\t<style name=\"TEXT\" />\n+\t<style name=\"TEXT.h1\">\n+\t\t<item name=\"android:textSize\">20sp</item>\n+\t</style>\n+\t<style name=\"TEXT.h1.white\">\n+\t\t<item name=\"android:textColor\">@android:color/white</item>\n+\t</style>\n+\t<style name=\"TEXT.li\">\n+\t\t<item name=\"android:textSize\">18sp</item>\n+\t</style>\n+\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/res/values/styles_master.xml",
            "additions": 28,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\t<style name=\"Fill\">\n+\t\t<item name=\"android:layout_width\">fill_parent</item>\n+\t\t<item name=\"android:layout_height\">fill_parent</item>\n+\t\t<item name=\"android:orientation\">vertical</item>\n+\t</style>\n+\t<style name=\"Wrap\">\n+\t\t<item name=\"android:layout_width\">wrap_content</item>\n+\t\t<item name=\"android:layout_height\">wrap_content</item>\n+\t\t<item name=\"android:orientation\">vertical</item>\n+\t</style>\n+\t<style name=\"Fill.Height\" parent=\"@style/Fill\">\n+\t\t<item name=\"android:layout_width\">wrap_content</item>\n+\t</style>\n+\t<style name=\"Fill.Width\" parent=\"@style/Fill\">\n+\t\t<item name=\"android:layout_height\">wrap_content</item>\n+\t</style>\n+\t<style name=\"Fill.Width.Horizontal\" parent=\"@style/Fill.Width\">\n+\t\t<item name=\"android:orientation\">horizontal</item>\n+\t</style>\n+\t<style name=\"Fill.Height.Horizontal\" parent=\"@style/Fill.Height\">\n+\t\t<item name=\"android:orientation\">horizontal</item>\n+\t</style>\n+\t<style name=\"Fill.Horizontal\" parent=\"@style/Fill\">\n+\t\t<item name=\"android:orientation\">horizontal</item>\n+\t</style>\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/res/values/styles_theme.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\t<!-- _THEME -->\n+    <style name=\"Theme\" parent=\"android:Theme\" />\n+    <style name=\"Theme.Demo\" parent=\"android:style/Theme.Light\">\n+        <item name=\"android:windowNoTitle\">true</item>\n+        <item name=\"android:windowContentOverlay\">@null</item>\n+        <item name=\"android:layout_width\">wrap_content</item>\n+\t\t<item name=\"android:layout_height\">wrap_content</item>\n+\t\t<item name=\"android:windowBackground\">@android:color/white</item>\n+    </style>\n+\n+    <!-- Widget Styles -->\n+    <style name=\"Widget\">\n+        <item name=\"android:textAppearance\">?android:attr/textAppearance</item>\n+    </style>\n+    \n+    \n+</resources>    \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/src/com/novoda/Base64.java",
            "additions": 571,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,571 @@\n+// Portions copyright 2002, Google, Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.novoda;\n+\n+\n+// This code was converted from code at http://iharder.sourceforge.net/base64/\n+// Lots of extraneous features were removed.\n+/* The original code said:\n+ * <p>\n+ * I am placing this code in the Public Domain. Do with it as you will.\n+ * This software comes with no guarantees or warranties but with\n+ * plenty of well-wishing instead!\n+ * Please visit\n+ * <a href=\"http://iharder.net/xmlizable\">http://iharder.net/xmlizable</a>\n+ * periodically to check for updates or to contribute improvements.\n+ * </p>\n+ *\n+ * @author Robert Harder\n+ * @author rharder@usa.net\n+ * @version 1.3\n+ */\n+\n+/**\n+ * Base64 converter class. This code is not a complete MIME encoder;\n+ * it simply converts binary data to base64 data and back.\n+ *\n+ * <p>Note {@link CharBase64} is a GWT-compatible implementation of this\n+ * class.\n+ */\n+public class Base64 {\n+  /** Specify encoding (value is {@code true}). */\n+  public final static boolean ENCODE = true;\n+\n+  /** Specify decoding (value is {@code false}). */\n+  public final static boolean DECODE = false;\n+\n+  /** The equals sign (=) as a byte. */\n+  private final static byte EQUALS_SIGN = (byte) '=';\n+\n+  /** The new line character (\\n) as a byte. */\n+  private final static byte NEW_LINE = (byte) '\\n';\n+\n+  /**\n+   * The 64 valid Base64 values.\n+   */\n+  private final static byte[] ALPHABET =\n+      {(byte) 'A', (byte) 'B', (byte) 'C', (byte) 'D', (byte) 'E', (byte) 'F',\n+          (byte) 'G', (byte) 'H', (byte) 'I', (byte) 'J', (byte) 'K',\n+          (byte) 'L', (byte) 'M', (byte) 'N', (byte) 'O', (byte) 'P',\n+          (byte) 'Q', (byte) 'R', (byte) 'S', (byte) 'T', (byte) 'U',\n+          (byte) 'V', (byte) 'W', (byte) 'X', (byte) 'Y', (byte) 'Z',\n+          (byte) 'a', (byte) 'b', (byte) 'c', (byte) 'd', (byte) 'e',\n+          (byte) 'f', (byte) 'g', (byte) 'h', (byte) 'i', (byte) 'j',\n+          (byte) 'k', (byte) 'l', (byte) 'm', (byte) 'n', (byte) 'o',\n+          (byte) 'p', (byte) 'q', (byte) 'r', (byte) 's', (byte) 't',\n+          (byte) 'u', (byte) 'v', (byte) 'w', (byte) 'x', (byte) 'y',\n+          (byte) 'z', (byte) '0', (byte) '1', (byte) '2', (byte) '3',\n+          (byte) '4', (byte) '5', (byte) '6', (byte) '7', (byte) '8',\n+          (byte) '9', (byte) '+', (byte) '/'};\n+\n+  /**\n+   * The 64 valid web safe Base64 values.\n+   */\n+  private final static byte[] WEBSAFE_ALPHABET =\n+      {(byte) 'A', (byte) 'B', (byte) 'C', (byte) 'D', (byte) 'E', (byte) 'F',\n+          (byte) 'G', (byte) 'H', (byte) 'I', (byte) 'J', (byte) 'K',\n+          (byte) 'L', (byte) 'M', (byte) 'N', (byte) 'O', (byte) 'P',\n+          (byte) 'Q', (byte) 'R', (byte) 'S', (byte) 'T', (byte) 'U',\n+          (byte) 'V', (byte) 'W', (byte) 'X', (byte) 'Y', (byte) 'Z',\n+          (byte) 'a', (byte) 'b', (byte) 'c', (byte) 'd', (byte) 'e',\n+          (byte) 'f', (byte) 'g', (byte) 'h', (byte) 'i', (byte) 'j',\n+          (byte) 'k', (byte) 'l', (byte) 'm', (byte) 'n', (byte) 'o',\n+          (byte) 'p', (byte) 'q', (byte) 'r', (byte) 's', (byte) 't',\n+          (byte) 'u', (byte) 'v', (byte) 'w', (byte) 'x', (byte) 'y',\n+          (byte) 'z', (byte) '0', (byte) '1', (byte) '2', (byte) '3',\n+          (byte) '4', (byte) '5', (byte) '6', (byte) '7', (byte) '8',\n+          (byte) '9', (byte) '-', (byte) '_'};\n+\n+  /**\n+   * Translates a Base64 value to either its 6-bit reconstruction value\n+   * or a negative number indicating some other meaning.\n+   **/\n+  private final static byte[] DECODABET = {-9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal  0 -  8\n+      -5, -5, // Whitespace: Tab and Linefeed\n+      -9, -9, // Decimal 11 - 12\n+      -5, // Whitespace: Carriage Return\n+      -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal 14 - 26\n+      -9, -9, -9, -9, -9, // Decimal 27 - 31\n+      -5, // Whitespace: Space\n+      -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal 33 - 42\n+      62, // Plus sign at decimal 43\n+      -9, -9, -9, // Decimal 44 - 46\n+      63, // Slash at decimal 47\n+      52, 53, 54, 55, 56, 57, 58, 59, 60, 61, // Numbers zero through nine\n+      -9, -9, -9, // Decimal 58 - 60\n+      -1, // Equals sign at decimal 61\n+      -9, -9, -9, // Decimal 62 - 64\n+      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, // Letters 'A' through 'N'\n+      14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, // Letters 'O' through 'Z'\n+      -9, -9, -9, -9, -9, -9, // Decimal 91 - 96\n+      26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, // Letters 'a' through 'm'\n+      39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, // Letters 'n' through 'z'\n+      -9, -9, -9, -9, -9 // Decimal 123 - 127\n+      /*  ,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 128 - 139\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 140 - 152\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 153 - 165\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 166 - 178\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 179 - 191\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 192 - 204\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 205 - 217\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 218 - 230\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 231 - 243\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9         // Decimal 244 - 255 */\n+      };\n+\n+  /** The web safe decodabet */\n+  private final static byte[] WEBSAFE_DECODABET =\n+      {-9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal  0 -  8\n+          -5, -5, // Whitespace: Tab and Linefeed\n+          -9, -9, // Decimal 11 - 12\n+          -5, // Whitespace: Carriage Return\n+          -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal 14 - 26\n+          -9, -9, -9, -9, -9, // Decimal 27 - 31\n+          -5, // Whitespace: Space\n+          -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal 33 - 44\n+          62, // Dash '-' sign at decimal 45\n+          -9, -9, // Decimal 46-47\n+          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, // Numbers zero through nine\n+          -9, -9, -9, // Decimal 58 - 60\n+          -1, // Equals sign at decimal 61\n+          -9, -9, -9, // Decimal 62 - 64\n+          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, // Letters 'A' through 'N'\n+          14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, // Letters 'O' through 'Z'\n+          -9, -9, -9, -9, // Decimal 91-94\n+          63, // Underscore '_' at decimal 95\n+          -9, // Decimal 96\n+          26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, // Letters 'a' through 'm'\n+          39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, // Letters 'n' through 'z'\n+          -9, -9, -9, -9, -9 // Decimal 123 - 127\n+      /*  ,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 128 - 139\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 140 - 152\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 153 - 165\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 166 - 178\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 179 - 191\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 192 - 204\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 205 - 217\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 218 - 230\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 231 - 243\n+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9         // Decimal 244 - 255 */\n+      };\n+\n+  // Indicates white space in encoding\n+  private final static byte WHITE_SPACE_ENC = -5;\n+  // Indicates equals sign in encoding\n+  private final static byte EQUALS_SIGN_ENC = -1;\n+\n+  /** Defeats instantiation. */\n+  private Base64() {\n+  }\n+\n+  /* ********  E N C O D I N G   M E T H O D S  ******** */\n+\n+  /**\n+   * Encodes up to three bytes of the array <var>source</var>\n+   * and writes the resulting four Base64 bytes to <var>destination</var>.\n+   * The source and destination arrays can be manipulated\n+   * anywhere along their length by specifying\n+   * <var>srcOffset</var> and <var>destOffset</var>.\n+   * This method does not check to make sure your arrays\n+   * are large enough to accommodate <var>srcOffset</var> + 3 for\n+   * the <var>source</var> array or <var>destOffset</var> + 4 for\n+   * the <var>destination</var> array.\n+   * The actual number of significant bytes in your array is\n+   * given by <var>numSigBytes</var>.\n+   *\n+   * @param source the array to convert\n+   * @param srcOffset the index where conversion begins\n+   * @param numSigBytes the number of significant bytes in your array\n+   * @param destination the array to hold the conversion\n+   * @param destOffset the index where output will be put\n+   * @param alphabet is the encoding alphabet\n+   * @return the <var>destination</var> array\n+   * @since 1.3\n+   */\n+  private static byte[] encode3to4(byte[] source, int srcOffset,\n+      int numSigBytes, byte[] destination, int destOffset, byte[] alphabet) {\n+    //           1         2         3\n+    // 01234567890123456789012345678901 Bit position\n+    // --------000000001111111122222222 Array position from threeBytes\n+    // --------|    ||    ||    ||    | Six bit groups to index alphabet\n+    //          >>18  >>12  >> 6  >> 0  Right shift necessary\n+    //                0x3f  0x3f  0x3f  Additional AND\n+\n+    // Create buffer with zero-padding if there are only one or two\n+    // significant bytes passed in the array.\n+    // We have to shift left 24 in order to flush out the 1's that appear\n+    // when Java treats a value as negative that is cast from a byte to an int.\n+    int inBuff =\n+        (numSigBytes > 0 ? ((source[srcOffset] << 24) >>> 8) : 0)\n+            | (numSigBytes > 1 ? ((source[srcOffset + 1] << 24) >>> 16) : 0)\n+            | (numSigBytes > 2 ? ((source[srcOffset + 2] << 24) >>> 24) : 0);\n+\n+    switch (numSigBytes) {\n+      case 3:\n+        destination[destOffset] = alphabet[(inBuff >>> 18)];\n+        destination[destOffset + 1] = alphabet[(inBuff >>> 12) & 0x3f];\n+        destination[destOffset + 2] = alphabet[(inBuff >>> 6) & 0x3f];\n+        destination[destOffset + 3] = alphabet[(inBuff) & 0x3f];\n+        return destination;\n+      case 2:\n+        destination[destOffset] = alphabet[(inBuff >>> 18)];\n+        destination[destOffset + 1] = alphabet[(inBuff >>> 12) & 0x3f];\n+        destination[destOffset + 2] = alphabet[(inBuff >>> 6) & 0x3f];\n+        destination[destOffset + 3] = EQUALS_SIGN;\n+        return destination;\n+      case 1:\n+        destination[destOffset] = alphabet[(inBuff >>> 18)];\n+        destination[destOffset + 1] = alphabet[(inBuff >>> 12) & 0x3f];\n+        destination[destOffset + 2] = EQUALS_SIGN;\n+        destination[destOffset + 3] = EQUALS_SIGN;\n+        return destination;\n+      default:\n+        return destination;\n+    } // end switch\n+  } // end encode3to4\n+\n+  /**\n+   * Encodes a byte array into Base64 notation.\n+   * Equivalent to calling\n+   * {@code encodeBytes(source, 0, source.length)}\n+   *\n+   * @param source The data to convert\n+   * @since 1.4\n+   */\n+  public static String encode(byte[] source) {\n+    return encode(source, 0, source.length, ALPHABET, true);\n+  }\n+\n+  /**\n+   * Encodes a byte array into web safe Base64 notation.\n+   *\n+   * @param source The data to convert\n+   * @param doPadding is {@code true} to pad result with '=' chars\n+   *        if it does not fall on 3 byte boundaries\n+   */\n+  public static String encodeWebSafe(byte[] source, boolean doPadding) {\n+    return encode(source, 0, source.length, WEBSAFE_ALPHABET, doPadding);\n+  }\n+\n+  /**\n+   * Encodes a byte array into Base64 notation.\n+   *\n+   * @param source the data to convert\n+   * @param off offset in array where conversion should begin\n+   * @param len length of data to convert\n+   * @param alphabet the encoding alphabet\n+   * @param doPadding is {@code true} to pad result with '=' chars\n+   * if it does not fall on 3 byte boundaries\n+   * @since 1.4\n+   */\n+  public static String encode(byte[] source, int off, int len, byte[] alphabet,\n+      boolean doPadding) {\n+    byte[] outBuff = encode(source, off, len, alphabet, Integer.MAX_VALUE);\n+    int outLen = outBuff.length;\n+\n+    // If doPadding is false, set length to truncate '='\n+    // padding characters\n+    while (doPadding == false && outLen > 0) {\n+      if (outBuff[outLen - 1] != '=') {\n+        break;\n+      }\n+      outLen -= 1;\n+    }\n+\n+    return new String(outBuff, 0, outLen);\n+  }\n+\n+  /**\n+   * Encodes a byte array into Base64 notation.\n+   *\n+   * @param source the data to convert\n+   * @param off offset in array where conversion should begin\n+   * @param len length of data to convert\n+   * @param alphabet is the encoding alphabet\n+   * @param maxLineLength maximum length of one line.\n+   * @return the BASE64-encoded byte array\n+   */\n+  public static byte[] encode(byte[] source, int off, int len, byte[] alphabet,\n+      int maxLineLength) {\n+    int lenDiv3 = (len + 2) / 3; // ceil(len / 3)\n+    int len43 = lenDiv3 * 4;\n+    byte[] outBuff = new byte[len43 // Main 4:3\n+        + (len43 / maxLineLength)]; // New lines\n+\n+    int d = 0;\n+    int e = 0;\n+    int len2 = len - 2;\n+    int lineLength = 0;\n+    for (; d < len2; d += 3, e += 4) {\n+\n+      // The following block of code is the same as\n+      // encode3to4( source, d + off, 3, outBuff, e, alphabet );\n+      // but inlined for faster encoding (~20% improvement)\n+      int inBuff =\n+          ((source[d + off] << 24) >>> 8)\n+              | ((source[d + 1 + off] << 24) >>> 16)\n+              | ((source[d + 2 + off] << 24) >>> 24);\n+      outBuff[e] = alphabet[(inBuff >>> 18)];\n+      outBuff[e + 1] = alphabet[(inBuff >>> 12) & 0x3f];\n+      outBuff[e + 2] = alphabet[(inBuff >>> 6) & 0x3f];\n+      outBuff[e + 3] = alphabet[(inBuff) & 0x3f];\n+\n+      lineLength += 4;\n+      if (lineLength == maxLineLength) {\n+        outBuff[e + 4] = NEW_LINE;\n+        e++;\n+        lineLength = 0;\n+      } // end if: end of line\n+    } // end for: each piece of array\n+\n+    if (d < len) {\n+      encode3to4(source, d + off, len - d, outBuff, e, alphabet);\n+\n+      lineLength += 4;\n+      if (lineLength == maxLineLength) {\n+        // Add a last newline\n+        outBuff[e + 4] = NEW_LINE;\n+        e++;\n+      }\n+      e += 4;\n+    }\n+\n+    assert (e == outBuff.length);\n+    return outBuff;\n+  }\n+\n+\n+  /* ********  D E C O D I N G   M E T H O D S  ******** */\n+\n+\n+  /**\n+   * Decodes four bytes from array <var>source</var>\n+   * and writes the resulting bytes (up to three of them)\n+   * to <var>destination</var>.\n+   * The source and destination arrays can be manipulated\n+   * anywhere along their length by specifying\n+   * <var>srcOffset</var> and <var>destOffset</var>.\n+   * This method does not check to make sure your arrays\n+   * are large enough to accommodate <var>srcOffset</var> + 4 for\n+   * the <var>source</var> array or <var>destOffset</var> + 3 for\n+   * the <var>destination</var> array.\n+   * This method returns the actual number of bytes that\n+   * were converted from the Base64 encoding.\n+   *\n+   *\n+   * @param source the array to convert\n+   * @param srcOffset the index where conversion begins\n+   * @param destination the array to hold the conversion\n+   * @param destOffset the index where output will be put\n+   * @param decodabet the decodabet for decoding Base64 content\n+   * @return the number of decoded bytes converted\n+   * @since 1.3\n+   */\n+  private static int decode4to3(byte[] source, int srcOffset,\n+      byte[] destination, int destOffset, byte[] decodabet) {\n+    // Example: Dk==\n+    if (source[srcOffset + 2] == EQUALS_SIGN) {\n+      int outBuff =\n+          ((decodabet[source[srcOffset]] << 24) >>> 6)\n+              | ((decodabet[source[srcOffset + 1]] << 24) >>> 12);\n+\n+      destination[destOffset] = (byte) (outBuff >>> 16);\n+      return 1;\n+    } else if (source[srcOffset + 3] == EQUALS_SIGN) {\n+      // Example: DkL=\n+      int outBuff =\n+          ((decodabet[source[srcOffset]] << 24) >>> 6)\n+              | ((decodabet[source[srcOffset + 1]] << 24) >>> 12)\n+              | ((decodabet[source[srcOffset + 2]] << 24) >>> 18);\n+\n+      destination[destOffset] = (byte) (outBuff >>> 16);\n+      destination[destOffset + 1] = (byte) (outBuff >>> 8);\n+      return 2;\n+    } else {\n+      // Example: DkLE\n+      int outBuff =\n+          ((decodabet[source[srcOffset]] << 24) >>> 6)\n+              | ((decodabet[source[srcOffset + 1]] << 24) >>> 12)\n+              | ((decodabet[source[srcOffset + 2]] << 24) >>> 18)\n+              | ((decodabet[source[srcOffset + 3]] << 24) >>> 24);\n+\n+      destination[destOffset] = (byte) (outBuff >> 16);\n+      destination[destOffset + 1] = (byte) (outBuff >> 8);\n+      destination[destOffset + 2] = (byte) (outBuff);\n+      return 3;\n+    }\n+  } // end decodeToBytes\n+\n+\n+  /**\n+   * Decodes data from Base64 notation.\n+   *\n+   * @param s the string to decode (decoded in default encoding)\n+   * @return the decoded data\n+   * @since 1.4\n+   */\n+  public static byte[] decode(String s) throws Base64DecoderException {\n+    byte[] bytes = s.getBytes();\n+    return decode(bytes, 0, bytes.length);\n+  }\n+\n+  /**\n+   * Decodes data from web safe Base64 notation.\n+   * Web safe encoding uses '-' instead of '+', '_' instead of '/'\n+   *\n+   * @param s the string to decode (decoded in default encoding)\n+   * @return the decoded data\n+   */\n+  public static byte[] decodeWebSafe(String s) throws Base64DecoderException {\n+    byte[] bytes = s.getBytes();\n+    return decodeWebSafe(bytes, 0, bytes.length);\n+  }\n+\n+  /**\n+   * Decodes Base64 content in byte array format and returns\n+   * the decoded byte array.\n+   *\n+   * @param source The Base64 encoded data\n+   * @return decoded data\n+   * @since 1.3\n+   * @throws Base64DecoderException\n+   */\n+  public static byte[] decode(byte[] source) throws Base64DecoderException {\n+    return decode(source, 0, source.length);\n+  }\n+\n+  /**\n+   * Decodes web safe Base64 content in byte array format and returns\n+   * the decoded data.\n+   * Web safe encoding uses '-' instead of '+', '_' instead of '/'\n+   *\n+   * @param source the string to decode (decoded in default encoding)\n+   * @return the decoded data\n+   */\n+  public static byte[] decodeWebSafe(byte[] source)\n+      throws Base64DecoderException {\n+    return decodeWebSafe(source, 0, source.length);\n+  }\n+\n+  /**\n+   * Decodes Base64 content in byte array format and returns\n+   * the decoded byte array.\n+   *\n+   * @param source the Base64 encoded data\n+   * @param off    the offset of where to begin decoding\n+   * @param len    the length of characters to decode\n+   * @return decoded data\n+   * @since 1.3\n+   * @throws Base64DecoderException\n+   */\n+  public static byte[] decode(byte[] source, int off, int len)\n+      throws Base64DecoderException {\n+    return decode(source, off, len, DECODABET);\n+  }\n+\n+  /**\n+   * Decodes web safe Base64 content in byte array format and returns\n+   * the decoded byte array.\n+   * Web safe encoding uses '-' instead of '+', '_' instead of '/'\n+   *\n+   * @param source the Base64 encoded data\n+   * @param off    the offset of where to begin decoding\n+   * @param len    the length of characters to decode\n+   * @return decoded data\n+   */\n+  public static byte[] decodeWebSafe(byte[] source, int off, int len)\n+      throws Base64DecoderException {\n+    return decode(source, off, len, WEBSAFE_DECODABET);\n+  }\n+\n+  /**\n+   * Decodes Base64 content using the supplied decodabet and returns\n+   * the decoded byte array.\n+   *\n+   * @param source the Base64 encoded data\n+   * @param off the offset of where to begin decoding\n+   * @param len the length of characters to decode\n+   * @param decodabet the decodabet for decoding Base64 content\n+   * @return decoded data\n+   */\n+  public static byte[] decode(byte[] source, int off, int len, byte[] decodabet)\n+      throws Base64DecoderException {\n+    int len34 = len * 3 / 4;\n+    byte[] outBuff = new byte[2 + len34]; // Upper limit on size of output\n+    int outBuffPosn = 0;\n+\n+    byte[] b4 = new byte[4];\n+    int b4Posn = 0;\n+    int i = 0;\n+    byte sbiCrop = 0;\n+    byte sbiDecode = 0;\n+    for (i = 0; i < len; i++) {\n+      sbiCrop = (byte) (source[i + off] & 0x7f); // Only the low seven bits\n+      sbiDecode = decodabet[sbiCrop];\n+\n+      if (sbiDecode >= WHITE_SPACE_ENC) { // White space Equals sign or better\n+        if (sbiDecode >= EQUALS_SIGN_ENC) {\n+          // An equals sign (for padding) must not occur at position 0 or 1\n+          // and must be the last byte[s] in the encoded value\n+          if (sbiCrop == EQUALS_SIGN) {\n+            int bytesLeft = len - i;\n+            byte lastByte = (byte) (source[len - 1 + off] & 0x7f);\n+            if (b4Posn == 0 || b4Posn == 1) {\n+              throw new Base64DecoderException(\n+                  \"invalid padding byte '=' at byte offset \" + i);\n+            } else if ((b4Posn == 3 && bytesLeft > 2)\n+                || (b4Posn == 4 && bytesLeft > 1)) {\n+              throw new Base64DecoderException(\n+                  \"padding byte '=' falsely signals end of encoded value \"\n+                      + \"at offset \" + i);\n+            } else if (lastByte != EQUALS_SIGN && lastByte != NEW_LINE) {\n+              throw new Base64DecoderException(\n+                  \"encoded value has invalid trailing byte\");\n+            }\n+            break;\n+          }\n+\n+          b4[b4Posn++] = sbiCrop;\n+          if (b4Posn == 4) {\n+            outBuffPosn += decode4to3(b4, 0, outBuff, outBuffPosn, decodabet);\n+            b4Posn = 0;\n+          }\n+        }\n+      } else {\n+        throw new Base64DecoderException(\"Bad Base64 input character at \" + i\n+            + \": \" + source[i + off] + \"(decimal)\");\n+      }\n+    }\n+\n+    // Because web safe encoding allows non padding base64 encodes, we\n+    // need to pad the rest of the b4 buffer with equal signs when\n+    // b4Posn != 0.  There can be at most 2 equal signs at the end of\n+    // four characters, so the b4 buffer must have two or three\n+    // characters.  This also catches the case where the input is\n+    // padded with EQUALS_SIGN\n+    if (b4Posn != 0) {\n+      if (b4Posn == 1) {\n+        throw new Base64DecoderException(\"single trailing character at offset \"\n+            + (len - 1));\n+      }\n+      b4[b4Posn++] = EQUALS_SIGN;\n+      outBuffPosn += decode4to3(b4, 0, outBuff, outBuffPosn, decodabet);\n+    }\n+\n+    byte[] out = new byte[outBuffPosn];\n+    System.arraycopy(outBuff, 0, out, 0, outBuffPosn);\n+    return out;\n+  }\n+}\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/src/com/novoda/Base64DecoderException.java",
            "additions": 32,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,32 @@\n+// Copyright 2002, Google, Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.novoda;\n+\n+/**\n+ * Exception thrown when encountering an invalid Base64 input character.\n+ *\n+ * @author nelson\n+ */\n+public class Base64DecoderException extends Exception {\n+  public Base64DecoderException() {\n+    super();\n+  }\n+\n+  public Base64DecoderException(String s) {\n+    super(s);\n+  }\n+\n+  private static final long serialVersionUID = 1L;\n+}\n"
    },
    {
        "commit hash": "1ce6848d75f6dc5042dad8b2d3392304dcc1a84f",
        "previous commit hash": "62831c7c05e03894b6c0d4d95141670709084e65",
        "diff stats": {
            "file_path": "encryption/src/com/novoda/Encrypt.java",
            "additions": 89,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,89 @@\n+package com.novoda;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.spec.InvalidKeySpecException;\n+\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import javax.crypto.SecretKey;\n+import javax.crypto.SecretKeyFactory;\n+import javax.crypto.spec.PBEParameterSpec;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.widget.TextView;\n+\n+public class Encrypt extends Activity {\n+\n+\tprivate static final String SECRET_PASSWORD_TO_ENCRYPT = \"secretPassword\";\n+\tprivate static final String TAG = Encrypt.class.getSimpleName();\n+\t\n+\t@Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.main);\n+        \n+        String hash = getAsHash(SECRET_PASSWORD_TO_ENCRYPT);\n+        \n+        ((TextView)findViewById(R.id.txt_encrypted)).setText(hash);\n+        ((TextView)findViewById(R.id.txt_unencrypted)).setText(getUnhashed(hash));\n+    }\n+    \n+    public String getAsHash(String var) {\n+        String passwordHashed;\n+        try {\n+            passwordHashed = crypt(Cipher.ENCRYPT_MODE, SECRET_PASSWORD_TO_ENCRYPT);\n+        } catch (Exception e) {\n+        \tLog.e(TAG, \"Problem encrypting string\" ,e);\n+            passwordHashed = SECRET_PASSWORD_TO_ENCRYPT;\n+\t\t}\n+    \treturn passwordHashed;\n+    }\n+    \n+    public String getUnhashed(String hashed){\n+        try {\n+        \thashed = crypt(Cipher.DECRYPT_MODE, hashed);\n+        } catch (Exception e) {\n+        \tLog.e(TAG, \"Problem decrypting string\" ,e);\n+        }     \n+        return hashed;\n+    }\n+    \n+    \n+    public String crypt(int mode, String subject) throws Base64DecoderException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,  InvalidAlgorithmParameterException, InvalidKeyException, InvalidKeySpecException, NoSuchPaddingException,  BadPaddingException, UnsupportedEncodingException, IllegalBlockSizeException {\n+        byte[] salt = {\n+        \t\t(byte) 0x03, (byte) 0x64\n+        };\n+        \n+        final String cipherType = \"PBEWithMD5AndDES/CBC/PKCS5Padding\";\n+        final String secretKey = \"some_string\";\n+        final String algorithm = \"PBEWithMD5AndDES\";\n+        final String charset = \"UTF-8\";\n+\n+        final PBEParameterSpec ps = new javax.crypto.spec.PBEParameterSpec(salt, 20);\n+\t\tfinal SecretKeyFactory kf = SecretKeyFactory.getInstance(algorithm);\n+\t\tfinal SecretKey k = kf.generateSecret(new javax.crypto.spec.PBEKeySpec(secretKey.toCharArray()));\n+        final Cipher crypter = Cipher.getInstance(cipherType);\n+        \n+        String result;\n+        \n+\t\tswitch(mode){\n+\t        case Cipher.DECRYPT_MODE:\n+\t        \tcrypter.init(Cipher.DECRYPT_MODE, k, ps);\n+\t            result = new String(crypter.doFinal(Base64.decode(subject)), charset);\n+\t        \tbreak;\n+\t        case Cipher.ENCRYPT_MODE:\n+\t        default:\n+\t        \tcrypter.init(Cipher.ENCRYPT_MODE, k, ps);\n+\t            result = Base64.encode(crypter.doFinal(subject.getBytes(charset)));\n+        }\n+        \n+        return result;\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/AndroidManifest.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -15,5 +15,5 @@\n \t\t</activity>\n \n \t</application>\n-\t<uses-sdk android:minSdkVersion=\"4\" />\n+\t<uses-sdk android:minSdkVersion=\"7\" />\n </manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/com/novoda/HelloWebView.java",
            "additions": 38,
            "deletions": 2
        },
        "diff content": "@@ -4,17 +4,24 @@ import android.app.Activity;\n import android.app.AlertDialog;\n import android.app.Dialog;\n import android.content.DialogInterface;\n+import android.content.pm.PackageManager;\n import android.os.Bundle;\n import android.view.Menu;\n import android.view.MenuInflater;\n import android.view.MenuItem;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.View.OnTouchListener;\n import android.webkit.WebView;\n \n+import com.novoda.utils.PinchZoomDetector;\n+\n public class HelloWebView extends Activity{\n \n \tprivate static final int DIALOG_CHOOSE_VIEW_ID = 0;\n \tprivate WebView webView;\n \tprivate int fontSize;\n+\tprivate PinchZoomDetector zoomDetector;\n \n \t@Override\n \tpublic void onCreate(Bundle savedInstanceState) {\n@@ -23,6 +30,11 @@ public class HelloWebView extends Activity{\n \t    webView = (WebView) findViewById(R.id.webview_main);\n \t    webView.loadUrl(\"file:///android_asset/two_columns.html\");\n \t    fontSize = webView.getSettings().getDefaultFontSize();\n+\t    \n+\t\tif (getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN_MULTITOUCH)) {\n+\t\t\twebView.setOnTouchListener(touchListener);\n+\t\t\tzoomDetector = new PinchZoomDetector();\n+\t\t}\n \t}\n \t\n \t@Override\n@@ -55,11 +67,16 @@ public class HelloWebView extends Activity{\n \t}\n \t\n \tprivate void fontSizePlus() {\n-\t    webView.getSettings().setDefaultFontSize(++fontSize);\n+\t\tif (fontSize < 72) {\n+\t\t\twebView.getSettings().setDefaultFontSize(++fontSize);\n+\t\t}\n \t}\n \n \tprivate void fontSizeMinus() {\n-\t    webView.getSettings().setDefaultFontSize(--fontSize);\n+\t\tint minimumFont = webView.getSettings().getMinimumFontSize();\n+\t\tif (fontSize > minimumFont) {\n+\t\t\twebView.getSettings().setDefaultFontSize(--fontSize);\n+\t\t}\n \t}\n \t\n \t@Override\n@@ -93,4 +110,23 @@ public class HelloWebView extends Activity{\n \t\t\n \t\treturn builder.create();\n \t}\n+\n+\tprivate OnTouchListener touchListener = new OnTouchListener() {\n+\t\t@Override\n+\t\tpublic boolean onTouch(View v, MotionEvent event) {\n+\t\t\tint result = zoomDetector.detectZoom(event);\n+\t\t\t\n+\t\t\tswitch(result){\n+\t\t\t\tcase PinchZoomDetector.ZOOMING_IN:\n+\t\t\t\t\tfontSizePlus();\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase PinchZoomDetector.ZOOMING_OUT:\n+\t\t\t\t\tfontSizeMinus();\n+\t\t\t\t\tbreak;\n+\t\t\t}\n+\n+\t\t\treturn true;\n+\t\t}\n+\t};\n+\t\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/com/novoda/utils/PinchZoomDetector.java",
            "additions": 84,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,84 @@\n+package com.novoda.utils;\n+\n+import android.util.FloatMath;\n+import android.view.MotionEvent;\n+\n+public class PinchZoomDetector {\n+\tpublic static final int OTHER = 0;\n+\tpublic static final int ZOOMING_STARTED = 1;\n+\tpublic static final int ZOOMING_IN = 2;\n+\tpublic static final int ZOOMING_OUT = 3;\n+\tpublic static final int ZOOMING_STOPPED = 4;\n+\n+\tpublic float minimumFingerDistance = 20f;\n+\tpublic float zoomInterval = 50f;\n+\n+\tprivate boolean zooming;\n+\tprivate float oldDistance;\n+\n+\tpublic PinchZoomDetector() {\n+\t}\n+\n+\tpublic PinchZoomDetector(float minimumFingerDistance, float zoomInterval) {\n+\t\tthis.minimumFingerDistance = minimumFingerDistance;\n+\t\tthis.zoomInterval = zoomInterval;\n+\t}\n+\n+\tpublic PinchZoomDetector(float zoomInterval) {\n+\t\tthis.zoomInterval = zoomInterval;\n+\t}\n+\n+\tpublic int detectZoom(MotionEvent event) {\n+\t\tint result = OTHER;\n+\t\tswitch (event.getAction() & MotionEvent.ACTION_MASK) {\n+\t\t\tcase MotionEvent.ACTION_MOVE:\n+\t\t\t\tresult = moving(event);\n+\t\t\t\tbreak;\n+\t\t\tcase MotionEvent.ACTION_UP:\n+\t\t\tcase MotionEvent.ACTION_POINTER_UP:\n+\t\t\t\tresult = release(event);\n+\t\t\t\tbreak;\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\tprivate int moving(MotionEvent event) {\n+\t\tint result = OTHER;\n+\t\tfloat distance = fingerDistance(event);\n+\t\tif (zooming == false) {\n+\t\t\tif (event.getPointerCount() > 1) {\n+\t\t\t\tif (distance > minimumFingerDistance) {\n+\t\t\t\t\tzooming = true;\n+\t\t\t\t\toldDistance = distance;\n+\t\t\t\t\tresult = ZOOMING_STARTED;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (zooming) {\n+\t\t\tif (distance + zoomInterval < oldDistance) {\n+\t\t\t\tresult = ZOOMING_OUT;\n+\t\t\t\toldDistance = distance;\n+\t\t\t} else if (distance - zoomInterval > oldDistance) {\n+\t\t\t\tresult = ZOOMING_IN;\n+\t\t\t\toldDistance = distance;\n+\t\t\t}\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\tprivate int release(MotionEvent event) {\n+\t\tint result = OTHER;\n+\t\tif (zooming) {\n+\t\t\tzooming = false;\n+\t\t\tresult = ZOOMING_STOPPED;\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\tprivate float fingerDistance(MotionEvent event) {\n+\t\tfloat x = event.getX(0) - event.getX(1);\n+\t\tfloat y = event.getY(0) - event.getY(1);\n+\t\treturn FloatMath.sqrt(x * x + y * y);\n+\t}\n+\n+}\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/AndroidManifest.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".Main\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+\n+    </application>\n+    <uses-sdk android:minSdkVersion=\"7\" />\n+\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/proguard.cfg",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+-optimizationpasses 5\n+-dontusemixedcaseclassnames\n+-dontskipnonpubliclibraryclasses\n+-dontpreverify\n+-verbose\n+-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n+\n+-keep public class * extends android.app.Activity\n+-keep public class * extends android.app.Application\n+-keep public class * extends android.app.Service\n+-keep public class * extends android.content.BroadcastReceiver\n+-keep public class * extends android.content.ContentProvider\n+-keep public class com.android.vending.licensing.ILicensingService\n+\n+-keepclasseswithmembernames class * {\n+    native <methods>;\n+}\n+\n+-keepclasseswithmembernames class * {\n+    public <init>(android.content.Context, android.util.AttributeSet);\n+}\n+\n+-keepclasseswithmembernames class * {\n+    public <init>(android.content.Context, android.util.AttributeSet, int);\n+}\n+\n+-keepclassmembers enum * {\n+    public static **[] values();\n+    public static ** valueOf(java.lang.String);\n+}\n+\n+-keep class * implements android.os.Parcelable {\n+  public static final android.os.Parcelable$Creator *;\n+}\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PinchZoomDetector/res/drawable-hdpi/icon.png differ\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PinchZoomDetector/res/drawable-ldpi/icon.png differ\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/PinchZoomDetector/res/drawable-mdpi/icon.png differ\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/res/layout/activity_main.xml",
            "additions": 8,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    android:id=\"@id/activity_main\"\n+    >\n+</LinearLayout>\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/res/values/ids.xml",
            "additions": 4,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\t<item type=\"id\" name=\"activity_main\"/>\n+</resources>\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/res/values/strings.xml",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\t<string name=\"app_name\">Pinch Zoom Detector</string>\n+\t<string name=\"toast_zooming_started\">Zooming Started</string>\n+\t<string name=\"toast_zooming_in\">Zooming In</string>\n+\t<string name=\"toast_zooming_out\">Zooming Out</string>\n+\t<string name=\"toast_zooming_stopped\">Zooming Stopped</string>\n+</resources>\n+\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/com/novoda/Main.java",
            "additions": 64,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,64 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.View.OnTouchListener;\n+import android.widget.Toast;\n+\n+import com.novoda.utils.PinchZoomDetector;\n+\n+public class Main extends Activity implements OnTouchListener {\n+\tprivate static final String TAG = \"Pinch Zoom Detector\";\n+\tprivate Toast toast;\n+\tprivate PinchZoomDetector zoomDetector;\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tsetContentView(R.layout.activity_main);\n+\t\tView view = findViewById(R.id.activity_main);\n+\t\tview.setOnTouchListener(this);\n+\t\ttoast = Toast.makeText(this, \"\", Toast.LENGTH_SHORT);\n+\t\tzoomDetector = new PinchZoomDetector();\n+\t}\n+\n+\t@Override\n+\tpublic boolean onTouch(View v, MotionEvent event) {\n+\t\tint result = zoomDetector.detectZoom(event);\n+\t\tint resId = 0;\n+\t\t\n+\t\tswitch(result){\n+\t\t\tcase PinchZoomDetector.ZOOMING_STARTED:\n+\t\t\t\tresId = R.string.toast_zooming_started;\n+\t\t\t\tbreak;\n+\t\t\tcase PinchZoomDetector.ZOOMING_IN:\n+\t\t\t\tresId = R.string.toast_zooming_in;\n+\t\t\t\tbreak;\n+\t\t\tcase PinchZoomDetector.ZOOMING_OUT:\n+\t\t\t\tresId = R.string.toast_zooming_out;\n+\t\t\t\tbreak;\n+\t\t\tcase PinchZoomDetector.ZOOMING_STOPPED:\n+\t\t\t\tresId = R.string.toast_zooming_stopped;\n+\t\t\t\tbreak;\n+\t\t}\n+\t\t\n+\t\tif(resId != 0){\n+\t\t\tString s = getResources().getString(resId);\n+\t\t\tshortToast(s);\n+\t\t\tLog.d(TAG,s);\n+\t\t}\n+\t\t\n+\t\treturn true;\n+\t}\n+\n+\tprivate void shortToast(String s) {\n+\t\ttoast.setText(s);\n+\t\tif(!toast.getView().isShown()){\n+\t\t\ttoast.show();\n+\t\t}\n+\t}\n+\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "506e522ec58567bd1025ca91ba26264c482ea89f",
        "previous commit hash": "981078d60dd3be55fed9d7ee99c41e1ccc26e448",
        "diff stats": {
            "file_path": "PinchZoomDetector/src/com/novoda/utils/PinchZoomDetector.java",
            "additions": 84,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,84 @@\n+package com.novoda.utils;\n+\n+import android.util.FloatMath;\n+import android.view.MotionEvent;\n+\n+public class PinchZoomDetector {\n+\tpublic static final int OTHER = 0;\n+\tpublic static final int ZOOMING_STARTED = 1;\n+\tpublic static final int ZOOMING_IN = 2;\n+\tpublic static final int ZOOMING_OUT = 3;\n+\tpublic static final int ZOOMING_STOPPED = 4;\n+\n+\tpublic float minimumFingerDistance = 20f;\n+\tpublic float zoomInterval = 50f;\n+\n+\tprivate boolean zooming;\n+\tprivate float oldDistance;\n+\n+\tpublic PinchZoomDetector() {\n+\t}\n+\n+\tpublic PinchZoomDetector(float minimumFingerDistance, float zoomInterval) {\n+\t\tthis.minimumFingerDistance = minimumFingerDistance;\n+\t\tthis.zoomInterval = zoomInterval;\n+\t}\n+\n+\tpublic PinchZoomDetector(float zoomInterval) {\n+\t\tthis.zoomInterval = zoomInterval;\n+\t}\n+\n+\tpublic int detectZoom(MotionEvent event) {\n+\t\tint result = OTHER;\n+\t\tswitch (event.getAction() & MotionEvent.ACTION_MASK) {\n+\t\t\tcase MotionEvent.ACTION_MOVE:\n+\t\t\t\tresult = moving(event);\n+\t\t\t\tbreak;\n+\t\t\tcase MotionEvent.ACTION_UP:\n+\t\t\tcase MotionEvent.ACTION_POINTER_UP:\n+\t\t\t\tresult = release(event);\n+\t\t\t\tbreak;\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\tprivate int moving(MotionEvent event) {\n+\t\tint result = OTHER;\n+\t\tfloat distance = fingerDistance(event);\n+\t\tif (zooming == false) {\n+\t\t\tif (event.getPointerCount() > 1) {\n+\t\t\t\tif (distance > minimumFingerDistance) {\n+\t\t\t\t\tzooming = true;\n+\t\t\t\t\toldDistance = distance;\n+\t\t\t\t\tresult = ZOOMING_STARTED;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (zooming) {\n+\t\t\tif (distance + zoomInterval < oldDistance) {\n+\t\t\t\tresult = ZOOMING_OUT;\n+\t\t\t\toldDistance = distance;\n+\t\t\t} else if (distance - zoomInterval > oldDistance) {\n+\t\t\t\tresult = ZOOMING_IN;\n+\t\t\t\toldDistance = distance;\n+\t\t\t}\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\tprivate int release(MotionEvent event) {\n+\t\tint result = OTHER;\n+\t\tif (zooming) {\n+\t\t\tzooming = false;\n+\t\t\tresult = ZOOMING_STOPPED;\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\tprivate float fingerDistance(MotionEvent event) {\n+\t\tfloat x = event.getX(0) - event.getX(1);\n+\t\tfloat y = event.getY(0) - event.getY(1);\n+\t\treturn FloatMath.sqrt(x * x + y * y);\n+\t}\n+\n+}\n"
    },
    {
        "commit hash": "3922efa07b6461ff6aa3f55b93106b52d94d428d",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/layout/webview_main.xml",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <WebView  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:id=\"@+id/webview\"\n+    android:id=\"@id/webview_main\"\n     android:layout_width=\"fill_parent\"\n     android:layout_height=\"fill_parent\"\n />\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "3922efa07b6461ff6aa3f55b93106b52d94d428d",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/menu/webview_main_menu.xml",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\t<item android:id=\"@id/main_menu_zoom_in\" android:icon=\"@drawable/ic_menu_zoom_in\"\n+\t\tandroid:title=\"@string/main_menu_zoom_in\" />\n+\t<item android:id=\"@id/main_menu_choose_view\" android:icon=\"@drawable/ic_menu_choose_view\"\n+\t\tandroid:title=\"@string/main_menu_choose_view\" />\n+\t<item android:id=\"@id/main_menu_zoom_out\" android:icon=\"@drawable/ic_menu_zoom_out\"\n+\t\tandroid:title=\"@string/main_menu_zoom_out\" />\n+</menu>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "3922efa07b6461ff6aa3f55b93106b52d94d428d",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/menu/webview_menu.xml",
            "additions": 0,
            "deletions": 9
        },
        "diff content": "@@ -1,9 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\t<item android:id=\"@+id/zoom_in\" android:icon=\"@drawable/ic_menu_zoom_in\"\n-\t\tandroid:title=\"@string/zoom_in\" />\n-\t<item android:id=\"@+id/choose_view\" android:icon=\"@drawable/ic_menu_choose_view\"\n-\t\tandroid:title=\"@string/choose_view\" />\n-\t<item android:id=\"@+id/zoom_out\" android:icon=\"@drawable/ic_menu_zoom_out\"\n-\t\tandroid:title=\"@string/zoom_out\" />\n-</menu>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "3922efa07b6461ff6aa3f55b93106b52d94d428d",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/values/ids.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\t<item type=\"id\" name=\"webview_main\"/>\n+\t<item type=\"id\" name=\"main_menu_zoom_in\"/>\n+\t<item type=\"id\" name=\"main_menu_zoom_out\"/>\n+\t<item type=\"id\" name=\"main_menu_choose_view\"/>\n+</resources>\n"
    },
    {
        "commit hash": "3922efa07b6461ff6aa3f55b93106b52d94d428d",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/values/strings.xml",
            "additions": 3,
            "deletions": 3
        },
        "diff content": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <resources>\n     <string name=\"app_name\">Fixed Size Text Columns</string>\n-    <string name=\"zoom_in\">Zoom in</string>\n-    <string name=\"zoom_out\">Zoom out</string>\n-    <string name=\"choose_view\">Choose View</string>\n+    <string name=\"main_menu_zoom_in\">Zoom in</string>\n+    <string name=\"main_menu_zoom_out\">Zoom out</string>\n+    <string name=\"main_menu_choose_view\">Choose View</string>\n </resources>\n"
    },
    {
        "commit hash": "3922efa07b6461ff6aa3f55b93106b52d94d428d",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/com/novoda/HelloWebView.java",
            "additions": 29,
            "deletions": 18
        },
        "diff content": "@@ -10,7 +10,7 @@ import android.view.MenuInflater;\n import android.view.MenuItem;\n import android.webkit.WebView;\n \n-public class HelloWebView extends Activity {\n+public class HelloWebView extends Activity{\n \n \tprivate static final int DIALOG_CHOOSE_VIEW_ID = 0;\n \tprivate WebView webView;\n@@ -20,7 +20,7 @@ public class HelloWebView extends Activity {\n \tpublic void onCreate(Bundle savedInstanceState) {\n \t    super.onCreate(savedInstanceState);\n \t    setContentView(R.layout.webview_main);\n-\t    webView = (WebView) findViewById(R.id.webview);\n+\t    webView = (WebView) findViewById(R.id.webview_main);\n \t    webView.loadUrl(\"file:///android_asset/two_columns.html\");\n \t    fontSize = webView.getSettings().getDefaultFontSize();\n \t}\n@@ -28,25 +28,30 @@ public class HelloWebView extends Activity {\n \t@Override\n \tpublic boolean onCreateOptionsMenu(Menu menu) {\n \t    MenuInflater inflater = getMenuInflater();\n-\t    inflater.inflate(R.menu.webview_menu, menu);\n+\t    inflater.inflate(R.menu.webview_main_menu, menu);\n \t    return true;\n \t}\n \t\n \t@Override\n \tpublic boolean onOptionsItemSelected(MenuItem item) {\n-\t    switch (item.getItemId()) {\n-\t    case R.id.zoom_in:\n-\t    \tfontSizePlus();\n-\t        return true;\n-\t    case R.id.choose_view:\n-\t    \tshowDialog(DIALOG_CHOOSE_VIEW_ID);\n-\t    \treturn true;\n-\t    case R.id.zoom_out:\n-\t    \tfontSizeMinus();\n-\t        return true;\n-\t    default:\n-\t        return super.onOptionsItemSelected(item);\n-\t    }\n+\t\tboolean result;\n+\t\tswitch (item.getItemId()) {\n+\t\t\tcase R.id.main_menu_zoom_in:\n+\t\t\t\tfontSizePlus();\n+\t\t\t\tresult = true;\n+\t\t\t\tbreak;\n+\t\t\tcase R.id.main_menu_choose_view:\n+\t\t\t\tshowDialog(DIALOG_CHOOSE_VIEW_ID);\n+\t\t\t\tresult = true;\n+\t\t\t\tbreak;\n+\t\t\tcase R.id.main_menu_zoom_out:\n+\t\t\t\tfontSizeMinus();\n+\t\t\t\tresult = true;\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tresult = super.onOptionsItemSelected(item);\n+\t\t}\n+\t\treturn result;\n \t}\n \t\n \tprivate void fontSizePlus() {\n@@ -61,11 +66,17 @@ public class HelloWebView extends Activity {\n \t\n \t@Override\n \tprotected Dialog onCreateDialog(int id) {\n+\t\tDialog dialog = null;\n+\t\t\n \t\tswitch (id) {\n \t\t\tcase DIALOG_CHOOSE_VIEW_ID:\n-\t\t\t\treturn getChooseViewDialog();\n+\t\t\t\tdialog = getChooseViewDialog();\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tdialog = super.onCreateDialog(id);\n \t\t}\n-\t\treturn null;\n+\t\t\n+\t\treturn dialog;\n \t}\n \t\n \tprivate Dialog getChooseViewDialog() {\n"
    },
    {
        "commit hash": "a63e31b6ab27d4311b7575703dd97f3d96c5c8a1",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/menu/webview_menu.xml",
            "additions": 6,
            "deletions": 6
        },
        "diff content": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-\t<item android:id=\"@+id/zoom_in\" android:icon=\"@drawable/ic_menu_zoom_in\"\n-\t\tandroid:title=\"@string/zoom_in\" />\n-\t<item android:id=\"@+id/choose_view\" android:icon=\"@drawable/ic_menu_choose_view\"\n-\t\tandroid:title=\"@string/choose_view\" />\n-\t<item android:id=\"@+id/zoom_out\" android:icon=\"@drawable/ic_menu_zoom_out\"\n-\t\tandroid:title=\"@string/zoom_out\" />\n+\t<item android:id=\"@+id/menu_action_zoom_in\" android:icon=\"@drawable/ic_menu_zoom_in\"\n+\t\tandroid:title=\"@string/menu_action_zoom_in\" />\n+\t<item android:id=\"@+id/menu_action_choose_view\" android:icon=\"@drawable/ic_menu_choose_view\"\n+\t\tandroid:title=\"@string/menu_action_choose_view\" />\n+\t<item android:id=\"@+id/menu_action_zoom_out\" android:icon=\"@drawable/ic_menu_zoom_out\"\n+\t\tandroid:title=\"@string/menu_action_zoom_out\" />\n </menu>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "a63e31b6ab27d4311b7575703dd97f3d96c5c8a1",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/values/strings.xml",
            "additions": 5,
            "deletions": 3
        },
        "diff content": "@@ -1,7 +1,9 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <resources>\n     <string name=\"app_name\">Fixed Size Text Columns</string>\n-    <string name=\"zoom_in\">Zoom in</string>\n-    <string name=\"zoom_out\">Zoom out</string>\n-    <string name=\"choose_view\">Choose View</string>\n+    \n+    <!-- Menu -->\n+    <string name=\"menu_action_zoom_in\">Zoom in</string>\n+    <string name=\"menu_action_zoom_out\">Zoom out</string>\n+    <string name=\"menu_action_choose_view\">Choose View</string>\n </resources>\n"
    },
    {
        "commit hash": "a63e31b6ab27d4311b7575703dd97f3d96c5c8a1",
        "previous commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/com/novoda/HelloWebView.java",
            "additions": 12,
            "deletions": 15
        },
        "diff content": "@@ -35,28 +35,25 @@ public class HelloWebView extends Activity {\n \t@Override\n \tpublic boolean onOptionsItemSelected(MenuItem item) {\n \t    switch (item.getItemId()) {\n-\t    case R.id.zoom_in:\n-\t    \tfontSizePlus();\n-\t        return true;\n-\t    case R.id.choose_view:\n-\t    \tshowDialog(DIALOG_CHOOSE_VIEW_ID);\n-\t    \treturn true;\n-\t    case R.id.zoom_out:\n-\t    \tfontSizeMinus();\n-\t        return true;\n-\t    default:\n-\t        return super.onOptionsItemSelected(item);\n+\t\t    case R.id.menu_action_zoom_in:\n+\t\t    \tfontSizePlus();\n+\t\t    \tbreak;\n+\t\t    case R.id.menu_action_choose_view:\n+\t\t    \tshowDialog(DIALOG_CHOOSE_VIEW_ID);\n+\t\t    \tbreak;\n+\t\t    case R.id.menu_action_zoom_out:\n+\t\t    \tfontSizeMinus();\n+\t\t    \tbreak;\n \t    }\n+\t    return super.onOptionsItemSelected(item);\n \t}\n \t\n \tprivate void fontSizePlus() {\n-\t    fontSize++;\n-\t    webView.getSettings().setDefaultFontSize(fontSize);\n+\t    webView.getSettings().setDefaultFontSize(fontSize++);\n \t}\n \n \tprivate void fontSizeMinus() {\n-\t    fontSize--;\n-\t    webView.getSettings().setDefaultFontSize(fontSize);\n+\t    webView.getSettings().setDefaultFontSize(fontSize--);\n \t}\n \t\n \t@Override\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/AndroidManifest.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tpackage=\"com.novoda\" android:versionCode=\"1\"\n+\tandroid:versionName=\"1.0\">\n+\t\n+\t<application android:icon=\"@drawable/icon\"\n+\t\tandroid:label=\"@string/app_name\">\n+\t\t<activity android:name=\".HelloWebView\"\n+\t\t\tandroid:label=\"@string/app_name\" android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\"\n+\t\t\tandroid:screenOrientation=\"landscape\">\n+\t\t\t<intent-filter>\n+\t\t\t\t<action android:name=\"android.intent.action.MAIN\" />\n+\t\t\t\t<category android:name=\"android.intent.category.LAUNCHER\" />\n+\t\t\t</intent-filter>\n+\t\t</activity>\n+\n+\t</application>\n+\t<uses-sdk android:minSdkVersion=\"4\" />\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/assets/images/earth.jpg",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/FixedSizeTextColumns/assets/images/earth.jpg differ\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/assets/three_columns.html",
            "additions": 100,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,100 @@\n+<html>\n+\t<head>\n+\t\t<style type=\"text/css\">\n+\n+\t\t\t#left {\n+\t\t\t  position: absolute;\n+\t\t\t  top:5%;\n+\t\t\t  left:5%;\n+\t\t\t  max-width:25%;\n+\t\t\t  max-height:90%;\n+\t\t\t  overflow:hidden;\n+\t\t\t}\n+\t\t\t\n+\t\t\t#center {\n+\t\t\t  position: absolute;\n+\t\t\t  top:5%;\n+\t\t\t  left:37.5%;\n+\t\t\t  max-width:25%;\n+\t\t\t  max-height:90%;\n+\t\t\t  overflow:hidden;\n+\t\t\t}\n+\t\t\t\n+\t\t\t#right {\n+\t\t\t  position: absolute;\n+\t\t\t  top:5%;\n+\t\t\t  left:70%;\n+\t\t\t  max-width:25%;\n+\t\t\t  max-height:90%;\n+\t\t\t  overflow: hidden;\n+\t\t\t}\n+\n+\t\t</style>\n+\t</head>\n+\t<body>\n+\t\t<div id=\"left\">\n+\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent vulputate rhoncus dui, eu tincidunt orci scelerisque vitae. Duis mauris elit, lacinia vitae iaculis eget, volutpat in orci. Ut ornare ante sit amet leo porta imperdiet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in arcu ut tortor tristique molestie. Mauris nec est est. Curabitur id aliquam dolor. Curabitur a metus vel nunc sodales pharetra eu eget ante. Aliquam ut justo nibh, et tristique risus. In eget ante magna. Proin suscipit dignissim ante, sed aliquam mauris blandit et. Nam aliquam ultrices nulla et euismod. Phasellus ut ante quam, ac varius massa. Nam vulputate ligula turpis, id elementum ipsum. Suspendisse lacinia nunc vel felis aliquet non laoreet nisl sollicitudin. Maecenas pretium hendrerit sapien fermentum vestibulum. Suspendisse auctor, lacus a tempor feugiat, urna nibh porta diam, eget hendrerit libero nunc eu mauris. Aenean volutpat condimentum tincidunt. Nulla pulvinar est ut lorem rhoncus at mollis augue fringilla. Suspendisse aliquet pellentesque ipsum, aliquet eleifend velit aliquam ornare.\n+\n+Integer ac justo et sem laoreet tristique non et lectus. Phasellus eget tellus mauris, eget interdum lacus. Ut et ante eget elit fringilla vestibulum. Nunc leo lorem, condimentum nec tincidunt vitae, suscipit ac dui. Vestibulum sapien dui, pretium a feugiat at, aliquet id nisi. Donec vestibulum venenatis odio ac iaculis. Nullam ultricies odio id quam auctor sed scelerisque justo malesuada. Nulla sit amet hendrerit libero. Ut id elit at dui lobortis condimentum id fringilla nulla. Suspendisse ornare cursus sapien, non hendrerit risus pretium eu. Nulla nec ante velit. Vivamus aliquet erat at quam aliquet dictum dictum dui convallis.\n+\n+Sed tellus lectus, rhoncus id eleifend nec, convallis a nisl. Nam vitae posuere nunc. Sed ultricies placerat suscipit. Fusce mattis nisl nec libero pellentesque aliquet. Pellentesque id arcu non mauris commodo malesuada. Vestibulum id sem sit amet enim viverra commodo vitae eu tortor. Aenean congue luctus tellus et blandit. Sed sed risus ante. Aliquam metus massa, lacinia sit amet vulputate ac, rhoncus vitae lacus. Integer felis sem, semper at euismod ut, auctor at quam. Donec vulputate convallis libero non varius. Curabitur bibendum leo quam.\n+\n+Fusce lobortis orci sit amet sem pretium volutpat congue mauris malesuada. Morbi in erat augue. Suspendisse et gravida felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus fringilla rutrum nibh, bibendum facilisis nulla fermentum id. Sed fringilla malesuada fringilla. Donec dapibus tincidunt nisi, vel ultrices mauris mollis sit amet. In dui mauris, auctor quis auctor vel, dictum sit amet orci. Aenean semper ante vel massa aliquam non lacinia justo tempus. Quisque fermentum dapibus enim vel rhoncus. Sed ante urna, egestas eget auctor sed, volutpat blandit tortor. Aliquam porttitor elit in sem aliquam sed bibendum turpis lobortis. Ut imperdiet vehicula pharetra. Proin at congue odio. Ut libero eros, placerat varius faucibus at, semper quis nibh. Curabitur sed libero ipsum, sed malesuada odio.\n+\n+In magna felis, laoreet sit amet vulputate at, suscipit vel tortor. Mauris quis massa ac tortor volutpat molestie. Donec vestibulum, magna et imperdiet fermentum, turpis risus convallis enim, et volutpat turpis turpis ac ipsum. Donec tincidunt metus at elit malesuada eu ultrices mauris commodo. Cras accumsan scelerisque eros, vitae imperdiet mi ullamcorper eu. In ac lobortis ipsum. In luctus tellus sed purus vestibulum ut pharetra lorem ultrices. Suspendisse condimentum tempus massa volutpat pulvinar. Donec ac ante tortor, id bibendum lectus. Donec ipsum magna, consectetur nec imperdiet sit amet, rhoncus vel urna. Suspendisse ultricies, nunc sit amet condimentum malesuada, magna velit rhoncus ligula, feugiat elementum velit tortor ac elit. Morbi fermentum odio vitae lorem pretium at rhoncus nulla rutrum. Donec eget nunc eget velit sagittis imperdiet at ut leo. Curabitur tempor imperdiet erat, id suscipit lorem dapibus sed. Vivamus id dui metus, et sodales massa.\n+\n+Nullam augue sem, scelerisque a congue vel, pulvinar non libero. Duis eget felis nisl, eu elementum orci. In sollicitudin purus sed risus laoreet et auctor nisl venenatis. Maecenas molestie consequat turpis, id dapibus lectus ornare sit amet. Quisque risus quam, ullamcorper nec ornare vitae, imperdiet id elit. Nam tincidunt sapien ac purus pretium adipiscing. In commodo volutpat leo, condimentum lobortis libero fermentum et. Proin at purus eros. Nunc ut lacus leo. Aliquam erat volutpat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et purus sit amet neque vulputate adipiscing in sed massa. Etiam ornare sem ut nulla gravida venenatis. Aenean eu nunc non sapien scelerisque viverra id eget urna. Cras placerat turpis vel turpis vulputate mattis vel et mauris. Fusce et vestibulum ante. Fusce convallis elementum elit, sed tincidunt neque pharetra a. Maecenas ut tortor ipsum, non lacinia velit.\n+\n+Duis vitae nulla mauris. Duis viverra vehicula ante, quis mollis mauris posuere consectetur. Donec non facilisis urna. Fusce feugiat suscipit condimentum. Phasellus in nisl id magna adipiscing commodo. Aenean tortor metus, luctus non pretium sed, auctor a massa. Cras porta nunc a ipsum gravida ut interdum nisl pharetra. Etiam eu nulla elit. Nam at tellus libero. Aliquam laoreet nibh quis nibh tempus vel elementum eros tincidunt. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus ac laoreet nunc. Sed eu nibh arcu, non congue justo. Ut vestibulum, turpis eu suscipit lobortis, ligula magna pretium arcu, non dictum quam nunc non neque. Nullam a laoreet enim. Donec felis tortor, congue eget pellentesque in, egestas a magna. In vitae augue id dui tincidunt egestas a quis lorem. Fusce vel dui elit.\n+\n+In hac habitasse platea dictumst. Duis ut ipsum diam, ut semper metus. Nullam ut arcu sit amet tellus bibendum vestibulum non ac ligula. Nullam sit amet augue lorem. Ut at malesuada metus. Curabitur non velit libero, at hendrerit justo. Nullam lobortis nisl at est euismod suscipit. Curabitur diam libero, volutpat sit amet luctus non, rutrum et leo. Fusce sagittis consequat mauris, sed dapibus arcu consectetur id. Aliquam non nisi mauris, vestibulum eleifend libero. Proin ante risus, volutpat at elementum nec, blandit a dolor. Fusce euismod, nisl sed tristique accumsan, diam neque pellentesque ipsum, sit amet tempor orci turpis eu orci. Proin sagittis tortor eu mi varius nec imperdiet felis feugiat. Proin et mi a massa auctor ultricies. Donec iaculis tempor augue in mattis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed mi ligula, dictum tincidunt tempus id, vestibulum eget lacus. Nam nec ornare neque.\n+\n+Cras mollis risus mattis mauris ullamcorper non tempus velit consequat. Suspendisse odio dui, ullamcorper nec mattis ut, lobortis in quam. Sed feugiat aliquam quam et malesuada. Pellentesque lectus diam, lacinia at adipiscing et, convallis quis ligula. Sed id nibh in lectus posuere porttitor sit amet nec erat. Donec eu nulla nec enim vehicula mollis sed vel quam. Nulla facilisi. Sed mattis gravida dapibus. Vivamus scelerisque congue neque, sed ultricies augue euismod in. Etiam sed auctor dolor. Pellentesque nec volutpat metus. Nullam tempus accumsan sem, ut sodales orci tristique quis. Nunc luctus nisi nec massa gravida fermentum. Phasellus egestas, enim nec faucibus faucibus, ligula metus lobortis est, at gravida nibh urna non augue. Cras metus metus, adipiscing nec rhoncus sed, bibendum quis sapien. Aliquam mauris mi, fermentum sagittis consequat quis, porta nec ipsum.\n+\n+Integer leo orci, venenatis et placerat at, blandit nec est. Suspendisse aliquam, purus eget convallis tempus, urna metus egestas diam, vel ornare tellus mi dapibus erat. Integer scelerisque leo varius massa egestas convallis. In hac habitasse platea dictumst. Ut viverra facilisis enim volutpat dictum. Mauris suscipit, felis eu cursus suscipit, augue velit volutpat purus, et pulvinar mauris urna sit amet nunc. Donec tincidunt lorem eget ante viverra ornare. Cras sed leo et ante aliquam commodo et et eros. Curabitur ac libero nisl, quis elementum libero. Donec id nibh quis justo bibendum iaculis vitae eleifend dolor. Quisque aliquet velit sit amet nunc auctor porta. Curabitur luctus mollis libero, et interdum nibh suscipit eget. Sed vestibulum felis in diam fringilla laoreet. \n+\t\t</div>\n+\t\t<div id=\"center\">\n+Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent vulputate rhoncus dui, eu tincidunt orci scelerisque vitae. Duis mauris elit, lacinia vitae iaculis eget, volutpat in orci. Ut ornare ante sit amet leo porta imperdiet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in arcu ut tortor tristique molestie. Mauris nec est est. Curabitur id aliquam dolor. Curabitur a metus vel nunc sodales pharetra eu eget ante. Aliquam ut justo nibh, et tristique risus. In eget ante magna. Proin suscipit dignissim ante, sed aliquam mauris blandit et. Nam aliquam ultrices nulla et euismod. Phasellus ut ante quam, ac varius massa. Nam vulputate ligula turpis, id elementum ipsum. Suspendisse lacinia nunc vel felis aliquet non laoreet nisl sollicitudin. Maecenas pretium hendrerit sapien fermentum vestibulum. Suspendisse auctor, lacus a tempor feugiat, urna nibh porta diam, eget hendrerit libero nunc eu mauris. Aenean volutpat condimentum tincidunt. Nulla pulvinar est ut lorem rhoncus at mollis augue fringilla. Suspendisse aliquet pellentesque ipsum, aliquet eleifend velit aliquam ornare.\n+\n+Integer ac justo et sem laoreet tristique non et lectus. Phasellus eget tellus mauris, eget interdum lacus. Ut et ante eget elit fringilla vestibulum. Nunc leo lorem, condimentum nec tincidunt vitae, suscipit ac dui. Vestibulum sapien dui, pretium a feugiat at, aliquet id nisi. Donec vestibulum venenatis odio ac iaculis. Nullam ultricies odio id quam auctor sed scelerisque justo malesuada. Nulla sit amet hendrerit libero. Ut id elit at dui lobortis condimentum id fringilla nulla. Suspendisse ornare cursus sapien, non hendrerit risus pretium eu. Nulla nec ante velit. Vivamus aliquet erat at quam aliquet dictum dictum dui convallis.\n+\n+Sed tellus lectus, rhoncus id eleifend nec, convallis a nisl. Nam vitae posuere nunc. Sed ultricies placerat suscipit. Fusce mattis nisl nec libero pellentesque aliquet. Pellentesque id arcu non mauris commodo malesuada. Vestibulum id sem sit amet enim viverra commodo vitae eu tortor. Aenean congue luctus tellus et blandit. Sed sed risus ante. Aliquam metus massa, lacinia sit amet vulputate ac, rhoncus vitae lacus. Integer felis sem, semper at euismod ut, auctor at quam. Donec vulputate convallis libero non varius. Curabitur bibendum leo quam.\n+\n+Fusce lobortis orci sit amet sem pretium volutpat congue mauris malesuada. Morbi in erat augue. Suspendisse et gravida felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus fringilla rutrum nibh, bibendum facilisis nulla fermentum id. Sed fringilla malesuada fringilla. Donec dapibus tincidunt nisi, vel ultrices mauris mollis sit amet. In dui mauris, auctor quis auctor vel, dictum sit amet orci. Aenean semper ante vel massa aliquam non lacinia justo tempus. Quisque fermentum dapibus enim vel rhoncus. Sed ante urna, egestas eget auctor sed, volutpat blandit tortor. Aliquam porttitor elit in sem aliquam sed bibendum turpis lobortis. Ut imperdiet vehicula pharetra. Proin at congue odio. Ut libero eros, placerat varius faucibus at, semper quis nibh. Curabitur sed libero ipsum, sed malesuada odio.\n+\n+In magna felis, laoreet sit amet vulputate at, suscipit vel tortor. Mauris quis massa ac tortor volutpat molestie. Donec vestibulum, magna et imperdiet fermentum, turpis risus convallis enim, et volutpat turpis turpis ac ipsum. Donec tincidunt metus at elit malesuada eu ultrices mauris commodo. Cras accumsan scelerisque eros, vitae imperdiet mi ullamcorper eu. In ac lobortis ipsum. In luctus tellus sed purus vestibulum ut pharetra lorem ultrices. Suspendisse condimentum tempus massa volutpat pulvinar. Donec ac ante tortor, id bibendum lectus. Donec ipsum magna, consectetur nec imperdiet sit amet, rhoncus vel urna. Suspendisse ultricies, nunc sit amet condimentum malesuada, magna velit rhoncus ligula, feugiat elementum velit tortor ac elit. Morbi fermentum odio vitae lorem pretium at rhoncus nulla rutrum. Donec eget nunc eget velit sagittis imperdiet at ut leo. Curabitur tempor imperdiet erat, id suscipit lorem dapibus sed. Vivamus id dui metus, et sodales massa.\n+\n+Nullam augue sem, scelerisque a congue vel, pulvinar non libero. Duis eget felis nisl, eu elementum orci. In sollicitudin purus sed risus laoreet et auctor nisl venenatis. Maecenas molestie consequat turpis, id dapibus lectus ornare sit amet. Quisque risus quam, ullamcorper nec ornare vitae, imperdiet id elit. Nam tincidunt sapien ac purus pretium adipiscing. In commodo volutpat leo, condimentum lobortis libero fermentum et. Proin at purus eros. Nunc ut lacus leo. Aliquam erat volutpat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et purus sit amet neque vulputate adipiscing in sed massa. Etiam ornare sem ut nulla gravida venenatis. Aenean eu nunc non sapien scelerisque viverra id eget urna. Cras placerat turpis vel turpis vulputate mattis vel et mauris. Fusce et vestibulum ante. Fusce convallis elementum elit, sed tincidunt neque pharetra a. Maecenas ut tortor ipsum, non lacinia velit.\n+\n+Duis vitae nulla mauris. Duis viverra vehicula ante, quis mollis mauris posuere consectetur. Donec non facilisis urna. Fusce feugiat suscipit condimentum. Phasellus in nisl id magna adipiscing commodo. Aenean tortor metus, luctus non pretium sed, auctor a massa. Cras porta nunc a ipsum gravida ut interdum nisl pharetra. Etiam eu nulla elit. Nam at tellus libero. Aliquam laoreet nibh quis nibh tempus vel elementum eros tincidunt. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus ac laoreet nunc. Sed eu nibh arcu, non congue justo. Ut vestibulum, turpis eu suscipit lobortis, ligula magna pretium arcu, non dictum quam nunc non neque. Nullam a laoreet enim. Donec felis tortor, congue eget pellentesque in, egestas a magna. In vitae augue id dui tincidunt egestas a quis lorem. Fusce vel dui elit.\n+\n+In hac habitasse platea dictumst. Duis ut ipsum diam, ut semper metus. Nullam ut arcu sit amet tellus bibendum vestibulum non ac ligula. Nullam sit amet augue lorem. Ut at malesuada metus. Curabitur non velit libero, at hendrerit justo. Nullam lobortis nisl at est euismod suscipit. Curabitur diam libero, volutpat sit amet luctus non, rutrum et leo. Fusce sagittis consequat mauris, sed dapibus arcu consectetur id. Aliquam non nisi mauris, vestibulum eleifend libero. Proin ante risus, volutpat at elementum nec, blandit a dolor. Fusce euismod, nisl sed tristique accumsan, diam neque pellentesque ipsum, sit amet tempor orci turpis eu orci. Proin sagittis tortor eu mi varius nec imperdiet felis feugiat. Proin et mi a massa auctor ultricies. Donec iaculis tempor augue in mattis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed mi ligula, dictum tincidunt tempus id, vestibulum eget lacus. Nam nec ornare neque.\n+\n+Cras mollis risus mattis mauris ullamcorper non tempus velit consequat. Suspendisse odio dui, ullamcorper nec mattis ut, lobortis in quam. Sed feugiat aliquam quam et malesuada. Pellentesque lectus diam, lacinia at adipiscing et, convallis quis ligula. Sed id nibh in lectus posuere porttitor sit amet nec erat. Donec eu nulla nec enim vehicula mollis sed vel quam. Nulla facilisi. Sed mattis gravida dapibus. Vivamus scelerisque congue neque, sed ultricies augue euismod in. Etiam sed auctor dolor. Pellentesque nec volutpat metus. Nullam tempus accumsan sem, ut sodales orci tristique quis. Nunc luctus nisi nec massa gravida fermentum. Phasellus egestas, enim nec faucibus faucibus, ligula metus lobortis est, at gravida nibh urna non augue. Cras metus metus, adipiscing nec rhoncus sed, bibendum quis sapien. Aliquam mauris mi, fermentum sagittis consequat quis, porta nec ipsum.\n+\n+Integer leo orci, venenatis et placerat at, blandit nec est. Suspendisse aliquam, purus eget convallis tempus, urna metus egestas diam, vel ornare tellus mi dapibus erat. Integer scelerisque leo varius massa egestas convallis. In hac habitasse platea dictumst. Ut viverra facilisis enim volutpat dictum. Mauris suscipit, felis eu cursus suscipit, augue velit volutpat purus, et pulvinar mauris urna sit amet nunc. Donec tincidunt lorem eget ante viverra ornare. Cras sed leo et ante aliquam commodo et et eros. Curabitur ac libero nisl, quis elementum libero. Donec id nibh quis justo bibendum iaculis vitae eleifend dolor. Quisque aliquet velit sit amet nunc auctor porta. Curabitur luctus mollis libero, et interdum nibh suscipit eget. Sed vestibulum felis in diam fringilla laoreet. \n+\t\t</div>\n+\t\t<div id=\"right\">\n+Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent vulputate rhoncus dui, eu tincidunt orci scelerisque vitae. Duis mauris elit, lacinia vitae iaculis eget, volutpat in orci. Ut ornare ante sit amet leo porta imperdiet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in arcu ut tortor tristique molestie. Mauris nec est est. Curabitur id aliquam dolor. Curabitur a metus vel nunc sodales pharetra eu eget ante. Aliquam ut justo nibh, et tristique risus. In eget ante magna. Proin suscipit dignissim ante, sed aliquam mauris blandit et. Nam aliquam ultrices nulla et euismod. Phasellus ut ante quam, ac varius massa. Nam vulputate ligula turpis, id elementum ipsum. Suspendisse lacinia nunc vel felis aliquet non laoreet nisl sollicitudin. Maecenas pretium hendrerit sapien fermentum vestibulum. Suspendisse auctor, lacus a tempor feugiat, urna nibh porta diam, eget hendrerit libero nunc eu mauris. Aenean volutpat condimentum tincidunt. Nulla pulvinar est ut lorem rhoncus at mollis augue fringilla. Suspendisse aliquet pellentesque ipsum, aliquet eleifend velit aliquam ornare.\n+\n+Integer ac justo et sem laoreet tristique non et lectus. Phasellus eget tellus mauris, eget interdum lacus. Ut et ante eget elit fringilla vestibulum. Nunc leo lorem, condimentum nec tincidunt vitae, suscipit ac dui. Vestibulum sapien dui, pretium a feugiat at, aliquet id nisi. Donec vestibulum venenatis odio ac iaculis. Nullam ultricies odio id quam auctor sed scelerisque justo malesuada. Nulla sit amet hendrerit libero. Ut id elit at dui lobortis condimentum id fringilla nulla. Suspendisse ornare cursus sapien, non hendrerit risus pretium eu. Nulla nec ante velit. Vivamus aliquet erat at quam aliquet dictum dictum dui convallis.\n+\n+Sed tellus lectus, rhoncus id eleifend nec, convallis a nisl. Nam vitae posuere nunc. Sed ultricies placerat suscipit. Fusce mattis nisl nec libero pellentesque aliquet. Pellentesque id arcu non mauris commodo malesuada. Vestibulum id sem sit amet enim viverra commodo vitae eu tortor. Aenean congue luctus tellus et blandit. Sed sed risus ante. Aliquam metus massa, lacinia sit amet vulputate ac, rhoncus vitae lacus. Integer felis sem, semper at euismod ut, auctor at quam. Donec vulputate convallis libero non varius. Curabitur bibendum leo quam.\n+\n+Fusce lobortis orci sit amet sem pretium volutpat congue mauris malesuada. Morbi in erat augue. Suspendisse et gravida felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus fringilla rutrum nibh, bibendum facilisis nulla fermentum id. Sed fringilla malesuada fringilla. Donec dapibus tincidunt nisi, vel ultrices mauris mollis sit amet. In dui mauris, auctor quis auctor vel, dictum sit amet orci. Aenean semper ante vel massa aliquam non lacinia justo tempus. Quisque fermentum dapibus enim vel rhoncus. Sed ante urna, egestas eget auctor sed, volutpat blandit tortor. Aliquam porttitor elit in sem aliquam sed bibendum turpis lobortis. Ut imperdiet vehicula pharetra. Proin at congue odio. Ut libero eros, placerat varius faucibus at, semper quis nibh. Curabitur sed libero ipsum, sed malesuada odio.\n+\n+In magna felis, laoreet sit amet vulputate at, suscipit vel tortor. Mauris quis massa ac tortor volutpat molestie. Donec vestibulum, magna et imperdiet fermentum, turpis risus convallis enim, et volutpat turpis turpis ac ipsum. Donec tincidunt metus at elit malesuada eu ultrices mauris commodo. Cras accumsan scelerisque eros, vitae imperdiet mi ullamcorper eu. In ac lobortis ipsum. In luctus tellus sed purus vestibulum ut pharetra lorem ultrices. Suspendisse condimentum tempus massa volutpat pulvinar. Donec ac ante tortor, id bibendum lectus. Donec ipsum magna, consectetur nec imperdiet sit amet, rhoncus vel urna. Suspendisse ultricies, nunc sit amet condimentum malesuada, magna velit rhoncus ligula, feugiat elementum velit tortor ac elit. Morbi fermentum odio vitae lorem pretium at rhoncus nulla rutrum. Donec eget nunc eget velit sagittis imperdiet at ut leo. Curabitur tempor imperdiet erat, id suscipit lorem dapibus sed. Vivamus id dui metus, et sodales massa.\n+\n+Nullam augue sem, scelerisque a congue vel, pulvinar non libero. Duis eget felis nisl, eu elementum orci. In sollicitudin purus sed risus laoreet et auctor nisl venenatis. Maecenas molestie consequat turpis, id dapibus lectus ornare sit amet. Quisque risus quam, ullamcorper nec ornare vitae, imperdiet id elit. Nam tincidunt sapien ac purus pretium adipiscing. In commodo volutpat leo, condimentum lobortis libero fermentum et. Proin at purus eros. Nunc ut lacus leo. Aliquam erat volutpat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et purus sit amet neque vulputate adipiscing in sed massa. Etiam ornare sem ut nulla gravida venenatis. Aenean eu nunc non sapien scelerisque viverra id eget urna. Cras placerat turpis vel turpis vulputate mattis vel et mauris. Fusce et vestibulum ante. Fusce convallis elementum elit, sed tincidunt neque pharetra a. Maecenas ut tortor ipsum, non lacinia velit.\n+\n+Duis vitae nulla mauris. Duis viverra vehicula ante, quis mollis mauris posuere consectetur. Donec non facilisis urna. Fusce feugiat suscipit condimentum. Phasellus in nisl id magna adipiscing commodo. Aenean tortor metus, luctus non pretium sed, auctor a massa. Cras porta nunc a ipsum gravida ut interdum nisl pharetra. Etiam eu nulla elit. Nam at tellus libero. Aliquam laoreet nibh quis nibh tempus vel elementum eros tincidunt. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus ac laoreet nunc. Sed eu nibh arcu, non congue justo. Ut vestibulum, turpis eu suscipit lobortis, ligula magna pretium arcu, non dictum quam nunc non neque. Nullam a laoreet enim. Donec felis tortor, congue eget pellentesque in, egestas a magna. In vitae augue id dui tincidunt egestas a quis lorem. Fusce vel dui elit.\n+\n+In hac habitasse platea dictumst. Duis ut ipsum diam, ut semper metus. Nullam ut arcu sit amet tellus bibendum vestibulum non ac ligula. Nullam sit amet augue lorem. Ut at malesuada metus. Curabitur non velit libero, at hendrerit justo. Nullam lobortis nisl at est euismod suscipit. Curabitur diam libero, volutpat sit amet luctus non, rutrum et leo. Fusce sagittis consequat mauris, sed dapibus arcu consectetur id. Aliquam non nisi mauris, vestibulum eleifend libero. Proin ante risus, volutpat at elementum nec, blandit a dolor. Fusce euismod, nisl sed tristique accumsan, diam neque pellentesque ipsum, sit amet tempor orci turpis eu orci. Proin sagittis tortor eu mi varius nec imperdiet felis feugiat. Proin et mi a massa auctor ultricies. Donec iaculis tempor augue in mattis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed mi ligula, dictum tincidunt tempus id, vestibulum eget lacus. Nam nec ornare neque.\n+\n+Cras mollis risus mattis mauris ullamcorper non tempus velit consequat. Suspendisse odio dui, ullamcorper nec mattis ut, lobortis in quam. Sed feugiat aliquam quam et malesuada. Pellentesque lectus diam, lacinia at adipiscing et, convallis quis ligula. Sed id nibh in lectus posuere porttitor sit amet nec erat. Donec eu nulla nec enim vehicula mollis sed vel quam. Nulla facilisi. Sed mattis gravida dapibus. Vivamus scelerisque congue neque, sed ultricies augue euismod in. Etiam sed auctor dolor. Pellentesque nec volutpat metus. Nullam tempus accumsan sem, ut sodales orci tristique quis. Nunc luctus nisi nec massa gravida fermentum. Phasellus egestas, enim nec faucibus faucibus, ligula metus lobortis est, at gravida nibh urna non augue. Cras metus metus, adipiscing nec rhoncus sed, bibendum quis sapien. Aliquam mauris mi, fermentum sagittis consequat quis, porta nec ipsum.\n+\n+Integer leo orci, venenatis et placerat at, blandit nec est. Suspendisse aliquam, purus eget convallis tempus, urna metus egestas diam, vel ornare tellus mi dapibus erat. Integer scelerisque leo varius massa egestas convallis. In hac habitasse platea dictumst. Ut viverra facilisis enim volutpat dictum. Mauris suscipit, felis eu cursus suscipit, augue velit volutpat purus, et pulvinar mauris urna sit amet nunc. Donec tincidunt lorem eget ante viverra ornare. Cras sed leo et ante aliquam commodo et et eros. Curabitur ac libero nisl, quis elementum libero. Donec id nibh quis justo bibendum iaculis vitae eleifend dolor. Quisque aliquet velit sit amet nunc auctor porta. Curabitur luctus mollis libero, et interdum nibh suscipit eget. Sed vestibulum felis in diam fringilla laoreet. \n+\t\t</div>\n+\t</body>\n+</html>\n+\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/assets/two_columns.html",
            "additions": 70,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,70 @@\n+<html>\n+\t<head>\n+\t\t<style type=\"text/css\">\n+\n+\t\t\t#left {\n+\t\t\t  position: absolute;\n+\t\t\t  top:5%;\n+\t\t\t  left:5%;\n+\t\t\t  max-width:40%;\n+\t\t\t  max-height:90%;\n+\t\t\t  overflow:hidden;\n+\t\t\t}\n+\t\t\t\n+\t\t\t#right {\n+\t\t\t  position: absolute;\n+  \t\t\t  top:5%;\n+\t\t\t  left:55%;\n+\t\t\t  max-width:40%;\n+\t\t\t  max-height:90%;\n+\t\t\t  overflow: hidden;\n+\t\t\t}\n+\n+\t\t</style>\n+\t</head>\n+\t<body>\n+\t\t<div id=\"left\">\n+\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent vulputate rhoncus dui, eu tincidunt orci scelerisque vitae. Duis mauris elit, lacinia vitae iaculis eget, volutpat in orci. Ut ornare ante sit amet leo porta imperdiet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in arcu ut tortor tristique molestie. Mauris nec est est. Curabitur id aliquam dolor. Curabitur a metus vel nunc sodales pharetra eu eget ante. Aliquam ut justo nibh, et tristique risus. In eget ante magna. Proin suscipit dignissim ante, sed aliquam mauris blandit et. Nam aliquam ultrices nulla et euismod. Phasellus ut ante quam, ac varius massa. Nam vulputate ligula turpis, id elementum ipsum. Suspendisse lacinia nunc vel felis aliquet non laoreet nisl sollicitudin. Maecenas pretium hendrerit sapien fermentum vestibulum. Suspendisse auctor, lacus a tempor feugiat, urna nibh porta diam, eget hendrerit libero nunc eu mauris. Aenean volutpat condimentum tincidunt. Nulla pulvinar est ut lorem rhoncus at mollis augue fringilla. Suspendisse aliquet pellentesque ipsum, aliquet eleifend velit aliquam ornare.\n+\n+Integer ac justo et sem laoreet tristique non et lectus. Phasellus eget tellus mauris, eget interdum lacus. Ut et ante eget elit fringilla vestibulum. Nunc leo lorem, condimentum nec tincidunt vitae, suscipit ac dui. Vestibulum sapien dui, pretium a feugiat at, aliquet id nisi. Donec vestibulum venenatis odio ac iaculis. Nullam ultricies odio id quam auctor sed scelerisque justo malesuada. Nulla sit amet hendrerit libero. Ut id elit at dui lobortis condimentum id fringilla nulla. Suspendisse ornare cursus sapien, non hendrerit risus pretium eu. Nulla nec ante velit. Vivamus aliquet erat at quam aliquet dictum dictum dui convallis.\n+\n+Sed tellus lectus, rhoncus id eleifend nec, convallis a nisl. Nam vitae posuere nunc. Sed ultricies placerat suscipit. Fusce mattis nisl nec libero pellentesque aliquet. Pellentesque id arcu non mauris commodo malesuada. Vestibulum id sem sit amet enim viverra commodo vitae eu tortor. Aenean congue luctus tellus et blandit. Sed sed risus ante. Aliquam metus massa, lacinia sit amet vulputate ac, rhoncus vitae lacus. Integer felis sem, semper at euismod ut, auctor at quam. Donec vulputate convallis libero non varius. Curabitur bibendum leo quam.\n+\n+Fusce lobortis orci sit amet sem pretium volutpat congue mauris malesuada. Morbi in erat augue. Suspendisse et gravida felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus fringilla rutrum nibh, bibendum facilisis nulla fermentum id. Sed fringilla malesuada fringilla. Donec dapibus tincidunt nisi, vel ultrices mauris mollis sit amet. In dui mauris, auctor quis auctor vel, dictum sit amet orci. Aenean semper ante vel massa aliquam non lacinia justo tempus. Quisque fermentum dapibus enim vel rhoncus. Sed ante urna, egestas eget auctor sed, volutpat blandit tortor. Aliquam porttitor elit in sem aliquam sed bibendum turpis lobortis. Ut imperdiet vehicula pharetra. Proin at congue odio. Ut libero eros, placerat varius faucibus at, semper quis nibh. Curabitur sed libero ipsum, sed malesuada odio.\n+\n+In magna felis, laoreet sit amet vulputate at, suscipit vel tortor. Mauris quis massa ac tortor volutpat molestie. Donec vestibulum, magna et imperdiet fermentum, turpis risus convallis enim, et volutpat turpis turpis ac ipsum. Donec tincidunt metus at elit malesuada eu ultrices mauris commodo. Cras accumsan scelerisque eros, vitae imperdiet mi ullamcorper eu. In ac lobortis ipsum. In luctus tellus sed purus vestibulum ut pharetra lorem ultrices. Suspendisse condimentum tempus massa volutpat pulvinar. Donec ac ante tortor, id bibendum lectus. Donec ipsum magna, consectetur nec imperdiet sit amet, rhoncus vel urna. Suspendisse ultricies, nunc sit amet condimentum malesuada, magna velit rhoncus ligula, feugiat elementum velit tortor ac elit. Morbi fermentum odio vitae lorem pretium at rhoncus nulla rutrum. Donec eget nunc eget velit sagittis imperdiet at ut leo. Curabitur tempor imperdiet erat, id suscipit lorem dapibus sed. Vivamus id dui metus, et sodales massa.\n+\n+Nullam augue sem, scelerisque a congue vel, pulvinar non libero. Duis eget felis nisl, eu elementum orci. In sollicitudin purus sed risus laoreet et auctor nisl venenatis. Maecenas molestie consequat turpis, id dapibus lectus ornare sit amet. Quisque risus quam, ullamcorper nec ornare vitae, imperdiet id elit. Nam tincidunt sapien ac purus pretium adipiscing. In commodo volutpat leo, condimentum lobortis libero fermentum et. Proin at purus eros. Nunc ut lacus leo. Aliquam erat volutpat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et purus sit amet neque vulputate adipiscing in sed massa. Etiam ornare sem ut nulla gravida venenatis. Aenean eu nunc non sapien scelerisque viverra id eget urna. Cras placerat turpis vel turpis vulputate mattis vel et mauris. Fusce et vestibulum ante. Fusce convallis elementum elit, sed tincidunt neque pharetra a. Maecenas ut tortor ipsum, non lacinia velit.\n+\n+Duis vitae nulla mauris. Duis viverra vehicula ante, quis mollis mauris posuere consectetur. Donec non facilisis urna. Fusce feugiat suscipit condimentum. Phasellus in nisl id magna adipiscing commodo. Aenean tortor metus, luctus non pretium sed, auctor a massa. Cras porta nunc a ipsum gravida ut interdum nisl pharetra. Etiam eu nulla elit. Nam at tellus libero. Aliquam laoreet nibh quis nibh tempus vel elementum eros tincidunt. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus ac laoreet nunc. Sed eu nibh arcu, non congue justo. Ut vestibulum, turpis eu suscipit lobortis, ligula magna pretium arcu, non dictum quam nunc non neque. Nullam a laoreet enim. Donec felis tortor, congue eget pellentesque in, egestas a magna. In vitae augue id dui tincidunt egestas a quis lorem. Fusce vel dui elit.\n+\n+In hac habitasse platea dictumst. Duis ut ipsum diam, ut semper metus. Nullam ut arcu sit amet tellus bibendum vestibulum non ac ligula. Nullam sit amet augue lorem. Ut at malesuada metus. Curabitur non velit libero, at hendrerit justo. Nullam lobortis nisl at est euismod suscipit. Curabitur diam libero, volutpat sit amet luctus non, rutrum et leo. Fusce sagittis consequat mauris, sed dapibus arcu consectetur id. Aliquam non nisi mauris, vestibulum eleifend libero. Proin ante risus, volutpat at elementum nec, blandit a dolor. Fusce euismod, nisl sed tristique accumsan, diam neque pellentesque ipsum, sit amet tempor orci turpis eu orci. Proin sagittis tortor eu mi varius nec imperdiet felis feugiat. Proin et mi a massa auctor ultricies. Donec iaculis tempor augue in mattis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed mi ligula, dictum tincidunt tempus id, vestibulum eget lacus. Nam nec ornare neque.\n+\n+Cras mollis risus mattis mauris ullamcorper non tempus velit consequat. Suspendisse odio dui, ullamcorper nec mattis ut, lobortis in quam. Sed feugiat aliquam quam et malesuada. Pellentesque lectus diam, lacinia at adipiscing et, convallis quis ligula. Sed id nibh in lectus posuere porttitor sit amet nec erat. Donec eu nulla nec enim vehicula mollis sed vel quam. Nulla facilisi. Sed mattis gravida dapibus. Vivamus scelerisque congue neque, sed ultricies augue euismod in. Etiam sed auctor dolor. Pellentesque nec volutpat metus. Nullam tempus accumsan sem, ut sodales orci tristique quis. Nunc luctus nisi nec massa gravida fermentum. Phasellus egestas, enim nec faucibus faucibus, ligula metus lobortis est, at gravida nibh urna non augue. Cras metus metus, adipiscing nec rhoncus sed, bibendum quis sapien. Aliquam mauris mi, fermentum sagittis consequat quis, porta nec ipsum.\n+\n+Integer leo orci, venenatis et placerat at, blandit nec est. Suspendisse aliquam, purus eget convallis tempus, urna metus egestas diam, vel ornare tellus mi dapibus erat. Integer scelerisque leo varius massa egestas convallis. In hac habitasse platea dictumst. Ut viverra facilisis enim volutpat dictum. Mauris suscipit, felis eu cursus suscipit, augue velit volutpat purus, et pulvinar mauris urna sit amet nunc. Donec tincidunt lorem eget ante viverra ornare. Cras sed leo et ante aliquam commodo et et eros. Curabitur ac libero nisl, quis elementum libero. Donec id nibh quis justo bibendum iaculis vitae eleifend dolor. Quisque aliquet velit sit amet nunc auctor porta. Curabitur luctus mollis libero, et interdum nibh suscipit eget. Sed vestibulum felis in diam fringilla laoreet. \n+\t\t</div>\n+\t\t<div id=\"right\">\n+Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent vulputate rhoncus dui, eu tincidunt orci scelerisque vitae. Duis mauris elit, lacinia vitae iaculis eget, volutpat in orci. Ut ornare ante sit amet leo porta imperdiet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in arcu ut tortor tristique molestie. Mauris nec est est. Curabitur id aliquam dolor. Curabitur a metus vel nunc sodales pharetra eu eget ante. Aliquam ut justo nibh, et tristique risus. In eget ante magna. Proin suscipit dignissim ante, sed aliquam mauris blandit et. Nam aliquam ultrices nulla et euismod. Phasellus ut ante quam, ac varius massa. Nam vulputate ligula turpis, id elementum ipsum. Suspendisse lacinia nunc vel felis aliquet non laoreet nisl sollicitudin. Maecenas pretium hendrerit sapien fermentum vestibulum. Suspendisse auctor, lacus a tempor feugiat, urna nibh porta diam, eget hendrerit libero nunc eu mauris. Aenean volutpat condimentum tincidunt. Nulla pulvinar est ut lorem rhoncus at mollis augue fringilla. Suspendisse aliquet pellentesque ipsum, aliquet eleifend velit aliquam ornare.\n+\n+Integer ac justo et sem laoreet tristique non et lectus. Phasellus eget tellus mauris, eget interdum lacus. Ut et ante eget elit fringilla vestibulum. Nunc leo lorem, condimentum nec tincidunt vitae, suscipit ac dui. Vestibulum sapien dui, pretium a feugiat at, aliquet id nisi. Donec vestibulum venenatis odio ac iaculis. Nullam ultricies odio id quam auctor sed scelerisque justo malesuada. Nulla sit amet hendrerit libero. Ut id elit at dui lobortis condimentum id fringilla nulla. Suspendisse ornare cursus sapien, non hendrerit risus pretium eu. Nulla nec ante velit. Vivamus aliquet erat at quam aliquet dictum dictum dui convallis.\n+\n+Sed tellus lectus, rhoncus id eleifend nec, convallis a nisl. Nam vitae posuere nunc. Sed ultricies placerat suscipit. Fusce mattis nisl nec libero pellentesque aliquet. Pellentesque id arcu non mauris commodo malesuada. Vestibulum id sem sit amet enim viverra commodo vitae eu tortor. Aenean congue luctus tellus et blandit. Sed sed risus ante. Aliquam metus massa, lacinia sit amet vulputate ac, rhoncus vitae lacus. Integer felis sem, semper at euismod ut, auctor at quam. Donec vulputate convallis libero non varius. Curabitur bibendum leo quam.\n+\n+Fusce lobortis orci sit amet sem pretium volutpat congue mauris malesuada. Morbi in erat augue. Suspendisse et gravida felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus fringilla rutrum nibh, bibendum facilisis nulla fermentum id. Sed fringilla malesuada fringilla. Donec dapibus tincidunt nisi, vel ultrices mauris mollis sit amet. In dui mauris, auctor quis auctor vel, dictum sit amet orci. Aenean semper ante vel massa aliquam non lacinia justo tempus. Quisque fermentum dapibus enim vel rhoncus. Sed ante urna, egestas eget auctor sed, volutpat blandit tortor. Aliquam porttitor elit in sem aliquam sed bibendum turpis lobortis. Ut imperdiet vehicula pharetra. Proin at congue odio. Ut libero eros, placerat varius faucibus at, semper quis nibh. Curabitur sed libero ipsum, sed malesuada odio.\n+\n+In magna felis, laoreet sit amet vulputate at, suscipit vel tortor. Mauris quis massa ac tortor volutpat molestie. Donec vestibulum, magna et imperdiet fermentum, turpis risus convallis enim, et volutpat turpis turpis ac ipsum. Donec tincidunt metus at elit malesuada eu ultrices mauris commodo. Cras accumsan scelerisque eros, vitae imperdiet mi ullamcorper eu. In ac lobortis ipsum. In luctus tellus sed purus vestibulum ut pharetra lorem ultrices. Suspendisse condimentum tempus massa volutpat pulvinar. Donec ac ante tortor, id bibendum lectus. Donec ipsum magna, consectetur nec imperdiet sit amet, rhoncus vel urna. Suspendisse ultricies, nunc sit amet condimentum malesuada, magna velit rhoncus ligula, feugiat elementum velit tortor ac elit. Morbi fermentum odio vitae lorem pretium at rhoncus nulla rutrum. Donec eget nunc eget velit sagittis imperdiet at ut leo. Curabitur tempor imperdiet erat, id suscipit lorem dapibus sed. Vivamus id dui metus, et sodales massa.\n+\n+Nullam augue sem, scelerisque a congue vel, pulvinar non libero. Duis eget felis nisl, eu elementum orci. In sollicitudin purus sed risus laoreet et auctor nisl venenatis. Maecenas molestie consequat turpis, id dapibus lectus ornare sit amet. Quisque risus quam, ullamcorper nec ornare vitae, imperdiet id elit. Nam tincidunt sapien ac purus pretium adipiscing. In commodo volutpat leo, condimentum lobortis libero fermentum et. Proin at purus eros. Nunc ut lacus leo. Aliquam erat volutpat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et purus sit amet neque vulputate adipiscing in sed massa. Etiam ornare sem ut nulla gravida venenatis. Aenean eu nunc non sapien scelerisque viverra id eget urna. Cras placerat turpis vel turpis vulputate mattis vel et mauris. Fusce et vestibulum ante. Fusce convallis elementum elit, sed tincidunt neque pharetra a. Maecenas ut tortor ipsum, non lacinia velit.\n+\n+Duis vitae nulla mauris. Duis viverra vehicula ante, quis mollis mauris posuere consectetur. Donec non facilisis urna. Fusce feugiat suscipit condimentum. Phasellus in nisl id magna adipiscing commodo. Aenean tortor metus, luctus non pretium sed, auctor a massa. Cras porta nunc a ipsum gravida ut interdum nisl pharetra. Etiam eu nulla elit. Nam at tellus libero. Aliquam laoreet nibh quis nibh tempus vel elementum eros tincidunt. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus ac laoreet nunc. Sed eu nibh arcu, non congue justo. Ut vestibulum, turpis eu suscipit lobortis, ligula magna pretium arcu, non dictum quam nunc non neque. Nullam a laoreet enim. Donec felis tortor, congue eget pellentesque in, egestas a magna. In vitae augue id dui tincidunt egestas a quis lorem. Fusce vel dui elit.\n+\n+In hac habitasse platea dictumst. Duis ut ipsum diam, ut semper metus. Nullam ut arcu sit amet tellus bibendum vestibulum non ac ligula. Nullam sit amet augue lorem. Ut at malesuada metus. Curabitur non velit libero, at hendrerit justo. Nullam lobortis nisl at est euismod suscipit. Curabitur diam libero, volutpat sit amet luctus non, rutrum et leo. Fusce sagittis consequat mauris, sed dapibus arcu consectetur id. Aliquam non nisi mauris, vestibulum eleifend libero. Proin ante risus, volutpat at elementum nec, blandit a dolor. Fusce euismod, nisl sed tristique accumsan, diam neque pellentesque ipsum, sit amet tempor orci turpis eu orci. Proin sagittis tortor eu mi varius nec imperdiet felis feugiat. Proin et mi a massa auctor ultricies. Donec iaculis tempor augue in mattis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed mi ligula, dictum tincidunt tempus id, vestibulum eget lacus. Nam nec ornare neque.\n+\n+Cras mollis risus mattis mauris ullamcorper non tempus velit consequat. Suspendisse odio dui, ullamcorper nec mattis ut, lobortis in quam. Sed feugiat aliquam quam et malesuada. Pellentesque lectus diam, lacinia at adipiscing et, convallis quis ligula. Sed id nibh in lectus posuere porttitor sit amet nec erat. Donec eu nulla nec enim vehicula mollis sed vel quam. Nulla facilisi. Sed mattis gravida dapibus. Vivamus scelerisque congue neque, sed ultricies augue euismod in. Etiam sed auctor dolor. Pellentesque nec volutpat metus. Nullam tempus accumsan sem, ut sodales orci tristique quis. Nunc luctus nisi nec massa gravida fermentum. Phasellus egestas, enim nec faucibus faucibus, ligula metus lobortis est, at gravida nibh urna non augue. Cras metus metus, adipiscing nec rhoncus sed, bibendum quis sapien. Aliquam mauris mi, fermentum sagittis consequat quis, porta nec ipsum.\n+\n+Integer leo orci, venenatis et placerat at, blandit nec est. Suspendisse aliquam, purus eget convallis tempus, urna metus egestas diam, vel ornare tellus mi dapibus erat. Integer scelerisque leo varius massa egestas convallis. In hac habitasse platea dictumst. Ut viverra facilisis enim volutpat dictum. Mauris suscipit, felis eu cursus suscipit, augue velit volutpat purus, et pulvinar mauris urna sit amet nunc. Donec tincidunt lorem eget ante viverra ornare. Cras sed leo et ante aliquam commodo et et eros. Curabitur ac libero nisl, quis elementum libero. Donec id nibh quis justo bibendum iaculis vitae eleifend dolor. Quisque aliquet velit sit amet nunc auctor porta. Curabitur luctus mollis libero, et interdum nibh suscipit eget. Sed vestibulum felis in diam fringilla laoreet. \n+\t\t</div>\n+\t</body>\n+</html>\n+\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/assets/two_columns_and_photo.html",
            "additions": 84,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,84 @@\n+<html>\n+\t<head>\n+\t\t<style type=\"text/css\">\n+\n+\n+\t\t\t#left {\n+\t\t\t  position: absolute;\n+\t\t\t  top:5%;\n+\t\t\t  left:5%;\n+\t\t\t  max-width:40%;\n+\t\t\t  max-height:90%;\n+\t\t\t  overflow:hidden;\n+\t\t\t}\n+\t\t\t\n+\t\t\t#img {\n+\t\t\t  position: absolute;\n+\t\t\t  top:0%;\n+\t\t\t  right:0%;\n+\t\t\t  width:45%;\n+\t\t\t  height:45%;\n+\t\t\t}\n+\t\t\t\n+\t\t\t#bottom_right {\n+\t\t\t  position: absolute;\n+\t\t\t  top:55%;\n+\t\t\t  left:55%;\n+\t\t\t  max-width:40%;\n+\t\t\t  max-height:40%;\n+\t\t\t  overflow: hidden;\n+\t\t\t}\n+\n+\t\t</style>\n+\t</head>\n+\t<body>\n+\t\t<div id=\"container\">\n+\t\t\t<div id=\"left\">\n+\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent vulputate rhoncus dui, eu tincidunt orci scelerisque vitae. Duis mauris elit, lacinia vitae iaculis eget, volutpat in orci. Ut ornare ante sit amet leo porta imperdiet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in arcu ut tortor tristique molestie. Mauris nec est est. Curabitur id aliquam dolor. Curabitur a metus vel nunc sodales pharetra eu eget ante. Aliquam ut justo nibh, et tristique risus. In eget ante magna. Proin suscipit dignissim ante, sed aliquam mauris blandit et. Nam aliquam ultrices nulla et euismod. Phasellus ut ante quam, ac varius massa. Nam vulputate ligula turpis, id elementum ipsum. Suspendisse lacinia nunc vel felis aliquet non laoreet nisl sollicitudin. Maecenas pretium hendrerit sapien fermentum vestibulum. Suspendisse auctor, lacus a tempor feugiat, urna nibh porta diam, eget hendrerit libero nunc eu mauris. Aenean volutpat condimentum tincidunt. Nulla pulvinar est ut lorem rhoncus at mollis augue fringilla. Suspendisse aliquet pellentesque ipsum, aliquet eleifend velit aliquam ornare.\n+\n+Integer ac justo et sem laoreet tristique non et lectus. Phasellus eget tellus mauris, eget interdum lacus. Ut et ante eget elit fringilla vestibulum. Nunc leo lorem, condimentum nec tincidunt vitae, suscipit ac dui. Vestibulum sapien dui, pretium a feugiat at, aliquet id nisi. Donec vestibulum venenatis odio ac iaculis. Nullam ultricies odio id quam auctor sed scelerisque justo malesuada. Nulla sit amet hendrerit libero. Ut id elit at dui lobortis condimentum id fringilla nulla. Suspendisse ornare cursus sapien, non hendrerit risus pretium eu. Nulla nec ante velit. Vivamus aliquet erat at quam aliquet dictum dictum dui convallis.\n+\n+Sed tellus lectus, rhoncus id eleifend nec, convallis a nisl. Nam vitae posuere nunc. Sed ultricies placerat suscipit. Fusce mattis nisl nec libero pellentesque aliquet. Pellentesque id arcu non mauris commodo malesuada. Vestibulum id sem sit amet enim viverra commodo vitae eu tortor. Aenean congue luctus tellus et blandit. Sed sed risus ante. Aliquam metus massa, lacinia sit amet vulputate ac, rhoncus vitae lacus. Integer felis sem, semper at euismod ut, auctor at quam. Donec vulputate convallis libero non varius. Curabitur bibendum leo quam.\n+\n+Fusce lobortis orci sit amet sem pretium volutpat congue mauris malesuada. Morbi in erat augue. Suspendisse et gravida felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus fringilla rutrum nibh, bibendum facilisis nulla fermentum id. Sed fringilla malesuada fringilla. Donec dapibus tincidunt nisi, vel ultrices mauris mollis sit amet. In dui mauris, auctor quis auctor vel, dictum sit amet orci. Aenean semper ante vel massa aliquam non lacinia justo tempus. Quisque fermentum dapibus enim vel rhoncus. Sed ante urna, egestas eget auctor sed, volutpat blandit tortor. Aliquam porttitor elit in sem aliquam sed bibendum turpis lobortis. Ut imperdiet vehicula pharetra. Proin at congue odio. Ut libero eros, placerat varius faucibus at, semper quis nibh. Curabitur sed libero ipsum, sed malesuada odio.\n+\n+In magna felis, laoreet sit amet vulputate at, suscipit vel tortor. Mauris quis massa ac tortor volutpat molestie. Donec vestibulum, magna et imperdiet fermentum, turpis risus convallis enim, et volutpat turpis turpis ac ipsum. Donec tincidunt metus at elit malesuada eu ultrices mauris commodo. Cras accumsan scelerisque eros, vitae imperdiet mi ullamcorper eu. In ac lobortis ipsum. In luctus tellus sed purus vestibulum ut pharetra lorem ultrices. Suspendisse condimentum tempus massa volutpat pulvinar. Donec ac ante tortor, id bibendum lectus. Donec ipsum magna, consectetur nec imperdiet sit amet, rhoncus vel urna. Suspendisse ultricies, nunc sit amet condimentum malesuada, magna velit rhoncus ligula, feugiat elementum velit tortor ac elit. Morbi fermentum odio vitae lorem pretium at rhoncus nulla rutrum. Donec eget nunc eget velit sagittis imperdiet at ut leo. Curabitur tempor imperdiet erat, id suscipit lorem dapibus sed. Vivamus id dui metus, et sodales massa.\n+\n+Nullam augue sem, scelerisque a congue vel, pulvinar non libero. Duis eget felis nisl, eu elementum orci. In sollicitudin purus sed risus laoreet et auctor nisl venenatis. Maecenas molestie consequat turpis, id dapibus lectus ornare sit amet. Quisque risus quam, ullamcorper nec ornare vitae, imperdiet id elit. Nam tincidunt sapien ac purus pretium adipiscing. In commodo volutpat leo, condimentum lobortis libero fermentum et. Proin at purus eros. Nunc ut lacus leo. Aliquam erat volutpat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et purus sit amet neque vulputate adipiscing in sed massa. Etiam ornare sem ut nulla gravida venenatis. Aenean eu nunc non sapien scelerisque viverra id eget urna. Cras placerat turpis vel turpis vulputate mattis vel et mauris. Fusce et vestibulum ante. Fusce convallis elementum elit, sed tincidunt neque pharetra a. Maecenas ut tortor ipsum, non lacinia velit.\n+\n+Duis vitae nulla mauris. Duis viverra vehicula ante, quis mollis mauris posuere consectetur. Donec non facilisis urna. Fusce feugiat suscipit condimentum. Phasellus in nisl id magna adipiscing commodo. Aenean tortor metus, luctus non pretium sed, auctor a massa. Cras porta nunc a ipsum gravida ut interdum nisl pharetra. Etiam eu nulla elit. Nam at tellus libero. Aliquam laoreet nibh quis nibh tempus vel elementum eros tincidunt. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus ac laoreet nunc. Sed eu nibh arcu, non congue justo. Ut vestibulum, turpis eu suscipit lobortis, ligula magna pretium arcu, non dictum quam nunc non neque. Nullam a laoreet enim. Donec felis tortor, congue eget pellentesque in, egestas a magna. In vitae augue id dui tincidunt egestas a quis lorem. Fusce vel dui elit.\n+\n+In hac habitasse platea dictumst. Duis ut ipsum diam, ut semper metus. Nullam ut arcu sit amet tellus bibendum vestibulum non ac ligula. Nullam sit amet augue lorem. Ut at malesuada metus. Curabitur non velit libero, at hendrerit justo. Nullam lobortis nisl at est euismod suscipit. Curabitur diam libero, volutpat sit amet luctus non, rutrum et leo. Fusce sagittis consequat mauris, sed dapibus arcu consectetur id. Aliquam non nisi mauris, vestibulum eleifend libero. Proin ante risus, volutpat at elementum nec, blandit a dolor. Fusce euismod, nisl sed tristique accumsan, diam neque pellentesque ipsum, sit amet tempor orci turpis eu orci. Proin sagittis tortor eu mi varius nec imperdiet felis feugiat. Proin et mi a massa auctor ultricies. Donec iaculis tempor augue in mattis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed mi ligula, dictum tincidunt tempus id, vestibulum eget lacus. Nam nec ornare neque.\n+\n+Cras mollis risus mattis mauris ullamcorper non tempus velit consequat. Suspendisse odio dui, ullamcorper nec mattis ut, lobortis in quam. Sed feugiat aliquam quam et malesuada. Pellentesque lectus diam, lacinia at adipiscing et, convallis quis ligula. Sed id nibh in lectus posuere porttitor sit amet nec erat. Donec eu nulla nec enim vehicula mollis sed vel quam. Nulla facilisi. Sed mattis gravida dapibus. Vivamus scelerisque congue neque, sed ultricies augue euismod in. Etiam sed auctor dolor. Pellentesque nec volutpat metus. Nullam tempus accumsan sem, ut sodales orci tristique quis. Nunc luctus nisi nec massa gravida fermentum. Phasellus egestas, enim nec faucibus faucibus, ligula metus lobortis est, at gravida nibh urna non augue. Cras metus metus, adipiscing nec rhoncus sed, bibendum quis sapien. Aliquam mauris mi, fermentum sagittis consequat quis, porta nec ipsum.\n+\n+Integer leo orci, venenatis et placerat at, blandit nec est. Suspendisse aliquam, purus eget convallis tempus, urna metus egestas diam, vel ornare tellus mi dapibus erat. Integer scelerisque leo varius massa egestas convallis. In hac habitasse platea dictumst. Ut viverra facilisis enim volutpat dictum. Mauris suscipit, felis eu cursus suscipit, augue velit volutpat purus, et pulvinar mauris urna sit amet nunc. Donec tincidunt lorem eget ante viverra ornare. Cras sed leo et ante aliquam commodo et et eros. Curabitur ac libero nisl, quis elementum libero. Donec id nibh quis justo bibendum iaculis vitae eleifend dolor. Quisque aliquet velit sit amet nunc auctor porta. Curabitur luctus mollis libero, et interdum nibh suscipit eget. Sed vestibulum felis in diam fringilla laoreet. \n+\t\t\t</div>\n+\t\t\t<div id=\"img\">\n+\t\t\t\t<img src=\"images/earth.jpg\" width=\"100%\" height=\"100%\"/>\n+\t\t\t</div>\n+\t\t\t<div id=\"bottom_right\">\n+Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent vulputate rhoncus dui, eu tincidunt orci scelerisque vitae. Duis mauris elit, lacinia vitae iaculis eget, volutpat in orci. Ut ornare ante sit amet leo porta imperdiet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in arcu ut tortor tristique molestie. Mauris nec est est. Curabitur id aliquam dolor. Curabitur a metus vel nunc sodales pharetra eu eget ante. Aliquam ut justo nibh, et tristique risus. In eget ante magna. Proin suscipit dignissim ante, sed aliquam mauris blandit et. Nam aliquam ultrices nulla et euismod. Phasellus ut ante quam, ac varius massa. Nam vulputate ligula turpis, id elementum ipsum. Suspendisse lacinia nunc vel felis aliquet non laoreet nisl sollicitudin. Maecenas pretium hendrerit sapien fermentum vestibulum. Suspendisse auctor, lacus a tempor feugiat, urna nibh porta diam, eget hendrerit libero nunc eu mauris. Aenean volutpat condimentum tincidunt. Nulla pulvinar est ut lorem rhoncus at mollis augue fringilla. Suspendisse aliquet pellentesque ipsum, aliquet eleifend velit aliquam ornare.\n+\n+Integer ac justo et sem laoreet tristique non et lectus. Phasellus eget tellus mauris, eget interdum lacus. Ut et ante eget elit fringilla vestibulum. Nunc leo lorem, condimentum nec tincidunt vitae, suscipit ac dui. Vestibulum sapien dui, pretium a feugiat at, aliquet id nisi. Donec vestibulum venenatis odio ac iaculis. Nullam ultricies odio id quam auctor sed scelerisque justo malesuada. Nulla sit amet hendrerit libero. Ut id elit at dui lobortis condimentum id fringilla nulla. Suspendisse ornare cursus sapien, non hendrerit risus pretium eu. Nulla nec ante velit. Vivamus aliquet erat at quam aliquet dictum dictum dui convallis.\n+\n+Sed tellus lectus, rhoncus id eleifend nec, convallis a nisl. Nam vitae posuere nunc. Sed ultricies placerat suscipit. Fusce mattis nisl nec libero pellentesque aliquet. Pellentesque id arcu non mauris commodo malesuada. Vestibulum id sem sit amet enim viverra commodo vitae eu tortor. Aenean congue luctus tellus et blandit. Sed sed risus ante. Aliquam metus massa, lacinia sit amet vulputate ac, rhoncus vitae lacus. Integer felis sem, semper at euismod ut, auctor at quam. Donec vulputate convallis libero non varius. Curabitur bibendum leo quam.\n+\n+Fusce lobortis orci sit amet sem pretium volutpat congue mauris malesuada. Morbi in erat augue. Suspendisse et gravida felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus fringilla rutrum nibh, bibendum facilisis nulla fermentum id. Sed fringilla malesuada fringilla. Donec dapibus tincidunt nisi, vel ultrices mauris mollis sit amet. In dui mauris, auctor quis auctor vel, dictum sit amet orci. Aenean semper ante vel massa aliquam non lacinia justo tempus. Quisque fermentum dapibus enim vel rhoncus. Sed ante urna, egestas eget auctor sed, volutpat blandit tortor. Aliquam porttitor elit in sem aliquam sed bibendum turpis lobortis. Ut imperdiet vehicula pharetra. Proin at congue odio. Ut libero eros, placerat varius faucibus at, semper quis nibh. Curabitur sed libero ipsum, sed malesuada odio.\n+\n+In magna felis, laoreet sit amet vulputate at, suscipit vel tortor. Mauris quis massa ac tortor volutpat molestie. Donec vestibulum, magna et imperdiet fermentum, turpis risus convallis enim, et volutpat turpis turpis ac ipsum. Donec tincidunt metus at elit malesuada eu ultrices mauris commodo. Cras accumsan scelerisque eros, vitae imperdiet mi ullamcorper eu. In ac lobortis ipsum. In luctus tellus sed purus vestibulum ut pharetra lorem ultrices. Suspendisse condimentum tempus massa volutpat pulvinar. Donec ac ante tortor, id bibendum lectus. Donec ipsum magna, consectetur nec imperdiet sit amet, rhoncus vel urna. Suspendisse ultricies, nunc sit amet condimentum malesuada, magna velit rhoncus ligula, feugiat elementum velit tortor ac elit. Morbi fermentum odio vitae lorem pretium at rhoncus nulla rutrum. Donec eget nunc eget velit sagittis imperdiet at ut leo. Curabitur tempor imperdiet erat, id suscipit lorem dapibus sed. Vivamus id dui metus, et sodales massa.\n+\n+Nullam augue sem, scelerisque a congue vel, pulvinar non libero. Duis eget felis nisl, eu elementum orci. In sollicitudin purus sed risus laoreet et auctor nisl venenatis. Maecenas molestie consequat turpis, id dapibus lectus ornare sit amet. Quisque risus quam, ullamcorper nec ornare vitae, imperdiet id elit. Nam tincidunt sapien ac purus pretium adipiscing. In commodo volutpat leo, condimentum lobortis libero fermentum et. Proin at purus eros. Nunc ut lacus leo. Aliquam erat volutpat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent et purus sit amet neque vulputate adipiscing in sed massa. Etiam ornare sem ut nulla gravida venenatis. Aenean eu nunc non sapien scelerisque viverra id eget urna. Cras placerat turpis vel turpis vulputate mattis vel et mauris. Fusce et vestibulum ante. Fusce convallis elementum elit, sed tincidunt neque pharetra a. Maecenas ut tortor ipsum, non lacinia velit.\n+\n+Duis vitae nulla mauris. Duis viverra vehicula ante, quis mollis mauris posuere consectetur. Donec non facilisis urna. Fusce feugiat suscipit condimentum. Phasellus in nisl id magna adipiscing commodo. Aenean tortor metus, luctus non pretium sed, auctor a massa. Cras porta nunc a ipsum gravida ut interdum nisl pharetra. Etiam eu nulla elit. Nam at tellus libero. Aliquam laoreet nibh quis nibh tempus vel elementum eros tincidunt. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus ac laoreet nunc. Sed eu nibh arcu, non congue justo. Ut vestibulum, turpis eu suscipit lobortis, ligula magna pretium arcu, non dictum quam nunc non neque. Nullam a laoreet enim. Donec felis tortor, congue eget pellentesque in, egestas a magna. In vitae augue id dui tincidunt egestas a quis lorem. Fusce vel dui elit.\n+\n+In hac habitasse platea dictumst. Duis ut ipsum diam, ut semper metus. Nullam ut arcu sit amet tellus bibendum vestibulum non ac ligula. Nullam sit amet augue lorem. Ut at malesuada metus. Curabitur non velit libero, at hendrerit justo. Nullam lobortis nisl at est euismod suscipit. Curabitur diam libero, volutpat sit amet luctus non, rutrum et leo. Fusce sagittis consequat mauris, sed dapibus arcu consectetur id. Aliquam non nisi mauris, vestibulum eleifend libero. Proin ante risus, volutpat at elementum nec, blandit a dolor. Fusce euismod, nisl sed tristique accumsan, diam neque pellentesque ipsum, sit amet tempor orci turpis eu orci. Proin sagittis tortor eu mi varius nec imperdiet felis feugiat. Proin et mi a massa auctor ultricies. Donec iaculis tempor augue in mattis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed mi ligula, dictum tincidunt tempus id, vestibulum eget lacus. Nam nec ornare neque.\n+\n+Cras mollis risus mattis mauris ullamcorper non tempus velit consequat. Suspendisse odio dui, ullamcorper nec mattis ut, lobortis in quam. Sed feugiat aliquam quam et malesuada. Pellentesque lectus diam, lacinia at adipiscing et, convallis quis ligula. Sed id nibh in lectus posuere porttitor sit amet nec erat. Donec eu nulla nec enim vehicula mollis sed vel quam. Nulla facilisi. Sed mattis gravida dapibus. Vivamus scelerisque congue neque, sed ultricies augue euismod in. Etiam sed auctor dolor. Pellentesque nec volutpat metus. Nullam tempus accumsan sem, ut sodales orci tristique quis. Nunc luctus nisi nec massa gravida fermentum. Phasellus egestas, enim nec faucibus faucibus, ligula metus lobortis est, at gravida nibh urna non augue. Cras metus metus, adipiscing nec rhoncus sed, bibendum quis sapien. Aliquam mauris mi, fermentum sagittis consequat quis, porta nec ipsum.\n+\n+Integer leo orci, venenatis et placerat at, blandit nec est. Suspendisse aliquam, purus eget convallis tempus, urna metus egestas diam, vel ornare tellus mi dapibus erat. Integer scelerisque leo varius massa egestas convallis. In hac habitasse platea dictumst. Ut viverra facilisis enim volutpat dictum. Mauris suscipit, felis eu cursus suscipit, augue velit volutpat purus, et pulvinar mauris urna sit amet nunc. Donec tincidunt lorem eget ante viverra ornare. Cras sed leo et ante aliquam commodo et et eros. Curabitur ac libero nisl, quis elementum libero. Donec id nibh quis justo bibendum iaculis vitae eleifend dolor. Quisque aliquet velit sit amet nunc auctor porta. Curabitur luctus mollis libero, et interdum nibh suscipit eget. Sed vestibulum felis in diam fringilla laoreet. \n+\t\t\t</div>\n+\t\t</div>\n+\t</body>\n+</html>\n+\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/proguard.cfg",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+-optimizationpasses 5\n+-dontusemixedcaseclassnames\n+-dontskipnonpubliclibraryclasses\n+-dontpreverify\n+-verbose\n+-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n+\n+-keep public class * extends android.app.Activity\n+-keep public class * extends android.app.Application\n+-keep public class * extends android.app.Service\n+-keep public class * extends android.content.BroadcastReceiver\n+-keep public class * extends android.content.ContentProvider\n+-keep public class com.android.vending.licensing.ILicensingService\n+\n+-keepclasseswithmembernames class * {\n+    native <methods>;\n+}\n+\n+-keepclasseswithmembernames class * {\n+    public <init>(android.content.Context, android.util.AttributeSet);\n+}\n+\n+-keepclasseswithmembernames class * {\n+    public <init>(android.content.Context, android.util.AttributeSet, int);\n+}\n+\n+-keepclassmembers enum * {\n+    public static **[] values();\n+    public static ** valueOf(java.lang.String);\n+}\n+\n+-keep class * implements android.os.Parcelable {\n+  public static final android.os.Parcelable$Creator *;\n+}\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/drawable-hdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/FixedSizeTextColumns/res/drawable-hdpi/icon.png differ\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/drawable-ldpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/FixedSizeTextColumns/res/drawable-ldpi/icon.png differ\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/drawable-mdpi/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/FixedSizeTextColumns/res/drawable-mdpi/icon.png differ\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/drawable/ic_menu_choose_view.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/FixedSizeTextColumns/res/drawable/ic_menu_choose_view.png differ\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/drawable/ic_menu_zoom_in.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/FixedSizeTextColumns/res/drawable/ic_menu_zoom_in.png differ\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/drawable/ic_menu_zoom_out.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/FixedSizeTextColumns/res/drawable/ic_menu_zoom_out.png differ\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/layout/webview_main.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<WebView  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/webview\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+/>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/menu/webview_menu.xml",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\t<item android:id=\"@+id/zoom_in\" android:icon=\"@drawable/ic_menu_zoom_in\"\n+\t\tandroid:title=\"@string/zoom_in\" />\n+\t<item android:id=\"@+id/choose_view\" android:icon=\"@drawable/ic_menu_choose_view\"\n+\t\tandroid:title=\"@string/choose_view\" />\n+\t<item android:id=\"@+id/zoom_out\" android:icon=\"@drawable/ic_menu_zoom_out\"\n+\t\tandroid:title=\"@string/zoom_out\" />\n+</menu>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/res/values/strings.xml",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"app_name\">Fixed Size Text Columns</string>\n+    <string name=\"zoom_in\">Zoom in</string>\n+    <string name=\"zoom_out\">Zoom out</string>\n+    <string name=\"choose_view\">Choose View</string>\n+</resources>\n"
    },
    {
        "commit hash": "f9da53d2a75118f3a7705d419f1e3f47182cbddd",
        "previous commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "diff stats": {
            "file_path": "FixedSizeTextColumns/src/com/novoda/HelloWebView.java",
            "additions": 87,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,87 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.app.AlertDialog;\n+import android.app.Dialog;\n+import android.content.DialogInterface;\n+import android.os.Bundle;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n+import android.view.MenuItem;\n+import android.webkit.WebView;\n+\n+public class HelloWebView extends Activity {\n+\n+\tprivate static final int DIALOG_CHOOSE_VIEW_ID = 0;\n+\tprivate WebView webView;\n+\tprivate int fontSize;\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t    super.onCreate(savedInstanceState);\n+\t    setContentView(R.layout.webview_main);\n+\t    webView = (WebView) findViewById(R.id.webview);\n+\t    webView.loadUrl(\"file:///android_asset/two_columns.html\");\n+\t    fontSize = webView.getSettings().getDefaultFontSize();\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean onCreateOptionsMenu(Menu menu) {\n+\t    MenuInflater inflater = getMenuInflater();\n+\t    inflater.inflate(R.menu.webview_menu, menu);\n+\t    return true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean onOptionsItemSelected(MenuItem item) {\n+\t    switch (item.getItemId()) {\n+\t    case R.id.zoom_in:\n+\t    \tfontSizePlus();\n+\t        return true;\n+\t    case R.id.choose_view:\n+\t    \tshowDialog(DIALOG_CHOOSE_VIEW_ID);\n+\t    \treturn true;\n+\t    case R.id.zoom_out:\n+\t    \tfontSizeMinus();\n+\t        return true;\n+\t    default:\n+\t        return super.onOptionsItemSelected(item);\n+\t    }\n+\t}\n+\t\n+\tprivate void fontSizePlus() {\n+\t    fontSize++;\n+\t    webView.getSettings().setDefaultFontSize(fontSize);\n+\t}\n+\n+\tprivate void fontSizeMinus() {\n+\t    fontSize--;\n+\t    webView.getSettings().setDefaultFontSize(fontSize);\n+\t}\n+\t\n+\t@Override\n+\tprotected Dialog onCreateDialog(int id) {\n+\t\tswitch (id) {\n+\t\t\tcase DIALOG_CHOOSE_VIEW_ID:\n+\t\t\t\treturn getChooseViewDialog();\n+\t\t}\n+\t\treturn null;\n+\t}\n+\t\n+\tprivate Dialog getChooseViewDialog() {\n+\t\tfinal String[] fileNames = {\"Two columns\", \"Three columns\", \"Two columns and photo\"};\n+\t\tfinal String[] filePaths = {\"file:///android_asset/two_columns.html\",\n+\t\t\t\t\t\t\t\t\t\"file:///android_asset/three_columns.html\",\n+\t\t\t\t\t\t\t\t\t\"file:///android_asset/two_columns_and_photo.html\"};\n+\n+\t\tAlertDialog.Builder builder = new AlertDialog.Builder(this);\n+\t\tbuilder.setTitle(\"Choose a View\");\n+\t\tbuilder.setItems(fileNames, new DialogInterface.OnClickListener() {\n+\t\t    public void onClick(DialogInterface dialog, int item) {\n+\t\t    \twebView.loadUrl(filePaths[item]);\n+\t\t    }\n+\t\t});\n+\t\t\n+\t\treturn builder.create();\n+\t}\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/front_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/front_day001.png and b/Livewallpaper/switch_animation/res/drawable/front_day001.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/front_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/front_day002.png and b/Livewallpaper/switch_animation/res/drawable/front_day002.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/front_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/front_day003.png and b/Livewallpaper/switch_animation/res/drawable/front_day003.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/front_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/front_day004.png and b/Livewallpaper/switch_animation/res/drawable/front_day004.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/left_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/left_day001.png and b/Livewallpaper/switch_animation/res/drawable/left_day001.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/left_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/left_day002.png and b/Livewallpaper/switch_animation/res/drawable/left_day002.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/left_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/left_day003.png and b/Livewallpaper/switch_animation/res/drawable/left_day003.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/left_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/left_day004.png and b/Livewallpaper/switch_animation/res/drawable/left_day004.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/right_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/right_day001.png and b/Livewallpaper/switch_animation/res/drawable/right_day001.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/right_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/right_day002.png and b/Livewallpaper/switch_animation/res/drawable/right_day002.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/right_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/right_day003.png and b/Livewallpaper/switch_animation/res/drawable/right_day003.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/right_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_animation/res/drawable/right_day004.png and b/Livewallpaper/switch_animation/res/drawable/right_day004.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/xml/wallpaper.xml",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,6 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <!-- The attributes in this XML file provide configuration information -->\n \n-<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"/>\n+<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:thumbnail=\"@drawable/ic_launcher_wallpaper\"\n+\tandroid:description=\"@string/title\"/>\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/com/novoda/wallpaper/AnimSwitchWallPaper.java",
            "additions": 12,
            "deletions": 24
        },
        "diff content": "@@ -36,20 +36,15 @@ public class AnimSwitchWallPaper extends WallpaperService {\n \n \t\tOutRunEngine() {\n         \tResources res = getResources();\n-        \tint id =0;\n+        \t\n         \tfor (int i = 0; i< FRONT_RES; i++) {\n-        \t\tid = res.getIdentifier(\"front_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n-        \t\tmFrontPics[i] = BitmapFactory.decodeResource(res, id);\n+        \t\tmFrontPicIds[i] = res.getIdentifier(\"front_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n         \t}\n-        \tid=0;\n         \tfor (int i = 0; i< LEFT_RES; i++) {\n-        \t\tid = res.getIdentifier(\"left_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n-        \t\tmLeftPics[i] = BitmapFactory.decodeResource(res, id);\n+        \t\tmLeftPicIds[i] = res.getIdentifier(\"left_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n         \t}\n-        \tid=0;\n         \tfor (int i = 0; i< RIGHT_RES; i++) {\n-        \t\tid = res.getIdentifier(\"right_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n-        \t\tmRightPics[i] = BitmapFactory.decodeResource(res, id);\n+        \t\tmRightPicIds[i] = res.getIdentifier(\"right_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n         \t}\n         }\n         \n@@ -78,13 +73,6 @@ public class AnimSwitchWallPaper extends WallpaperService {\n         @Override\n         public void onSurfaceChanged(SurfaceHolder holder, int format, int width, int height) {\n             super.onSurfaceChanged(holder, format, width, height);\n-            float w = mFrontPics[0].getWidth();\n-            float h = mFrontPics[0].getHeight();\n-            float s = width / (float)w;\n-            mMatrix.reset();\n-            mMatrix.setScale(s, s);\n-            \n-            mPosY = (height - (h * s)) / 2f;\n             drawFrame();\n         }\n \n@@ -178,13 +166,13 @@ public class AnimSwitchWallPaper extends WallpaperService {\n     \t\t\n         \tif(takingACorner){\n         \t\tif(currentDirection == DRIVING_RIGHT){\n-\t        \t\tdrawAnim(c, mRightPics);        \t\t\t\n+\t        \t\tdrawAnim(c, mRightPicIds);        \t\t\t\n         \t\t}else{\n-\t        \t\tdrawAnim(c, mLeftPics);\n+\t        \t\tdrawAnim(c, mLeftPicIds);\n         \t\t}\n     \t\t}else{\n \t        \tif(!mDragEventInProgress){\n-\t        \t\tdrawAnim(c, mFrontPics);\n+\t        \t\tdrawAnim(c, mFrontPicIds);\n \t        \t}else{\n /*\n  * Uncomment this to respond \n@@ -200,8 +188,8 @@ public class AnimSwitchWallPaper extends WallpaperService {\n     \t\t}\n \t\t}\n \n-        void drawAnim(Canvas c, Bitmap[] pics) {\n-        \tc.drawBitmap(pics[picIdx], mMatrix, mPaint);\n+        void drawAnim(Canvas c, int[] pics) {\n+        \tc.drawBitmap(BitmapFactory.decodeResource(getResources(), pics[picIdx]), 0, 100, null);\n         \t++picIdx;\n         \tif (picIdx == FRONT_RES) picIdx = 0;\n         }\n@@ -223,9 +211,9 @@ public class AnimSwitchWallPaper extends WallpaperService {\n \t\tprivate static final int FRONT_RES = 4;\n \t\tprivate static final int LEFT_RES = 4;\n \t\tprivate static final int RIGHT_RES = 4;\n-\t\tprivate final Bitmap[] mFrontPics = new Bitmap[FRONT_RES];\n-\t\tprivate final Bitmap[] mRightPics = new Bitmap[RIGHT_RES];\n-\t\tprivate final Bitmap[] mLeftPics = new Bitmap[LEFT_RES];\n+\t\tprivate final int[] mFrontPicIds = new int[FRONT_RES];\n+\t\tprivate final int[] mRightPicIds = new int[RIGHT_RES];\n+\t\tprivate final int[] mLeftPicIds = new int[LEFT_RES];\n \n \t\tprivate final Runnable mDrawWallpaper = new Runnable() {\n \t\t    public void run() {\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/day_front.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_leftright/res/drawable/day_front.png and b/Livewallpaper/switch_leftright/res/drawable/day_front.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/day_left.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_leftright/res/drawable/day_left.png and b/Livewallpaper/switch_leftright/res/drawable/day_left.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/day_right.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_leftright/res/drawable/day_right.png and b/Livewallpaper/switch_leftright/res/drawable/day_right.png differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/night_front.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_leftright/res/drawable/night_front.png and /dev/null differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/night_left.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_leftright/res/drawable/night_left.png and /dev/null differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/night_right.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Livewallpaper/switch_leftright/res/drawable/night_right.png and /dev/null differ\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/xml/wallpaper.xml",
            "additions": 3,
            "deletions": 1
        },
        "diff content": "@@ -1,4 +1,6 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <!-- The attributes in this XML file provide configuration information -->\n \n-<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"/>\n+<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\" \n+\tandroid:thumbnail=\"@drawable/ic_launcher_wallpaper\"\n+\tandroid:description=\"@string/title\"/>\n"
    },
    {
        "commit hash": "409ca0d538a824543aed77e4937ed94f8b940f84",
        "previous commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/com/novoda/wallpaper/ImageSwitchWallPaper.java",
            "additions": 35,
            "deletions": 68
        },
        "diff content": "@@ -3,6 +3,7 @@ package com.novoda.wallpaper;\n import java.util.Timer;\n import java.util.TimerTask;\n \n+import android.content.res.Resources;\n import android.graphics.Bitmap;\n import android.graphics.BitmapFactory;\n import android.graphics.Canvas;\n@@ -37,71 +38,11 @@ public class ImageSwitchWallPaper extends WallpaperService {\n \n     class OutRunEngine extends Engine {\n \n-\t\tprivate final Paint mPaint = new Paint();\n-        private float mOffset;\n-        private float mTouchX = -1;\n-        private float mTouchY = -1;\n-        private long mStartTime;\n-        private float mCenterX;\n-        private float mCenterY;\n-        \n-        private boolean mDrivingForward = true;\n-        private boolean mTurningLeft = false;\n-        private boolean mTurningRight = false;\n-        private boolean mDragEventAnimStarted = false;\n-        \n-\t\tprivate Bitmap carRightBitmap;\n-\t\tprivate Bitmap carLeftBitmap;        \n-        private Bitmap carFrontBitmap;\n-        private Bitmap slidePic;\n-        private boolean duringSlide = false;\n-        \n-    \tprivate boolean mDragEventInProgress = false;\n-    \tprivate float mDragEventStartX = 0;\n-\n-        private final Runnable mDrawWallpaper = new Runnable() {\n-            public void run() {\n-                drawFrame();\n-            }\n-        };\n-        private boolean mVisible;\n-\t\tprivate float xLastOffset;\n-\t\tprivate boolean takingACorner = false;\n-\n-\n-        OutRunEngine() {\n-        \t \n-            mStartTime = SystemClock.elapsedRealtime();\n-            \n-            java.io.InputStream is;\n-            is = getResources().openRawResource(R.drawable.day_front);\n-            BitmapFactory.Options opts = new BitmapFactory.Options();\n-            Bitmap bm;\n-            \n-            opts.inJustDecodeBounds = true;\n-            bm = BitmapFactory.decodeStream(is, null, opts);\n-            opts.inJustDecodeBounds = false;    // this will request the bm\n-            bm = BitmapFactory.decodeStream(is, null, opts);\n-            carFrontBitmap = bm;\n-            \n-            is = getResources().openRawResource(R.drawable.day_right);\n-            opts = new BitmapFactory.Options();\n-            \n-            opts.inJustDecodeBounds = true;\n-            bm = BitmapFactory.decodeStream(is, null, opts);\n-            opts.inJustDecodeBounds = false;    // this will request the bm\n-            bm = BitmapFactory.decodeStream(is, null, opts);\n-            carRightBitmap = bm;\n-            \n-            is = getResources().openRawResource(R.drawable.day_left);\n-            opts = new BitmapFactory.Options();\n-            \n-            opts.inJustDecodeBounds = true;\n-            bm = BitmapFactory.decodeStream(is, null, opts);\n-            opts.inJustDecodeBounds = false;    // this will request the bm\n-            bm = BitmapFactory.decodeStream(is, null, opts);\n-            carLeftBitmap = bm;\n-            \n+\t\tOutRunEngine() {\n+            Resources res = getResources();\n+            carFrontBitmap = res.getIdentifier(\"day_front\", \"drawable\", \"com.novoda.wallpaper\");\n+            carRightBitmap = res.getIdentifier(\"day_right\", \"drawable\", \"com.novoda.wallpaper\");\n+            carLeftBitmap = res.getIdentifier(\"day_left\", \"drawable\", \"com.novoda.wallpaper\");\n         }\n \n         @Override\n@@ -187,7 +128,7 @@ public class ImageSwitchWallPaper extends WallpaperService {\n             \t\n             \tif( (mDragEventStartX < 150) && draggedLotsLeft ){\n             \t\tLog.d(TAG, \"Driving animation started < Left\");\n-            \t\ttakingACorner =true;\n+            \t\ttakingACorner =true;\t\n             \t\tslidePic = carLeftBitmap;\n             \t\tnew Timer().schedule(new TimerTask(){\n \t\t\t\t\t\t@Override\n@@ -250,7 +191,7 @@ public class ImageSwitchWallPaper extends WallpaperService {\n         private void drawCar(Canvas c) {\n     \t\t\n         \tif(takingACorner){\n-    \t\t\tc.drawBitmap(slidePic, 20, 0, null);\n+    \t\t\tc.drawBitmap(BitmapFactory.decodeResource(getResources(), slidePic), 20, 120, null);\n     \t\t}else{\n     \t\t\t\n \t        \tif(mDragEventInProgress){\n@@ -260,7 +201,7 @@ public class ImageSwitchWallPaper extends WallpaperService {\n //\t        \t\t\tc.drawBitmap(carLeftBitmap, 20, 0, null);\n //\t        \t\t}\n \t        \t}else{\n-\t        \t\tc.drawBitmap(carFrontBitmap, 20, 0, null);\n+\t        \t\tc.drawBitmap(BitmapFactory.decodeResource(getResources(), carFrontBitmap), 20, 120, null);\n \t        \t}\n     \t\t}\n \t\t}\n@@ -271,5 +212,31 @@ public class ImageSwitchWallPaper extends WallpaperService {\n             }\n         }\n \n+\t\tprivate final Paint mPaint = new Paint();\n+\t\tprivate float mOffset;\n+\t\tprivate float mTouchX = -1;\n+\t\tprivate float mTouchY = -1;\n+\t\tprivate float mCenterX;\n+\t\tprivate float mCenterY;\n+\t\tprivate boolean mDrivingForward = true;\n+\t\tprivate boolean mTurningLeft = false;\n+\t\tprivate boolean mTurningRight = false;\n+\t\tprivate boolean mDragEventAnimStarted = false;\n+\t\tprivate int carRightBitmap;\n+\t\tprivate int carLeftBitmap;\n+\t\tprivate int carFrontBitmap;\n+\t\tprivate int slidePic;\n+\t\tprivate boolean duringSlide = false;\n+\t\tprivate boolean mDragEventInProgress = false;\n+\t\tprivate float mDragEventStartX = 0;\n+\t\tprivate final Runnable mDrawWallpaper = new Runnable() {\n+\t\t    public void run() {\n+\t\t        drawFrame();\n+\t\t    }\n+\t\t};\n+\t\tprivate boolean mVisible;\n+\t\tprivate float xLastOffset;\n+\t\tprivate boolean takingACorner = false;\n+\n     }\n }\n"
    },
    {
        "commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "previous commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/values/shapes.xml",
            "additions": 0,
            "deletions": 120
        },
        "diff content": "@@ -1,121 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-/*\n-* Copyright (C) 4008 The Android Open Source Project\n-*\n-* Licensed under the Apache License, Version 2.0 (the \"License\");\n-* you may not use this file except in compliance with the License.\n-* You may obtain a copy of the License at\n-*\n-*      http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing, software\n-* distributed under the License is distributed on an \"AS IS\" BASIS,\n-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-* See the License for the specific language governing permissions and\n-* limitations under the License.\n-*/\n--->\n-\n-<resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n-\n-    <string-array name=\"cube2_shapenames\">\n-        <item>\"Cube\"</item>\n-        <item>\"Dodecahedron\"</item>\n-    </string-array>\n-\n-    <string-array name=\"cube2_shapeprefix\">\n-        <item>\"cube\"</item>\n-        <item>\"dodecahedron\"</item>\n-    </string-array>\n-\n-    <!-- x,y,z tuples for the points defining the object -->\n-    <!-- stored as strings for easier human readability -->\n-    <string-array name=\"cubepoints\">\n-        <item>\"-400 -400 -400\"</item>\n-        <item>\"400 -400 -400\"</item>\n-        <item>\"400 400 -400\"</item>\n-        <item>\"-400 400 -400\"</item>\n-        <item>\"-400 -400 400\"</item>\n-        <item>\"400 -400 400\"</item>\n-        <item>\"400 400 400\"</item>\n-        <item>\"-400 400 400\"</item>\n-    </string-array>\n-\n-    <!-- start,end point index tuples of the lines defining the object -->\n-    <string-array name=\"cubelines\">\n-        <!-- lines forming one face -->\n-        <item>\"0 1\"</item>\n-        <item>\"1 2\"</item>\n-        <item>\"2 3\"</item>\n-        <item>\"3 0\"</item>\n-\n-        <!-- lines forming the opposite face -->\n-        <item>\"4 5\"</item>\n-        <item>\"5 6\"</item>\n-        <item>\"6 7\"</item>\n-        <item>\"7 4\"</item>\n-\n-        <!-- lines connecting the two faces -->\n-        <item>\"0 4\"</item>\n-        <item>\"1 5\"</item>\n-        <item>\"2 6\"</item>\n-        <item>\"3 7\"</item>\n-    </string-array>\n-\n-    <string-array name=\"dodecahedronpoints\">\n-        <item>\"333.850000 0.000000 437.250000\"</item>\n-        <item>\"103.400000 317.350000 437.250000\"</item>\n-        <item>\"-270.050000 196.350000 437.250000\"</item>\n-        <item>\"-270.050000 -196.350000 437.250000\"</item>\n-        <item>\"103.400000 -317.350000 437.250000\"</item>\n-        <item>\"540.100000 0.000000 103.400000\"</item>\n-        <item>\"167.200000 513.700000 103.400000\"</item>\n-        <item>\"-437.250000 317.350000 103.400000\"</item>\n-        <item>\"-437.250000 -317.350000 103.400000\"</item>\n-        <item>\"167.200000 -513.700000 103.400000\"</item>\n-        <item>\"437.250000 317.350000 -103.400000\"</item>\n-        <item>\"-167.200000 513.700000 -103.400000\"</item>\n-        <item>\"-540.100000 0.000000 -103.400000\"</item>\n-        <item>\"-167.200000 -513.700000 -103.400000\"</item>\n-        <item>\"437.250000 -317.350000 -103.400000\"</item>\n-        <item>\"270.050000 196.350000 -437.250000\"</item>\n-        <item>\"-103.400000 317.350000 -437.250000\"</item>\n-        <item>\"-333.850000 0.000000 -437.250000\"</item>\n-        <item>\"-103.400000 -317.350000 -437.250000\"</item>\n-        <item>\"270.050000 -196.350000 -437.250000\"</item>\n-    </string-array>\n-\n-    <string-array name=\"dodecahedronlines\">\n-        <item>\"0 1\"</item>\n-        <item>\"0 4\"</item>\n-        <item>\"0 5\"</item>\n-        <item>\"1 2\"</item>\n-        <item>\"1 6\"</item>\n-        <item>\"2 3\"</item>\n-        <item>\"2 7\"</item>\n-        <item>\"3 4\"</item>\n-        <item>\"3 8\"</item>\n-        <item>\"4 9\"</item>\n-        <item>\"5 10\"</item>\n-        <item>\"5 14\"</item>\n-        <item>\"6 10\"</item>\n-        <item>\"6 11\"</item>\n-        <item>\"7 11\"</item>\n-        <item>\"7 12\"</item>\n-        <item>\"8 12\"</item>\n-        <item>\"8 13\"</item>\n-        <item>\"9 13\"</item>\n-        <item>\"9 14\"</item>\n-        <item>\"10 15\"</item>\n-        <item>\"11 16\"</item>\n-        <item>\"12 17\"</item>\n-        <item>\"13 18\"</item>\n-        <item>\"14 19\"</item>\n-        <item>\"15 16\"</item>\n-        <item>\"15 19\"</item>\n-        <item>\"16 17\"</item>\n-        <item>\"17 18\"</item>\n-        <item>\"18 19\"</item>\n-    </string-array>\n-</resources>\n"
    },
    {
        "commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "previous commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/values/strings.xml",
            "additions": 2,
            "deletions": 32
        },
        "diff content": "@@ -1,38 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-/*\n-* Copyright (C) 2009 The Android Open Source Project\n-*\n-* Licensed under the Apache License, Version 2.0 (the \"License\");\n-* you may not use this file except in compliance with the License.\n-* You may obtain a copy of the License at\n-*\n-*      http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing, software\n-* distributed under the License is distributed on an \"AS IS\" BASIS,\n-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-* See the License for the specific language governing permissions and\n-* limitations under the License.\n-*/\n--->\n-\n <resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n     <!-- General -->\n     <skip />\n-    <!-- Application name -->\n-    <string name=\"wallpapers\">Outrun wallpaper</string>\n-\n-    <!-- Wallpaper showing a cube -->\n-    <string name=\"title\">Outrun</string>\n-\n-    <!-- Wallpaper showing a cube or dodecahedron, data read from resource -->\n-    <string name=\"wallpaper_cube2\">Cube - resource</string>\n-\n-    <!-- Wallpaper showing a cube, renderscript version -->\n-    <string name=\"wallpaper_cube3\">Cube - RenderScript</string>\n-\n-    <string name=\"cube2_settings\">Settings</string>\n-    <string name=\"cube2_settings_title\">Select shape</string>\n-    <string name=\"cube2_settings_summary\">Choose whether to display a cube or a dodecahedron</string>\n+    <string name=\"wallpapers\">Animated turning wallpaper</string>\n+    <string name=\"title\">Animated turning wallpaper</string>\n </resources>\n"
    },
    {
        "commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "previous commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/xml/wallpaper.xml",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,22 +1,4 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-/**\n- * Copyright (c) 2009, The Android Open Source Project\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); \n- * you may not use this file except in compliance with the License. \n- * You may obtain a copy of the License at \n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0 \n- *\n- * Unless required by applicable law or agreed to in writing, software \n- * distributed under the License is distributed on an \"AS IS\" BASIS, \n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n- * See the License for the specific language governing permissions and \n- * limitations under the License.\n- */\n--->\n-\n <!-- The attributes in this XML file provide configuration information -->\n \n <wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"/>\n"
    },
    {
        "commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "previous commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/values/strings.xml",
            "additions": 2,
            "deletions": 32
        },
        "diff content": "@@ -1,38 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-/*\n-* Copyright (C) 2009 The Android Open Source Project\n-*\n-* Licensed under the Apache License, Version 2.0 (the \"License\");\n-* you may not use this file except in compliance with the License.\n-* You may obtain a copy of the License at\n-*\n-*      http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing, software\n-* distributed under the License is distributed on an \"AS IS\" BASIS,\n-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-* See the License for the specific language governing permissions and\n-* limitations under the License.\n-*/\n--->\n-\n <resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n     <!-- General -->\n     <skip />\n-    <!-- Application name -->\n-    <string name=\"wallpapers\">Outrun wallpaper</string>\n-\n-    <!-- Wallpaper showing a cube -->\n-    <string name=\"title\">Outrun</string>\n-\n-    <!-- Wallpaper showing a cube or dodecahedron, data read from resource -->\n-    <string name=\"wallpaper_cube2\">Cube - resource</string>\n-\n-    <!-- Wallpaper showing a cube, renderscript version -->\n-    <string name=\"wallpaper_cube3\">Cube - RenderScript</string>\n-\n-    <string name=\"cube2_settings\">Settings</string>\n-    <string name=\"cube2_settings_title\">Select shape</string>\n-    <string name=\"cube2_settings_summary\">Choose whether to display a cube or a dodecahedron</string>\n+    <string name=\"wallpapers\">Switch image wallpaper</string>\n+    <string name=\"title\">Switch image wallpaper</string>\n </resources>\n"
    },
    {
        "commit hash": "2df04423bfffc156c7bc3b193bb299e875a6355c",
        "previous commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/xml/wallpaper.xml",
            "additions": 0,
            "deletions": 17
        },
        "diff content": "@@ -1,22 +1,4 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-/**\n- * Copyright (c) 2009, The Android Open Source Project\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); \n- * you may not use this file except in compliance with the License. \n- * You may obtain a copy of the License at \n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0 \n- *\n- * Unless required by applicable law or agreed to in writing, software \n- * distributed under the License is distributed on an \"AS IS\" BASIS, \n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n- * See the License for the specific language governing permissions and \n- * limitations under the License.\n- */\n--->\n-\n <!-- The attributes in this XML file provide configuration information -->\n \n <wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"/>\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/README.txt",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+Since Android 2.1\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/AndroidManifest.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.novoda.wallpaper\">\n+\n+    <uses-sdk android:minSdkVersion=\"7\" \n+              android:targetSdkVersion=\"7\"/>\n+              \n+    <application\n+        android:label=\"@string/wallpapers\"\n+        android:icon=\"@drawable/ic_launcher_wallpaper\">\n+\n+        <service\n+            android:label=\"@string/title\"\n+            android:name=\".AnimSwitchWallPaper\"\n+            android:permission=\"android.permission.BIND_WALLPAPER\">\n+            <intent-filter>\n+                <action android:name=\"android.service.wallpaper.WallpaperService\" />\n+            </intent-filter>\n+            <meta-data android:name=\"android.service.wallpaper\" android:resource=\"@xml/wallpaper\" />\n+        </service>\n+        \n+    </application>\n+</manifest>\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/front_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/front_day001.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/front_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/front_day002.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/front_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/front_day003.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/front_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/front_day004.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/ic_launcher_wallpaper.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/ic_launcher_wallpaper.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/left_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/left_day001.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/left_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/left_day002.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/left_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/left_day003.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/left_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/left_day004.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/right_day001.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/right_day001.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/right_day002.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/right_day002.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/right_day003.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/right_day003.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/drawable/right_day004.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_animation/res/drawable/right_day004.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/values/shapes.xml",
            "additions": 121,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,121 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+* Copyright (C) 4008 The Android Open Source Project\n+*\n+* Licensed under the Apache License, Version 2.0 (the \"License\");\n+* you may not use this file except in compliance with the License.\n+* You may obtain a copy of the License at\n+*\n+*      http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+-->\n+\n+<resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n+\n+    <string-array name=\"cube2_shapenames\">\n+        <item>\"Cube\"</item>\n+        <item>\"Dodecahedron\"</item>\n+    </string-array>\n+\n+    <string-array name=\"cube2_shapeprefix\">\n+        <item>\"cube\"</item>\n+        <item>\"dodecahedron\"</item>\n+    </string-array>\n+\n+    <!-- x,y,z tuples for the points defining the object -->\n+    <!-- stored as strings for easier human readability -->\n+    <string-array name=\"cubepoints\">\n+        <item>\"-400 -400 -400\"</item>\n+        <item>\"400 -400 -400\"</item>\n+        <item>\"400 400 -400\"</item>\n+        <item>\"-400 400 -400\"</item>\n+        <item>\"-400 -400 400\"</item>\n+        <item>\"400 -400 400\"</item>\n+        <item>\"400 400 400\"</item>\n+        <item>\"-400 400 400\"</item>\n+    </string-array>\n+\n+    <!-- start,end point index tuples of the lines defining the object -->\n+    <string-array name=\"cubelines\">\n+        <!-- lines forming one face -->\n+        <item>\"0 1\"</item>\n+        <item>\"1 2\"</item>\n+        <item>\"2 3\"</item>\n+        <item>\"3 0\"</item>\n+\n+        <!-- lines forming the opposite face -->\n+        <item>\"4 5\"</item>\n+        <item>\"5 6\"</item>\n+        <item>\"6 7\"</item>\n+        <item>\"7 4\"</item>\n+\n+        <!-- lines connecting the two faces -->\n+        <item>\"0 4\"</item>\n+        <item>\"1 5\"</item>\n+        <item>\"2 6\"</item>\n+        <item>\"3 7\"</item>\n+    </string-array>\n+\n+    <string-array name=\"dodecahedronpoints\">\n+        <item>\"333.850000 0.000000 437.250000\"</item>\n+        <item>\"103.400000 317.350000 437.250000\"</item>\n+        <item>\"-270.050000 196.350000 437.250000\"</item>\n+        <item>\"-270.050000 -196.350000 437.250000\"</item>\n+        <item>\"103.400000 -317.350000 437.250000\"</item>\n+        <item>\"540.100000 0.000000 103.400000\"</item>\n+        <item>\"167.200000 513.700000 103.400000\"</item>\n+        <item>\"-437.250000 317.350000 103.400000\"</item>\n+        <item>\"-437.250000 -317.350000 103.400000\"</item>\n+        <item>\"167.200000 -513.700000 103.400000\"</item>\n+        <item>\"437.250000 317.350000 -103.400000\"</item>\n+        <item>\"-167.200000 513.700000 -103.400000\"</item>\n+        <item>\"-540.100000 0.000000 -103.400000\"</item>\n+        <item>\"-167.200000 -513.700000 -103.400000\"</item>\n+        <item>\"437.250000 -317.350000 -103.400000\"</item>\n+        <item>\"270.050000 196.350000 -437.250000\"</item>\n+        <item>\"-103.400000 317.350000 -437.250000\"</item>\n+        <item>\"-333.850000 0.000000 -437.250000\"</item>\n+        <item>\"-103.400000 -317.350000 -437.250000\"</item>\n+        <item>\"270.050000 -196.350000 -437.250000\"</item>\n+    </string-array>\n+\n+    <string-array name=\"dodecahedronlines\">\n+        <item>\"0 1\"</item>\n+        <item>\"0 4\"</item>\n+        <item>\"0 5\"</item>\n+        <item>\"1 2\"</item>\n+        <item>\"1 6\"</item>\n+        <item>\"2 3\"</item>\n+        <item>\"2 7\"</item>\n+        <item>\"3 4\"</item>\n+        <item>\"3 8\"</item>\n+        <item>\"4 9\"</item>\n+        <item>\"5 10\"</item>\n+        <item>\"5 14\"</item>\n+        <item>\"6 10\"</item>\n+        <item>\"6 11\"</item>\n+        <item>\"7 11\"</item>\n+        <item>\"7 12\"</item>\n+        <item>\"8 12\"</item>\n+        <item>\"8 13\"</item>\n+        <item>\"9 13\"</item>\n+        <item>\"9 14\"</item>\n+        <item>\"10 15\"</item>\n+        <item>\"11 16\"</item>\n+        <item>\"12 17\"</item>\n+        <item>\"13 18\"</item>\n+        <item>\"14 19\"</item>\n+        <item>\"15 16\"</item>\n+        <item>\"15 19\"</item>\n+        <item>\"16 17\"</item>\n+        <item>\"17 18\"</item>\n+        <item>\"18 19\"</item>\n+    </string-array>\n+</resources>\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/values/strings.xml",
            "additions": 38,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+* Copyright (C) 2009 The Android Open Source Project\n+*\n+* Licensed under the Apache License, Version 2.0 (the \"License\");\n+* you may not use this file except in compliance with the License.\n+* You may obtain a copy of the License at\n+*\n+*      http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+-->\n+\n+<resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n+    <!-- General -->\n+    <skip />\n+    <!-- Application name -->\n+    <string name=\"wallpapers\">Outrun wallpaper</string>\n+\n+    <!-- Wallpaper showing a cube -->\n+    <string name=\"title\">Outrun</string>\n+\n+    <!-- Wallpaper showing a cube or dodecahedron, data read from resource -->\n+    <string name=\"wallpaper_cube2\">Cube - resource</string>\n+\n+    <!-- Wallpaper showing a cube, renderscript version -->\n+    <string name=\"wallpaper_cube3\">Cube - RenderScript</string>\n+\n+    <string name=\"cube2_settings\">Settings</string>\n+    <string name=\"cube2_settings_title\">Select shape</string>\n+    <string name=\"cube2_settings_summary\">Choose whether to display a cube or a dodecahedron</string>\n+</resources>\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/res/xml/wallpaper.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/**\n+ * Copyright (c) 2009, The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \n+ * you may not use this file except in compliance with the License. \n+ * You may obtain a copy of the License at \n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0 \n+ *\n+ * Unless required by applicable law or agreed to in writing, software \n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n+ * See the License for the specific language governing permissions and \n+ * limitations under the License.\n+ */\n+-->\n+\n+<!-- The attributes in this XML file provide configuration information -->\n+\n+<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"/>\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_animation/src/com/novoda/wallpaper/AnimSwitchWallPaper.java",
            "additions": 239,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,239 @@\n+package com.novoda.wallpaper;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+import android.graphics.Matrix;\n+import android.graphics.Paint;\n+import android.os.Handler;\n+import android.service.wallpaper.WallpaperService;\n+import android.util.Log;\n+import android.view.MotionEvent;\n+import android.view.SurfaceHolder;\n+\n+public class AnimSwitchWallPaper extends WallpaperService {\n+\n+    @Override\n+    public void onCreate() {\n+    \tsuper.onCreate();\n+    }\n+\n+    @Override\n+    public void onDestroy() {\n+        super.onDestroy();\n+    }\n+\n+    @Override\n+    public Engine onCreateEngine() {\n+        return new OutRunEngine();\n+    }\n+    \n+    class OutRunEngine extends Engine {\n+\n+\t\tOutRunEngine() {\n+        \tResources res = getResources();\n+        \tint id =0;\n+        \tfor (int i = 0; i< FRONT_RES; i++) {\n+        \t\tid = res.getIdentifier(\"front_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n+        \t\tmFrontPics[i] = BitmapFactory.decodeResource(res, id);\n+        \t}\n+        \tid=0;\n+        \tfor (int i = 0; i< LEFT_RES; i++) {\n+        \t\tid = res.getIdentifier(\"left_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n+        \t\tmLeftPics[i] = BitmapFactory.decodeResource(res, id);\n+        \t}\n+        \tid=0;\n+        \tfor (int i = 0; i< RIGHT_RES; i++) {\n+        \t\tid = res.getIdentifier(\"right_day00\" + (i + 1), \"drawable\", \"com.novoda.wallpaper\");\n+        \t\tmRightPics[i] = BitmapFactory.decodeResource(res, id);\n+        \t}\n+        }\n+        \n+        @Override\n+        public void onCreate(SurfaceHolder surfaceHolder) {\n+            super.onCreate(surfaceHolder);\n+            setTouchEventsEnabled(true);\n+        }\n+\n+        @Override\n+        public void onDestroy() {\n+            super.onDestroy();\n+            mHandler.removeCallbacks(mDrawWallpaper);\n+        }\n+\n+        @Override\n+        public void onVisibilityChanged(boolean visible) {\n+            mVisible = visible;\n+            if (visible) {\n+                drawFrame();\n+            } else {\n+                mHandler.removeCallbacks(mDrawWallpaper);\n+            }\n+        }\n+\n+        @Override\n+        public void onSurfaceChanged(SurfaceHolder holder, int format, int width, int height) {\n+            super.onSurfaceChanged(holder, format, width, height);\n+            float w = mFrontPics[0].getWidth();\n+            float h = mFrontPics[0].getHeight();\n+            float s = width / (float)w;\n+            mMatrix.reset();\n+            mMatrix.setScale(s, s);\n+            \n+            mPosY = (height - (h * s)) / 2f;\n+            drawFrame();\n+        }\n+\n+        @Override\n+        public void onSurfaceCreated(SurfaceHolder holder) {\n+            super.onSurfaceCreated(holder);\n+        }\n+\n+        @Override\n+        public void onSurfaceDestroyed(SurfaceHolder holder) {\n+            super.onSurfaceDestroyed(holder);\n+            mVisible = false;\n+            mHandler.removeCallbacks(mDrawWallpaper);\n+        }\n+\n+        @Override\n+        public void onOffsetsChanged(float xOffset, float yOffset, float xStep, float yStep, int xPixels, int yPixels) {\n+//        \tLog.i(TAG, \"XOffset[\"+xOffset+\"] xStep[\"+xStep+\"] xPixels[\"+xPixels+\"]\");\n+            drawFrame();\n+        }\n+\n+        /*\n+         * Store the position of the touch event so we can use it for drawing later\n+         */\n+        @Override\n+        public void onTouchEvent(MotionEvent event) {\n+        \t\n+            if (event.getAction() == MotionEvent.ACTION_DOWN) {\n+            \tmDragEventInProgress = true;\n+            \tmDragEventStartX = event.getX();\n+            }\n+            \n+            if (event.getAction() == MotionEvent.ACTION_UP) {\n+            \tboolean draggedLotsRight = (mDragEventStartX - event.getX()) >=160;\n+            \tboolean draggedLotsLeft = (event.getX() - mDragEventStartX) >=160;\n+            \tLog.v(TAG, \"X:[\"+event.getX()+\"+] - dragStart[\"+mDragEventStartX+\"] =\" + (event.getX() - mDragEventStartX));\n+            \t\n+\t\t\t\tif( (mDragEventStartX > 150) && draggedLotsRight ){\n+            \t\ttakingACorner =true;\n+            \t\tcurrentDirection = DRIVING_RIGHT;\n+            \t\tLog.d(TAG, \"Driving animation started Right >\");\n+            \t\tnew Timer().schedule(new TimerTask(){\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\ttakingACorner =false;\n+\t\t            \t\tpicIdx =0;\n+\t\t\t\t\t\t}}, 1000);\n+            \t}\n+            \t\n+            \tif( (mDragEventStartX < 150) && draggedLotsLeft ){\n+            \t\ttakingACorner =true;\n+            \t\tcurrentDirection = DRIVING_LEFT;\n+            \t\tLog.d(TAG, \"Driving animation started < Left\");\n+            \t\tnew Timer().schedule(new TimerTask(){\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic void run() {\n+\t\t            \t\ttakingACorner =false;\n+\t\t            \t\tpicIdx =0;\n+\t\t\t\t\t\t}}, 1000);\n+            \t}\n+            \t\n+            \tmDragEventInProgress = false;\n+            \tmDragEventStartX = 0;\n+            }\n+            super.onTouchEvent(event);\n+        }\n+\n+        \n+        void drawFrame() {\n+            final SurfaceHolder holder = getSurfaceHolder();\n+            Canvas c = null;\n+            try {\n+                c = holder.lockCanvas();\n+                if (c != null) {\n+                \tc.save();\n+                \tdrawCar(c);\n+                    c.restore();\n+                }\n+            } finally {\n+                if (c != null) holder.unlockCanvasAndPost(c);\n+            }\n+\n+            // Reschedule the next redraw\n+            mHandler.removeCallbacks(mDrawWallpaper);\n+            if (mVisible) {\n+                mHandler.postDelayed(mDrawWallpaper, 1000 / 300);\n+            }\n+        }\n+\n+        private void drawCar(Canvas c) {\n+    \t\t\n+        \tif(takingACorner){\n+        \t\tif(currentDirection == DRIVING_RIGHT){\n+\t        \t\tdrawAnim(c, mRightPics);        \t\t\t\n+        \t\t}else{\n+\t        \t\tdrawAnim(c, mLeftPics);\n+        \t\t}\n+    \t\t}else{\n+\t        \tif(!mDragEventInProgress){\n+\t        \t\tdrawAnim(c, mFrontPics);\n+\t        \t}else{\n+/*\n+ * Uncomment this to respond \n+ * to all onscreen touch events \t        \t\t\n+ *\n+ *\t        \t\tif(mDragEventStartX > 150){\n+ *\t        \t\t\tdrawAnimRight(c, mLeftPics);\n+ *\t        \t\t}else{\n+ *\t\t\t\t\t\tdrawAnim(c, mLeftPics);\n+ *\t        \t\t}\n+ */\t        \t\n+\t        \t}\n+    \t\t}\n+\t\t}\n+\n+        void drawAnim(Canvas c, Bitmap[] pics) {\n+        \tc.drawBitmap(pics[picIdx], mMatrix, mPaint);\n+        \t++picIdx;\n+        \tif (picIdx == FRONT_RES) picIdx = 0;\n+        }\n+\n+        private int picIdx = 0;\n+\t\tprivate final Paint mPaint = new Paint();\n+\t\tprivate float mTouchX = -1;\n+\t\tprivate float mTouchY = -1;\n+\t\tprivate int currentDirection = DRIVING_FORWARD;\n+\t\tprivate static final int DRIVING_FORWARD = 5678;\n+\t\tprivate static final int DRIVING_LEFT = 9876;\n+\t\tprivate static final int DRIVING_RIGHT = 234;\n+\t\tprivate boolean mDragEventInProgress = false;\n+\t\tprivate float mDragEventStartX = 0;\n+\t\tprivate boolean mVisible;\n+\t\tprivate float mPosY;\n+\t\tprivate boolean takingACorner = false;\n+\t\tprivate Matrix mMatrix = new Matrix();\n+\t\tprivate static final int FRONT_RES = 4;\n+\t\tprivate static final int LEFT_RES = 4;\n+\t\tprivate static final int RIGHT_RES = 4;\n+\t\tprivate final Bitmap[] mFrontPics = new Bitmap[FRONT_RES];\n+\t\tprivate final Bitmap[] mRightPics = new Bitmap[RIGHT_RES];\n+\t\tprivate final Bitmap[] mLeftPics = new Bitmap[LEFT_RES];\n+\n+\t\tprivate final Runnable mDrawWallpaper = new Runnable() {\n+\t\t    public void run() {\n+\t\t        drawFrame();\n+\t\t    }\n+\t\t};\n+    }\n+\n+\tprivate final Handler mHandler = new Handler();\n+\tprivate static final String TAG = AnimSwitchWallPaper.class.getSimpleName();\n+}\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/AndroidManifest.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.novoda.wallpaper\">\n+\n+    <uses-sdk android:minSdkVersion=\"7\" \n+              android:targetSdkVersion=\"7\"/>\n+              \n+    <application\n+        android:label=\"@string/wallpapers\"\n+        android:icon=\"@drawable/ic_launcher_wallpaper\">\n+\n+        <service\n+            android:label=\"@string/title\"\n+            android:name=\".ImageSwitchWallPaper\"\n+            android:permission=\"android.permission.BIND_WALLPAPER\">\n+            <intent-filter>\n+                <action android:name=\"android.service.wallpaper.WallpaperService\" />\n+            </intent-filter>\n+            <meta-data android:name=\"android.service.wallpaper\" android:resource=\"@xml/wallpaper\" />\n+        </service>\n+        \n+    </application>\n+</manifest>\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/day_front.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_leftright/res/drawable/day_front.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/day_left.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_leftright/res/drawable/day_left.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/day_right.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_leftright/res/drawable/day_right.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/front.gif",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_leftright/res/drawable/front.gif differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/ic_launcher_wallpaper.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_leftright/res/drawable/ic_launcher_wallpaper.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/night_front.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_leftright/res/drawable/night_front.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/night_left.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_leftright/res/drawable/night_left.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/drawable/night_right.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Livewallpaper/switch_leftright/res/drawable/night_right.png differ\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/values/strings.xml",
            "additions": 38,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/*\n+* Copyright (C) 2009 The Android Open Source Project\n+*\n+* Licensed under the Apache License, Version 2.0 (the \"License\");\n+* you may not use this file except in compliance with the License.\n+* You may obtain a copy of the License at\n+*\n+*      http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+-->\n+\n+<resources xmlns:xliff=\"urn:oasis:names:tc:xliff:document:1.2\">\n+    <!-- General -->\n+    <skip />\n+    <!-- Application name -->\n+    <string name=\"wallpapers\">Outrun wallpaper</string>\n+\n+    <!-- Wallpaper showing a cube -->\n+    <string name=\"title\">Outrun</string>\n+\n+    <!-- Wallpaper showing a cube or dodecahedron, data read from resource -->\n+    <string name=\"wallpaper_cube2\">Cube - resource</string>\n+\n+    <!-- Wallpaper showing a cube, renderscript version -->\n+    <string name=\"wallpaper_cube3\">Cube - RenderScript</string>\n+\n+    <string name=\"cube2_settings\">Settings</string>\n+    <string name=\"cube2_settings_title\">Select shape</string>\n+    <string name=\"cube2_settings_summary\">Choose whether to display a cube or a dodecahedron</string>\n+</resources>\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/res/xml/wallpaper.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/**\n+ * Copyright (c) 2009, The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \n+ * you may not use this file except in compliance with the License. \n+ * You may obtain a copy of the License at \n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0 \n+ *\n+ * Unless required by applicable law or agreed to in writing, software \n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n+ * See the License for the specific language governing permissions and \n+ * limitations under the License.\n+ */\n+-->\n+\n+<!-- The attributes in this XML file provide configuration information -->\n+\n+<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"/>\n"
    },
    {
        "commit hash": "967ea4ba3a20813849720e86bc37c55f2e8346ba",
        "previous commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "diff stats": {
            "file_path": "Livewallpaper/switch_leftright/src/com/novoda/wallpaper/ImageSwitchWallPaper.java",
            "additions": 275,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,275 @@\n+package com.novoda.wallpaper;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+import android.graphics.Paint;\n+import android.os.Handler;\n+import android.os.SystemClock;\n+import android.service.wallpaper.WallpaperService;\n+import android.util.Log;\n+import android.view.MotionEvent;\n+import android.view.SurfaceHolder;\n+\n+\n+public class ImageSwitchWallPaper extends WallpaperService {\n+\n+    private final Handler mHandler = new Handler();\n+    private static final String TAG = ImageSwitchWallPaper.class.getSimpleName();\n+    \n+    @Override\n+    public void onCreate() {\n+    \tsuper.onCreate();\n+    }\n+\n+    @Override\n+    public void onDestroy() {\n+        super.onDestroy();\n+    }\n+\n+    @Override\n+    public Engine onCreateEngine() {\n+        return new OutRunEngine();\n+    }\n+\n+    class OutRunEngine extends Engine {\n+\n+\t\tprivate final Paint mPaint = new Paint();\n+        private float mOffset;\n+        private float mTouchX = -1;\n+        private float mTouchY = -1;\n+        private long mStartTime;\n+        private float mCenterX;\n+        private float mCenterY;\n+        \n+        private boolean mDrivingForward = true;\n+        private boolean mTurningLeft = false;\n+        private boolean mTurningRight = false;\n+        private boolean mDragEventAnimStarted = false;\n+        \n+\t\tprivate Bitmap carRightBitmap;\n+\t\tprivate Bitmap carLeftBitmap;        \n+        private Bitmap carFrontBitmap;\n+        private Bitmap slidePic;\n+        private boolean duringSlide = false;\n+        \n+    \tprivate boolean mDragEventInProgress = false;\n+    \tprivate float mDragEventStartX = 0;\n+\n+        private final Runnable mDrawWallpaper = new Runnable() {\n+            public void run() {\n+                drawFrame();\n+            }\n+        };\n+        private boolean mVisible;\n+\t\tprivate float xLastOffset;\n+\t\tprivate boolean takingACorner = false;\n+\n+\n+        OutRunEngine() {\n+        \t \n+            mStartTime = SystemClock.elapsedRealtime();\n+            \n+            java.io.InputStream is;\n+            is = getResources().openRawResource(R.drawable.day_front);\n+            BitmapFactory.Options opts = new BitmapFactory.Options();\n+            Bitmap bm;\n+            \n+            opts.inJustDecodeBounds = true;\n+            bm = BitmapFactory.decodeStream(is, null, opts);\n+            opts.inJustDecodeBounds = false;    // this will request the bm\n+            bm = BitmapFactory.decodeStream(is, null, opts);\n+            carFrontBitmap = bm;\n+            \n+            is = getResources().openRawResource(R.drawable.day_right);\n+            opts = new BitmapFactory.Options();\n+            \n+            opts.inJustDecodeBounds = true;\n+            bm = BitmapFactory.decodeStream(is, null, opts);\n+            opts.inJustDecodeBounds = false;    // this will request the bm\n+            bm = BitmapFactory.decodeStream(is, null, opts);\n+            carRightBitmap = bm;\n+            \n+            is = getResources().openRawResource(R.drawable.day_left);\n+            opts = new BitmapFactory.Options();\n+            \n+            opts.inJustDecodeBounds = true;\n+            bm = BitmapFactory.decodeStream(is, null, opts);\n+            opts.inJustDecodeBounds = false;    // this will request the bm\n+            bm = BitmapFactory.decodeStream(is, null, opts);\n+            carLeftBitmap = bm;\n+            \n+        }\n+\n+        @Override\n+        public void onCreate(SurfaceHolder surfaceHolder) {\n+            super.onCreate(surfaceHolder);\n+            // By default we don't get touch events, so enable them.\n+            setTouchEventsEnabled(true);\n+        }\n+\n+        @Override\n+        public void onDestroy() {\n+            super.onDestroy();\n+            mHandler.removeCallbacks(mDrawWallpaper);\n+        }\n+\n+        @Override\n+        public void onVisibilityChanged(boolean visible) {\n+            mVisible = visible;\n+            if (visible) {\n+                drawFrame();\n+            } else {\n+                mHandler.removeCallbacks(mDrawWallpaper);\n+            }\n+        }\n+\n+        @Override\n+        public void onSurfaceChanged(SurfaceHolder holder, int format, int width, int height) {\n+            super.onSurfaceChanged(holder, format, width, height);\n+            // store the center of the surface, so we can draw the cube in the right spot\n+            mCenterX = width/2.0f;\n+            mCenterY = height/2.0f;\n+            drawFrame();\n+        }\n+\n+        @Override\n+        public void onSurfaceCreated(SurfaceHolder holder) {\n+            super.onSurfaceCreated(holder);\n+        }\n+\n+        @Override\n+        public void onSurfaceDestroyed(SurfaceHolder holder) {\n+            super.onSurfaceDestroyed(holder);\n+            mVisible = false;\n+            mHandler.removeCallbacks(mDrawWallpaper);\n+        }\n+\n+        @Override\n+        public void onOffsetsChanged(float xOffset, float yOffset, float xStep, float yStep, int xPixels, int yPixels) {\n+            mOffset = xOffset;\n+//        \tLog.i(TAG, \"XOffset[\"+xOffset+\"] xStep[\"+xStep+\"] xPixels[\"+xPixels+\"]\");\n+            \n+            drawFrame();\n+        }\n+\n+        /*\n+         * Store the position of the touch event so we can use it for drawing later\n+         */\n+        @Override\n+        public void onTouchEvent(MotionEvent event) {\n+        \t\n+        \t\n+            if (event.getAction() == MotionEvent.ACTION_DOWN) {\n+            \tmDragEventInProgress = true;\n+            \tmDragEventStartX = event.getX();\n+            }\n+            \n+            if (event.getAction() == MotionEvent.ACTION_UP) {\n+            \t\n+            \tLog.i(TAG, \"X:[\"+event.getX()+\"+] - dragStart[\"+mDragEventStartX+\"] =\" + (event.getX() - mDragEventStartX));\n+            \tboolean draggedLotsRight = (mDragEventStartX - event.getX()) >=160;\n+            \tboolean draggedLotsLeft = (event.getX() - mDragEventStartX) >=160;\n+            \t\n+\t\t\t\tif( (mDragEventStartX > 150) && draggedLotsRight ){\n+            \t\tLog.d(TAG, \"Driving animation started Right >\");\n+            \t\ttakingACorner =true;\n+            \t\tslidePic = carRightBitmap;\n+            \t\tnew Timer().schedule(new TimerTask(){\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\ttakingACorner =false;\n+\t\t\t\t\t\t}}, 1000);\n+            \t}\n+            \t\n+            \tif( (mDragEventStartX < 150) && draggedLotsLeft ){\n+            \t\tLog.d(TAG, \"Driving animation started < Left\");\n+            \t\ttakingACorner =true;\n+            \t\tslidePic = carLeftBitmap;\n+            \t\tnew Timer().schedule(new TimerTask(){\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic void run() {\n+\t\t            \t\ttakingACorner =false;\n+\t\t\t\t\t\t}}, 1000);\n+            \t}\n+            \t\n+            \tmDragEventInProgress = false;\n+            \tmDragEventStartX = 0;\n+            }\n+            \t\n+            \t\n+            if (event.getAction() == MotionEvent.ACTION_MOVE) {\n+                mTouchX = event.getX();\n+                mTouchY = event.getY();\n+            \t\n+            \tif(mTouchX >= 150){\n+                \tmDrivingForward = false;\n+                \tmTurningLeft = false;\n+                \tmTurningRight = true;\n+//            \t\tLog.i(TAG, \"Right:  mTouchX [\"+mTouchX+\"]\");\n+            \t}else{\n+                \tmDrivingForward = false;\n+                \tmTurningLeft = true;\n+                \tmTurningRight = false;\n+//            \t\tLog.i(TAG, \"Left:   mTouchX [\"+mTouchY+\"]\");\n+            \t}\n+            \t\n+            } else {\n+            \tmDrivingForward = true;\n+            \tmTurningLeft = false;\n+            \tmTurningRight = false;\n+                mTouchX = -1;\n+                mTouchY = -1;\n+            }\n+            super.onTouchEvent(event);\n+        }\n+\n+        void drawFrame() {\n+            final SurfaceHolder holder = getSurfaceHolder();\n+\n+            Canvas c = null;\n+            try {\n+                c = holder.lockCanvas();\n+                if (c != null) {\n+                \tdrawCar(c);\n+                }\n+            } finally {\n+                if (c != null) holder.unlockCanvasAndPost(c);\n+            }\n+\n+            // Reschedule the next redraw\n+            mHandler.removeCallbacks(mDrawWallpaper);\n+            if (mVisible) {\n+                mHandler.postDelayed(mDrawWallpaper, 1000 / 25);\n+            }\n+        }\n+\n+        private void drawCar(Canvas c) {\n+    \t\t\n+        \tif(takingACorner){\n+    \t\t\tc.drawBitmap(slidePic, 20, 0, null);\n+    \t\t}else{\n+    \t\t\t\n+\t        \tif(mDragEventInProgress){\n+//\t        \t\tif(mDragEventStartX > 150){\n+//\t        \t\t\tc.drawBitmap(carRightBitmap, 20, 0, null);\n+//\t        \t\t}else{\n+//\t        \t\t\tc.drawBitmap(carLeftBitmap, 20, 0, null);\n+//\t        \t\t}\n+\t        \t}else{\n+\t        \t\tc.drawBitmap(carFrontBitmap, 20, 0, null);\n+\t        \t}\n+    \t\t}\n+\t\t}\n+\n+        void drawTouchPoint(Canvas c) {\n+            if (mTouchX >=0 && mTouchY >= 0) {\n+                c.drawCircle(mTouchX, mTouchY, 80, mPaint);\n+            }\n+        }\n+\n+    }\n+}\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/AndroidManifest.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\" android:theme=\"@style/Default\">\n+        \n+        <activity android:name=\".Container\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    \n+    <activity android:name=\"Tab1Activity\"></activity>\n+\n+\t<activity android:name=\"Tab2Activity\"></activity>\n+\t\n+\t</application>\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CustomTabsHack/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/res/drawable/selected.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CustomTabsHack/res/drawable/selected.9.png differ\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/res/drawable/unselected.9.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/CustomTabsHack/res/drawable/unselected.9.png differ\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/res/layout/main.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+<TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"@string/hello\"\n+    />\n+</LinearLayout>\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/res/layout/tab1.xml",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\">\n+    \n+    <LinearLayout style=\"@style/TabContainer\">\n+\t\t<LinearLayout  android:id=\"@+id/tab1\" style=\"@style/TabSelected\">\n+\t\t\t<TextView style=\"@style/TabTxt\"\tandroid:text=\"Tab1\"/>\n+\t\t</LinearLayout>\t\n+\t\t\n+\t\t<LinearLayout android:id=\"@+id/tab2\" style=\"@style/TabUnselected\">\n+\t\t\t<TextView style=\"@style/TabTxt\"\tandroid:text=\"Tab2\"/>\n+\t\t</LinearLayout>\t\n+\t</LinearLayout>\t\n+\t\n+</LinearLayout>\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/res/layout/tab2.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+    \n+    <LinearLayout style=\"@style/TabContainer\">\n+\t\t<LinearLayout  android:id=\"@+id/tab1\" style=\"@style/TabUnselected\">\n+\t\t\t<TextView style=\"@style/TabTxt\"\tandroid:text=\"Tab1\"/>\n+\t\t</LinearLayout>\t\n+\t\t\n+\t\t<LinearLayout   android:id=\"@+id/tab2\" style=\"@style/TabSelected\">\n+\t\t\t<TextView style=\"@style/TabTxt\"\tandroid:text=\"Tab2\"/>\n+\t\t</LinearLayout>\t\t\n+\t\t\t\n+\t</LinearLayout>\t\n+\t\n+</LinearLayout>\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, Container!</string>\n+    <string name=\"app_name\">MultipleActivityTabHost</string>\n+</resources>\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/res/values/styles.xml",
            "additions": 39,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\n+\t<style name=\"Default\">\n+\t\t<item name=\"android:layout_width\">wrap_content</item>\n+\t\t<item name=\"android:layout_height\">wrap_content</item>\n+\t</style>\n+\t\n+\t<style name=\"WidthFillParentBoth\">\n+\t\t<item name=\"android:layout_width\">fill_parent</item>\n+\t\t<item name=\"android:layout_height\">fill_parent</item>\n+\t</style>\n+\t\n+\t<style name=\"TabContainer\">\n+\t\t<item name=\"android:layout_width\">fill_parent</item>\n+\t\t<item name=\"android:layout_height\">60dip</item>\n+\t\t<item name=\"android:orientation\">horizontal</item>\n+\t</style>\n+\t\n+\t<style name=\"Tab\">\n+\t\t<item name=\"android:layout_height\">fill_parent</item>\n+\t\t<item name=\"android:gravity\">center</item>\n+\t\t<item name=\"android:layout_weight\">33</item>\n+\t</style>\n+\t\n+\t<style name=\"TabUnselected\" parent=\"Tab\">\n+\t\t<item name=\"android:background\">@drawable/unselected</item>\n+\t</style>\n+\t\n+\t<style name=\"TabSelected\"  parent=\"Tab\">\n+\t\t<item name=\"android:background\">@drawable/selected</item>\n+\t</style>\n+\t\n+\t<style name=\"TabTxt\">\n+\t\t<item name=\"android:gravity\">center</item>\n+\t</style>\n+\t\n+\t\n+</resources>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/src/com/novoda/Container.java",
            "additions": 69,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,69 @@\n+package com.novoda;\n+\n+import android.app.TabActivity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.util.Log;\n+import android.widget.TabHost;\n+\n+public class Container extends TabActivity{\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+        requestWindowFeature(android.view.Window.FEATURE_NO_TITLE);\n+\t\tsuper.onCreate(savedInstanceState);\n+\n+\t\thost = getTabHost();\n+\t\tIntent intent = new Intent(this, Tab1Activity.class);\n+\t\thost.addTab(host.newTabSpec(\"one\").setIndicator(\"TAB1\").setContent(intent));\n+\t\tintent = new Intent(this, Tab2Activity.class);\n+\t\thost.addTab(host.newTabSpec(\"two\").setIndicator(\"TAB2\").setContent(intent));\n+\t\t\n+\t\thost.getTabWidget().getChildAt(0).getLayoutParams().height = 0;\n+\t\thost.getTabWidget().getChildAt(1).getLayoutParams().height = 0;\n+\n+\t}\n+\t\n+\t@Override\n+\tprotected void onResume() {\n+\t\tsuper.onResume();\n+\t\treceiver = new TabChangeReceiver();\n+\t\tregisterReceiver(receiver, new IntentFilter(\"com.novoda.TAB\"), null, mHandler);\n+\t}\n+\t\n+\t@Override\n+\tprotected void onPause() {\n+\t\tsuper.onPause();\n+\t\tunregisterReceiver(receiver);\n+\t};\n+\t\n+    protected Handler mHandler = new Handler() {\n+        @Override public void handleMessage(Message msg) {\n+            switch (msg.what) {\n+            \tcase SWITCH_TAB:\n+            \t\tLog.i(\"handler\", \"using the handler\");\n+                    host.setCurrentTab(msg.arg1);            \t\t\n+            \t\tbreak;\n+            }\n+        }\n+    };\n+\n+    public class TabChangeReceiver extends android.content.BroadcastReceiver{\n+\t\t@Override\n+\t\tpublic void onReceive(Context context, Intent intent) {\n+\t\t\tint intExtra = intent.getIntExtra(\"tab\", 0);\n+\t\t\tLog.i(TabChangeReceiver.class.getSimpleName(), \"Recieved broadcast with extra=[\" + intExtra + \"]\");\n+\t\t\t\n+\t\t\tmHandler.sendMessage(mHandler.obtainMessage(SWITCH_TAB, intExtra, 0));\n+\t\t}\n+\t}\n+\t\n+\tprivate TabHost host;\n+\tpublic static final int SWITCH_TAB = 2545;\n+\tprotected static TabChangeReceiver receiver;\n+\t\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/src/com/novoda/Tab1Activity.java",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+\n+public class Tab1Activity extends Activity{\n+\t\n+\t@Override\n+\tprotected void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+        setContentView(R.layout.tab1);\n+        \n+        findViewById(R.id.tab2).setOnClickListener(new OnClickListener() {\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n+\t\t\t\tintent.putExtra(\"tab\", 1);\n+\t\t\t\tsendBroadcast(intent);\n+\t\t\t}\n+\t\t});\n+        \n+\t}\n+}\n"
    },
    {
        "commit hash": "97c36e3acc64a5bf8f89de780274c0d7ac2d6d6e",
        "previous commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "diff stats": {
            "file_path": "CustomTabsHack/src/com/novoda/Tab2Activity.java",
            "additions": 25,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,25 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+\n+public class Tab2Activity extends Activity{\n+\t\n+\t@Override\n+\tprotected void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+        setContentView(R.layout.tab2);\n+        \n+        findViewById(R.id.tab1).setOnClickListener(new OnClickListener() {\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n+\t\t\t\tintent.putExtra(\"tab\", 0);\n+\t\t\t\tsendBroadcast(intent);\n+\t\t\t}\n+\t\t});\n+            \n+\t}\n+}\n"
    },
    {
        "commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "previous commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "diff stats": {
            "file_path": "Notifications/AndroidManifest.xml",
            "additions": 0,
            "deletions": 18
        },
        "diff content": "@@ -1,18 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-      package=\"com.novoda\"\n-      android:versionCode=\"1\"\n-      android:versionName=\"1.0\">\n-    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n-        <activity android:name=\".Notification\"\n-                  android:label=\"@string/app_name\">\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity>\n-\n-    </application>\n-    <uses-sdk android:minSdkVersion=\"3\" />\n-\n-</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "previous commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "diff stats": {
            "file_path": "Notifications/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/Notifications/res/drawable/icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "previous commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "diff stats": {
            "file_path": "Notifications/res/layout/notifications.xml",
            "additions": 0,
            "deletions": 20
        },
        "diff content": "@@ -1,20 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    >\n-\n-\t<Button\n-\t\tandroid:text=\"@+id/Button01\"\n-\t\tandroid:id=\"@+id/Button01\" \n-\t\tandroid:layout_width=\"wrap_content\" \n-\t\tandroid:layout_height=\"wrap_content\" />\n-\t\t\n-\t<Button\n-\t\tandroid:text=\"@+id/Button02\"\n-\t\tandroid:id=\"@+id/Button02\" \n-\t\tandroid:layout_width=\"wrap_content\" \n-\t\tandroid:layout_height=\"wrap_content\" />\n-\t\t\n-</LinearLayout>\n"
    },
    {
        "commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "previous commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "diff stats": {
            "file_path": "Notifications/res/values/strings.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-    <string name=\"hello\">Hello World, Notification!</string>\n-    <string name=\"app_name\">Demo Notifications</string>\n-</resources>\n"
    },
    {
        "commit hash": "129678fd06c5a7ccc5bf3f39174ba3e4ae0b9590",
        "previous commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "diff stats": {
            "file_path": "Notifications/src/com/novoda/Notification.java",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-package com.novoda;\n-\n-import android.app.Activity;\n-import android.os.Bundle;\n-\n-public class Notification extends Activity {\n-    /** Called when the activity is first created. */\n-    @Override\n-    public void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-        setContentView(R.layout.notifications);\n-    }\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/AndroidManifest.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".StyledListItems\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+\n+    </application>\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/drawable/bg_list.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ListStyles/res/drawable/bg_list.png differ\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/drawable/bg_list_hover.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ListStyles/res/drawable/bg_list_hover.png differ\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/drawable/bg_list_selected.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ListStyles/res/drawable/bg_list_selected.png differ\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/drawable/bg_list_sep.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ListStyles/res/drawable/bg_list_sep.png differ\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ListStyles/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/drawable/list_item_style.xml",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\t<item\n+\t\tandroid:state_focused=\"true\"\n+\t\tandroid:state_pressed=\"true\"\n+\t\tandroid:drawable=\"@drawable/bg_list_selected\" />\n+\t<item\n+\t\tandroid:state_focused=\"true\"\n+\t\tandroid:state_pressed=\"false\"\n+\t\tandroid:drawable=\"@drawable/bg_list_selected\" />\n+\t<item\n+\t\tandroid:state_focused=\"false\"\n+\t\tandroid:state_pressed=\"true\"\n+\t\tandroid:drawable=\"@drawable/bg_list_selected\" \n+\t\t/>\n+\t<item\n+\t\tandroid:state_selected=\"true\"\n+\t\tandroid:drawable=\"@drawable/bg_list_selected\" \n+\t\t/>\n+\t<item android:drawable=\"@drawable/bg_list\" />\n+</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/drawable/list_style.xml",
            "additions": 21,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\t<item\n+\t\tandroid:state_focused=\"true\"\n+\t\tandroid:state_pressed=\"true\"\n+\t\tandroid:drawable=\"@drawable/bg_list_selected\" />\n+\t<item\n+\t\tandroid:state_focused=\"true\"\n+\t\tandroid:state_pressed=\"false\"\n+\t\tandroid:drawable=\"@drawable/bg_list_selected\" />\n+\t<item\n+\t\tandroid:state_focused=\"false\"\n+\t\tandroid:state_pressed=\"true\"\n+\t\tandroid:drawable=\"@drawable/bg_list_selected\" \n+\t\t/>\n+\t<item\n+\t\tandroid:state_selected=\"true\"\n+\t\tandroid:drawable=\"@drawable/bg_list_selected\" \n+\t\t/>\n+\t<item android:drawable=\"@drawable/bg_list\" />\n+</selector>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/layout/list.xml",
            "additions": 14,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\" >\n+    \n+\t<ListView\n+\t\tandroid:id=\"@android:id/list\"\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"fill_parent\"\n+\t\tandroid:divider=\"@drawable/bg_list_sep\"\n+\t\tandroid:dividerHeight=\"3dip\" />\n+\t    \n+</LinearLayout>\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/layout/list_item.xml",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout\n+\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:id=\"@+id/div_list_item\"\n+\tandroid:background=\"@drawable/list_item_style\"\n+\tandroid:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\" >\n+\t\n+\t<TextView \n+\t\tandroid:id=\"@+id/txt_item\"\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:textSize=\"14sp\"\n+    \tandroid:layout_height=\"20dip\" />\n+       \n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    \n+    <string name=\"app_name\">Styled List Items</string>\n+</resources>\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "ListStyles/src/com/novoda/StyledListItems.java",
            "additions": 88,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,88 @@\n+package com.novoda;\n+\n+import android.app.ListActivity;\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+public class StyledListItems extends ListActivity {\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.list);\n+        setListAdapter(new StyledListItemAdapter(this));\n+    }\n+    \n+    \n+    private class StyledListItemAdapter extends BaseAdapter {\n+        public StyledListItemAdapter(Context context) {\n+            mContext = context;\n+        }\n+\n+        public int getCount() {\n+            return mTitles.length;\n+        }\n+\n+        public Object getItem(int position) {\n+            return position;\n+        }\n+\n+        public long getItemId(int position) {\n+            return position;\n+        }\n+\n+        public View getView(int position, View convertView, ViewGroup parent) {\n+\n+            if (convertView == null) {\n+                sv = new StyledItemView(mContext, mTitles[position]);\n+            } else {\n+                sv = (StyledItemView) convertView;\n+            }\n+\n+            sv.setContent(mTitles[position]);\n+            return sv;\n+        }\n+\n+        private Context mContext;\n+        \n+        private String[] mTitles = \n+        {\n+                \"lorem dipsum\",   \n+                \"lorem dipsum\",\n+                \"lorem dipsum\",       \n+                \"lorem dipsum\",\n+                \"lorem dipsum\",\n+                \"lorem dipsum\",  \n+                \"lorem dipsum\",\n+                \"lorem dipsum\"\n+        };\n+        \n+    }\n+    \n+    private class StyledItemView extends LinearLayout {\n+        private LayoutInflater mInflater;\n+\n+\t\tpublic StyledItemView(Context context, String title) {\n+            super(context);\n+            this.setOrientation(VERTICAL);\n+            mInflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+            LinearLayout layout = (LinearLayout)mInflater.inflate(R.layout.list_item, null);\n+            mTitle = (TextView)layout.findViewById(R.id.txt_item);\n+            addView(layout);\n+        }\n+\n+        public void setContent(String title) {\n+            mTitle.setText(title);\n+        }\n+\n+        private TextView mTitle;\n+    }\n+    \n+    StyledItemView sv;\n+    \n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "Notifications/AndroidManifest.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".Notification\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+\n+    </application>\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "Notifications/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/Notifications/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "Notifications/res/layout/notifications.xml",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+\n+\t<Button\n+\t\tandroid:text=\"@+id/Button01\"\n+\t\tandroid:id=\"@+id/Button01\" \n+\t\tandroid:layout_width=\"wrap_content\" \n+\t\tandroid:layout_height=\"wrap_content\" />\n+\t\t\n+\t<Button\n+\t\tandroid:text=\"@+id/Button02\"\n+\t\tandroid:id=\"@+id/Button02\" \n+\t\tandroid:layout_width=\"wrap_content\" \n+\t\tandroid:layout_height=\"wrap_content\" />\n+\t\t\n+</LinearLayout>\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "Notifications/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, Notification!</string>\n+    <string name=\"app_name\">Demo Notifications</string>\n+</resources>\n"
    },
    {
        "commit hash": "6a3a3eef51a3c761d35faf4a8327aa5191e48593",
        "previous commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "diff stats": {
            "file_path": "Notifications/src/com/novoda/Notification.java",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+\n+public class Notification extends Activity {\n+    /** Called when the activity is first created. */\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.notifications);\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "previous commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "diff stats": {
            "file_path": "simperAudioStreamer/._.DS_Store",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/simperAudioStreamer/._.DS_Store and /dev/null differ\n"
    },
    {
        "commit hash": "402685077b42c95b5c47f68b7a4b0313a5b689f5",
        "previous commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "diff stats": {
            "file_path": "simperAudioStreamer/res/._.DS_Store",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/simperAudioStreamer/res/._.DS_Store and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/classes.dex and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/DynamicListItems$1.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/com/novoda/DynamicListItems$1.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/DynamicListItems.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/com/novoda/DynamicListItems.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/com/novoda/R$attr.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/com/novoda/R$drawable.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/com/novoda/R$id.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/com/novoda/R$layout.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/com/novoda/R$string.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/DynamicListItems/bin/com/novoda/R.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/.classpath",
            "additions": 0,
            "deletions": 7
        },
        "diff content": "@@ -1,7 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<classpath>\n-\t<classpathentry kind=\"src\" path=\"src\"/>\n-\t<classpathentry kind=\"src\" path=\"gen\"/>\n-\t<classpathentry kind=\"con\" path=\"com.android.ide.eclipse.adt.ANDROID_FRAMEWORK\"/>\n-\t<classpathentry kind=\"output\" path=\"bin\"/>\n-</classpath>\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/classes.dex and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/AutoMultipleContacts$ContactListAdapter.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/com/novoda/AutoMultipleContacts$ContactListAdapter.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/AutoMultipleContacts.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/com/novoda/AutoMultipleContacts.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/com/novoda/R$attr.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/com/novoda/R$drawable.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/com/novoda/R$id.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/com/novoda/R$layout.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/com/novoda/R$string.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/MultipleContacts/bin/com/novoda/R.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/.classpath",
            "additions": 0,
            "deletions": 7
        },
        "diff content": "@@ -1,7 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<classpath>\n-\t<classpathentry kind=\"src\" path=\"src\"/>\n-\t<classpathentry kind=\"src\" path=\"gen\"/>\n-\t<classpathentry kind=\"con\" path=\"com.android.ide.eclipse.adt.ANDROID_FRAMEWORK\"/>\n-\t<classpathentry kind=\"output\" path=\"bin\"/>\n-</classpath>\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/classes.dex and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/Constants.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/Constants.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/R$attr.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/R$drawable.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/R$id.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/R$layout.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/R$string.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$style.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/R$style.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/R.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS$1.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/SMS$1.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS$ContactListAdapter.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/SMS$ContactListAdapter.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/SMS.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsDeliveredReciever.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/SmsDeliveredReciever.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsReceiver.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/SmsReceiver.class and /dev/null differ\n"
    },
    {
        "commit hash": "072c500592e4094e17a7e7e9cb4b6e2ae26595c1",
        "previous commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsSentReciever.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/sms/bin/com/novoda/sms/SmsSentReciever.class and /dev/null differ\n"
    },
    {
        "commit hash": "9cc741c03942039f37ee438807cd8bedd92eb487",
        "previous commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "diff stats": {
            "file_path": ".gitignore",
            "additions": 1,
            "deletions": 1
        },
        "diff content": "@@ -9,7 +9,7 @@ default.*\n .settings/*\n build.properties\n .DS_Store\n-.class\n+*.class\n java/build\n java/*.log\n java/*.log.*\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "ContactSelector/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "ContactSelector/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "ContactSelector/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "ContactSelector/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "ContactSelector/src/com/novoda/ContactSelector.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/DynamicListItems.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/DynamicListItems$1.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/DynamicListItems.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/res/layout/dynamic_list.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/res/layout/row.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "DynamicListItems/src/com/novoda/DynamicListItems.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/.classpath",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/.project",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/MultipleContacts.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/AutoMultipleContacts$ContactListAdapter.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/AutoMultipleContacts.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/default.properties",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/gen/com/novoda/R.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/res/layout/multipleselect.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultipleContacts/src/com/novoda/AutoMultipleContacts.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/layout/main.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/layout/tab1.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/layout/tab2.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/com/novoda/Container.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/com/novoda/Tab1Activity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/com/novoda/Tab2Activity.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "README",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostExample/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostExample/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostExample/res/layout/tabhost_container.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -27,6 +27,7 @@\n \t\t\t\tandroid:background=\"#00008B\">\n \t\t\t\t\n \t\t\t\t<!--  Put Tab 1 Views in here -->\n+\t\t\t\t\n \t\t\t</LinearLayout>\n \n \t\t\t<LinearLayout\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostExample/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostExample/src/com/novoda/SelfContainedTabHost.java",
            "additions": 7,
            "deletions": 10
        },
        "diff content": "@@ -2,9 +2,14 @@ package com.novoda;\n \n import android.app.Activity;\n import android.os.Bundle;\n+import android.util.Log;\n+import android.view.View;\n+import android.widget.Button;\n import android.widget.TabHost;\n \n public class SelfContainedTabHost extends Activity {\n+\t\n+\tprivate static final String TAG = SelfContainedTabHost.class.getSimpleName(); \n \n \t@Override\n     public void onCreate(Bundle savedInstanceState) {\n@@ -14,16 +19,8 @@ public class SelfContainedTabHost extends Activity {\n         TabHost tabs = (TabHost)this.findViewById(R.id.tabhost);\n         tabs.setup();\n \n-        TabHost.TabSpec one = tabs.newTabSpec(\"one\");\n-        one.setContent(R.id.tab1content);\n-        one.setIndicator(\"TAB 1\");\n-        tabs.addTab(one);\n-\n-        TabHost.TabSpec two = tabs.newTabSpec(\"two\");\n-        two.setContent(R.id.tab2content);\n-        two.setIndicator(\"TAB 2\");\n-        tabs.addTab(two);\n-\n+        tabs.addTab(tabs.newTabSpec(\"one\").setContent(R.id.tab1content).setIndicator(\"TAB 1\"));\n+        tabs.addTab(tabs.newTabSpec(\"two\").setContent(R.id.tab2content).setIndicator(\"TAB 2\"));\n         tabs.setCurrentTab(0);\n     }\n }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/AndroidManifest.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        \n+        <activity android:name=\".Container\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    \n+    <activity android:name=\"Tab1Activity\"></activity>\n+\n+\t<activity android:name=\"Tab2Activity\"></activity>\n+\t\n+\t</application>\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/TabHostMultipleActivityBrowsing/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/res/layout/main.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+<TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"@string/hello\"\n+    />\n+</LinearLayout>\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/res/layout/tab1.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+\t<Button\n+\t\tandroid:id=\"@+id/tab1button\"\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:text=\"Open Tab #2\" />\n+</LinearLayout>\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/res/layout/tab2.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+\t<Button\n+\t\tandroid:id=\"@+id/tab2button\"\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:text=\"Open Tab #1\" />\n+</LinearLayout>\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, Container!</string>\n+    <string name=\"app_name\">MultipleActivityTabHost</string>\n+</resources>\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/com/novoda/Container.java",
            "additions": 65,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,65 @@\n+package com.novoda;\n+\n+import android.app.TabActivity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.text.style.SuperscriptSpan;\n+import android.util.Log;\n+import android.widget.TabHost;\n+\n+public class Container extends TabActivity{\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\n+\t\thost = getTabHost();\n+\t\tIntent intent = new Intent(this, Tab1Activity.class);\n+\t\thost.addTab(host.newTabSpec(\"one\").setIndicator(\"TAB1\").setContent(intent));\n+\t\tintent = new Intent(this, Tab2Activity.class);\n+\t\thost.addTab(host.newTabSpec(\"two\").setIndicator(\"TAB2\").setContent(intent));\n+\t}\n+\t\n+\t@Override\n+\tprotected void onResume() {\n+\t\tsuper.onResume();\n+\t\treceiver = new TabChangeReceiver();\n+\t\tregisterReceiver(receiver, new IntentFilter(\"com.novoda.TAB\"), null, mHandler);\n+\t}\n+\t\n+\t@Override\n+\tprotected void onPause() {\n+\t\tsuper.onPause();\n+\t\tunregisterReceiver(receiver);\n+\t};\n+\t\n+    protected Handler mHandler = new Handler() {\n+        @Override public void handleMessage(Message msg) {\n+            switch (msg.what) {\n+            \tcase SWITCH_TAB:\n+            \t\tLog.i(\"handler\", \"using the handler\");\n+                    host.setCurrentTab(msg.arg1);            \t\t\n+            \t\tbreak;\n+            }\n+        }\n+    };\n+\n+    public class TabChangeReceiver extends android.content.BroadcastReceiver{\n+\t\t@Override\n+\t\tpublic void onReceive(Context context, Intent intent) {\n+\t\t\tint intExtra = intent.getIntExtra(\"tab\", 0);\n+\t\t\tLog.i(TabChangeReceiver.class.getSimpleName(), \"Recieved broadcast with extra=[\" + intExtra + \"]\");\n+\t\t\t\n+\t\t\tmHandler.sendMessage(mHandler.obtainMessage(SWITCH_TAB, intExtra, 0));\n+\t\t}\n+\t}\n+\t\n+\tprivate TabHost host;\n+\tpublic static final int SWITCH_TAB = 2545;\n+\tprotected static TabChangeReceiver receiver;\n+\t\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/com/novoda/Tab1Activity.java",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+\n+public class Tab1Activity extends Activity{\n+\t\n+\t@Override\n+\tprotected void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+        setContentView(R.layout.tab1);\n+        findViewById(R.id.tab1button).setOnClickListener(new OnClickListener() {\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n+\t\t\t\tintent.putExtra(\"tab\", 1);\n+\t\t\t\tsendBroadcast(intent);\n+\t\t\t}\n+\t\t});\n+\t}\n+}\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostMultipleActivityBrowsing/src/com/novoda/Tab2Activity.java",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+\n+public class Tab2Activity extends Activity{\n+\t\n+\t@Override\n+\tprotected void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+        setContentView(R.layout.tab2);\n+        findViewById(R.id.tab2button).setOnClickListener(new OnClickListener() {\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n+\t\t\t\tintent.putExtra(\"tab\", 0);\n+\t\t\t\tsendBroadcast(intent);\n+\t\t\t}\n+\t\t});        \n+\t}\n+}\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/AndroidManifest.xml",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".SelfContainedTabHost\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/TabHostSelfContainedTabBrowsing/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/res/layout/tabhost_container.xml",
            "additions": 59,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,59 @@\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\">\n+\n+    <TabHost\n+    \tandroid:id=\"@+id/tabhost\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"fill_parent\">\n+\n+    \t<TabWidget\n+    \t\tandroid:id=\"@android:id/tabs\"\n+        \tandroid:layout_width=\"fill_parent\"\n+        \tandroid:layout_height=\"105px\"/>\n+\n+    \t<FrameLayout\n+    \t\tandroid:id=\"@android:id/tabcontent\"\n+        \tandroid:layout_width=\"fill_parent\"\n+        \tandroid:layout_height=\"fill_parent\"\n+        \tandroid:paddingTop=\"65px\">\n+\n+\n+\t\t\t<LinearLayout\n+\t\t\t\tandroid:id=\"@+id/tab1content\"\n+\t\t\t\tandroid:orientation=\"vertical\"\n+\t\t\t\tandroid:layout_width=\"fill_parent\"\n+\t\t\t\tandroid:layout_height=\"fill_parent\"\n+\t\t\t\tandroid:background=\"#00008B\">\n+\t\t\t\t\n+\t\t\t\t<!--  Put Tab 1 Views in here -->\n+\t\t\t\t<Button\n+\t\t\t\t\tandroid:id=\"@+id/tab1button\"\n+\t\t\t\t\tandroid:layout_width=\"fill_parent\"\n+\t\t\t\t\tandroid:layout_height=\"wrap_content\"\n+\t\t\t\t\tandroid:text=\"Open Tab #2\" />\n+\t\t\t\t<!--  END Tab 1 Views -->\t\t\t\t\n+\t\t\t\t\n+\t\t\t</LinearLayout>\n+\n+\t\t\t<LinearLayout\n+\t\t\t\tandroid:id=\"@+id/tab2content\"\n+\t\t\t\tandroid:orientation=\"vertical\"\n+\t\t\t\tandroid:layout_width=\"fill_parent\"\n+\t\t\t\tandroid:layout_height=\"fill_parent\"\n+\t\t\t\tandroid:background=\"#FFFF00\">\n+\n+\t\t\t\t<!--  Put Tab 2 Views in here -->\n+\t\t\t\t<Button\n+\t\t\t\t\tandroid:id=\"@+id/tab2button\"\n+\t\t\t\t\tandroid:layout_width=\"fill_parent\"\n+\t\t\t\t\tandroid:layout_height=\"wrap_content\"\n+\t\t\t\t\tandroid:text=\"Open Tab #1\" />\n+\t\t\t\t<!--  END Tab 2 Views -->\t\n+\t\t\t\t\n+\t\t\t</LinearLayout>\n+\t\t\t\n+\t\t\t\n+\t\t</FrameLayout>\n+\t</TabHost>\t\t\t\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, TabHostActivity!</string>\n+    <string name=\"app_name\">TabHostExample</string>\n+</resources>\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "TabHostSelfContainedTabBrowsing/src/com/novoda/SelfContainedTabHost.java",
            "additions": 86,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,86 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.widget.TabHost;\n+\n+public class SelfContainedTabHost extends Activity {\n+\t\n+\t@Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.tabhost_container);\n+\n+        tabHost = (TabHost)this.findViewById(R.id.tabhost);\n+        tabHost.setup();\n+\n+        tabHost.addTab(tabHost.newTabSpec(\"one\").setContent(R.id.tab1content).setIndicator(\"TAB 1\"));\n+        tabHost.addTab(tabHost.newTabSpec(\"two\").setContent(R.id.tab2content).setIndicator(\"TAB 2\"));\n+        tabHost.findViewById(R.id.tab1button).setOnClickListener(goToTab2());\n+        tabHost.findViewById(R.id.tab2button).setOnClickListener(goToTab1());\n+    }\n+\t\n+\t@Override\n+\tprotected void onResume() {\n+\t\tsuper.onResume();\n+\t\treceiver = new TabChangeReceiver();\n+\t\tregisterReceiver(receiver, new IntentFilter(\"com.novoda.TAB\"), null, mHandler);\n+\t}\n+\t\n+\t@Override\n+\tprotected void onPause() {\n+\t\tsuper.onPause();\n+\t\tunregisterReceiver(receiver);\n+\t};\n+\t\n+    protected Handler mHandler = new Handler() {\n+        @Override public void handleMessage(Message msg) {\n+            switch (msg.what) {\n+            \tcase SWITCH_TAB:\n+                    tabHost.setCurrentTab(msg.arg1);            \t\t\n+            \t\tbreak;\n+            }\n+        }\n+    };\n+\n+    public class TabChangeReceiver extends android.content.BroadcastReceiver{\n+\t\t@Override\n+\t\tpublic void onReceive(Context context, Intent intent) {\n+\t\t\tint intExtra = intent.getIntExtra(\"tab\", 0);\n+\t\t\tLog.i(TabChangeReceiver.class.getSimpleName(), \"Recieved broadcast with extra=[\" + intExtra + \"]\");\n+\t\t\tmHandler.sendMessage(mHandler.obtainMessage(SWITCH_TAB, intExtra, 0));\n+\t\t}\n+\t}\n+\n+\tprivate OnClickListener goToTab1() {\n+\t\treturn new View.OnClickListener() {\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n+\t\t\t\tintent.putExtra(\"tab\", 0);\n+\t\t\t\tsendBroadcast(intent);\n+\t\t\t}\n+\t\t};\n+\t}\t\n+\t\n+\tprivate OnClickListener goToTab2() {\n+\t\treturn new View.OnClickListener() {\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tIntent intent = new Intent(\"com.novoda.TAB\");\n+\t\t\t\tintent.putExtra(\"tab\", 1);\n+\t\t\t\tsendBroadcast(intent);\n+\t\t\t}\n+\t\t};\n+\t}\n+\t\n+\tprivate TabHost tabHost;\n+\tpublic static final int SWITCH_TAB = 2545;\n+\tprotected static TabChangeReceiver receiver;\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/._.DS_Store",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/simperAudioStreamer/._.DS_Store differ\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/res/._.DS_Store",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/simperAudioStreamer/res/._.DS_Store differ\n"
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/res/layout/player_interface.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/novoda/audio/StreamerInterface.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/novoda/audio/service/AudioStreamService.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/novoda/audio/service/IAudioStreamService.aidl",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/.classpath",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/.project",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/Constants.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$style.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS$1.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS$ContactListAdapter.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsDeliveredReciever.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsReceiver.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsSentReciever.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/bin/sms.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/default.properties",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/gen/com/novoda/sms/R.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/res/layout/poll_choice.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/res/layout/poll_new_choice.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/res/layout/poll_question.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/res/layout/poll_voters.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/res/layout/sms.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/res/values/styles.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/Constants.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/SMS.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/SmsDeliveredReciever.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/SmsReceiver.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/SmsSentReciever.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/AndroidManifest.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/res/layout/step1.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/res/layout/step2.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/res/layout/step3.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/res/layout/wizard.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/res/values/strings.xml",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/src/com/novoda/Step1.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/src/com/novoda/Step2.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/src/com/novoda/Step3.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "50f553d56eed05236d7032c9b51fafa14066c323",
        "previous commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "diff stats": {
            "file_path": "wizard/src/com/novoda/Wizard.java",
            "additions": 0,
            "deletions": 0
        },
        "diff content": ""
    },
    {
        "commit hash": "041343ebba8ae0e22148fbce0c86c2ee67e85673",
        "previous commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/novoda/audio/service/Improved.java",
            "additions": 0,
            "deletions": 154
        },
        "diff content": "@@ -1,154 +0,0 @@\n-package novoda.audio.service;\n-\n-public class Improved {\n-\n-//    package novoda.audio.service;\n-//\n-//    import java.io.IOException;\n-//    import java.sql.Time;\n-//\n-//    import android.app.Service;\n-//    import android.content.Intent;\n-//    import android.media.AudioManager;\n-//    import android.media.MediaPlayer;\n-//    import android.media.MediaPlayer.OnBufferingUpdateListener;\n-//    import android.media.MediaPlayer.OnCompletionListener;\n-//    import android.media.MediaPlayer.OnErrorListener;\n-//    import android.media.MediaPlayer.OnPreparedListener;\n-//    import android.os.IBinder;\n-//    import android.os.RemoteException;\n-//    import android.util.Log;\n-//\n-//    public class AudioStreamService extends Service implements OnCompletionListener, OnPreparedListener, OnBufferingUpdateListener, OnErrorListener {\n-//\n-//        public AudioStreamService() {\n-//            mAudioSrvState = NOT_PLAYING;\n-//            mMediaPlayer = new MediaPlayer();\n-//            mMediaPlayer.setOnBufferingUpdateListener(this);\n-//            mMediaPlayer.setOnCompletionListener(this);\n-//            mMediaPlayer.setOnPreparedListener(this);\n-//            mMediaPlayer.setOnErrorListener(this);\n-//            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC); \n-//        }\n-//        \n-//        public IBinder onBind(Intent intent) {\n-//            return mSrvBinding;\n-//        }\n-//        \n-//        public void onPrepared(MediaPlayer mp) {\n-//            mAudioSrvState = PLAYING;\n-//            Time duration = new Time(mp.getDuration());\n-//            Log.v(TAG, \"Prepared mediaplayer for track of duration =[\"+duration+\"]\");\n-//            mMediaPlayer.start();\n-//        }\n-//        \n-//        public void onBufferingUpdate(MediaPlayer mp, int percent) {\n-//            Log.v(TAG, \"Buffered additional=[\"+percent+\"%]\");\n-//            mAudioSrvState = BUFFERING;\n-//        }\n-//        \n-//        public void onCompletion(MediaPlayer mp) {\n-//            Log.i(TAG, \"Completed playback\");\n-//            mMediaPlayer.stop();\n-//            mMediaPlayer.reset();\n-//            mAudioSrvState = NOT_PLAYING;\n-//        }\n-//        \n-//        public boolean onError(MediaPlayer mp, int what, int extra) {\n-//            switch(what){\n-//                case MediaPlayer.MEDIA_ERROR_UNKNOWN:\n-//                    Log.e(TAG, \"unknown media error what=[\"+what+\"] extra=[\"+extra+\"]\");\n-//                    break;\n-//                case MediaPlayer.MEDIA_ERROR_SERVER_DIED:\n-//                    Log.e(TAG, \"Streaming source Server died what=[\"+what+\"] extra=[\"+extra+\"]\");\n-//                    break;\n-//                default:\n-//                    Log.e(TAG, \"Default Problems what=[\"+ what +\"] extra=[\"+extra+\"]\");\n-//            }\n-//            return false;\n-//        }\n-//        \n-//        public void play(String audioTrackURL) {\n-//            Log.i(TAG, \"Playing track at URL=[\"+audioTrackURL+\"]\");\n-//            mAudioTrackURL = audioTrackURL;\n-//\n-//            if (mAudioSrvState == NOT_PLAYING) {\n-//                try {\n-//                    mMediaPlayer.setDataSource(mAudioTrackURL);\n-//                    mMediaPlayer.prepareAsync();\n-//                } catch (IllegalArgumentException e) {\n-//                    Log.e(TAG, \"AudioTrackUrl seems to be incorrectly formatted\",e);\n-//                } catch (IllegalStateException e) {\n-//                    Log.e(TAG, \"MediaPlayer is in an illegal state\",e);\n-//                } catch (IOException e) {\n-//                    Log.e(TAG, \"MediaPlayer failed due to exception\",e);\n-//                }\n-//            }\n-//            \n-//        }\n-//        \n-//        public void stop() {\n-//            Log.i(TAG, \"Call to stop streaming audio\");\n-//\n-//            if (mMediaPlayer != null) {\n-//                if (mMediaPlayer.isPlaying()) {\n-//                    Log.i(TAG, \"media player was playing and is now Stopping\");\n-//                    mMediaPlayer.stop();\n-//                    mMediaPlayer.reset();\n-//                    mAudioSrvState = NOT_PLAYING;\n-//                }\n-//            }\n-//        }\n-//        \n-//        public String getFileName() {\n-//            return null;\n-//        }\n-//\n-//        public long getPosition() {\n-//            return 0;\n-//        }\n-//\n-//        public int getState() {\n-//            return mAudioSrvState;\n-//        }\n-//\n-//        private final IAudioStreamService.Stub mSrvBinding = new IAudioStreamService.Stub() {\n-//\n-//            public void play(String url) throws RemoteException {\n-//                AudioStreamService.this.play(url);\n-//            }\n-//\n-//            public String getFileName() {\n-//                return AudioStreamService.this.getFileName();\n-//            }\n-//\n-//            public long getCurrPlayingPosition() {\n-//                return AudioStreamService.this.getPosition();\n-//            }\n-//\n-//            public int getState() {\n-//                return AudioStreamService.this.getState();\n-//            }\n-//\n-//            public void stop() {\n-//                AudioStreamService.this.stop();\n-//            }\n-//        };\n-//\n-//        public static final int NOT_PLAYING = 0;\n-//\n-//        public static final int PLAYING = 1;\n-//\n-//        public static final int BUFFERING = 2;\n-//\n-//        public static final String TAG = \"[AudioStreamService]\";\n-//\n-//        private int mAudioSrvState;\n-//\n-//        private MediaPlayer mMediaPlayer;\n-//\n-//        private String mAudioTrackURL;\n-//\n-//    }\n-\n-}\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/AndroidManifest.xml",
            "additions": 7,
            "deletions": 2
        },
        "diff content": "@@ -3,7 +3,9 @@\n       package=\"com.novoda\"\n       android:versionCode=\"1\"\n       android:versionName=\"1.0\">\n+    \n     <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        \n         <activity android:name=\".Container\"\n                   android:label=\"@string/app_name\">\n             <intent-filter>\n@@ -11,8 +13,11 @@\n                 <category android:name=\"android.intent.category.LAUNCHER\" />\n             </intent-filter>\n         </activity>\n+    \n     <activity android:name=\"Tab1Activity\"></activity>\n-<activity android:name=\"Tab2Activity\"></activity>\n-</application>\n+\n+\t<activity android:name=\"Tab2Activity\"></activity>\n+\t\n+\t</application>\n     <uses-sdk android:minSdkVersion=\"3\" />\n </manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "simperAudioStreamer/AndroidManifest.xml",
            "additions": 36,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"novoda.audio\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+      \n+    <uses-permission android:name=\"android.permission.INTERNET\"/>\n+    <uses-sdk android:minSdkVersion=\"4\" />\n+    \n+    <application \n+    \tandroid:icon=\"@drawable/icon\"\n+    \tandroid:label=\"Simple Audio Streamer\">\n+    \t\n+        <activity\n+        \tandroid:name=\".StreamerInterface\" \n+        \tandroid:label=\"Audio Streaming example\">\n+            \n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+            \n+            <intent-filter>\n+     \t\t\t<action android:name=\"android.intent.action.VIEW\" />\n+     \t\t\t<action android:name=\"android.intent.action.BROWSABLE\" />\n+     \t\t\t<category android:name=\"android.intent.category.DEFAULT\" />\n+     \t\t\t<data android:mimeType=\"application/pls\" />\n+ \t\t\t\t<data android:mimeType=\"audio/x-scpls\" />\n+ \t\t\t\t<data android:mimeType=\"audio/x-mpegurl\" />\n+ \t\t\t</intent-filter>\n+        </activity>\n+        \n+    \t<service android:exported=\"true\" android:name=\".service.AudioStreamService\" android:enabled=\"true\"></service>\n+    </application>\n+\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "simperAudioStreamer/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/simperAudioStreamer/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "simperAudioStreamer/res/layout/player_interface.xml",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout \n+\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:orientation=\"vertical\" \n+\tandroid:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\">\n+\n+\t<Button \n+\t\tandroid:id=\"@+id/btnIFM2\" \n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:text=\"Intergalactic FM 2 - Classix\"\n+\t\tandroid:textStyle=\"bold\" />\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "simperAudioStreamer/res/values/strings.xml",
            "additions": 9,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    \n+    <string name=\"app_name\">AudioStreamer</string>\n+    \n+    \n+    \n+    \n+</resources>\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/novoda/audio/StreamerInterface.java",
            "additions": 93,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,93 @@\n+\n+package novoda.audio;\n+\n+import java.net.URL;\n+\n+import novoda.audio.service.AudioStreamService;\n+import novoda.audio.service.IAudioStreamService;\n+import android.app.Activity;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.ServiceConnection;\n+import android.media.AudioManager;\n+import android.os.Bundle;\n+import android.os.IBinder;\n+import android.os.RemoteException;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.widget.Button;\n+import android.widget.TextView;\n+\n+public class StreamerInterface extends Activity {\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.player_interface);\n+        mAppContext = getApplicationContext();\n+        setVolumeControlStream(AudioManager.STREAM_MUSIC);\n+        bindService(new Intent(mAppContext, AudioStreamService.class), mSrvConnection,\n+                Context.BIND_AUTO_CREATE);\n+\n+        mbtn_Ifm2 = (Button)findViewById(R.id.btnIFM2);\n+        mbtn_Ifm2.setOnClickListener(getIFM1clickListener());\n+    }\n+\n+    private ServiceConnection mSrvConnection = new ServiceConnection() {\n+        public void onServiceConnected(ComponentName classname, IBinder service) {\n+            mAudioPlayerSrv = IAudioStreamService.Stub.asInterface(service);\n+        }\n+\n+        public void onServiceDisconnected(ComponentName name) {\n+            mAudioPlayerSrv = null;\n+        }\n+    };\n+\n+    private OnClickListener getIFM1clickListener() {\n+        return new OnClickListener() {\n+            int state = 9999999;\n+\n+            public void onClick(View v) {\n+                if (mAudioPlayerSrv == null) {\n+                    return;\n+                }\n+\n+                try {\n+                    state = mAudioPlayerSrv.getState();\n+\n+                    if (state == AudioStreamService.NOT_PLAYING) {\n+                        Log.i(TAG, \"Media Player state is NOT_PLAYING\" );\n+                        mAudioPlayerSrv.play(IFM2);\n+                    } else {\n+                        mAudioPlayerSrv.stop();\n+                    }\n+\n+                    if (state == AudioStreamService.PLAYING) {\n+                        Log.i(TAG, \"Media Player state is PLAYING\" );\n+                        mAudioPlayerSrv.stop();\n+                    }\n+\n+                } catch (RemoteException e) {\n+                    Log.e(TAG, \"Error connecting to AudioService: \", e);\n+                }\n+\n+            }\n+        };\n+    }\n+\n+    public Context mAppContext;\n+\n+    public static final String TAG = \"[StreamerInterface]\";\n+\n+    private static final String IFM2 = \"http://radio.intergalacticfm.com/2\";\n+    \n+    public IAudioStreamService mAudioPlayerSrv = null;\n+\n+    public URL mTrackUrl;\n+\n+    private TextView mbtn_Ifm2;\n+\n+\n+}\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/novoda/audio/service/AudioStreamService.java",
            "additions": 148,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,148 @@\n+    package novoda.audio.service;\n+\n+    import java.io.IOException;\n+    import java.sql.Time;\n+\n+    import android.app.Service;\n+    import android.content.Intent;\n+    import android.media.AudioManager;\n+    import android.media.MediaPlayer;\n+    import android.media.MediaPlayer.OnBufferingUpdateListener;\n+    import android.media.MediaPlayer.OnCompletionListener;\n+    import android.media.MediaPlayer.OnErrorListener;\n+    import android.media.MediaPlayer.OnPreparedListener;\n+    import android.os.IBinder;\n+    import android.os.RemoteException;\n+    import android.util.Log;\n+\n+    public class AudioStreamService extends Service implements OnCompletionListener, OnPreparedListener, OnBufferingUpdateListener, OnErrorListener {\n+\n+        public AudioStreamService() {\n+            mAudioSrvState = NOT_PLAYING;\n+            mMediaPlayer = new MediaPlayer();\n+            mMediaPlayer.setOnBufferingUpdateListener(this);\n+            mMediaPlayer.setOnCompletionListener(this);\n+            mMediaPlayer.setOnPreparedListener(this);\n+            mMediaPlayer.setOnErrorListener(this);\n+            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC); \n+        }\n+        \n+        public IBinder onBind(Intent intent) {\n+            return mSrvBinding;\n+        }\n+        \n+        public void onPrepared(MediaPlayer mp) {\n+            mAudioSrvState = PLAYING;\n+            Time duration = new Time(mp.getDuration());\n+            Log.v(TAG, \"Prepared mediaplayer for track of duration =[\"+duration+\"]\");\n+            mMediaPlayer.start();\n+        }\n+        \n+        public void onBufferingUpdate(MediaPlayer mp, int percent) {\n+            Log.v(TAG, \"Buffered additional=[\"+percent+\"%]\");\n+            mAudioSrvState = BUFFERING;\n+        }\n+        \n+        public void onCompletion(MediaPlayer mp) {\n+            Log.i(TAG, \"Completed playback\");\n+            mMediaPlayer.stop();\n+            mMediaPlayer.reset();\n+            mAudioSrvState = NOT_PLAYING;\n+        }\n+        \n+        public boolean onError(MediaPlayer mp, int what, int extra) {\n+            switch(what){\n+                case MediaPlayer.MEDIA_ERROR_UNKNOWN:\n+                    Log.e(TAG, \"unknown media error what=[\"+what+\"] extra=[\"+extra+\"]\");\n+                    break;\n+                case MediaPlayer.MEDIA_ERROR_SERVER_DIED:\n+                    Log.e(TAG, \"Streaming source Server died what=[\"+what+\"] extra=[\"+extra+\"]\");\n+                    break;\n+                default:\n+                    Log.e(TAG, \"Default Problems what=[\"+ what +\"] extra=[\"+extra+\"]\");\n+            }\n+            return false;\n+        }\n+        \n+        public void play(String audioTrackURL) {\n+            Log.i(TAG, \"Playing track at URL=[\"+audioTrackURL+\"]\");\n+            mAudioTrackURL = audioTrackURL;\n+\n+            if (mAudioSrvState == NOT_PLAYING) {\n+                try {\n+                    mMediaPlayer.setDataSource(mAudioTrackURL);\n+                    mMediaPlayer.prepareAsync();\n+                } catch (IllegalArgumentException e) {\n+                    Log.e(TAG, \"AudioTrackUrl seems to be incorrectly formatted\",e);\n+                } catch (IllegalStateException e) {\n+                    Log.e(TAG, \"MediaPlayer is in an illegal state\",e);\n+                } catch (IOException e) {\n+                    Log.e(TAG, \"MediaPlayer failed due to exception\",e);\n+                }\n+            }\n+            \n+        }\n+        \n+        public void stop() {\n+            Log.i(TAG, \"Call to stop streaming audio\");\n+\n+            if (mMediaPlayer != null) {\n+                if (mMediaPlayer.isPlaying()) {\n+                    Log.i(TAG, \"media player was playing and is now Stopping\");\n+                    mMediaPlayer.stop();\n+                    mMediaPlayer.reset();\n+                    mAudioSrvState = NOT_PLAYING;\n+                }\n+            }\n+        }\n+        \n+        public String getFileName() {\n+            return null;\n+        }\n+\n+        public long getPosition() {\n+            return 0;\n+        }\n+\n+        public int getState() {\n+            return mAudioSrvState;\n+        }\n+\n+        private final IAudioStreamService.Stub mSrvBinding = new IAudioStreamService.Stub() {\n+\n+            public void play(String url) throws RemoteException {\n+                AudioStreamService.this.play(url);\n+            }\n+\n+            public String getFileName() {\n+                return AudioStreamService.this.getFileName();\n+            }\n+\n+            public long getCurrPlayingPosition() {\n+                return AudioStreamService.this.getPosition();\n+            }\n+\n+            public int getState() {\n+                return AudioStreamService.this.getState();\n+            }\n+\n+            public void stop() {\n+                AudioStreamService.this.stop();\n+            }\n+        };\n+\n+        public static final int NOT_PLAYING = 0;\n+\n+        public static final int PLAYING = 1;\n+\n+        public static final int BUFFERING = 2;\n+\n+        public static final String TAG = \"[AudioStreamService]\";\n+\n+        private int mAudioSrvState;\n+\n+        private MediaPlayer mMediaPlayer;\n+\n+        private String mAudioTrackURL;\n+\n+    }\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/novoda/audio/service/IAudioStreamService.aidl",
            "additions": 10,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,10 @@\n+package novoda.audio.service;\n+\n+interface IAudioStreamService\n+{\n+\tvoid play(String url);\n+\tString getFileName();\n+\tlong getCurrPlayingPosition();\n+\tvoid stop();\n+\tint getState();\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "87d02ad8b043fee5b5d8f3761d5bfc24f8367430",
        "previous commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "diff stats": {
            "file_path": "simperAudioStreamer/src/novoda/audio/service/Improved.java",
            "additions": 154,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,154 @@\n+package novoda.audio.service;\n+\n+public class Improved {\n+\n+//    package novoda.audio.service;\n+//\n+//    import java.io.IOException;\n+//    import java.sql.Time;\n+//\n+//    import android.app.Service;\n+//    import android.content.Intent;\n+//    import android.media.AudioManager;\n+//    import android.media.MediaPlayer;\n+//    import android.media.MediaPlayer.OnBufferingUpdateListener;\n+//    import android.media.MediaPlayer.OnCompletionListener;\n+//    import android.media.MediaPlayer.OnErrorListener;\n+//    import android.media.MediaPlayer.OnPreparedListener;\n+//    import android.os.IBinder;\n+//    import android.os.RemoteException;\n+//    import android.util.Log;\n+//\n+//    public class AudioStreamService extends Service implements OnCompletionListener, OnPreparedListener, OnBufferingUpdateListener, OnErrorListener {\n+//\n+//        public AudioStreamService() {\n+//            mAudioSrvState = NOT_PLAYING;\n+//            mMediaPlayer = new MediaPlayer();\n+//            mMediaPlayer.setOnBufferingUpdateListener(this);\n+//            mMediaPlayer.setOnCompletionListener(this);\n+//            mMediaPlayer.setOnPreparedListener(this);\n+//            mMediaPlayer.setOnErrorListener(this);\n+//            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC); \n+//        }\n+//        \n+//        public IBinder onBind(Intent intent) {\n+//            return mSrvBinding;\n+//        }\n+//        \n+//        public void onPrepared(MediaPlayer mp) {\n+//            mAudioSrvState = PLAYING;\n+//            Time duration = new Time(mp.getDuration());\n+//            Log.v(TAG, \"Prepared mediaplayer for track of duration =[\"+duration+\"]\");\n+//            mMediaPlayer.start();\n+//        }\n+//        \n+//        public void onBufferingUpdate(MediaPlayer mp, int percent) {\n+//            Log.v(TAG, \"Buffered additional=[\"+percent+\"%]\");\n+//            mAudioSrvState = BUFFERING;\n+//        }\n+//        \n+//        public void onCompletion(MediaPlayer mp) {\n+//            Log.i(TAG, \"Completed playback\");\n+//            mMediaPlayer.stop();\n+//            mMediaPlayer.reset();\n+//            mAudioSrvState = NOT_PLAYING;\n+//        }\n+//        \n+//        public boolean onError(MediaPlayer mp, int what, int extra) {\n+//            switch(what){\n+//                case MediaPlayer.MEDIA_ERROR_UNKNOWN:\n+//                    Log.e(TAG, \"unknown media error what=[\"+what+\"] extra=[\"+extra+\"]\");\n+//                    break;\n+//                case MediaPlayer.MEDIA_ERROR_SERVER_DIED:\n+//                    Log.e(TAG, \"Streaming source Server died what=[\"+what+\"] extra=[\"+extra+\"]\");\n+//                    break;\n+//                default:\n+//                    Log.e(TAG, \"Default Problems what=[\"+ what +\"] extra=[\"+extra+\"]\");\n+//            }\n+//            return false;\n+//        }\n+//        \n+//        public void play(String audioTrackURL) {\n+//            Log.i(TAG, \"Playing track at URL=[\"+audioTrackURL+\"]\");\n+//            mAudioTrackURL = audioTrackURL;\n+//\n+//            if (mAudioSrvState == NOT_PLAYING) {\n+//                try {\n+//                    mMediaPlayer.setDataSource(mAudioTrackURL);\n+//                    mMediaPlayer.prepareAsync();\n+//                } catch (IllegalArgumentException e) {\n+//                    Log.e(TAG, \"AudioTrackUrl seems to be incorrectly formatted\",e);\n+//                } catch (IllegalStateException e) {\n+//                    Log.e(TAG, \"MediaPlayer is in an illegal state\",e);\n+//                } catch (IOException e) {\n+//                    Log.e(TAG, \"MediaPlayer failed due to exception\",e);\n+//                }\n+//            }\n+//            \n+//        }\n+//        \n+//        public void stop() {\n+//            Log.i(TAG, \"Call to stop streaming audio\");\n+//\n+//            if (mMediaPlayer != null) {\n+//                if (mMediaPlayer.isPlaying()) {\n+//                    Log.i(TAG, \"media player was playing and is now Stopping\");\n+//                    mMediaPlayer.stop();\n+//                    mMediaPlayer.reset();\n+//                    mAudioSrvState = NOT_PLAYING;\n+//                }\n+//            }\n+//        }\n+//        \n+//        public String getFileName() {\n+//            return null;\n+//        }\n+//\n+//        public long getPosition() {\n+//            return 0;\n+//        }\n+//\n+//        public int getState() {\n+//            return mAudioSrvState;\n+//        }\n+//\n+//        private final IAudioStreamService.Stub mSrvBinding = new IAudioStreamService.Stub() {\n+//\n+//            public void play(String url) throws RemoteException {\n+//                AudioStreamService.this.play(url);\n+//            }\n+//\n+//            public String getFileName() {\n+//                return AudioStreamService.this.getFileName();\n+//            }\n+//\n+//            public long getCurrPlayingPosition() {\n+//                return AudioStreamService.this.getPosition();\n+//            }\n+//\n+//            public int getState() {\n+//                return AudioStreamService.this.getState();\n+//            }\n+//\n+//            public void stop() {\n+//                AudioStreamService.this.stop();\n+//            }\n+//        };\n+//\n+//        public static final int NOT_PLAYING = 0;\n+//\n+//        public static final int PLAYING = 1;\n+//\n+//        public static final int BUFFERING = 2;\n+//\n+//        public static final String TAG = \"[AudioStreamService]\";\n+//\n+//        private int mAudioSrvState;\n+//\n+//        private MediaPlayer mMediaPlayer;\n+//\n+//        private String mAudioTrackURL;\n+//\n+//    }\n+\n+}\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/AndroidManifest.xml",
            "additions": 34,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tpackage=\"com.novoda\" android:versionCode=\"1\" android:versionName=\"1.0\">\n+\t<application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+\t\t<activity android:name=\".Wizard\" android:label=\"@string/app_name\">\n+\t\t\t<intent-filter>\n+\t\t\t\t<action android:name=\"android.intent.action.MAIN\" />\n+\t\t\t\t<category android:name=\"android.intent.category.LAUNCHER\" />\n+\t\t\t</intent-filter>\n+\t\t</activity>\n+\n+\t\t<activity android:name=\".Step1\" android:label=\"Step1\">\n+\t\t\t<intent-filter>\n+\t\t\t\t<action android:name=\"com.novoda.STEP1\" />\n+\t\t\t\t<category android:name=\"android.intent.category.DEFAULT\" />\n+\t\t\t</intent-filter>\n+\t\t</activity>\n+\n+\t\t<activity android:name=\".Step2\" android:label=\"Step2\">\n+\t\t\t<intent-filter>\n+\t\t\t\t<action android:name=\"com.novoda.STEP2\" />\n+\t\t\t\t<category android:name=\"android.intent.category.DEFAULT\" />\n+\t\t\t</intent-filter>\n+\t\t</activity>\n+\n+\t\t<activity android:name=\".Step3\" android:label=\"Step3\">\n+\t\t\t<intent-filter>\n+\t\t\t\t<action android:name=\"com.novoda.STEP3\" />\n+\t\t\t\t<category android:name=\"android.intent.category.DEFAULT\" />\n+\t\t\t</intent-filter>\n+\t\t</activity>\n+\t</application>\n+\t<uses-sdk android:minSdkVersion=\"3\" />\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/wizard/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/res/layout/step1.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:orientation=\"vertical\" android:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\">\n+\n+\t<EditText android:id=\"@+id/step1value\" android:layout_width=\"wrap_content\"\n+\t\tandroid:layout_height=\"wrap_content\"></EditText>\n+\n+\t<Button android:text=\"Next &gt;\" android:id=\"@+id/goto2\"\n+\t\tandroid:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"></Button>\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/res/layout/step2.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:orientation=\"vertical\" android:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\">\n+\n+\t<EditText android:id=\"@+id/step2value\" android:layout_width=\"wrap_content\"\n+\t\tandroid:layout_height=\"wrap_content\"></EditText>\n+\n+\t<Button android:text=\"Next &gt;\" android:id=\"@+id/goto3\"\n+\t\tandroid:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"></Button>\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/res/layout/step3.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:orientation=\"vertical\" android:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\">\n+\n+\t<EditText android:id=\"@+id/step3value\" android:layout_width=\"wrap_content\"\n+\t\tandroid:layout_height=\"wrap_content\"></EditText>\n+\n+\t<Button android:text=\"Finish\" android:id=\"@+id/goToFinish\"\n+\t\tandroid:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"></Button>\n+\n+</LinearLayout>\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/res/layout/wizard.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:orientation=\"vertical\" android:layout_width=\"fill_parent\"\n+\tandroid:layout_height=\"fill_parent\">\n+\t\n+\t<TextView android:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\" android:text=\"Each line is an activity result:\" />\n+\t\t\n+\t<TextView android:text=\"Step1Result\" android:id=\"@+id/step1result\"\n+\t\tandroid:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"></TextView>\n+\t\t\n+\t<TextView android:text=\"Step2Result\" android:id=\"@+id/step2result\"\n+\t\tandroid:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"></TextView>\n+\t\t\n+\t<TextView android:text=\"Step3Result\" android:id=\"@+id/step3result\"\n+\t\tandroid:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"></TextView>\n+\t\t\n+</LinearLayout>\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    \n+    <string name=\"app_name\">Wizard</string>\n+</resources>\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/src/com/novoda/Step1.java",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.EditText;\n+\n+public class Step1 extends Activity {\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.step1);\n+\n+        Button nextStep = (Button)findViewById(R.id.goto2);\n+        nextStep.setOnClickListener(new View.OnClickListener() {\n+            public void onClick(View v) {\n+                Intent it = new Intent();\n+                it.putExtra(\"STEP1RESULT\", ((EditText)findViewById(R.id.step1value)).getText()\n+                        .toString());\n+                setResult(Activity.RESULT_OK, it);\n+                finish();\n+            }\n+        });\n+    }\n+}\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/src/com/novoda/Step2.java",
            "additions": 28,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,28 @@\n+\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.EditText;\n+\n+public class Step2 extends Activity {\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.step2);\n+\n+        Button nextStep = (Button)findViewById(R.id.goto3);\n+        nextStep.setOnClickListener(new View.OnClickListener() {\n+            public void onClick(View v) {\n+                Intent it = new Intent();\n+                it.putExtra(\"STEP2RESULT\", ((EditText)findViewById(R.id.step2value)).getText()\n+                        .toString());\n+                setResult(Activity.RESULT_OK, it);\n+                finish();\n+            }\n+        });\n+    }\n+}\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/src/com/novoda/Step3.java",
            "additions": 28,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,28 @@\n+\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.EditText;\n+\n+public class Step3 extends Activity {\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.step3);\n+\n+        Button nextStep = (Button)findViewById(R.id.goToFinish);\n+        nextStep.setOnClickListener(new View.OnClickListener() {\n+            public void onClick(View v) {\n+                Intent it = new Intent();\n+                it.putExtra(\"STEP3RESULT\", ((EditText)findViewById(R.id.step3value)).getText()\n+                        .toString());\n+                setResult(Activity.RESULT_OK, it);\n+                finish();\n+            }\n+        });\n+    }\n+}\n"
    },
    {
        "commit hash": "55908966f4968a4c6c07a18d42ab963c87ac9ef9",
        "previous commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "diff stats": {
            "file_path": "wizard/src/com/novoda/Wizard.java",
            "additions": 48,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,48 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+public class Wizard extends Activity {\n+\n+    private TextView step1result, step2result, step3result;\n+\n+    public static final String INTENT_STEP1 = \"com.novoda.STEP1\";\n+    public static final String INTENT_STEP2 = \"com.novoda.STEP2\";\n+    public static final String INTENT_STEP3 = \"com.novoda.STEP3\";\n+\n+    private static final int STEP1 = 1;\n+    private static final int STEP2 = 2;\n+    private static final int STEP3 = 3;\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.wizard);\n+        \n+        this.step1result = (TextView)findViewById(R.id.step1result);\n+        this.step2result = (TextView)findViewById(R.id.step2result);\n+        this.step3result = (TextView)findViewById(R.id.step3result);  \n+        \n+        startActivityForResult(new Intent(Wizard.INTENT_STEP1), STEP1);        \n+    }\n+    \n+    \n+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n+        switch (requestCode) {\n+            case STEP1:\n+                this.step1result.setText(data.getStringExtra(\"STEP1RESULT\"));\n+                startActivityForResult(new Intent(Wizard.INTENT_STEP2), STEP2);    \n+                break;\n+            case STEP2:\n+                this.step2result.setText(data.getStringExtra(\"STEP2RESULT\"));\n+                startActivityForResult(new Intent(Wizard.INTENT_STEP3), STEP3);    \n+                break;\n+            case STEP3:\n+                this.step3result.setText(data.getStringExtra(\"STEP3RESULT\"));\n+                break;\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/AndroidManifest.xml",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".Container\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    <activity android:name=\"Tab1Activity\"></activity>\n+<activity android:name=\"Tab2Activity\"></activity>\n+</application>\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultpileActivityTabHost/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/layout/main.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+<TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"@string/hello\"\n+    />\n+</LinearLayout>\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/layout/tab1.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+<TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"tab1\"\n+    />\n+</LinearLayout>\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/layout/tab2.xml",
            "additions": 12,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+<TextView  \n+    android:layout_width=\"fill_parent\" \n+    android:layout_height=\"wrap_content\" \n+    android:text=\"tab2\"\n+    />\n+</LinearLayout>\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, Container!</string>\n+    <string name=\"app_name\">MultipleActivityTabHost</string>\n+</resources>\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/com/novoda/Container.java",
            "additions": 17,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,17 @@\n+package com.novoda;\n+\n+import android.app.TabActivity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.widget.TabHost;\n+\n+public class Container extends TabActivity {\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\n+\t\tTabHost host = getTabHost();\n+\t\thost.addTab(host.newTabSpec(\"one\").setIndicator(\"TAB1\").setContent(new Intent(this, Tab1Activity.class)));\n+\t\thost.addTab(host.newTabSpec(\"two\").setIndicator(\"TAB2\").setContent(new Intent(this, Tab2Activity.class)));\n+\t}\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/com/novoda/Tab1Activity.java",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+\n+public class Tab1Activity extends Activity{\n+\t\n+\t@Override\n+\tprotected void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+        setContentView(R.layout.tab1);\n+\t}\n+}\n"
    },
    {
        "commit hash": "309e81885d7e640d83ddb7c1637c796c360f7986",
        "previous commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "diff stats": {
            "file_path": "MultpileActivityTabHost/src/com/novoda/Tab2Activity.java",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+\n+public class Tab2Activity extends Activity{\n+\t\n+\t@Override\n+\tprotected void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+        setContentView(R.layout.tab2);\n+\t}\n+}\n"
    },
    {
        "commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "previous commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "diff stats": {
            "file_path": "long_press_menus/AndroidManifest.xml",
            "additions": 0,
            "deletions": 16
        },
        "diff content": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-      package=\"com.novoda\"\n-      android:versionCode=\"1\"\n-      android:versionName=\"1.0\">\n-    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n-        <activity android:name=\".LongPressList\"\n-                  android:label=\"@string/app_name\">\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity>\n-    </application>\n-    <uses-sdk android:minSdkVersion=\"3\" />\n-</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "previous commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "diff stats": {
            "file_path": "long_press_menus/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/long_press_menus/res/drawable/icon.png and /dev/null differ\n"
    },
    {
        "commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "previous commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "diff stats": {
            "file_path": "long_press_menus/res/layout/list.xml",
            "additions": 0,
            "deletions": 13
        },
        "diff content": "@@ -1,13 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:orientation=\"vertical\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\">\n-\n-  <ListView android:id=\"@+id/android:list\"\n-     android:layout_width=\"fill_parent\"\n-     android:layout_height=\"0px\">\n-     <requestFocus />\n-  </ListView>\n-\n-</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "previous commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "diff stats": {
            "file_path": "long_press_menus/res/layout/row.xml",
            "additions": 0,
            "deletions": 15
        },
        "diff content": "@@ -1,15 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"wrap_content\">\n-    \n-\n-\t<TextView android:id=\"@+id/row_title\"\n-      \tandroid:textSize=\"18sp\"\n-       \tandroid:layout_width=\"fill_parent\"\n-       \tandroid:layout_height=\"wrap_content\"/>\n-     \n-</LinearLayout>\n-\t\t\t\n-\t\t\t\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "previous commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "diff stats": {
            "file_path": "long_press_menus/res/values/strings.xml",
            "additions": 0,
            "deletions": 5
        },
        "diff content": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources>\n-    <string name=\"hello\">Hello World, LongPressList!</string>\n-    <string name=\"app_name\">LongPress</string>\n-</resources>\n"
    },
    {
        "commit hash": "444a2891844455766c35806c1376db03df058f5d",
        "previous commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "diff stats": {
            "file_path": "long_press_menus/src/com/novoda/LongPressList.java",
            "additions": 0,
            "deletions": 18
        },
        "diff content": "@@ -1,18 +0,0 @@\n-package com.novoda;\n-\n-import android.app.ListActivity;\n-import android.os.Bundle;\n-import android.widget.ArrayAdapter;\n-\n-public class LongPressList extends ListActivity {\n-\n-\tprivate String[]\tmStrings\t= { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\" };\n-\n-\t@Override\n-\tpublic void onCreate(Bundle savedInstanceState) {\n-\t\tsuper.onCreate(savedInstanceState);\n-\t\tsetContentView(R.layout.list);\n-\t\tsetListAdapter(new ArrayAdapter<String>(this, R.layout.row, mStrings));\n-\t\tgetListView().setTextFilterEnabled(true);\n-\t}\n-}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "TabHostExample/AndroidManifest.xml",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".SelfContainedTabHost\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "TabHostExample/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/TabHostExample/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "TabHostExample/res/layout/tabhost_container.xml",
            "additions": 46,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,46 @@\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\">\n+\n+    <TabHost\n+    \tandroid:id=\"@+id/tabhost\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"fill_parent\">\n+\n+    \t<TabWidget\n+    \t\tandroid:id=\"@android:id/tabs\"\n+        \tandroid:layout_width=\"fill_parent\"\n+        \tandroid:layout_height=\"105px\"/>\n+\n+    \t<FrameLayout\n+    \t\tandroid:id=\"@android:id/tabcontent\"\n+        \tandroid:layout_width=\"fill_parent\"\n+        \tandroid:layout_height=\"fill_parent\"\n+        \tandroid:paddingTop=\"65px\">\n+\n+\n+\t\t\t<LinearLayout\n+\t\t\t\tandroid:id=\"@+id/tab1content\"\n+\t\t\t\tandroid:orientation=\"vertical\"\n+\t\t\t\tandroid:layout_width=\"fill_parent\"\n+\t\t\t\tandroid:layout_height=\"fill_parent\"\n+\t\t\t\tandroid:background=\"#00008B\">\n+\t\t\t\t\n+\t\t\t\t<!--  Put Tab 1 Views in here -->\n+\t\t\t</LinearLayout>\n+\n+\t\t\t<LinearLayout\n+\t\t\t\tandroid:id=\"@+id/tab2content\"\n+\t\t\t\tandroid:orientation=\"vertical\"\n+\t\t\t\tandroid:layout_width=\"fill_parent\"\n+\t\t\t\tandroid:layout_height=\"fill_parent\"\n+\t\t\t\tandroid:background=\"#FFFF00\">\n+\n+\t\t\t\t<!--  Put Tab 2 Views in here -->\n+\t\t\t\t\n+\t\t\t</LinearLayout>\n+\t\t\t\n+\t\t\t\n+\t\t</FrameLayout>\n+\t</TabHost>\t\t\t\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "TabHostExample/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, TabHostActivity!</string>\n+    <string name=\"app_name\">TabHostExample</string>\n+</resources>\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "TabHostExample/src/com/novoda/SelfContainedTabHost.java",
            "additions": 29,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,29 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.widget.TabHost;\n+\n+public class SelfContainedTabHost extends Activity {\n+\n+\t@Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.tabhost_container);\n+\n+        TabHost tabs = (TabHost)this.findViewById(R.id.tabhost);\n+        tabs.setup();\n+\n+        TabHost.TabSpec one = tabs.newTabSpec(\"one\");\n+        one.setContent(R.id.tab1content);\n+        one.setIndicator(\"TAB 1\");\n+        tabs.addTab(one);\n+\n+        TabHost.TabSpec two = tabs.newTabSpec(\"two\");\n+        two.setContent(R.id.tab2content);\n+        two.setIndicator(\"TAB 2\");\n+        tabs.addTab(two);\n+\n+        tabs.setCurrentTab(0);\n+    }\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "long_press_menus/AndroidManifest.xml",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".LongPressList\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "long_press_menus/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/long_press_menus/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "long_press_menus/res/layout/list.xml",
            "additions": 13,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\">\n+\n+  <ListView android:id=\"@+id/android:list\"\n+     android:layout_width=\"fill_parent\"\n+     android:layout_height=\"0px\">\n+     <requestFocus />\n+  </ListView>\n+\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "long_press_menus/res/layout/row.xml",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"wrap_content\">\n+    \n+\n+\t<TextView android:id=\"@+id/row_title\"\n+      \tandroid:textSize=\"18sp\"\n+       \tandroid:layout_width=\"fill_parent\"\n+       \tandroid:layout_height=\"wrap_content\"/>\n+     \n+</LinearLayout>\n+\t\t\t\n+\t\t\t\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "long_press_menus/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, LongPressList!</string>\n+    <string name=\"app_name\">LongPress</string>\n+</resources>\n"
    },
    {
        "commit hash": "41c1ed721b284727ac73c556f433eb50b5872b5b",
        "previous commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "diff stats": {
            "file_path": "long_press_menus/src/com/novoda/LongPressList.java",
            "additions": 18,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,18 @@\n+package com.novoda;\n+\n+import android.app.ListActivity;\n+import android.os.Bundle;\n+import android.widget.ArrayAdapter;\n+\n+public class LongPressList extends ListActivity {\n+\n+\tprivate String[]\tmStrings\t= { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\" };\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tsetContentView(R.layout.list);\n+\t\tsetListAdapter(new ArrayAdapter<String>(this, R.layout.row, mStrings));\n+\t\tgetListView().setTextFilterEnabled(true);\n+\t}\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "previous commit hash": "f1ad7ea6916e1a5f472707ffe2d063520ae6bb43",
        "diff stats": {
            "file_path": "ContactSelector/AndroidManifest.xml",
            "additions": 20,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+      \n+    <uses-permission android:name=\"android.permission.READ_CONTACTS\" />\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+    \n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".ContactSelector\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+    \n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "previous commit hash": "f1ad7ea6916e1a5f472707ffe2d063520ae6bb43",
        "diff stats": {
            "file_path": "ContactSelector/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/ContactSelector/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "previous commit hash": "f1ad7ea6916e1a5f472707ffe2d063520ae6bb43",
        "diff stats": {
            "file_path": "ContactSelector/res/layout/main.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\">\n+    \n+\t<Button\n+\t\tandroid:id=\"@+id/btn_contacts\" \n+\t\tandroid:layout_marginLeft=\"8px\"\n+\t\tandroid:layout_width=\"60px\"\n+\t\tandroid:layout_height=\"60px\" />\n+\t\n+\t<TextView android:id=\"@+id/txt_contacts\" \n+\t\tandroid:textSize=\"24sp\"\n+\t\tandroid:layout_margin=\"8px\"\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\" />\n+\t\t\n+</LinearLayout>\n"
    },
    {
        "commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "previous commit hash": "f1ad7ea6916e1a5f472707ffe2d063520ae6bb43",
        "diff stats": {
            "file_path": "ContactSelector/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    \n+    <string name=\"app_name\">ContactSelector</string>\n+</resources>\n"
    },
    {
        "commit hash": "c74289991d15ba20ddff0f86ebc537bd29f11756",
        "previous commit hash": "f1ad7ea6916e1a5f472707ffe2d063520ae6bb43",
        "diff stats": {
            "file_path": "ContactSelector/src/com/novoda/ContactSelector.java",
            "additions": 54,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,54 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.database.Cursor;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.provider.Contacts.People;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.widget.Button;\n+import android.widget.TextView;\n+\n+public class ContactSelector extends Activity {\n+\tpublic static final int\tPICK_CONTACT\t= 1;\n+\tprivate Button\t\t\tbtnContacts;\n+\tprivate TextView\t\ttxtContacts;\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tsetContentView(R.layout.main);\n+\n+\t\tbtnContacts = (Button) findViewById(R.id.btn_contacts);\n+\t\ttxtContacts = (TextView) findViewById(R.id.txt_contacts);\n+\n+\t\tbtnContacts.setOnClickListener(new OnClickListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View arg0) {\n+\t\t\t\tIntent intent = new Intent(Intent.ACTION_PICK, People.CONTENT_URI);\n+\t\t\t\tstartActivityForResult(intent, PICK_CONTACT);\n+\t\t\t}\n+\t\t});\n+\t}\n+\n+\t@Override\n+\tpublic void onActivityResult(int reqCode, int resultCode, Intent data) {\n+\t\tsuper.onActivityResult(reqCode, resultCode, data);\n+\n+\t\tswitch (reqCode) {\n+\t\t\tcase (PICK_CONTACT):\n+\t\t\t\tif (resultCode == Activity.RESULT_OK) {\n+\t\t\t\t\tUri contactData = data.getData();\n+\t\t\t\t\tCursor c = managedQuery(contactData, null, null, null, null);\n+\t\t\t\t\tif (c.moveToFirst()) {\n+\t\t\t\t\t\tString name = c.getString(c.getColumnIndexOrThrow(People.NAME));\n+\t\t\t\t\t\ttxtContacts.setText(name);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "f1ad7ea6916e1a5f472707ffe2d063520ae6bb43",
        "previous commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "diff stats": {
            "file_path": ".gitignore",
            "additions": 7,
            "deletions": 2
        },
        "diff content": "@@ -1,4 +1,5 @@\n-# need \n+# need i\n+bin\n bin/*\n gen/*\n gen\n@@ -8,4 +9,8 @@ default.*\n .settings/*\n build.properties\n .DS_Store\n-\n+.class\n+java/build\n+java/*.log\n+java/*.log.*\n+target/\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/AndroidManifest.xml",
            "additions": 16,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".DynamicListItems\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+    <uses-sdk android:minSdkVersion=\"3\" />\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/DynamicListItems.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/DynamicListItems.apk differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/classes.dex differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/DynamicListItems$1.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/com/novoda/DynamicListItems$1.class differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/DynamicListItems.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/com/novoda/DynamicListItems.class differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/com/novoda/R$attr.class differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/com/novoda/R$drawable.class differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/com/novoda/R$id.class differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/com/novoda/R$layout.class differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/com/novoda/R$string.class differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/com/novoda/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/com/novoda/R.class differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/bin/resources.ap_ differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/DynamicListItems/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/res/layout/dynamic_list.xml",
            "additions": 59,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+     \n+    \n+\t <ListView android:id=\"@+id/android:list\"\n+\t    android:layout_width=\"fill_parent\"\n+\t    android:layout_height=\"0px\"\n+\t    android:layout_weight=\"1\"\n+\t    android:cacheColorHint=\"#00000000\">\n+\t </ListView>\n+  \n+  \n+\t<LinearLayout\n+\t\tandroid:orientation=\"horizontal\"\n+\t\tandroid:layout_width=\"wrap_content\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_marginTop=\"6px\"\n+\t\tandroid:layout_marginBottom=\"8px\"\n+\t\tandroid:layout_marginLeft=\"8px\"\n+\t\tandroid:layout_marginRight=\"8px\"\n+\t\tandroid:background=\"#00000000\">\n+\t    \n+\t    \n+\t   \t<ImageButton\n+\t   \tandroid:id=\"@+id/button\" \n+\t    \tandroid:layout_width=\"100px\"\n+\t    \tandroid:layout_height=\"100px\"\n+\t    \tandroid:src=\"@android:drawable/ic_menu_add\"  />\t\n+\t</LinearLayout>    \t\n+     \n+\t<LinearLayout\n+\t\tandroid:orientation=\"vertical\"\n+\t\tandroid:layout_width=\"230px\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t \tandroid:layout_marginTop=\"8px\"\n+\t \tandroid:layout_marginBottom=\"8px\"\n+\t \tandroid:layout_marginLeft=\"0px\"\n+\t \tandroid:layout_marginRight=\"28px\"\n+\t \tandroid:background=\"#cccccc00\" >\n+\t\n+\t\t<EditText android:id=\"@+id/new_value_field\"\n+\t\t\tandroid:textColor=\"#020905\"\n+\t\t\tandroid:textSize=\"18sp\"\n+\t      \tandroid:layout_marginTop=\"6px\"\n+\t      \tandroid:layout_marginBottom=\"8px\"\n+\t       \tandroid:layout_marginLeft=\"12px\"\n+\t       \tandroid:layout_marginRight=\"12px\"\n+\t       \tandroid:layout_width=\"210px\"\n+\t       \tandroid:layout_height=\"wrap_content\"\n+\t       \tandroid:layout_weight=\"1\"/>\n+\t\n+\t</LinearLayout>\n+     \n+  \n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/res/layout/row.xml",
            "additions": 15,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:background=\"#00000000\">\n+    \n+    <TextView \n+    \tandroid:id=\"@+id/list_value\" \n+    \tandroid:layout_width=\"fill_parent\"\n+    \tandroid:layout_height=\"wrap_content\"\n+    />\n+</LinearLayout>\n+\t\t\t\n+\t\t\t\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, DynamicListItems!</string>\n+    <string name=\"app_name\">DynamicListItems</string>\n+</resources>\n"
    },
    {
        "commit hash": "41fe159fae71f14b48c2cce65b4e5b9dbbd62a28",
        "previous commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "diff stats": {
            "file_path": "DynamicListItems/src/com/novoda/DynamicListItems.java",
            "additions": 45,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,45 @@\n+package com.novoda;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+\n+import android.app.ListActivity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.widget.EditText;\n+import android.widget.ImageButton;\n+import android.widget.SimpleAdapter;\n+\n+public class DynamicListItems extends ListActivity {\n+\tprivate static final String\t\t\tITEM_KEY\t= \"key\";\n+\tArrayList<HashMap<String, String>>\tlist\t\t= new ArrayList<HashMap<String, String>>();\n+\tprivate SimpleAdapter\t\t\t\tadapter;\n+\tprivate EditText\t\t\t\t\tnewValue;\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tsetContentView(R.layout.dynamic_list);\n+\t\tnewValue = (EditText) findViewById(R.id.new_value_field);\n+\n+\t\tsetListAdapter(new SimpleAdapter(this, list, R.layout.row, new String[] { ITEM_KEY }, new int[] { R.id.list_value }));\n+\t\t((ImageButton) findViewById(R.id.button)).setOnClickListener(getBtnClickListener());\n+\t}\n+\n+\tprivate OnClickListener getBtnClickListener() {\n+\t\treturn new OnClickListener() {\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\ttry {\n+\t\t\t\t\tHashMap<String, String> item = new HashMap<String, String>();\n+\t\t\t\t\titem.put(ITEM_KEY, newValue.getText().toString());\n+\t\t\t\t\tlist.add(item);\n+\t\t\t\t\tadapter.notifyDataSetChanged();\n+\t\t\t\t} catch (NullPointerException e) {\n+\t\t\t\t\tLog.i(\"[Dynamic Items]\", \"Tried to add null value\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t};\n+\t}\n+}\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "previous commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "diff stats": {
            "file_path": ".DS_Store",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files a/.DS_Store and /dev/null differ\n"
    },
    {
        "commit hash": "041d6f2b44b02ca7be8571f367663dc6ffec37a0",
        "previous commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "diff stats": {
            "file_path": ".gitignore",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+# need \n+bin/*\n+gen/*\n+gen\n+.classpath\n+.project\n+default.*\n+.settings/*\n+build.properties\n+.DS_Store\n+\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": ".DS_Store",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/.DS_Store differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/.classpath",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" path=\"src\"/>\n+\t<classpathentry kind=\"src\" path=\"gen\"/>\n+\t<classpathentry kind=\"con\" path=\"com.android.ide.eclipse.adt.ANDROID_FRAMEWORK\"/>\n+\t<classpathentry kind=\"output\" path=\"bin\"/>\n+</classpath>\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/.project",
            "additions": 33,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>MultipleContacts</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>com.android.ide.eclipse.adt.ApkBuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>com.android.ide.eclipse.adt.AndroidNature</nature>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t</natures>\n+</projectDescription>\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/AndroidManifest.xml",
            "additions": 19,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+      package=\"com.novoda\"\n+      android:versionCode=\"1\"\n+      android:versionName=\"1.0\">\n+      \n+    <uses-sdk android:minSdkVersion=\"3\" />\n+    <uses-permission android:name=\"android.permission.READ_CONTACTS\"/>\n+      \t\n+    <application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+        <activity android:name=\".AutoMultipleContacts\"\n+                  android:label=\"@string/app_name\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+</manifest> \n\\ No newline at end of file\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/MultipleContacts.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/MultipleContacts.apk differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/classes.dex differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/AutoMultipleContacts$ContactListAdapter.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/com/novoda/AutoMultipleContacts$ContactListAdapter.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/AutoMultipleContacts.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/com/novoda/AutoMultipleContacts.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/com/novoda/R$attr.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/com/novoda/R$drawable.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/com/novoda/R$id.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/com/novoda/R$layout.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/com/novoda/R$string.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/com/novoda/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/com/novoda/R.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/bin/resources.ap_ differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/default.properties",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+# \n+# This file must be checked in Version Control Systems.\n+# \n+# To customize properties used by the Ant build system use,\n+# \"build.properties\", and override values to adapt the script to your\n+# project structure.\n+\n+# Project target.\n+target=android-3\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/gen/com/novoda/R.java",
            "additions": 26,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,26 @@\n+/* AUTO-GENERATED FILE.  DO NOT MODIFY.\n+ *\n+ * This class was automatically generated by the\n+ * aapt tool from the resource data it found.  It\n+ * should not be modified by hand.\n+ */\n+\n+package com.novoda;\n+\n+public final class R {\n+    public static final class attr {\n+    }\n+    public static final class drawable {\n+        public static final int icon=0x7f020000;\n+    }\n+    public static final class id {\n+        public static final int contacts=0x7f050000;\n+    }\n+    public static final class layout {\n+        public static final int multipleselect=0x7f030000;\n+    }\n+    public static final class string {\n+        public static final int app_name=0x7f040001;\n+        public static final int hello=0x7f040000;\n+    }\n+}\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/MultipleContacts/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/res/layout/multipleselect.xml",
            "additions": 22,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+\t\n+\t<LinearLayout\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:gravity=\"center_vertical\">\n+\t\n+\t\t<MultiAutoCompleteTextView \n+\t\t\tandroid:id=\"@+id/contacts\" \n+\t\t\tandroid:textSize=\"18sp\"\n+\t\t\tandroid:layout_margin=\"8px\"\n+\t\t\tandroid:layout_width=\"0px\"\n+\t\t\tandroid:layout_height=\"wrap_content\"\n+\t\t\tandroid:layout_weight=\"1\" />\n+    \n+    </LinearLayout>\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <string name=\"hello\">Hello World, AutoMultipleContacts!</string>\n+    <string name=\"app_name\">MultipleContacts</string>\n+</resources>\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "MultipleContacts/src/com/novoda/AutoMultipleContacts.java",
            "additions": 91,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,91 @@\n+package com.novoda;\n+\n+import android.app.Activity;\n+import android.content.ContentResolver;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.os.Bundle;\n+import android.provider.Contacts;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.CursorAdapter;\n+import android.widget.Filterable;\n+import android.widget.MultiAutoCompleteTextView;\n+import android.widget.TextView;\n+\n+public class AutoMultipleContacts extends Activity {\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tsetContentView(R.layout.multipleselect);\n+\t\t\n+\t    Cursor peopleCursor = \tgetContentResolver().query(Contacts.People.CONTENT_URI, PEOPLE_PROJECTION, null, null, Contacts.People.DEFAULT_SORT_ORDER);\n+\t    ContactListAdapter contactadapter = new\tContactListAdapter(this,peopleCursor);\n+\t    \n+\t\tMultiAutoCompleteTextView textView = (MultiAutoCompleteTextView) findViewById(R.id.contacts);\n+        textView.setAdapter(contactadapter);\n+        textView.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());\n+    }\n+\n+\n+    public static class ContactListAdapter extends CursorAdapter implements Filterable {\n+        public ContactListAdapter(Context context, Cursor c) {\n+            super(context, c);\n+            mContent = context.getContentResolver();\n+        }\n+\n+        @Override\n+        public View newView(Context context, Cursor cursor, ViewGroup parent) {\n+            final LayoutInflater inflater = LayoutInflater.from(context);\n+            final TextView view = (TextView) inflater.inflate(\n+                    android.R.layout.simple_dropdown_item_1line, parent, false);\n+            view.setText(cursor.getString(5));\n+            return view;\n+        }\n+\n+        @Override\n+        public void bindView(View view, Context context, Cursor cursor) {\n+            ((TextView) view).setText(cursor.getString(5));\n+        }\n+\n+        @Override\n+        public String convertToString(Cursor cursor) {\n+            return cursor.getString(5);\n+        }\n+\n+        @Override\n+        public Cursor runQueryOnBackgroundThread(CharSequence constraint) {\n+            if (getFilterQueryProvider() != null) {\n+                return getFilterQueryProvider().runQuery(constraint);\n+            }\n+\n+            StringBuilder buffer = null;\n+            String[] args = null;\n+            if (constraint != null) {\n+                buffer = new StringBuilder();\n+                buffer.append(\"UPPER(\");\n+                buffer.append(Contacts.ContactMethods.NAME);\n+                buffer.append(\") GLOB ?\");\n+                args = new String[] { constraint.toString().toUpperCase() + \"*\" };\n+            }\n+\n+            return mContent.query(Contacts.People.CONTENT_URI, PEOPLE_PROJECTION,\n+                    buffer == null ? null : buffer.toString(), args,\n+                    Contacts.People.DEFAULT_SORT_ORDER);\n+        }\n+\n+        private ContentResolver mContent;        \n+    }\n+\n+    private static final String[] PEOPLE_PROJECTION = new String[] {\n+        Contacts.People._ID,\n+        Contacts.People.PRIMARY_PHONE_ID,\n+        Contacts.People.TYPE,\n+        Contacts.People.NUMBER,\n+        Contacts.People.LABEL,\n+        Contacts.People.NAME,\n+    };\n+\n+}\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/.classpath",
            "additions": 7,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" path=\"src\"/>\n+\t<classpathentry kind=\"src\" path=\"gen\"/>\n+\t<classpathentry kind=\"con\" path=\"com.android.ide.eclipse.adt.ANDROID_FRAMEWORK\"/>\n+\t<classpathentry kind=\"output\" path=\"bin\"/>\n+</classpath>\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/.project",
            "additions": 33,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>sms</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>com.android.ide.eclipse.adt.ApkBuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>com.android.ide.eclipse.adt.AndroidNature</nature>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t</natures>\n+</projectDescription>\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/AndroidManifest.xml",
            "additions": 30,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tpackage=\"com.novoda.sms\" android:versionCode=\"1\"\n+\tandroid:versionName=\"1.0\">\n+\t\n+\t<uses-permission android:name=\"android.permission.SEND_SMS\" />\n+\t<uses-permission android:name=\"android.permission.RECEIVE_SMS\" />\n+\t<uses-permission android:name=\"android.permission.READ_CONTACTS\"/>\n+\n+\t<application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n+\t\t\n+\t\t<activity \n+\t\t\tandroid:name=\".SMS\" \n+\t\t\tandroid:label=\"@string/app_name\">\n+\t\t\t\n+\t\t\t<intent-filter>\n+\t\t\t\t<action android:name=\"android.intent.action.MAIN\" />\n+\t\t\t\t<category android:name=\"android.intent.category.LAUNCHER\" />\n+\t\t\t</intent-filter>\n+\t\t\t\n+\t\t</activity>\n+\n+        <receiver android:name=\".SmsReceiver\"> \n+            <intent-filter> \n+                <action android:name=\"android.provider.Telephony.SMS_RECEIVED\" /> \n+            </intent-filter> \n+        </receiver>\n+\t\n+\t</application>\n+</manifest>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/classes.dex",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/classes.dex differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/Constants.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/Constants.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$attr.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/R$attr.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$drawable.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/R$drawable.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$id.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/R$id.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$layout.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/R$layout.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$string.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/R$string.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R$style.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/R$style.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/R.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/R.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS$1.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/SMS$1.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS$ContactListAdapter.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/SMS$ContactListAdapter.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SMS.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/SMS.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsDeliveredReciever.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/SmsDeliveredReciever.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsReceiver.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/SmsReceiver.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/com/novoda/sms/SmsSentReciever.class",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/com/novoda/sms/SmsSentReciever.class differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/resources.ap_",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/resources.ap_ differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/bin/sms.apk",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/bin/sms.apk differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/default.properties",
            "additions": 11,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,11 @@\n+# This file is automatically generated by Android Tools.\n+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n+# \n+# This file must be checked in Version Control Systems.\n+# \n+# To customize properties used by the Ant build system use,\n+# \"build.properties\", and override values to adapt the script to your\n+# project structure.\n+\n+# Project target.\n+target=android-3\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/gen/com/novoda/sms/R.java",
            "additions": 35,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,35 @@\n+/* AUTO-GENERATED FILE.  DO NOT MODIFY.\n+ *\n+ * This class was automatically generated by the\n+ * aapt tool from the resource data it found.  It\n+ * should not be modified by hand.\n+ */\n+\n+package com.novoda.sms;\n+\n+public final class R {\n+    public static final class attr {\n+    }\n+    public static final class drawable {\n+        public static final int icon=0x7f020000;\n+        public static final int search=0x7f020001;\n+    }\n+    public static final class id {\n+        public static final int btnSendSMS=0x7f060002;\n+        public static final int txtMessage=0x7f060001;\n+        public static final int txtPhoneNo=0x7f060000;\n+    }\n+    public static final class layout {\n+        public static final int poll_choice=0x7f030000;\n+        public static final int poll_new_choice=0x7f030001;\n+        public static final int poll_question=0x7f030002;\n+        public static final int poll_voters=0x7f030003;\n+        public static final int sms=0x7f030004;\n+    }\n+    public static final class string {\n+        public static final int app_name=0x7f040000;\n+    }\n+    public static final class style {\n+        public static final int ChooseContactBackground=0x7f050000;\n+    }\n+}\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/drawable/icon.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/res/drawable/icon.png differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/drawable/search.png",
            "additions": 0,
            "deletions": 0
        },
        "diff content": "Binary files /dev/null and b/sms/res/drawable/search.png differ\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/layout/poll_choice.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r    android:orientation=\"vertical\"\r    android:layout_width=\"fill_parent\"\r    android:layout_height=\"fill_parent\"\r    >\r<TextView  \r    android:layout_width=\"fill_parent\" \r    android:layout_height=\"wrap_content\" \r    />\r</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/layout/poll_new_choice.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r    android:orientation=\"vertical\"\r    android:layout_width=\"fill_parent\"\r    android:layout_height=\"fill_parent\"\r    >\r<TextView  \r    android:layout_width=\"fill_parent\" \r    android:layout_height=\"wrap_content\" \r    />\r</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/layout/poll_question.xml",
            "additions": 1,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1 @@\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r    android:orientation=\"vertical\"\r    android:layout_width=\"fill_parent\"\r    android:layout_height=\"fill_parent\"\r    >\r<TextView  \r    android:layout_width=\"fill_parent\" \r    android:layout_height=\"wrap_content\" \r    />\r</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/layout/poll_voters.xml",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/layout/sms.xml",
            "additions": 46,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    >\n+    \n+\t<LinearLayout\n+\t\tstyle=\"@style/ChooseContactBackground\"\n+\t\tandroid:layout_width=\"fill_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:gravity=\"center_vertical\">\n+\t\n+\t\t<ImageView\n+\t\t\tandroid:src=\"@drawable/search\"\n+\t\t\tandroid:layout_marginLeft=\"8px\"\n+\t\t\tandroid:layout_width=\"wrap_content\"\n+\t\t\tandroid:layout_height=\"wrap_content\" />\n+\t\n+\t\t<MultiAutoCompleteTextView android:id=\"@+id/txtPhoneNo\" \n+\t\t\tandroid:textSize=\"18sp\"\n+\t\t\tandroid:layout_margin=\"8px\"\n+\t\t\tandroid:layout_width=\"0px\"\n+\t\t\tandroid:layout_height=\"wrap_content\"\n+\t\t\tandroid:layout_weight=\"1\" />\n+\t</LinearLayout>\n+    \n+    \n+    <TextView  \n+        android:layout_width=\"fill_parent\" \n+        android:layout_height=\"wrap_content\"         \n+        android:text=\"Message\"\n+        />     \n+    <EditText \n+        android:id=\"@+id/txtMessage\"  \n+        android:layout_width=\"fill_parent\" \n+        android:layout_height=\"150px\"\n+        android:gravity=\"top\"         \n+        />          \n+    <Button \n+        android:id=\"@+id/btnSendSMS\"  \n+        android:layout_width=\"fill_parent\" \n+        android:layout_height=\"wrap_content\"\n+        android:text=\"Send SMS\"\n+        />    \n+</LinearLayout>\n\\ No newline at end of file\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/values/strings.xml",
            "additions": 5,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    \n+    <string name=\"app_name\">SMSPoll</string>\n+</resources>\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/res/values/styles.xml",
            "additions": 24,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+/**\n+ * Copyright (c) 2008, Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \n+ * you may not use this file except in compliance with the License. \n+ * You may obtain a copy of the License at \n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0 \n+ *\n+ * Unless required by applicable law or agreed to in writing, software \n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n+ * See the License for the specific language governing permissions and \n+ * limitations under the License.\n+ */\n+-->\n+\n+<resources>\n+  <style name=\"ChooseContactBackground\">\n+    <item name=\"android:background\">#000000</item>\n+  </style>\n+</resources>\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/Constants.java",
            "additions": 6,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,6 @@\n+package com.novoda.sms;\n+\n+public class Constants {\n+\tpublic static final String SENT = \"SMS_SENT\";\n+\tpublic static final String DELIVERED = \"SMS_DELIVERED\";\n+}\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/SMS.java",
            "additions": 137,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,137 @@\n+package com.novoda.sms;\n+\n+import android.app.Activity;\n+import android.app.PendingIntent;\n+import android.content.ContentResolver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.database.Cursor;\n+import android.os.Bundle;\n+import android.provider.Contacts;\n+import android.telephony.gsm.SmsManager;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.View.OnClickListener;\n+import android.widget.Button;\n+import android.widget.CursorAdapter;\n+import android.widget.EditText;\n+import android.widget.Filterable;\n+import android.widget.MultiAutoCompleteTextView;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+public class SMS extends Activity {\n+\tButton\t\tbtnSendSMS;\n+\tEditText\ttxtPhoneNo;\n+\tEditText\ttxtMessage;\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tsetContentView(R.layout.sms);\n+\n+\t\tbtnSendSMS = (Button) findViewById(R.id.btnSendSMS);\n+\t\ttxtPhoneNo = (EditText) findViewById(R.id.txtPhoneNo);\n+\t\ttxtMessage = (EditText) findViewById(R.id.txtMessage);\n+\n+\t\tbtnSendSMS.setOnClickListener(getNewSendSmsListener()); \n+\t\t\n+\t    Cursor peopleCursor = \tgetContentResolver().query(Contacts.People.CONTENT_URI, PEOPLE_PROJECTION, null, null, Contacts.People.DEFAULT_SORT_ORDER);\n+\t    ContactListAdapter contactadapter = new\tContactListAdapter(this,peopleCursor);\n+\t    \n+\t\tMultiAutoCompleteTextView textView = (MultiAutoCompleteTextView) findViewById(R.id.txtPhoneNo);\n+        textView.setAdapter(contactadapter);\n+        textView.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());\n+    }\n+\n+\n+    public static class ContactListAdapter extends CursorAdapter implements Filterable {\n+        public ContactListAdapter(Context context, Cursor c) {\n+            super(context, c);\n+            mContent = context.getContentResolver();\n+        }\n+\n+        @Override\n+        public View newView(Context context, Cursor cursor, ViewGroup parent) {\n+            final LayoutInflater inflater = LayoutInflater.from(context);\n+            final TextView view = (TextView) inflater.inflate(\n+                    android.R.layout.simple_dropdown_item_1line, parent, false);\n+            view.setText(cursor.getString(5));\n+            return view;\n+        }\n+\n+        @Override\n+        public void bindView(View view, Context context, Cursor cursor) {\n+            ((TextView) view).setText(cursor.getString(5));\n+        }\n+\n+        @Override\n+        public String convertToString(Cursor cursor) {\n+            return cursor.getString(5);\n+        }\n+\n+        @Override\n+        public Cursor runQueryOnBackgroundThread(CharSequence constraint) {\n+            if (getFilterQueryProvider() != null) {\n+                return getFilterQueryProvider().runQuery(constraint);\n+            }\n+\n+            StringBuilder buffer = null;\n+            String[] args = null;\n+            if (constraint != null) {\n+                buffer = new StringBuilder();\n+                buffer.append(\"UPPER(\");\n+                buffer.append(Contacts.ContactMethods.NAME);\n+                buffer.append(\") GLOB ?\");\n+                args = new String[] { constraint.toString().toUpperCase() + \"*\" };\n+            }\n+\n+            return mContent.query(Contacts.People.CONTENT_URI, PEOPLE_PROJECTION,\n+                    buffer == null ? null : buffer.toString(), args,\n+                    Contacts.People.DEFAULT_SORT_ORDER);\n+        }\n+\n+        private ContentResolver mContent;        \n+    }\n+\n+    private static final String[] PEOPLE_PROJECTION = new String[] {\n+        Contacts.People._ID,\n+        Contacts.People.PRIMARY_PHONE_ID,\n+        Contacts.People.TYPE,\n+        Contacts.People.NUMBER,\n+        Contacts.People.LABEL,\n+        Contacts.People.NAME,\n+    };\n+    \n+\n+\tprivate OnClickListener getNewSendSmsListener() {\n+\t\treturn new View.OnClickListener() {\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tString phoneNo = txtPhoneNo.getText().toString();\n+\t\t\t\tString message = txtMessage.getText().toString();\n+\n+\t\t\t\tif (pollIsValid(phoneNo, message))\n+\t\t\t\t\tsendSMS(phoneNo, message);\n+\t\t\t\telse\n+\t\t\t\t\tToast.makeText(getBaseContext(), \"Please enter both phone number and message.\", Toast.LENGTH_SHORT).show();\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\tprivate boolean pollIsValid(String phoneNo, String message) {\n+\t\treturn phoneNo.length() > 0 && message.length() > 0;\n+\t}\n+\n+\tprivate void sendSMS(String phoneNumber, String message) {\n+\t\tregisterReceiver(new SmsSentReciever(), new IntentFilter(Constants.SENT));\n+\t\tregisterReceiver(new SmsDeliveredReciever(), new IntentFilter(Constants.DELIVERED));\n+\n+\t\tPendingIntent sentPI = PendingIntent.getBroadcast(this, 0, new Intent(Constants.SENT), 0);\n+\t\tPendingIntent deliveredPI = PendingIntent.getBroadcast(this, 0, new Intent(Constants.DELIVERED), 0);\n+\t\t\n+\t\tSmsManager.getDefault().sendTextMessage(phoneNumber, null, message, sentPI, deliveredPI);\n+\t}\n+\n+}\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/SmsDeliveredReciever.java",
            "additions": 23,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,23 @@\n+package com.novoda.sms;\n+\n+import android.app.Activity;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.widget.Toast;\n+\n+public class SmsDeliveredReciever extends BroadcastReceiver{\n+\t\n+\t@Override\n+\tpublic void onReceive(Context context, Intent intent) {\n+\t\tswitch (getResultCode()) {\n+\t\t\tcase Activity.RESULT_OK:\n+\t\t\t\tToast.makeText(context, \"SMS delivered\", Toast.LENGTH_SHORT).show();\n+\t\t\t\tbreak;\n+\t\t\tcase Activity.RESULT_CANCELED:\n+\t\t\t\tToast.makeText(context, \"SMS not delivered\", Toast.LENGTH_SHORT).show();\n+\t\t\t\tbreak;\n+\t\t}\n+\n+\t}\n+}\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/SmsReceiver.java",
            "additions": 35,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,35 @@\n+package com.novoda.sms;\n+\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.telephony.gsm.SmsMessage;\n+import android.widget.Toast;\n+\n+public class SmsReceiver  extends BroadcastReceiver{\n+    \n+\t@Override\n+    public void onReceive(Context context, Intent intent) \n+    {\n+        //---get the SMS message passed in---\n+        Bundle bundle = intent.getExtras();        \n+        SmsMessage[] msgs = null;\n+        String str = \"\";            \n+        if (bundle != null)\n+        {\n+            //---retrieve the SMS message received---\n+            Object[] pdus = (Object[]) bundle.get(\"pdus\");\n+            msgs = new SmsMessage[pdus.length];            \n+            for (int i=0; i<msgs.length; i++){\n+                msgs[i] = SmsMessage.createFromPdu((byte[])pdus[i]);                \n+                str += \"SMS from \" + msgs[i].getOriginatingAddress();                     \n+                str += \" :\";\n+                str += msgs[i].getMessageBody().toString();\n+                str += \"\\n\";        \n+            }\n+            //---display the new SMS message---\n+            Toast.makeText(context, str, Toast.LENGTH_SHORT).show();\n+        }                         \n+    }\n+}\n"
    },
    {
        "commit hash": "53554be10872b00dd30a802ef6f0d3ee4c8432b2",
        "previous commit hash": "a205f3558dd454b41630479988e3d3923c7a8127",
        "diff stats": {
            "file_path": "sms/src/com/novoda/sms/SmsSentReciever.java",
            "additions": 33,
            "deletions": 0
        },
        "diff content": "@@ -0,0 +1,33 @@\n+package com.novoda.sms;\n+\n+import android.app.Activity;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.telephony.gsm.SmsManager;\n+import android.widget.Toast;\n+\n+public class SmsSentReciever extends BroadcastReceiver {\n+\n+\t@Override\n+\tpublic void onReceive(Context context, Intent intent) {\n+\t\tswitch (getResultCode()) {\n+\t\t\tcase Activity.RESULT_OK:\n+\t\t\t\tToast.makeText(context, \"SMS sent\", Toast.LENGTH_SHORT).show();\n+\t\t\t\tbreak;\n+\t\t\tcase SmsManager.RESULT_ERROR_GENERIC_FAILURE:\n+\t\t\t\tToast.makeText(context, \"Generic failure\", Toast.LENGTH_SHORT).show();\n+\t\t\t\tbreak;\n+\t\t\tcase SmsManager.RESULT_ERROR_NO_SERVICE:\n+\t\t\t\tToast.makeText(context, \"No service\", Toast.LENGTH_SHORT).show();\n+\t\t\t\tbreak;\n+\t\t\tcase SmsManager.RESULT_ERROR_NULL_PDU:\n+\t\t\t\tToast.makeText(context, \"Null PDU\", Toast.LENGTH_SHORT).show();\n+\t\t\t\tbreak;\n+\t\t\tcase SmsManager.RESULT_ERROR_RADIO_OFF:\n+\t\t\t\tToast.makeText(context, \"Radio off\", Toast.LENGTH_SHORT).show();\n+\t\t\t\tbreak;\n+\t\t}\n+\t}\n+\n+}\n"
    }
]